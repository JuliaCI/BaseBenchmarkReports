cset: moving following pidspec: 17100
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.772168363 seconds)
loading group "string"... done (took 0.56417087 seconds)
loading group "linalg"... done (took 9.506029937 seconds)
loading group "parallel"... done (took 0.17926077 seconds)
loading group "find"... done (took 1.570174662 seconds)
loading group "tuple"... done (took 2.21844822 seconds)
loading group "dates"... done (took 1.507477907 seconds)
loading group "micro"... done (took 0.209915268 seconds)
loading group "io"... done (took 0.620984019 seconds)
loading group "scalar"... done (took 47.783359403 seconds)
loading group "sparse"... done (took 14.605512873 seconds)
loading group "broadcast"... done (took 1.292551899 seconds)
loading group "union"... done (took 11.360778762 seconds)
loading group "simd"... done (took 2.839642224 seconds)
loading group "random"... done (took 10.959895544 seconds)
loading group "problem"... done (took 2.363291675 seconds)
loading group "array"... done (took 26.233881162 seconds)
loading group "misc"... done (took 1.206805249 seconds)
loading group "sort"... done (took 4.076303729 seconds)
loading group "collection"... done (took 20.863533659 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.711835719 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156450923 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.256334307 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.359592345 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243787463 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166401047 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168037639 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.288972476 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.222639619 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232405181 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156514366 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.59394598 seconds)
done (took 6.251203928 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258819978 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.262199118 seconds)
    (2/2) benchmarking "String"...
    done (took 0.180581838 seconds)
  done (took 1.075295388 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094569601 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182429663 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098892157 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.114309087 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.116037554 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115191737 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.114617316 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.099504525 seconds)
  done (took 1.47427035 seconds)
done (took 3.54268062 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.556832182 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880157146 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.590020175 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.172180607 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.33182789 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.356334601 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.347304178 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.21409132 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.110805694 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113118353 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.18294991 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.451484751 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471188166 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.046461015 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.112473718 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099418198 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137864969 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.821682693 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082537866 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137080522 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.586354144 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.219156773 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.101877228 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137127243 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.202545303 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136612622 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169506853 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108174993 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681628327 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137220975 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.206816256 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100918348 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.177277722 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.237452466 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.242316638 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096832132 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689492549 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20474149 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104108613 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105570799 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.716531468 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.135269874 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.174737486 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108602593 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.096848503 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191804992 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121866269 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097529741 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.118694578 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090307829 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.179010457 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.483200159 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.096357588 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.175473579 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096498113 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.713702802 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103532276 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.286118427 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140796326 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108998121 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08005788 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108943202 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165889106 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114853436 seconds)
  done (took 21.242377282 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165922866 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.174944129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096620295 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15199083 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148821533 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101096917 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08761475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097085742 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133759783 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242876553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147198039 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174902753 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094402552 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092276343 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.150949614 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255595094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126075243 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127064019 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08976118 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11221032 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146757616 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102028516 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.115181221 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.116672511 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173176361 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209260675 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112140392 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125882987 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.103803322 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.122226589 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145374872 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153984944 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094686216 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087783987 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192257609 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125465313 seconds)
  done (took 5.558888142 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233280675 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.129026169 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24438289 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186480644 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153565563 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.173270339 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.163315787 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304837114 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.261220111 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166602355 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133506023 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116257967 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080833304 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.105768224 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097924556 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.618323292 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.189946603 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15515034 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157017745 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108085116 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091214546 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.391092849 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103692711 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100568099 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089401505 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097131669 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.211430756 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107650774 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.22084223 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08671789 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113942883 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136721262 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209242242 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121809932 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147245299 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10654156 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084327133 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.245275784 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115284163 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.138654651 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081238028 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.140181849 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137330432 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12239459 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105187702 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.11669386 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.251564453 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086259661 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128302459 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.143584953 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.162386014 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200502809 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.142779762 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083505963 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.329954553 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119073129 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10865664 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.086988974 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.318377147 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136169992 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084438111 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100751342 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090121036 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101934089 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080238814 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.46976667 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114951191 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.287889245 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088211585 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.170918484 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108393014 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109566605 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106749866 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090492002 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120899199 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09965356 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082355816 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100558511 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08268828 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105820034 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122924558 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088688718 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.101149889 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151031513 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11656966 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118246839 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127532944 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088763373 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099939381 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131471244 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085358625 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104275344 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.177125136 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108019802 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108320839 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106514186 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146570013 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102745643 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.223002807 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086075116 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101990739 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127684279 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088765969 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133461866 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118369103 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101447684 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087235242 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097715335 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100089839 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151619813 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085203634 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101635977 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104869669 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098665291 seconds)
  done (took 25.004176224 seconds)
done (took 52.442293216 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.533731095 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.129425039 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128599018 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.127995728 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110259896 seconds)
  done (took 1.755305816 seconds)
done (took 2.452691464 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.41307117 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.216919644 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125611152 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.208918739 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110196198 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.23282982 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.202667786 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117001464 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.234202844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.108848851 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.231263927 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091161436 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.1104921 seconds)
  done (took 3.126333591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103792839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.133547429 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103609945 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12036234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101435029 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103471086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118021327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117420861 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119000006 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110027383 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083545983 seconds)
  done (took 1.906593475 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099754715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127203864 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090882586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11718519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082592521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117747276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114242917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114522341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116216871 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095252859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101009516 seconds)
  done (took 1.873136286 seconds)
done (took 7.59506486 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.196617002 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.162921026 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15828225 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.21346097 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.390866944 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.26505768 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.658407839 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.177072948 seconds)
  done (took 13.108687656 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.124615206 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.151081336 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.108065495 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.109574616 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090185221 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.105368004 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0899769 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105398525 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088962809 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105914641 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089992806 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104864318 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10610135 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089612608 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.106392459 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092024517 seconds)
  done (took 2.43525688 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.128976386 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.128850174 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114456708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117208212 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094707728 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.111882638 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.113284107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09716069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.109628674 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09419631 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115936787 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114224978 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098158514 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110003281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113584635 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.102391647 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110020849 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113536315 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098440289 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114625553 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115980794 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095995865 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114099291 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099890108 seconds)
  done (took 3.438789835 seconds)
done (took 19.677131678 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.188663719 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106086575 seconds)
  done (took 1.000828081 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.158510062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.16088273 seconds)
  done (took 1.029617541 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.119408138 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.105272954 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.150626207 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.128399766 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089184526 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10588425 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.145660733 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106456742 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089701432 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.106111826 seconds)
  done (took 1.861188657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094528565 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110383772 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102570538 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.174447002 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.101632202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.11124146 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09477976 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11116392 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112133862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092101841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116461121 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.131228804 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097808985 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.13433686 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.111595166 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.1161084 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104226285 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.113108063 seconds)
  done (took 2.743510383 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089251283 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107150113 seconds)
  done (took 0.912360011 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095978677 seconds)
    (2/7) benchmarking "second"...
    done (took 0.106739054 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096225193 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111063206 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.107283147 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090824372 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105604982 seconds)
  done (took 1.428774739 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.52485286 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.296826526 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377853405 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11072382 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.169599571 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.381970294 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153974402 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.124721554 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126000102 seconds)
  done (took 3.022503759 seconds)
done (took 12.71232208 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096534214 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.243420042 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.662034826 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130367913 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088918978 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167056966 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.322319602 seconds)
done (took 2.430694873 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358861496 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167178388 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.098161212 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.104578918 seconds)
  done (took 1.446045335 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083470749 seconds)
    (2/2) benchmarking "read"...
    done (took 0.114860381 seconds)
  done (took 0.920343489 seconds)
done (took 3.095435142 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087344282 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.141939812 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085536641 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.106019454 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086609623 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.105633296 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086729208 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.104863049 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102964152 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.086808404 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.102708788 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087287283 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103311544 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085989258 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102219937 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087361557 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102481448 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087705937 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103561406 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086010148 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103350687 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08657828 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.103147269 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087171027 seconds)
  done (took 3.083853125 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113024725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.108215311 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111699497 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094354286 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.114525664 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111717642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095100512 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.107722838 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.095230819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.107491854 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112680505 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095954078 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107673458 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.112679102 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091045959 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113371332 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095944113 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108497798 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106696168 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095589584 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.111902675 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090315463 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.113118929 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112839345 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.096625059 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112570168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.107773794 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09152782 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113311693 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.112287462 seconds)
  done (took 3.890915525 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096609851 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.100570481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088869408 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111886542 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085288772 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.106716774 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.084478007 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.103182816 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09047441 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.104872032 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.090366123 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.105427653 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085954709 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107193323 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08978487 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.109284851 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116809135 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085769749 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.101779381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0896527 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108686527 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084167173 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.106530589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087531775 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10685353 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084764561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.106742439 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08775909 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.107098607 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088487539 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107828842 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.11163345 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088748101 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.114866101 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092764932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.105819158 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093254141 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102913967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090400413 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.103049101 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085024876 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105741531 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085886171 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114795025 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0883117 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10695132 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.103003677 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091985557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107285921 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093467983 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10177968 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086180072 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109738447 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090808862 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110263378 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085880628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.106636546 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084135036 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107758466 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088129008 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.102943832 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085128649 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110585668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.106098476 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107613642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113854582 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086562753 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109694146 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090526541 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.11079492 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109921161 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101657513 seconds)
  done (took 7.855549279 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.105107054 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119223736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09098217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109892297 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0898511 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.107429499 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115244159 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090057417 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108460338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098789318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10572765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1076945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09172491 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108352166 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090049814 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.1082832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099636876 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107383301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089291986 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108442757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108881264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098033101 seconds)
  done (took 2.997608212 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.254299112 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11588511 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.161101792 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126320978 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.13077345 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107484454 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11325875 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114170728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095445453 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.12005439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118903477 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096289593 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.131734436 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120610564 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120041889 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103721387 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112895597 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120642474 seconds)
  done (took 3.005008994 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.109918301 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.110923632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.135890393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093561414 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.112115022 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093706337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119976691 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12858968 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.093535087 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.110727429 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.121424857 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093463042 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110148064 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093889691 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11025543 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095928583 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.11025365 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111967593 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10429528 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120124511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120301241 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121612031 seconds)
  done (took 3.164012184 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109417926 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110938532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.146028497 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097530522 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109499855 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091521749 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117245657 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.110687615 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.101337404 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109945994 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094242623 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.109405385 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.119885876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092988002 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.11914779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092433983 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109855742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111751608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096597764 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108075716 seconds)
  done (took 2.901324248 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190707257 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107784823 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12691112 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141003543 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108873102 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.126431759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140643945 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126281083 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108640754 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143964221 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.125952612 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109418935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140397271 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135443007 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126303773 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123478552 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139442439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140766337 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126857085 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109081726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144676749 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126632664 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140387586 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109259021 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126618632 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109191512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126692316 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136151444 seconds)
  done (took 4.364403985 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09018598 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107184363 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090009472 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108338092 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090335412 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.108518151 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089437926 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108029305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.208790023 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10749389 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.090729106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.107873221 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090342564 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.107728277 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090559463 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.107555241 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089705549 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108146263 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090781167 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109080681 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090247522 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109090499 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091255492 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108703451 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090516799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108576654 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089602257 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108995062 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090538367 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109565933 seconds)
  done (took 3.850364693 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102661505 seconds)
    (2/2) benchmarking "in"...
    done (took 0.119333084 seconds)
  done (took 0.975998654 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10055919 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129492749 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089838867 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110662555 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12030295 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093232012 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122523954 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119749372 seconds)
  done (took 1.640695118 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163435399 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164011264 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09776674 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124251704 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162795784 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157550146 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156815985 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098241288 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113738655 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08560419 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156325327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.106306782 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095490275 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111058146 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.11424308 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103048842 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110984133 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101683733 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.11801279 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113048385 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09920135 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12285148 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117675579 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10340412 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10634173 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.099835896 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119906592 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123639784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093911166 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.117810271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09460441 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111188162 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096732778 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115798352 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111053106 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161411615 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107037332 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112885905 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097185966 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117882073 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12079271 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093751987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.1181206 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094849042 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118022677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116179964 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099129078 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.111831527 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092579495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108241186 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093340634 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111594524 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092176039 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118196922 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116629669 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107523616 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114086647 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090561607 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110821535 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.111198447 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09720148 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.111418437 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099922649 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114663862 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112487495 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098561627 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11576105 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093832036 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.114103527 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093394158 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115747944 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132320751 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.100511205 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.117687181 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098794735 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112897653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113076665 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100380849 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116211147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.100114875 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.117684601 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120348972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095312263 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111528245 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.093370161 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118656482 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094913464 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114664709 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.104625666 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108704343 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113930374 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094588073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.108220038 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096457656 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111008485 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114632872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090557961 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116961658 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092474458 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.117896895 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098818914 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109339183 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118899042 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099154446 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11753403 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0979266 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156236045 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113718081 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092455987 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.115467988 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118039456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091509158 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114599283 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091802562 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108551384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.093338256 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.117499733 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11628268 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095368257 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.116465033 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095538393 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119210013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095594771 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110726022 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09214785 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117668594 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122583892 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101537605 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115325402 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094533128 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112902307 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.117208564 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098340923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.114441275 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099827172 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113381337 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091866328 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.112963714 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098403744 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.117705986 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.112992616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097597158 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11792456 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115905404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096523483 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.118147428 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092745168 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.108722662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100328262 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.112297538 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113236562 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105214135 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.113673363 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10450679 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112281907 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123275657 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.095390724 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118025297 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096661618 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117245933 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100769235 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106354512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094528115 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116157684 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.119533812 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.094762332 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.11384088 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093738835 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119737111 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090069909 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117020331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.107877474 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092361873 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118239933 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095694888 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.11606163 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.093710353 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129753799 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126966183 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100889356 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116381964 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097112018 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117162634 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11543691 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098488979 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119436112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100476363 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.117792042 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095158141 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119163224 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109512704 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096818004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115957337 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109004928 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107549178 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094353212 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10626153 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098513152 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119495056 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116883809 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100019713 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113746354 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098308204 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123610951 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.11304943 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098779208 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108593273 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099426049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123417122 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101758871 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120439956 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.11925901 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096432636 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113991639 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106190615 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115277748 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.098169534 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.114629255 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.11064973 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091853809 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.119295821 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097343267 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112153735 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093698984 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.120065611 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119532459 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096752621 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.108134463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100482369 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122323345 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093975253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118538432 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113297395 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097197094 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127387573 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.091705903 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.113703478 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.12023309 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100766866 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111903134 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095361858 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.116448126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100263214 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.115962199 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096248951 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116291062 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121430032 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096912339 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111984945 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.095733115 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115771115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.091691362 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115557118 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.118283941 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.096509537 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.113738776 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104645157 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12075038 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119225554 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098885243 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117707812 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102061606 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12045011 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092780709 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120114784 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.11333497 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.091650961 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113244036 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090031185 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115154353 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.095552436 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119064175 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.096350016 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117430426 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118880454 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101590854 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.115158721 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100655346 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131802522 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110818908 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093123092 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117405348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118222275 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096153326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.114382331 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096793796 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119256847 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099210124 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121438078 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111017561 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09455365 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120631789 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.095940183 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120235095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101253299 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.121164301 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094586318 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119542382 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.114704041 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105826692 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111882384 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098724055 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118275937 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117664536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.096200689 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.117149185 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.095493341 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.11061186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094920085 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.12088323 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.111397196 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100238019 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.116820728 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.097069518 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.11138502 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093817644 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121772999 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111162615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102742895 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113686978 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.092564372 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.112124617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099955682 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119258771 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120266677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094450177 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.118199594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103358483 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118848323 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094782963 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.124262451 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103842634 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121403825 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125116232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090095476 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.116276239 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106001389 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.115179281 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097384353 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.117099584 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.11185459 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103188363 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.121622818 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100821019 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.117735557 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110884341 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096639986 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.121641518 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098440011 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.118385144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096548581 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120038332 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093735314 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118263387 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102556815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.119370883 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121507382 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100433581 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119104109 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.096091107 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.121247849 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114382642 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.093988029 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.111171293 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.097288708 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.121815787 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091247999 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11952755 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100372213 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.116183005 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.116582587 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100441482 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.115260241 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098407512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120533713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095900373 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127876942 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09590312 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.116167162 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119026949 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101399974 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111213256 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.097062531 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114160885 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103255899 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.117728009 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118988771 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100461622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119846858 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097019217 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120312798 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101576597 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121602587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092873179 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123716971 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123516706 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097900578 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.117035244 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098535755 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112204069 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.117287986 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10340866 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.116659556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105992817 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122759578 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097287463 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117275422 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.120750978 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099503014 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122529663 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.094126266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120470044 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0929222 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.124652591 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.117689177 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103433103 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.115754393 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.094063083 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12076259 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100535328 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119990469 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.123036026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103005806 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.11257161 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094288695 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117525186 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097216132 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127597631 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116254579 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.099393147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118558284 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098140597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116496479 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103607607 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.114384814 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115791882 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.101564515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121110601 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095143401 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.113942648 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099687192 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119842759 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100059951 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.120961421 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.113646758 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.100528259 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.1228801 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.097920741 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112357824 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096661463 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124751014 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118698572 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097093551 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.113590605 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107939771 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.124919847 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123278326 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095442184 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.120934936 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096989871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119274496 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12227023 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.099016208 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120510629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.098555074 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122313868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126425035 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093333514 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113945423 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109144374 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120306467 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106072878 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118845567 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118714399 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104445526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124014188 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099288611 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.113504028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09507978 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.115397046 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093494545 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118927824 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127508411 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.100864923 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.117802743 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100063779 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120074287 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098464414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.118809139 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093678961 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125641734 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.117409099 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106071877 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.113291416 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091957404 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.11907156 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102265797 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116606495 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115543904 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097421919 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118375698 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.095580108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.117509706 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.105687621 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120640182 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102446593 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1203839 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118476881 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098842328 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128273791 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097296603 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.118696074 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130111 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103329516 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120333337 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100751015 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.125722499 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123441005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100212706 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123303216 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09902628 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.116041169 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103955844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.125432008 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131847161 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100514611 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.112845984 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101643821 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116083932 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094826089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.126237257 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125490073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105692079 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.120374803 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097532368 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126921783 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09874075 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123044149 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.118212131 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.099670225 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.12189835 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09806061 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121426991 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097259737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124971174 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124837749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102662965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125293457 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.093668543 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128848696 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.12444796 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105766942 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.117334131 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095479108 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.114956008 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099846318 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.125245134 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103396891 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120732301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099712645 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122528359 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.12209863 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103594559 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.118773333 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104605472 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124018575 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097260323 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.124121066 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114994932 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097191009 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117161564 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104327105 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124564749 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.103117234 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12982618 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123309376 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101259585 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.117283845 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102556602 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120554435 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.101856762 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123026743 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09721875 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.116609078 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122834205 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106115789 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.12085276 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10563618 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127532591 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.120435391 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105252532 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127018595 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102499569 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118288808 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.102459775 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120237806 seconds)
  done (took 66.418276603 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.179658725 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106753123 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119586024 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099114466 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.150075193 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120901327 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099002784 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122069776 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100652621 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.137184701 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119714815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099207617 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145403842 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.152246269 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148315801 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135640065 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099342398 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122680597 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118133968 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101495077 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1439009 seconds)
  done (took 3.445260078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.124505081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.140743577 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1382449 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.141560876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10927542 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13720583 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.138273604 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136642025 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141433244 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112055349 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.14289012 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137358082 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.13254055 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112594866 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133287032 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133178569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142441062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109518278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138528206 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138993587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.132633393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117607978 seconds)
  done (took 3.715792948 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.109210614 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.12322324 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105187802 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119268959 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10329327 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.121361697 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108493977 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.119664456 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.128481285 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10087384 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.116869707 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099841938 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.121084167 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.098896132 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.117838523 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098903713 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129539626 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102223571 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.127415533 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118519909 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118915121 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.12054396 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099131158 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.118026858 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.133707292 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10527699 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119999347 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102724033 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.116124466 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103028347 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120443805 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101367934 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.124041022 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.116415124 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.094945865 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.123568252 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103067131 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119468143 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100207363 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117911179 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10039511 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.1263985 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.127322895 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.101105956 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119449161 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097943653 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.123235788 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099663357 seconds)
  done (took 6.255742049 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.139637056 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.181417847 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105416343 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147261615 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.144834719 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.137424312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.126302906 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.167228067 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103668266 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126932164 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.147605524 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.145781402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108967036 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1320619 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.130413182 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107911535 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.130138496 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105835828 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.135512906 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.127502046 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114733958 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.131781784 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.144519484 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.144560291 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109941329 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.128220532 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127825134 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110308001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143901657 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.136668842 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.132029597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113079204 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.145121481 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.131665728 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104834261 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.1298151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.146835388 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.130400799 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108738795 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.125822029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106492653 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13376206 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.130769945 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.147751664 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110057925 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.132784066 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129040957 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103620915 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.145473765 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12938096 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116856188 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.148065495 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.131593489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.129305452 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111366858 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.144878977 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.129044373 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10694972 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.131275956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.144211603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103819005 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.131467222 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.146218912 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105640672 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.137417071 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.146115956 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132324838 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109427597 seconds)
  done (took 9.78687123 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140387012 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.134326304 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.146770612 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.146933969 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112166603 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.133260395 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131948486 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111594822 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133063043 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142329925 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111221772 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.245735565 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107650323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.140374886 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134137288 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132251065 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113386904 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133899556 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.133060295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112473343 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.133958723 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.148523334 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112100057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.147449126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150157614 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.128657414 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112160788 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134571548 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.146845244 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133770039 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127883928 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.134731013 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133857783 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.148680471 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.150952476 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112934787 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125974707 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112900454 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.134353943 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133617392 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107787723 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.147830461 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134646917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.128562223 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113744827 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134627751 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.147238983 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150562386 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118770458 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143173655 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.134743979 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147497679 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112769155 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134236943 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.148211414 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1587973 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147965005 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14776144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112937705 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.148431397 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.148570234 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.157715697 seconds)
  done (took 9.23156137 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101802033 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121979293 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102451148 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122205872 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101349873 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.12348533 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101874984 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122807431 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10279951 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121842629 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101524935 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.123415677 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101844122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122439112 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102312854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122832512 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101520993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123259488 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102193791 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122676257 seconds)
  done (took 3.09236835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.114385274 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.148440253 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104651458 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13696477 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.127915506 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135192413 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105891597 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127657068 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106046747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127338699 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.140036359 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118667622 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128236935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135556984 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117432652 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.137114331 seconds)
  done (took 2.858797463 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.13108129 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.149152342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188085681 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.131980761 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105402192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.137719725 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.12673141 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107295797 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.125617264 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113010143 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.132464604 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.131179351 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106014153 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126081027 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1063833 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.131816839 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103957058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.13263372 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.127185175 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.190135421 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111614784 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.131628118 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128790104 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110909254 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.130690492 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112819382 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.136660613 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.127788994 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109203611 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.128593538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108994572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.139160307 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.127048959 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112433612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128492512 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107037525 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.129004536 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.127329625 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111978594 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.128026357 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107427787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.13065008 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105657885 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.131844144 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125634593 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107186374 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.126217157 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114007526 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.129973386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.131083087 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106191814 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.134229241 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112223049 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.139598637 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.136158953 seconds)
  done (took 7.741909818 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121843338 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128939956 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.120667109 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.128313795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128026298 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108071208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129397448 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109750116 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131412217 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102303318 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131408937 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129609689 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109094449 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130434607 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108339935 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129888816 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124423431 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107632955 seconds)
  done (took 3.034687459 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112348087 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128716227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111960743 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.129024874 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105402757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129243775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102637175 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.126931672 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124751448 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106781327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126406741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107056218 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126061131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106008336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128398998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105168041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.129142652 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125321531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106436852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126430883 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1071825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126217857 seconds)
  done (took 3.459051942 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.123892673 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.191137618 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.141682075 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.204573256 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129915215 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.128207027 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118382008 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.129795022 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.150823005 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106647557 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.128103075 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.106313576 seconds)
  done (took 2.519864952 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135330416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170429494 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128612575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107166523 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142744104 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135684921 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11235443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135718247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146133686 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151906047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112735546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147991176 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146947474 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148418889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140962645 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12091513 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136056844 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134747739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107748692 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160408807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135061088 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147268053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113220538 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135656904 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135152184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127259155 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148412366 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153153244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136294312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147339799 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120349033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136859521 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147258371 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.154036298 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106776761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1474976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135304315 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161019537 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12083883 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149964554 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.130316679 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141452434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124853321 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144849525 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148072604 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135461694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12251774 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137063591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136311611 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169004585 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142079102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127521284 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142995985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148036279 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147248247 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168502097 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.154528839 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149349842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119650467 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153496119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150869597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142405554 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149591732 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154015526 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119043004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150486873 seconds)
  done (took 10.059552606 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15470992 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132745417 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135804098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.154073031 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127735062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137315437 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137020785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113723909 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137435388 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131320836 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19021973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113015845 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153044982 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150973004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135691478 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135799929 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116173959 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150550016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13086869 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169611123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113754652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149790599 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150910645 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151027428 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.154182926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141883985 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115012221 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137761773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136130798 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115725045 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145754424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136503915 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151194848 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109678999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149977001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137189241 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115302843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145993971 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136633115 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121264193 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151054492 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.160130501 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137442577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137624575 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130874632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137984799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136617766 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109585402 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137872779 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131840275 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154083157 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13112902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15491666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15122337 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137450309 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136534457 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1148502 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138618561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136775807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121949303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151874245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137610243 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170227305 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136969471 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115932448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151971061 seconds)
  done (took 10.007831158 seconds)
done (took 180.081089158 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173861116 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194642124 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.170747784 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1660826 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.123090048 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137199144 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.15909517 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.171152126 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100850093 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.124917294 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100794771 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.12914699 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.19044195 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101758401 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123705288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107250776 seconds)
  done (took 3.144720471 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198135165 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.368244888 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.144445933 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.134344542 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11082997 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128334695 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.133104341 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114263492 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.128339904 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116329397 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.128520419 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127482565 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.116740457 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.128734757 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.128460661 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105485048 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.139515154 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10403363 seconds)
  done (took 3.438361615 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.130959094 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.174039776 seconds)
  done (took 1.188911278 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.142582841 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21478615 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.351680369 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178762182 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.157192694 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.151764273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158684092 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.147793653 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.221596525 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.151577872 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.149614088 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.130727099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136654662 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.139630732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143875272 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.109556504 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.161475259 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141397687 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118331349 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.134647891 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.154095084 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113881937 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.140015918 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.141454435 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.211268571 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.149668878 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113998594 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.136718292 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.133858507 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118320867 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13374062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.152480726 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.148301898 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.202420168 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.138188613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197510406 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.143805741 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.130347013 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119300169 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.131321088 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11504389 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.138493523 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.152236974 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132003824 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115502888 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.144413878 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.136233608 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11454447 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.136579735 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.145956187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115172589 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.134570158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.195488399 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.146516512 seconds)
  done (took 8.952617283 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.925637396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15177126 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132435927 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.067680315 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160929484 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14826081 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.908926119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130542575 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.302636148 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.928681653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148754882 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122123699 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.285337999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.315506614 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.209549684 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.39238606 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.787614169 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123073134 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163603067 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.183783068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143675809 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160961753 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.156518221 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.447786463 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109664297 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.131903475 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14230492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120545315 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.223149777 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107436787 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.138553963 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.241962339 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.303949228 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255643596 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108901806 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.131809097 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129819832 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.206692396 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323955292 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273154395 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.205437388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126683167 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11758928 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141946873 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.155046168 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103246874 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.224337652 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.210355484 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.235519798 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112865378 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.146309667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144181648 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13969314 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.200304892 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126917241 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.393431684 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.397261337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105888703 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143701955 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.148426725 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.317413493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10621373 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.304959396 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138995219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.264331121 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.131926622 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845529693 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204263854 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.131226329 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13835554 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118960349 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140059369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139938515 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199139521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409366446 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144450747 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113406954 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131052131 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.27484568 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108200504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13069834 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.204609258 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134687442 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118022585 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146608715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144057788 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.208466022 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.311710742 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120932349 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145514642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.137561035 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146935225 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109973465 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.273708436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273178407 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.196949973 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.278959003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118407022 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.225875153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.204654959 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13857879 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.210741479 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141733801 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148950195 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118056876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.269224041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.173463828 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.133825971 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.138087735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12049614 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.177096701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.136049959 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143766511 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.207684263 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.511857431 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.204772385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.12766872 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111552136 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144357233 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200341431 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142848273 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.316703522 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144749128 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.20708706 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.143195913 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104656352 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.14331719 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.225844334 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118530934 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144543218 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141200105 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121382427 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.31453484 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.271627978 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.145374225 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26550858 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.234688771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118717777 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.235632018 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119279508 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.232754679 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120873106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142887752 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13402937 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83606855 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14803557 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119815574 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138917826 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.222298959 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131157818 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110245625 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.130823639 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105945774 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.851036248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.134989274 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106637818 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.13282935 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116150698 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.144247581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143527904 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115708714 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.2249139 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.290842041 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14648884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142364096 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109076781 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.19871037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.135172557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.131536725 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109281067 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.132264853 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120048837 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.139502237 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133754414 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.212708382 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.196251584 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.300712367 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579998447 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.132453042 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.131379669 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.288507263 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108720438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.365859151 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143584807 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.28125566 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.231242939 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105687979 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.39374444 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.231944574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.223421597 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.135529167 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21008558 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104981807 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144681099 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.223676034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107872313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142051402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.196867832 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149434554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146169927 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.214003725 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108258356 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.292591094 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105686893 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.233096086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111561953 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141393345 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.365447865 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.132382444 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126906793 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.224188528 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139465712 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110077232 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.654640477 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109862881 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148123098 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14050174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.280286198 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.206311095 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14518386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145062767 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.146260121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.202550693 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254343217 seconds)
  done (took 51.699986295 seconds)
done (took 69.301204353 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.344203603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.308735505 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.367782881 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257654769 seconds)
  done (took 2.277205305 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.253389843 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.183556783 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.214911005 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.13326402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.224669525 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.131036436 seconds)
  done (took 2.057207689 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.577276734 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.476406178 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.380539918 seconds)
  done (took 2.352536559 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.300475336 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.323602775 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392007423 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.531835401 seconds)
  done (took 2.579910568 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30905334 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13041605 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.150485057 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207996601 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.24732346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248022683 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.175112829 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.191578708 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156948221 seconds)
  done (took 2.790296544 seconds)
done (took 12.978250979 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.155064611 seconds)
    (2/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.146135922 seconds)
    (3/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.406331048 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.352836408 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.194775962 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.369712504 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.146995063 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.390347527 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.150873419 seconds)
    (10/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.280042146 seconds)
    (11/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.286323388 seconds)
    (12/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.197140134 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.293050117 seconds)
    (14/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.146745031 seconds)
    (15/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.309556637 seconds)
    (16/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.149916392 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.265511457 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.243159739 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125930806 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.255111996 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.142582402 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.39134363 seconds)
    (23/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.223267645 seconds)
    (24/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.213419779 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.160264337 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.179004325 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116668162 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.140928573 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.334424378 seconds)
    (30/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.141776479 seconds)
    (31/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.232907421 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.177285461 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116670269 seconds)
    (34/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.123658619 seconds)
    (35/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.208382721 seconds)
    (36/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.142360732 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.228013948 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.181220916 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.229420504 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.099270127 seconds)
    (41/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.257693997 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.125592351 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.221894319 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099681058 seconds)
    (45/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.264869285 seconds)
    (46/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.209733477 seconds)
    (47/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.104684669 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.126203479 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115388618 seconds)
    (50/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.197248382 seconds)
    (51/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.254008543 seconds)
    (52/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.286645984 seconds)
    (53/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.268305969 seconds)
    (54/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.098559562 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189758118 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.125747293 seconds)
    (57/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114647308 seconds)
    (58/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.198205015 seconds)
    (59/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12668583 seconds)
    (60/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.125956675 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098682757 seconds)
    (62/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.129418576 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109783148 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.123993496 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133217265 seconds)
    (66/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.2187979 seconds)
    (67/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.203055008 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.258046388 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110091322 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.125489185 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.099783491 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.178968449 seconds)
    (73/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.250636738 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143193538 seconds)
    (75/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.098654401 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.143209562 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125478303 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.180000423 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.142654196 seconds)
    (80/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.333965177 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.143972076 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116956624 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1617698 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.143030431 seconds)
    (85/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.099702277 seconds)
    (86/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.124360518 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.113689546 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.257236516 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.230464166 seconds)
    (90/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116172602 seconds)
    (91/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.23531336 seconds)
    (92/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.126387073 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109417653 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.142323408 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.099765361 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.157145067 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.142139494 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125233417 seconds)
    (99/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.145394018 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.143249 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.193314045 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.144480774 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114814662 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.232326458 seconds)
    (105/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.231155629 seconds)
    (106/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.127341102 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.27205912 seconds)
    (108/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112453123 seconds)
    (109/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.200693395 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114564016 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.234927568 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.127787273 seconds)
    (113/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09960586 seconds)
    (114/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.233022698 seconds)
    (115/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.209688428 seconds)
    (116/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118030614 seconds)
    (117/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.251318965 seconds)
    (118/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.199482614 seconds)
    (119/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.206620752 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.206248501 seconds)
    (121/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.099632312 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.136364648 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11859704 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.16244786 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.161058359 seconds)
    (126/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.111120306 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.144377902 seconds)
    (128/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.20148621 seconds)
    (129/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.230195573 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.126672913 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110900654 seconds)
    (132/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.126023122 seconds)
    (133/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117295117 seconds)
    (134/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.125750875 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117613392 seconds)
    (136/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.126313634 seconds)
    (137/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.099360122 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.145275889 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101385628 seconds)
    (140/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09989785 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.126614997 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101044651 seconds)
    (143/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.126405473 seconds)
    (144/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.100297843 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.125091823 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.101866313 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.142674626 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.204816776 seconds)
    (149/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.192194011 seconds)
    (150/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.132528389 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115715396 seconds)
    (152/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.145102247 seconds)
    (153/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.101502829 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.137063018 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106669335 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.126836827 seconds)
    (157/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115342302 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.145955147 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115075609 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.126982948 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118441041 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.137986426 seconds)
    (163/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.140810078 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.136328259 seconds)
    (165/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.131050548 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110311529 seconds)
    (167/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.12546181 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.107790208 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099265998 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.12761439 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.099914395 seconds)
    (172/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.131322911 seconds)
    (173/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101182272 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.126479185 seconds)
    (175/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100976275 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.14242601 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.10047467 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.143974023 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118903387 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.161471114 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.141631934 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119124966 seconds)
    (183/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.137984157 seconds)
    (184/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.101190431 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.136093785 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.100974393 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.099352627 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.126274179 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.14415061 seconds)
    (190/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.099300862 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.144371245 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.100260454 seconds)
  done (took 32.252426671 seconds)
done (took 33.180750843 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.253972053 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1232606 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.146946428 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.145897245 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208917841 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122085889 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15670821 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.149078039 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124388439 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.142870007 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.135581829 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126392186 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.145775675 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.209322545 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.151603839 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112700893 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.139792529 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124843984 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.155262628 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.155824145 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205839483 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112044119 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.151960953 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111179118 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.207371387 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138391142 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.14546207 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119123488 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.154895889 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11659158 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.146440108 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.138261638 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127793881 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.155179805 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109493811 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.144158838 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109971523 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.13550573 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.143009794 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118575813 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.15280647 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11868706 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.147856066 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.140131784 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118056967 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.144407359 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110544177 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.151299126 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.135571189 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120716118 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138858241 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130812219 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.142966548 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110166691 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.136896456 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.138685243 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125791448 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1375865 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126969246 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137126441 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112522981 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138513464 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.145929194 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111061262 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.143328791 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112831201 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.144002885 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120113416 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.143099836 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.139612066 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110576223 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.14310276 seconds)
done (took 11.032413935 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.118654054 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.203312453 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.208700625 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215580605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.173268942 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.159793761 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.160748092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141642163 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.158886152 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.164715141 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.176145892 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141652323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.247709642 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126623214 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.15961119 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.147458254 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.127712044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.148690109 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.218988877 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.164981888 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175834458 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125600698 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.178399516 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.15981953 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120227313 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.180990019 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.148221481 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.145730461 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120637334 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.155432707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.16518143 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13797164 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.148262176 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.160547356 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130098594 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.152018209 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.158542248 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121030663 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.144892571 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.120058522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.159830803 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.157481465 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118367189 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.159538964 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.147304799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128578841 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.154293887 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.151872127 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122761444 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.148524511 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.148558466 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149571874 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.153665208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.157692668 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.1275367 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.153348188 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.153670087 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.125041508 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.148746132 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125150695 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.146061478 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.147236399 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12389599 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.173966846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.147747535 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126286051 seconds)
  done (took 11.045994182 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.14044347 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.182678191 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.157090936 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.157146821 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126452426 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.135578397 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108220185 seconds)
  done (took 2.000244275 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111467889 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.212414902 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211589078 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213225651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.209477023 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252005503 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13355736 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.138237583 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.175591195 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123320385 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.212407966 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272278173 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118086757 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.158538895 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215997703 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.138655153 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216851427 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111019845 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151463072 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212820195 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1553579 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.168737906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.128182108 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.139485571 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207101765 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112529332 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.298615115 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.155569609 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116652136 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.149643489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125228492 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271313588 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208362175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129408045 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1440052 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211419693 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207492544 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.152640249 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222161134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115283544 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206398232 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.15105128 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.152495645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.126205871 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.150707641 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193617911 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.15653969 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124789202 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.149654416 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.215520606 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.152346128 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208152728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120103005 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.150930738 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124386008 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.153459846 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15893872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.123676929 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.216110361 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.154108236 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207653394 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208679145 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.207970581 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209339749 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.161759131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208541168 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205218866 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.149701799 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12135903 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.151984209 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.451731578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.150871804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125747963 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.195697847 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154912459 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.208057699 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.208152505 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148161708 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12657632 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.144914884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120776906 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.138812558 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.196802013 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.149518617 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120665626 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15998549 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.153905728 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124727743 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.144316072 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.164410857 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123371343 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.154321413 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.154294519 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12355883 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158650136 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212865755 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.153384221 seconds)
  done (took 17.496013476 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.116459281 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.140251586 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118469101 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.141284446 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113057864 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.141336223 seconds)
  done (took 1.78163422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144024856 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.153745242 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.163315928 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126859045 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.20998312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216240986 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217360083 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.15064384 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.171622754 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.162962454 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.216551149 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.219318714 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215346817 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.155255497 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219054412 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127801819 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.216459891 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.150598488 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.162517464 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120596833 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.16068529 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.156236979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122259062 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.204993226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.156551396 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.155114477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125069629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.163499814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.161015751 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12213296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.15649137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.154751558 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119332122 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.150202108 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.216348986 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.148339757 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120595078 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.158905799 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.156529416 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12780318 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.219578321 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.149695105 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.161554438 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129901863 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.152413847 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146793054 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131427072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.156217467 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.216338799 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.159611775 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.158170593 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126465743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.156374682 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.158010691 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118912766 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150762871 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.15794696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.218403079 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1294042 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.146802908 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.153608905 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127665386 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150515943 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.157349576 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127572069 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.158773082 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146685356 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126244546 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150326193 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125980198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.159779181 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.154477123 seconds)
  done (took 12.455330425 seconds)
done (took 45.759191328 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.206302317 seconds)
  done (took 2.217054154 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.974314164 seconds)
  done (took 1.987476449 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.09292576 seconds)
  done (took 19.143493057 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616605402 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.688187357 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991087271 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.191882846 seconds)
  done (took 3.499794744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.044965781 seconds)
  done (took 2.079892193 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.371699164 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.308853471 seconds)
  done (took 1.699952271 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779700825 seconds)
  done (took 1.807472288 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.612344816 seconds)
  done (took 2.633279776 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.411205755 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.220484185 seconds)
  done (took 1.666427465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.721341459 seconds)
  done (took 1.752193204 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.394792356 seconds)
  done (took 18.426484132 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272176485 seconds)
  done (took 1.315103327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.340409428 seconds)
  done (took 1.373977983 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.783751363 seconds)
  done (took 4.820692754 seconds)
done (took 65.445056361 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125724399 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.155300077 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12804056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.155324593 seconds)
  done (took 1.593584372 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13006466 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.152568642 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128933425 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.151928049 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.15769357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.125208967 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.153321636 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.126983228 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.151163929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.154177715 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124956554 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.152477887 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.154341248 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124256228 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.14891621 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.127807903 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.156784942 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.152269969 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126861185 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.153826821 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124975481 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.155104481 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.155762547 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126519863 seconds)
  done (took 4.455288141 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123407199 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.144336604 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120440145 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.143812607 seconds)
  done (took 1.578344873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132856577 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.166148086 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.162266354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132305749 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.165639152 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.164415282 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124063631 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.147373581 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124188354 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.160949342 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.171592334 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139595132 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.165452286 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.153773792 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135048833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.146916942 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.126408911 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.165613632 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.159484507 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133897842 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.154071045 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.160046889 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.13154445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.162357386 seconds)
  done (took 4.629178583 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.234598448 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.138397482 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179132117 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.20177675 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.186193366 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.122469156 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.180867026 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.159110065 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.13131633 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.158522524 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.156895227 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.203728277 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131503612 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.15362461 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.152804861 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129553372 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.167241375 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.160090204 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.199956167 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.131443412 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.160245898 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.16756754 seconds)
  done (took 4.654234939 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.132258914 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.148153671 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.114023686 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.145949727 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.161284122 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121937623 seconds)
  done (took 1.87376581 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.121396406 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.139555061 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.117788739 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.141109521 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11635226 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.138784114 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110450291 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.140250025 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.111898518 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.139140075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.11404141 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.138805228 seconds)
  done (took 2.585456433 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.348129429 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116398223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1482435 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.14529477 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124981928 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.145025384 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133186282 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.144195244 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.294126792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113919651 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.163300069 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.228162793 seconds)
  done (took 3.156795209 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25391182 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1257436 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.388624554 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403082277 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19850125 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204433999 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.321181557 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20355587 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.260396278 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146798658 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268102433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194244456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163303172 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252474223 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147592741 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.24781019 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217747781 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277793289 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187751783 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25330463 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205044583 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211073205 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223200678 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189449921 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172903258 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192683535 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125396215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165451752 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214789196 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21236516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248338613 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158093151 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178822921 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277771371 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235017524 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22292221 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.352624839 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167342162 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23801991 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.224464691 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.328926201 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175881586 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243087661 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194796734 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165974332 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227120319 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195458835 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.223140407 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.169647782 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176967139 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230030603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217940297 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.229176389 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172847761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372941543 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15812862 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.186348266 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22021507 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261093928 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236791863 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211208419 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.156692849 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228354427 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225141092 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221003068 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.186610228 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.212378071 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163832142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216114792 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239472731 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228097452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205212099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.261986272 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165709737 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200760439 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210558207 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194010106 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22092658 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203399938 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125455132 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190326338 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174615186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131590011 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.225839305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156984518 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251335138 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171559419 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.430889657 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25201201 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196718471 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201484491 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20475237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235875891 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155414209 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158275659 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185997036 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.201230649 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197853024 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145983545 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19671568 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180819806 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.171747661 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193948401 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126912032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203429579 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.189617137 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208784723 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203471417 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.168515281 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208402976 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188652987 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.195542951 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216976267 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231908184 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167554791 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13824717 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231702503 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198338252 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.171751299 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216223274 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2327521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.205453415 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175656755 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207960077 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236726478 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180109072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231904907 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176287624 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171409081 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.197716006 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204101655 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198116081 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192356444 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133163124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196575947 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23885601 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.165382032 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173509747 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216260676 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174025283 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132929664 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178542123 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175063534 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.179488018 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154650144 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.176906329 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197125479 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203490948 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196361563 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200729353 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174433181 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220564097 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167808314 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.201917244 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157185411 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.157562861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.228242914 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230103087 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165687598 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24214489 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.211308633 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271772172 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202248776 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169860182 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221054375 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133122082 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.157862376 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205641522 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20186793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205326473 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.229652022 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26704782 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.216527942 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19617693 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189189896 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211991378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.217612424 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19936878 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.182418946 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170540289 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244111475 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126678463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.162358558 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13473313 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180020835 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168966922 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168081375 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229332639 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206754359 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231884695 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198762556 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180139868 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227642164 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.167879309 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20737064 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.218619566 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177259693 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.232616983 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224606263 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212626769 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180554155 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20617704 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.156943757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131384415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.174927698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211042594 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169643221 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140225308 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183584108 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257866888 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219872572 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188651217 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247806628 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211496525 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266667071 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.127119828 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.204168193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212214256 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199680549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.227518802 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148921848 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.20276304 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221452919 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177929035 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265695593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169802633 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208715077 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278350639 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.200039611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136032541 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188174811 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207725909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181141377 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205630495 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185163979 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168638303 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19385911 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165719378 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229965611 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183646954 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223351071 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.198163099 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247302403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131553651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185047097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204552844 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184655821 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125504178 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214501682 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263750544 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15515789 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199159707 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248127616 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137211954 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.372811205 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263788108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231748163 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173050878 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152579609 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206100864 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199180313 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205250407 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222412074 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185081248 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221339468 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203831039 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.180777443 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16854577 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186854133 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15947894 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197359296 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.173725505 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.202417391 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.18120644 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235335592 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179851187 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203391715 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204435518 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155455074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.195069709 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183763064 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241397632 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200610848 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222304062 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.198973692 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.211137061 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276384222 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129876332 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168211753 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.171561239 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223483894 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139290755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206343376 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.254843987 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243991352 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206287844 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209889194 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176575304 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131128554 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198940351 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190340686 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273328447 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145997335 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.175997308 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237361007 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.192493348 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169632524 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208060166 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331030357 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186679962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218297034 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166931092 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.317495711 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135453378 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168357195 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200629272 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214909619 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.174473673 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.225080461 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205825285 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152381552 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20175267 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177136935 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233334559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288284485 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211888148 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22339845 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.184464492 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202230801 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206853715 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222100159 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183416863 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.186612805 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172548994 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259815634 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231375077 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.17420149 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170919217 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204070446 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198905313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250815634 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141763819 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277629001 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137064997 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205720231 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181667461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163506322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201928435 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.225041441 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171318049 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221611959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2040705 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140430843 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166535583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189714919 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201989747 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178889855 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137410797 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259594322 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135296103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209063557 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22723906 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167161599 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199687727 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153304611 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171858831 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185352451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185444155 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13817657 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.212235545 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228173724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.173286804 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22161122 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209855625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210446888 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203346127 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185204668 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.706858167 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135294636 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258934287 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156335242 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264686759 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159309737 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207729671 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202323726 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191786562 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209711718 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192308294 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.265318958 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207379559 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20485527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170358243 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153930308 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183351384 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.173566432 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19373831 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202520914 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149309753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.179865896 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203070367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185772105 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.186886689 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146470439 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261602043 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1585612 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265154399 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226844342 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144433641 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207648281 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252886286 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139476669 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207737141 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24736613 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15011061 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188526127 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.172040548 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146456037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225107558 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.161625862 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204444092 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207282113 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202560231 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203650126 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176041171 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176386055 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18546896 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205004875 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167315189 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.198179276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202022267 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140097723 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.168946281 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20152506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204784535 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197630631 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134161321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.214145843 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228102415 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.161483261 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140696844 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359352651 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202273602 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238477853 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.198217908 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142417152 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185763298 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202244052 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202960499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205581982 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.168528962 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138469404 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172730909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.22645193 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.199583066 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20002023 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22699277 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204916412 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249225768 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.185714243 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277592671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178495733 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201252163 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.171838867 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139351618 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184398843 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175123085 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178910199 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235645041 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224453773 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.197339247 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.18511217 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137801806 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.163226067 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169461094 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173819656 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196532706 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203589655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18857456 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.159095893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155456888 seconds)
  done (took 97.592734711 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183174493 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.173296761 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.184189754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.234852135 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205068551 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29770702 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.243606884 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266190354 seconds)
  done (took 2.948985678 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131555247 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.17062551 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.177138886 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.15915548 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.159596086 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.436841891 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.173761726 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.160404882 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.220207575 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.173250332 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.156830093 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.687515349 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126724414 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.160144248 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.153709756 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.158451453 seconds)
  done (took 4.555207619 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.617500952 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.598038606 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.35125814 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.283594622 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.296804634 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198299532 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.829191626 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.235006545 seconds)
  done (took 13.561963123 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.161828325 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.18065179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.365822992 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.25799787 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.199047271 seconds)
  done (took 2.326899946 seconds)
done (took 146.543009907 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.133018807 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.163603321 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.133103822 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.167382253 seconds)
  done (took 1.745172619 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.18357845 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.14805344 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118112186 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.145270692 seconds)
  done (took 1.752943871 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.574662022 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.114564149 seconds)
  done (took 1.874219112 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.164967555 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.179295193 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.188407535 seconds)
  done (took 1.70314302 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139349513 seconds)
  done (took 1.297107467 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.142405923 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.159137688 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.226155616 seconds)
  done (took 1.693898775 seconds)
done (took 11.226410261 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133987051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.468657593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.451512225 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143192966 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.762705006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.439449069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047923243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197038582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.246359008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.153557055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.176668963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700692612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.10548783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.40087851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.052657772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.493634949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702471272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.152994907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130601974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.154995704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05306913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120346727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.155222881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121086126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.735598939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.472760625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121282941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.514600406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119642169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.16067301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.443020301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121424799 seconds)
  done (took 18.406828516 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129904836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.226842233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.16437649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123385438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.161639849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122405813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.167441165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169949652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.238664808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120467748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.178177573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.152722924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128000223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.153918839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147802987 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.153155893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123467894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.155244848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.163747017 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124453021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.176709753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120430044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.15527696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.151479618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121640315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.185582001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121344916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.170574314 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.151946512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130493311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.156265296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123457457 seconds)
  done (took 6.044918729 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.173443461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.237326307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166035865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.190968218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.21488718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123706452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.250239037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.200179764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.239879895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.154630116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14615146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.154354962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.202094384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121838863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.181146986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.152912308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124678633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.153644851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131791271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.155820737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.177060677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121695829 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.155248798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122443151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.155076929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.187653866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123361014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.170391167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121732069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.162412257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.156240787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12382977 seconds)
  done (took 6.432187595 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.135002812 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.166493299 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.14941561 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.180816662 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128282427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.167065474 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.165352291 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129475149 seconds)
  done (took 2.403317433 seconds)
done (took 34.44945237 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.150067018 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.175000702 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.142157026 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.169066053 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.218775999 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124691556 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.172947896 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.125481899 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.169104237 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.176340336 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122904133 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.160150804 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143725628 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.164647646 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.219946446 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.136261422 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223693963 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.219550426 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.161141721 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.135576111 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.160870906 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227136966 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.164576485 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.128894809 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.228669942 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.158433052 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.18076816 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.166704441 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.163276439 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.1314514 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.220053367 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.166153475 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.128240641 seconds)
  done (took 6.702579146 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.229402915 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.131294209 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.160691254 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128360305 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.162742101 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127201833 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232168286 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.159902777 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126905959 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.160045873 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.126969568 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226612744 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.168919365 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.123579935 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.165668784 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.128324789 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.231268521 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.16433072 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.122965271 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.150660226 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123760255 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.16093933 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.240826054 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.122857139 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.160406671 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128059515 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.166202592 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.166093217 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.131097637 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.162086015 seconds)
  done (took 5.979901855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.138573054 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.180573813 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.154927591 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.235675112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.193269483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.168657073 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.149653976 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.1795825 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.188800013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126023408 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.174367828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161200371 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.178211407 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.169737157 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129382206 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.176274955 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146626257 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.158189033 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.165070766 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144272757 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.175283499 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141761309 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.182348647 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.166447983 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.123175922 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16458927 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.136028007 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.174395764 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137570569 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.176092963 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.163391588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130382245 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.161004254 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136381579 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.164521108 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.167731472 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150213505 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.171005177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139477971 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.187604016 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.162765064 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129847859 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.187561079 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.220390382 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128139762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.171080961 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.138087561 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.174617376 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124712941 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.179141743 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.176186719 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.125604468 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.180999669 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.124287089 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.15832993 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.169179829 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127521532 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.165641069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.146635767 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.162595614 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147421954 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.165941657 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170233089 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128756602 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.16876944 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125049284 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.157801742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128364932 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.187785211 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.167266188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166185933 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.157657514 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135750367 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.171353968 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136475351 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.172069245 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.156907169 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136989988 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.170361814 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.132110284 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.174375105 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128031568 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.162816328 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.176130355 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144769729 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.168436676 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.166810261 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137994577 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.16221391 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128319993 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.178537306 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126263925 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.16461022 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.178448618 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126423408 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.165179698 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.137146421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.168606305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12372569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.186026942 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.164459054 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125442566 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.184468566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.13284557 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.165039881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134665461 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.176502522 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.156739255 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.135136549 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.170338611 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125843584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.166067729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129978362 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.156535206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.173518639 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.143099026 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.166611812 seconds)
  done (took 19.605850163 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.326188885 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.352928179 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.245970854 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.414856766 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.177958959 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.241379288 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.346825329 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.319398148 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.167039065 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.206936696 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.22689764 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.319796053 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126591427 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.192544883 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.315728136 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.451272683 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.15872635 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.208806268 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.205854828 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.177552798 seconds)
  done (took 6.38605554 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.151332156 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.196612953 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.183864463 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.194324567 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132885503 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.172457666 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126209798 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.185935686 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.16706823 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134073071 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.157988098 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141213324 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.166551292 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.171365313 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.145399744 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.208847768 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.13085428 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.166398062 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.185848098 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131923495 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.1706247 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.192365868 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.169311082 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147766683 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.175212046 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138253614 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.158238162 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.166302499 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12965551 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.164010798 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.13174412 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.181821429 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.165717576 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132404856 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.169130621 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.138934599 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.161367073 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129109948 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.161208801 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129813607 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.176147435 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.169716856 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130776143 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.15557029 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142442965 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129152301 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.171912634 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.168412406 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139387817 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.174647213 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.135444704 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.17041571 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.165215083 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.147126452 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.163368317 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14330288 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.172390906 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.172471155 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134020537 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.159409297 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124733267 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.164467351 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131215248 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.170853057 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.168820635 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151371767 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.174551 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.160154127 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132897246 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.165274864 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130250809 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.175836301 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.186296189 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.130795686 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.164139397 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139374279 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.163588702 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.11825649 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.170369258 seconds)
  done (took 13.626085841 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.155641918 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.166082318 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.147332716 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.197439159 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.169504246 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133365574 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.166657857 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148049491 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.173124171 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139768241 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.140169876 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1781197 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.152697921 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.177456208 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.165425597 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148010971 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.171589444 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.203982426 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146938483 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.193646926 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.173656748 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133276093 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.174352692 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.1384503 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.194713463 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.172576017 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.160059217 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.170695602 seconds)
  done (took 5.844719431 seconds)
done (took 59.328048166 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.315426607 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.538745816 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.284943766 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.282842297 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.335347909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.336415673 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.284500126 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.284806529 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.302253306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.270713507 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.284983301 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.282587077 seconds)
done (took 29.020162497 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.283577242 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.800029077 seconds)
    (2/2) benchmarking "String"...
    done (took 1.547399635 seconds)
  done (took 4.553805138 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.28214878 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.281619792 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.524639875 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.281355775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.300197808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.300625847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.282457606 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.287930793 seconds)
  done (took 16.464500451 seconds)
done (took 26.793136119 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.376814258 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.461480484 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.525014659 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.305866844 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.301604265 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.283634581 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.286670914 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.313299451 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284625892 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.295951365 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.712183653 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.5390777 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.315925088 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.669424625 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.294482858 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.293859468 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.303684429 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.522260618 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.286182871 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.330983565 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.272158665 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.272536965 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.327444781 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.29554166 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.294958292 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.298579135 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.296020666 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.283244055 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.467944989 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.301126834 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.32832566 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.288393156 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.300160108 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.302117098 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.29722585 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.289093104 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.479665964 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.296368601 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.282510708 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.295582023 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.481806599 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.305213878 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.28525741 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.314349024 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.29109099 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.399970041 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.274242522 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.400871763 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.318405573 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.293264839 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.348831553 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.678983765 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286629091 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.28968148 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.295859908 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.51824435 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.313206844 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.345912986 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.312568731 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.29416186 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.286437768 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.285457798 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.344814034 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.303582811 seconds)
  done (took 149.449131909 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.285251629 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.284176143 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.285245502 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.292938574 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.286390349 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.287662821 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.285264856 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.285051037 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.286594162 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.311889873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.286689915 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.288277807 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.290511896 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.233771094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.291675352 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.307812938 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.292976169 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.305914465 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.293764576 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.286804207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.307848067 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.286746052 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.305411853 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.28718614 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.291452538 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.364693221 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.32036964 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.290159344 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.29267147 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.291911833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.291395237 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.293017691 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949759593 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.158453119 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.294463968 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.31708033 seconds)
  done (took 83.320715071 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.287805438 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.288362243 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28833441 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.324379388 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.287924028 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.912604073 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.917300878 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.010042046 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.727403878 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.80901794 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623690829 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.294422966 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385227715 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.300671478 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29065777 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.30352381 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.315830357 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294785947 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.289457495 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.913147709 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.305558265 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.394999677 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.495867417 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.307059847 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323790463 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.694694182 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.289640773 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3252881 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.631067553 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.344176128 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.288531237 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.703979841 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.470308751 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407098187 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.290831503 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325801477 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.289215349 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.576478976 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290292369 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.289128355 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.289835066 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.293325381 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012492732 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.293905976 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915284877 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.295964764 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.286200187 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.290296651 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290937643 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.436738993 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.31380947 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.071200219 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.313240935 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.290030321 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.293483189 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.291607992 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291494067 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.326034667 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.377865085 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.409913089 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.310727382 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.293287239 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326520132 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.290871276 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.290592067 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.297881443 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313714385 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.767475029 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.370239119 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.417199851 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916666043 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.296400613 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389656505 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413992679 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.292042381 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.292106356 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.292012895 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.292652633 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.405470831 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.292519607 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.746393829 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.478518835 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.310196823 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.804629604 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.396123857 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.29220703 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.70010746 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.295526136 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.291385298 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.060464876 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.391767801 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.292308327 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.292047693 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292948331 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.747243303 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.920647427 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.587128975 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.298497645 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.633954591 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.298023125 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.293525126 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.757352405 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.903277504 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.019946773 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.298728791 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407823433 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.47893977 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.312061792 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.295202147 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.808418569 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.299065793 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.345711733 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.29821483 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.699150741 seconds)
  done (took 377.416980025 seconds)
done (took 611.396087138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.061183314 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.007553705 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.151308309 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.04205061 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.006722931 seconds)
  done (took 11.486361739 seconds)
done (took 12.705473962 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499232881 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498701472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.359619466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499463695 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329344957 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516507182 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.485437391 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.3157494 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41166205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.381147548 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411544224 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.350417852 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330331071 seconds)
  done (took 19.606444342 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592219431 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.300360751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360684348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5554343 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.338633072 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561903775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.607762209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.299800342 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444835697 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312570082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311375918 seconds)
  done (took 18.903975451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.573876351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.300497324 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388392247 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565646736 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.341241182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.580745969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.627231735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301281306 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.473533864 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311519053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.312519297 seconds)
  done (took 18.995416861 seconds)
done (took 58.724877038 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.341062089 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.473758751 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.328140825 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.314745733 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.308182925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.31047754 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.313186587 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.311998572 seconds)
  done (took 11.91945721 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.306404874 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.305970746 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.306982598 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.306695406 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.306956369 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.307802244 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.305958216 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.307748448 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.307870516 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.308586454 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.307914418 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.307737019 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.308271824 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.308342778 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.308478596 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.306921574 seconds)
  done (took 22.137574842 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.308907635 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.307350658 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.307533258 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.307376929 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.306555751 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.308028681 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.308443443 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.308215573 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.307594816 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.308124931 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.309915592 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.307501409 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.308446003 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.307864627 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.30752221 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.309055193 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.308491357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.309037833 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.312478304 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.309030839 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.307513328 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.309438901 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.309260139 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.308055584 seconds)
  done (took 32.622373779 seconds)
done (took 67.901402577 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.315017566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.299755137 seconds)
  done (took 5.836064863 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.370276072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.369850124 seconds)
  done (took 3.962469872 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.30910173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.309563973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.309661292 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.311418493 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.309144086 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.31045112 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30992496 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.308898622 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.30950567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.30952163 seconds)
  done (took 14.319023674 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.310409219 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.311002983 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.31075658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.308457379 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.309570974 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.309652941 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.3108892 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.310662957 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.310670891 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.309883724 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.311399187 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.311316737 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.310650994 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.310069814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.310245683 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.311242555 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.310050714 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.311474505 seconds)
  done (took 24.810194889 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.324898975 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.33359645 seconds)
  done (took 3.88138477 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.450818008 seconds)
    (2/7) benchmarking "second"...
    done (took 1.353267321 seconds)
    (3/7) benchmarking "month"...
    done (took 1.426639645 seconds)
    (4/7) benchmarking "year"...
    done (took 1.41881769 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.35197062 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.332032253 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.352829664 seconds)
  done (took 10.910414973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.311784913 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.516305172 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.629780452 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.857866305 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.312815089 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.316054203 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.129288779 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.313931149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.314736643 seconds)
  done (took 14.926003569 seconds)
done (took 79.868091333 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.302128386 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.360683508 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.306925794 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.339254936 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.65979833 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.346165535 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.30784745 seconds)
done (took 16.848381082 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.296495289 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296854385 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.295940204 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.309780949 seconds)
  done (took 10.423341525 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.308022279 seconds)
    (2/2) benchmarking "read"...
    done (took 1.588884478 seconds)
  done (took 5.120742171 seconds)
done (took 16.770825421 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313835926 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.313612725 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.313224409 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.31338168 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.31313604 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.313028262 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.31386792 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.312513267 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.313151056 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.314493262 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.312802538 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312895801 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.314281213 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313009258 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312567419 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315361013 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.313961372 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313259221 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.314020419 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31328158 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.313933933 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313955859 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.312915797 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.314060075 seconds)
  done (took 32.75022664 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.314401468 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.313728643 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.313452379 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.314299834 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.314568104 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.313988847 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.315383961 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.314076718 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.314145319 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.314745162 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314120883 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.314365712 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.314071782 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.31504858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31514217 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.313719093 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.315286212 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315247301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315059191 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.313671328 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.314982382 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313289436 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.315000044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315456261 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.315377358 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314458596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.31591235 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.314248529 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315195159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.315139324 seconds)
  done (took 40.663926794 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.320120157 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.32083272 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.315225423 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.316445738 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.315791684 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.316438231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.316069769 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.315291385 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.315859511 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.315187237 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.316070371 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.315896832 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.315028198 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.315312287 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.316064769 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.316765567 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.315880057 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.317080743 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.316465915 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.315961279 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.315355796 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.316677487 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.31576766 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.316988241 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.316243157 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.315735024 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.316279274 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.316688008 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.316099747 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.316701674 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.317476799 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.317593819 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.316028056 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.316716592 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.315910013 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.316690613 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.320387454 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.321100331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.316783056 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.316678886 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.318126543 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.316978687 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.317873473 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.318447994 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.315575973 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.317556073 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.318777344 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.317281557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.316937091 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.318157532 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.317999393 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.317670725 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.318819325 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.318820977 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.317897608 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.317823917 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.31837154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.318891822 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.318974594 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.317665175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.317948608 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.319264339 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.317890093 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.318117161 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.318768682 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.318625198 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.318645717 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.31771522 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.317927569 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.318768876 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.319030957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.319656277 seconds)
  done (took 96.077126637 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.319500563 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.32000748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317638218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.318742763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319270949 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.319758559 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.317972774 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319342015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318915052 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.320451028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319717972 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319971132 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320171111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320511458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320010174 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.319038508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.320214685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319534986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.32102692 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321383662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319529892 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.319793822 seconds)
  done (took 30.263125739 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320693732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.321739061 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.318859717 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.321333717 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321632997 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.321422804 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.320171293 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321957058 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320261663 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321799047 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321429967 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32117022 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.322267221 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32229202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320624741 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.323332149 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322804209 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322719094 seconds)
  done (took 25.017505205 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.323802226 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.322097568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.321209095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.320648771 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.322274337 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320760714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320845855 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320974299 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.321842854 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.321990796 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.322311412 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321178474 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.323071528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322386079 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322290357 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.32124879 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.321875768 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323165796 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321310348 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323632936 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.322428313 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32246985 seconds)
  done (took 30.316149153 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323566989 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.3232276 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322596661 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323417891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32132161 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.321406875 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.323571628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.322624857 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.324463382 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.324505216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322944707 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.322032442 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.324377044 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32375396 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.323193627 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32370732 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324373584 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323375294 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324837847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322339438 seconds)
  done (took 27.698790668 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.325515984 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324704177 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.324395942 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325248501 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325855034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.325310614 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326198391 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.325752511 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327158327 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326671052 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324779752 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325647091 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327304828 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326593625 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32536596 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327097777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.326542166 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326669621 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.326818238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326729256 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327027916 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327448451 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326727094 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327107243 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327360132 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327076721 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325979324 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326714862 seconds)
  done (took 38.370550999 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326384283 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327380699 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.325192102 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.327061772 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.325957944 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.325995369 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.326025025 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.325957023 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.327401165 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.326056105 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.327490784 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.326624545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.326311166 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.324750406 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326453179 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.3260594 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324871521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.327702911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326893545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326396412 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.327739394 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32708462 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.326821284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326091083 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326708716 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.327486787 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327933637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328949536 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326564321 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.328115326 seconds)
  done (took 41.037721029 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.373942466 seconds)
    (2/2) benchmarking "in"...
    done (took 1.368072375 seconds)
  done (took 3.979819414 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.327353078 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328577504 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.327189993 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.328542936 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.328047925 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.327923423 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329020203 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327748821 seconds)
  done (took 11.862103914 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.324802131 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.329623769 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.327829157 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.329153868 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.328040979 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.32416648 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332378904 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.333282492 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.325263154 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.326825309 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.329575791 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.329531778 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.327676266 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.32783562 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.327494333 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329633148 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.331602309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.329174656 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.330503695 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329661121 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329686829 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329576542 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33103889 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.33350073 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.327758992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.336194024 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.33476417 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.334105206 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326183616 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.331165113 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.329306428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.330390645 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.331494813 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.331719288 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.329565721 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.330774039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338231353 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354230691 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.334068425 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33695349 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.332154212 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.329906282 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.329557844 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.331054485 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330738209 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.334427841 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.331002656 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.332329023 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.327158238 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.330184955 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.33595517 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.3283095 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.330784061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329805973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.331999335 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.338720643 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.358339671 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.330994177 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.334472947 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.337443603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.345518455 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.341114357 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.332685889 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.335481452 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336103984 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.339982671 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338644715 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.337072637 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.332797434 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.33201558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.335922818 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346392451 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.343147167 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.334307299 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332402961 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333277242 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.330453681 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3340399 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337717897 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.338919326 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.337312839 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333706894 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336444154 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340111673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.331079453 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336351009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.333691068 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.333654874 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.330712897 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341271199 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.360691783 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.334036236 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.329846741 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.332329465 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.333661349 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.336647429 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.330359441 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332105327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.33547421 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.333313852 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.3326521 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.334300822 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.336102354 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337471386 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336060533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.338728698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.33915742 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.331291277 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.339067297 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.339572212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.335007931 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.333767261 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.335470138 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.335236819 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335310388 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337929916 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.337705692 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.33270982 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.338916401 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.337280726 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338928764 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.345189188 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.340384726 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.33673338 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.335982494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.344758271 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336215198 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.335848636 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.33972339 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.336014128 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.336348229 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.334688813 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.339223277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.33347887 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336450374 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333347304 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.33651275 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.336351249 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.33657178 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.333885957 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.336988177 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.334217625 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.336031875 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.337860125 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.338822267 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.335678198 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.342594836 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.338016093 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.334560713 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.336506047 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.338907277 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.336689817 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.334242426 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.339741336 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.334398257 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338562658 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.334226449 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.338282558 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339118181 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.337104023 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33725741 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.334310385 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337434512 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.340668609 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.338942456 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.3366485 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.338829761 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.33866145 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.33899958 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.334815792 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.33904639 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.334314337 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.338560994 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.34851627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.341639519 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.337477984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.338444171 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34036001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340149951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339318819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336054496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.340479833 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.339964132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.343974626 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.343901714 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339031626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.337058059 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.33746131 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.336055705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340213438 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.338985183 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.345232546 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348431559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.349527534 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.337477157 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.341557806 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.335198829 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.340801479 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.341017778 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.343156728 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.339998882 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338697095 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337502527 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3408502 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33778512 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.340907589 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.336587451 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.341200439 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.340614358 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.339823844 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.341221392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.337497758 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.338347874 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.340315654 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.340996658 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341429098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.33728147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.341508884 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.335109819 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.338015829 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.342356923 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.34163284 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.344503033 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.345177746 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340200189 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342834975 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.340628716 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.337704527 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.342893791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340369577 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.341588968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346857089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.343867312 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340063387 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.347491776 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.365878293 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.339138921 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.342992722 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.345775063 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.341327805 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.340693353 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.347880091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.343569435 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.342239755 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.341601358 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34002283 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343731412 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.345921407 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.347143412 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.33858713 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.344863151 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.339617215 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.343629809 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.340949292 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.343276586 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.341802232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343177891 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345793174 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.344666537 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340008877 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.345632909 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.343947955 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.343761877 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341947319 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.350479158 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.345688987 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.34178138 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.343564121 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.342918651 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.347050776 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.340003645 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.344625818 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.340963746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353070537 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.35723361 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349588648 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34713949 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.345895245 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348366881 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.346694093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343970825 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343338351 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342595145 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342078886 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.341880778 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.347380912 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341344356 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.346247601 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343309857 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.343599766 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.347633622 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.345213216 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.341613021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.346220599 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346156385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.347110562 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.34117545 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.346999808 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.344243477 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.346484861 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.344604577 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343106591 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351928857 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348835089 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.344230311 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.343127268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.343771172 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.343150449 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.345807356 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.348642924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.344679494 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.352173429 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.345202817 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349361188 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.344218439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351602062 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.350614714 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.344947642 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.352257307 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.346672358 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.340483155 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.344252704 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.347766279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351743882 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.35216386 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.344278366 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.35074069 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347079308 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.346988098 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.347551395 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.346792126 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347011429 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.347843911 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355345345 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.372608956 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.347559817 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349078991 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.34972284 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.349445628 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.347725891 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.343528811 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350292232 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.351401018 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.345396195 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.344988567 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346325584 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.350004481 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.348818964 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.347536244 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.348666546 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.348478562 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354244344 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.351537757 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352597496 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.347757269 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.354288296 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35513872 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.353278785 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.355219256 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.346326407 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.349779436 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.349394984 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.346210318 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.345611984 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.346394023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.350241721 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.345273844 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.353138614 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.348541302 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.348560453 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.349339205 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.35177559 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.346318333 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353111568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359595648 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.346300625 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353452083 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.348710622 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.34706454 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.353858459 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.349864768 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.346166123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.349630366 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353038768 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356039206 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.347125675 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.351749136 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346996486 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353289812 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.350072468 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.35105887 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.35079055 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.349572622 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347689748 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.352522861 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35085619 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.35470752 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.348743512 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351348929 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.348734159 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.357472401 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.356183184 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.349219076 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354084726 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.353155115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.348937387 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.350001014 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.354425769 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347467795 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353215241 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.349673939 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352211305 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.352608811 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.352428798 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.35126683 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.352794609 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.347955019 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.350060504 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354019393 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.35180609 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351801384 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.351682143 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.353713708 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.348447526 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.348617348 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.354581545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.350590016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353815825 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350774521 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.35518161 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352743848 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.353997856 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.352449248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351346957 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.348925906 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.350346268 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.358292169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355258665 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.356711843 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.355190182 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.357622883 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.350608474 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353493944 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.355548573 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.35137151 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.351634793 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.356884624 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.351919011 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.35143914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.353156712 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357681969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.356224797 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.355735373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.350612605 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361031101 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.381768174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.35843112 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.352289693 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.354572587 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.351117366 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.35682284 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.356077391 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.351827988 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360891718 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.357758482 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356380442 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354307806 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.353441064 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.353168267 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357701664 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356265958 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.352803661 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.358002105 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.351619264 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357949432 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.356505569 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.356374302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.352412565 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.352368795 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.354402446 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.35698373 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.35589145 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355714834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.356575322 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.355210615 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358105398 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357822796 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.355067545 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.357108966 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.352866596 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357679391 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.354097208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.356646193 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.354547198 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.354186966 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.359062168 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357256595 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358862556 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.35805111 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.360650083 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.355296488 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.352292227 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.35604498 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.358266426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359673564 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.356449554 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352612106 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.354755028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.356464683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356265064 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.355604556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.356259097 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367171086 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.383690741 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35318895 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.353088055 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356032552 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.358711002 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.355103171 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.357120737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.35482848 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.356564051 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.362570935 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.355505639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.360703747 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378775886 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353903018 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.357884395 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.353829323 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.357012011 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.356537632 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.360185982 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.356418387 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.356195864 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.36703568 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360768528 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357888574 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371343188 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.35952394 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.356399333 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.359452013 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352554617 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.358667553 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.354573372 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.357138292 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.356864451 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.355958692 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.356388466 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.353206419 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358839555 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.358363627 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.361372364 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.358332073 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.351154152 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.354422092 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.35770129 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.357016959 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.357755106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.357163254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.357577775 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.356481894 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.353533169 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366277766 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.369383395 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.358439708 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.35819592 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.356582714 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.358679549 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.35857046 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360968277 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.363625814 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.357357924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.357826098 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.356606152 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359841001 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.358428126 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.352984904 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.354620264 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356865278 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.358979384 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.365183467 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370477657 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.357924301 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.356675326 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358891316 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.358789278 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354840594 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359636949 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356164753 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.354563097 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.355139346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360028153 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.360091297 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.35671381 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.355591215 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.36133175 seconds)
  done (took 803.512714128 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356621892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356379854 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358078121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357424137 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356964033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356861841 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355060841 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.356728268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.356653618 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356508516 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356812883 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355753043 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.357805604 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.357021289 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.356805455 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.358568643 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356975431 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.357011891 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357650571 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354911994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.358393935 seconds)
  done (took 29.757783375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.357124583 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.357022352 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.357946352 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358140246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358196865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.357751203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.358496069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35687669 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357932894 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35945663 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.357454686 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359263943 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.358124993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.35786982 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358464683 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358403904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358676495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35821088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.357577049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.358019632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358975938 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.359414125 seconds)
  done (took 31.143153479 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.358422828 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.359357316 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.354881844 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.359663491 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.359281727 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.357511858 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.359276416 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.359004038 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.359578071 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.354853571 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.355867884 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.355899456 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.359826795 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.365409667 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.358006155 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.361718123 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.359406704 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.359716326 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.360139291 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.358496139 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.363254657 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.366373343 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.359152309 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.354542499 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.362008848 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358335124 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.359132498 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.359691727 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.356446458 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.363479146 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.359460016 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356122295 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.361024323 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.358814206 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.358221979 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.362104484 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.361527459 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.360431886 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.360201431 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.362249951 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.370072777 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361758136 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.364785164 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.36639977 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.360335081 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.358752814 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.366193279 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.359901528 seconds)
  done (took 66.554230612 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.361960723 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.360040769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.360386493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362009013 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.363113453 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.362348379 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.362296588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.361704196 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.360987607 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.36143945 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.362013317 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.361377524 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.362308718 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.361625977 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.361585696 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36009598 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360302454 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361969616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361838077 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.362865655 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.36186706 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.361619517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.364344111 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.363691177 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362840507 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.363048012 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.36299541 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.364200284 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.362879981 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.363307967 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.363166995 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362287854 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.363559597 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.363034011 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.36321528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.363180056 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.364210813 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.363804018 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362687443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.363120647 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.363717286 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363450039 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.363583643 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.365404419 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.363670732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.363512529 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.364862405 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363764453 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.364417286 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.367033468 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.364902875 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.364435947 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.363536974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.36441544 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.364250542 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.364210953 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.365586751 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.365450354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.365090555 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.364686064 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.365235838 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.364152547 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.364395471 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.364920678 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.365611136 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.365037406 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.364779294 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365680824 seconds)
  done (took 93.975100344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365341802 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.365727804 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366663721 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36451235 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365401314 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.366030442 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.366105757 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.365934174 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.366527691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366066876 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.366069944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.365542107 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.367349429 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.364298801 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367699468 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.365942321 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.366758319 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365607793 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.367024376 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367539737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.36655889 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.366328114 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367788548 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.366994588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367594265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.365503333 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.365743762 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.366746051 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366721353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.36669885 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.366755786 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.365398035 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.365696701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.366296676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.365307585 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.367549893 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.365533691 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366682795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.3660851 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.364611526 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.366212962 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365488487 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.365693543 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.364695247 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365090882 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.366045534 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.365595227 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.365347322 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.364555027 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.366222374 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.365944674 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367063301 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366449955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.368267719 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.366378082 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.365406474 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366507394 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365581388 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365748563 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.3665218 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367127135 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.365343082 seconds)
  done (took 85.972558085 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365578574 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366496236 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.36638372 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.365438827 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.367623249 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.367067201 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366397116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.366080508 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.366305258 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.366519581 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366424564 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.366178392 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368022515 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36848573 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.366913291 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367736391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.367127348 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.366726972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.36630329 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.367135692 seconds)
  done (took 28.606934967 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.366992781 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.366585726 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.366439211 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.367223726 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.366319725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.366573767 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.367119298 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365020898 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367134087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368332587 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.367345522 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.367329219 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36643363 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368730794 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366543878 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.366249169 seconds)
  done (took 23.142640393 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.366667412 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.368639186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.367240007 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.368373614 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.36817733 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.365591099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.367308957 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.367440289 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.367245331 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.367580299 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.366244856 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.368247173 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.367594396 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.366982976 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.367780502 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.367031392 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.366214669 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.366418548 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.366983134 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.367370255 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.368550976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.367001436 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.365991252 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.366580474 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.365755188 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.366795577 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.366929867 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.365252566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.367017625 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.367063053 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.366440162 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.366368923 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.365791269 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.366727082 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.366323702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.366469938 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.365544766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.366446628 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.367160068 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.366602733 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.367351527 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.367429256 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.366010716 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.365131016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.365452937 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.366707183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.366649274 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.367276065 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.36596725 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.366385315 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.366052817 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.366932154 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.366770317 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.36691423 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.366480641 seconds)
  done (took 76.447250637 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366368512 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366855962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.366178856 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.367818832 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367020855 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.366605066 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365846481 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.368379988 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.366847901 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.367779182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366917451 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.367971097 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366713885 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368849845 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.366766641 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367699861 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.367111962 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.367452726 seconds)
  done (took 25.879651388 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.368610027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.368313174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.36817879 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.367514586 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.367336624 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.367889787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367588302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.368067493 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3689234 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.368319115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367739988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.369263703 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36818239 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.36913953 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.368003541 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368816688 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.36828309 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36799964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.368556515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.368555944 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.368911187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.368518568 seconds)
  done (took 31.375255509 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.363124086 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.36332913 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.362429687 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.377808677 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.375656573 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.364261622 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.363886871 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.362549995 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.378565262 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.395014074 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.3914271 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.376217877 seconds)
  done (took 17.745891201 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368237986 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369936606 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.36898695 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368469281 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368347366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369372931 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369418222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368785992 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371005247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370049797 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37079701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369213142 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370150371 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370125161 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370233006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369165625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369865469 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36969816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368598626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370064614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369575633 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370413209 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369093121 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36873028 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370883804 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370013028 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372495191 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370518806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368263619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371131864 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371500733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370278301 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370434976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370210087 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369442556 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369771836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371164109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36965628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370204206 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371464752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.369945812 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369708492 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370889844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370246119 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370064367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37090958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372644917 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370618115 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370577347 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370485144 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370672863 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371269503 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370890107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371449493 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370147344 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370252134 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370753063 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370968559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370785694 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369153369 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370368335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370650146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369411151 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369905282 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371062975 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369091381 seconds)
  done (took 91.703350465 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370730804 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371412349 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369769511 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370230212 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371016286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370471303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36988145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368889149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372049252 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371212794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371340976 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370970922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369757688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370522787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369362235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369869824 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371901193 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370204936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36964477 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371464622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37039116 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37131153 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371512281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371162209 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370131781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371213166 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370006791 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369118257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370773263 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370006704 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371615433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369455841 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371326626 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.369631901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370265366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371016483 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37025844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370514252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371228348 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369138241 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370816363 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371149785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369136337 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371291693 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371213537 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371963892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370405293 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370411422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370380331 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370907388 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370485989 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371874908 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373257344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371616525 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37080636 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37043219 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371153838 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371124398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370792669 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370701135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369492715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369946742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371200882 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370223301 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370759305 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370261825 seconds)
  done (took 91.739199867 seconds)
done (took 1876.819876702 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.536264931 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.485723133 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.364142907 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.376649333 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.365878775 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.390429988 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.376869102 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.365246776 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.36444338 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.36478613 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.366156695 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.555168843 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.422136958 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.365605523 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.36404907 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.462228922 seconds)
  done (took 27.799761951 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.395676507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.373075096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.484971605 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.385530323 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.394660619 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.560037135 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.428204285 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.371902942 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.540498311 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.391350316 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.371971381 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.394599166 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.367796763 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370980219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.389422654 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.558840027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.620603473 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.369094167 seconds)
  done (took 30.044026619 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.820886066 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.396770065 seconds)
  done (took 5.489826871 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.386705814 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.367035378 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.369394104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.367484537 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.36195031 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.376502621 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.36570043 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3606776 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.382344278 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.495845812 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.37306947 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.381212063 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.386397645 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.368515937 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.370492881 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.411530129 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.518653008 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.371612573 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.369889178 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.372971114 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.366557577 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.465746887 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.408626047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.375410817 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.49119439 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.363545903 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.368408721 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.375425855 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490170857 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.373760273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.36635194 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.367048152 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.368735735 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.362217618 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.85590367 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.381854612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376070707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.393632452 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.371170623 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.515642095 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.368679956 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.375758277 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.360377518 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.816783728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.504943955 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.490249917 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.383026943 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.368992283 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.368747361 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.43495814 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.368121697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.369835613 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.428824071 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.207112695 seconds)
  done (took 87.318122538 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.368455146 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.359822429 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541091328 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.384020125 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.361045934 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.361072284 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.362260543 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.646711936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.385319963 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.36283236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.663950819 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931697514 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382197635 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.452829431 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.223166677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.430452157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.362751616 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.361551871 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.364049717 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.362759677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.9124467 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36661295 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.363127143 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.452694615 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.401678231 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878784538 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36443406 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.367372845 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.379991615 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.362193887 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886976606 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.385142044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.42623074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.363675725 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.633755509 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.738595051 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704304736 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.370843389 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.40153931 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.363561384 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.380052599 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863482114 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.735872051 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.367407754 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.38041892 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.870966672 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365737024 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.367600514 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.367821179 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.61503683 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.363230094 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.364321837 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.368104715 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.368681942 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.363147784 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.445797254 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451581913 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.883871216 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366751702 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.364208608 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.385816801 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.366614387 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.371994302 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.369710391 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.380169158 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.7272675 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.545718855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.370047607 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723870586 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88200668 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.383909368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947373018 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.384305586 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.373789626 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.553289158 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.366300739 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.391836398 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877774742 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.388521462 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.365316262 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.708764166 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.371160552 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.652784354 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.382718885 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382377427 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.942475911 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.377587003 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.374298365 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.365005456 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.380177316 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.367340269 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.36851145 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.64280163 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.393764557 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.365868587 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.36607789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.390935272 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.366509553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.380997354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.371792674 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950400133 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.39005174 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.36799966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368885781 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367227456 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.365691922 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.369816301 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.367858171 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.631790735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.371522528 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.370870747 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36733505 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.366377399 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.371303467 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.440335264 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.372262662 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.67205474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.370711457 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366748849 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.376962515 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.367811047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.419820718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36822095 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.368671849 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.220091056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.667240828 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.385012333 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.371872429 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.367783214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.372568866 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.367319855 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.369253271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.404959333 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.369722252 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145161288 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.407466951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.390665519 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.367932913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.375316273 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.367492961 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.377293629 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370048961 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657462075 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.639204725 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.524776601 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.370379145 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.366966728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.11991588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.415751412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548061605 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.383985336 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.367832711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.618104133 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.571528384 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.371678977 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.368313839 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.371587794 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64213242 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.370496914 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.676639165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.913230294 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390046909 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.379298781 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160168434 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.091145357 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.374134334 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.36876959 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.651641041 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.389433956 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.368653822 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.369625173 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.370692058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.385717862 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.390184063 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.376717735 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.371778732 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.368847928 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.424335259 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.56123239 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.38600003 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.370956582 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.87425565 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.44961075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.371379355 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3790254 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.372976477 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.369843678 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.439650822 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.376323644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.407725953 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.374399619 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.373577943 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930538285 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.370674534 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.371365833 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.561476474 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064880394 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.386930708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.372153084 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.375903848 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.271232898 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904665522 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.419596957 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.678891568 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.383424018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.409658009 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.3721263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.410282243 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90346183 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.376101067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.371909651 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024642799 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.392495812 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.797479042 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.37162964 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.374960845 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962193116 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.392954857 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.376661622 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.370524218 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.372950301 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.721005024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.373579574 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.422718074 seconds)
  done (took 506.213590603 seconds)
done (took 658.141514595 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.372191267 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.377791657 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.366832785 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.37766454 seconds)
  done (took 10.778530444 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.389234936 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.38081937 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.38731909 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.378897961 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.387491054 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.379658334 seconds)
  done (took 9.589095614 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.373496655 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.380239272 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.378483251 seconds)
  done (took 8.417950596 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.582530613 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.396814951 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.726814665 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.406362749 seconds)
  done (took 9.397742317 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.385538882 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.385956923 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.384848775 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.386670644 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.389697092 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.388966749 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.389057416 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.38945712 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.3883034 seconds)
  done (took 13.772856475 seconds)
done (took 53.243386029 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403056356 seconds)
    (2/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.41035798 seconds)
    (3/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.131692351 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.592993154 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.45415652 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.46434221 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.40726192 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.374694958 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.459877455 seconds)
    (10/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.507081085 seconds)
    (11/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.469293136 seconds)
    (12/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.546845301 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.535820084 seconds)
    (14/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.403894571 seconds)
    (15/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.367195958 seconds)
    (16/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.417846052 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.061052637 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.53265639 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422038936 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.37075519 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.461118557 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.299765454 seconds)
    (23/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.648993095 seconds)
    (24/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.438909543 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.449567416 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.502010566 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.457023073 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.386207561 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123445444 seconds)
    (30/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.4287614 seconds)
    (31/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.3430274 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.553896016 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386871648 seconds)
    (34/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.34215716 seconds)
    (35/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.003185145 seconds)
    (36/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.507577073 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.444106765 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343640548 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.348970983 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.339766836 seconds)
    (41/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.347341864 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.022372757 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.328266914 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.328481294 seconds)
    (45/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.373572801 seconds)
    (46/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.55092556 seconds)
    (47/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.48739889 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.257517885 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.390342113 seconds)
    (50/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.413306912 seconds)
    (51/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.118125826 seconds)
    (52/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.419953444 seconds)
    (53/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.446661652 seconds)
    (54/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.388557206 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34286934 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.325247803 seconds)
    (57/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.364983337 seconds)
    (58/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.385970593 seconds)
    (59/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.399282784 seconds)
    (60/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.32581845 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.473100843 seconds)
    (62/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.485486578 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.450248311 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.479626454 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.428862148 seconds)
    (66/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.326589638 seconds)
    (67/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.403047331 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.077937013 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.504369705 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.116378475 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.487770682 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.368560276 seconds)
    (73/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.488346615 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.381456138 seconds)
    (75/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.436545559 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.436175896 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.371831829 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.41117828 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.412169342 seconds)
    (80/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.465535885 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.437938419 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.430569889 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.409281178 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.480243871 seconds)
    (85/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.147175099 seconds)
    (86/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.352919706 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.510501581 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.120435511 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.495310291 seconds)
    (90/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.376412781 seconds)
    (91/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.214651769 seconds)
    (92/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.332532082 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.438646914 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360281868 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.503232861 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.488495047 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.421850958 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.370414128 seconds)
    (99/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.329294573 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.468165857 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.320434424 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.460962087 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370994019 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.323188729 seconds)
    (105/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.479668231 seconds)
    (106/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.324330896 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.508484545 seconds)
    (108/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.352342449 seconds)
    (109/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.369265272 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.371146524 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324349028 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.343638859 seconds)
    (113/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.162853787 seconds)
    (114/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.32367114 seconds)
    (115/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.328910477 seconds)
    (116/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.376156691 seconds)
    (117/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.989244455 seconds)
    (118/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.427562379 seconds)
    (119/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.381965954 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.484552743 seconds)
    (121/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.420125456 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.445947548 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.469373795 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.462872445 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.408171172 seconds)
    (126/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327656223 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.380264684 seconds)
    (128/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.320834534 seconds)
    (129/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.425592211 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.463941914 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.382231101 seconds)
    (132/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.476571015 seconds)
    (133/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.378967193 seconds)
    (134/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.536383209 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360394911 seconds)
    (136/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.490168388 seconds)
    (137/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.318070177 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.360864932 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31798279 seconds)
    (140/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.318180822 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.98303146 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.317684899 seconds)
    (143/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316259888 seconds)
    (144/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.090706132 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.100321754 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.346722097 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.365323323 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.036233087 seconds)
    (149/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.359821162 seconds)
    (150/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.391708747 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.357713403 seconds)
    (152/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.364065662 seconds)
    (153/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.361409826 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.379040092 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.496641062 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.315427754 seconds)
    (157/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361417776 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.537440832 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.362597856 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.316385613 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.470085927 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.368094704 seconds)
    (163/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.356271256 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.429282554 seconds)
    (165/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.383436307 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.397816022 seconds)
    (167/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.317204606 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.335017779 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.474016747 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.01857433 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.458397986 seconds)
    (172/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.434285646 seconds)
    (173/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.070622333 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.327434588 seconds)
    (175/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.325353914 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.436407984 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.119693661 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.43730104 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.353047836 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.551998001 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363849359 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.540466254 seconds)
    (183/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.236600344 seconds)
    (184/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.033992034 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.428981403 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.581086165 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.981171863 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042720747 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.437603077 seconds)
    (190/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.408147684 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.346022216 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.337732406 seconds)
  done (took 338.201784826 seconds)
done (took 339.491014937 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351399286 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390826895 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333988922 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335764739 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337001306 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331402442 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352604276 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336343023 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346144885 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.345157828 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332990949 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.338915163 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349124753 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343451041 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3699327 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.337267327 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.33651875 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340855062 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.346990202 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347955987 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337050129 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337603632 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355462284 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.337133929 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345720882 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345742434 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.342673103 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.329369877 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.340351598 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348322141 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334108588 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.34315813 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.350113421 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.344491107 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339269065 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344925019 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339795522 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392258894 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353006682 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343919036 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341553253 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.349288447 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34284832 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.342729195 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.345423716 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356338259 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347130399 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.352584814 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.332221466 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.343908412 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353854163 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345740124 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341542123 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343125592 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.328559668 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.369213945 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343850973 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354342177 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343721156 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339911178 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.372664734 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351030239 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.342523067 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344052254 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.338161424 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.347944393 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.340534306 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.346942795 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.336899899 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332380408 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33161861 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.334231128 seconds)
done (took 106.096257409 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.457675855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.330692141 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.473683234 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334302079 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.493476074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480366978 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334194991 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.335361354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.334880553 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.188206617 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.335668266 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.33468935 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.331917462 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.334833189 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.462576393 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334397632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.334296098 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.075763485 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.336010749 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.475741699 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.331717948 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335104827 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334460727 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.194727465 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.332244435 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.327212458 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.476429511 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.336325104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.084234576 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.32628248 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.329860486 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.086112353 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477941876 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355519471 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344572089 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.345717671 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.494406361 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352765434 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.460641244 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461333016 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.475522274 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.374245961 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.325889272 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.330150165 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336748745 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336271207 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33587452 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.365331331 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.331923602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.334964063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.078327711 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345762442 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.336754647 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.337178743 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.335046357 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366058724 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.336936562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.338427795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.480388696 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.337754983 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.460830332 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.196958698 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.194203668 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336348339 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.330711882 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.339435804 seconds)
  done (took 108.848618437 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400285304 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41555955 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.442066519 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.33347716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385518033 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.443491372 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.33416256 seconds)
  done (took 11.000580352 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.340397473 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338553866 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382838889 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382876724 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.337997499 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.490174117 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337652529 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34592054 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.338552493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.386347691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.340828436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338422345 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348365465 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.332735697 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386759279 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.345864858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451404597 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33628169 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.339454856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.48787837 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339641777 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34952747 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.386061461 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.345544194 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.3412067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.340819792 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.098441581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340083395 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339514195 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33867248 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339103914 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389096782 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340255526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.334254631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339257769 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449790802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339056599 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340260019 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.340168821 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.33782089 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.340381035 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.338921551 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340303706 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339312184 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339162877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.359013579 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339235971 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340148332 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.339614952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340547094 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.38681734 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341640751 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.341373905 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.340537959 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.391963809 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349452728 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.340859255 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340678241 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337734297 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337048771 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487628636 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383161279 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338629514 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385339658 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337975143 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339189126 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338347536 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.338278576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424845029 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.337813401 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381431255 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337298228 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.514799647 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.357851763 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339732744 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336373529 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.337297958 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337773616 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.331468277 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.341343586 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.33994928 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335104355 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.341310145 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338354708 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337451164 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491383979 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445261889 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.339149388 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.347945552 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.341444663 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.33961931 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387625208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338895469 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.341084013 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386997321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.450655818 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.388177591 seconds)
  done (took 137.948224183 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348409089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.348425712 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.339448755 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.364948846 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337773396 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.336001909 seconds)
  done (took 9.321504694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.335849383 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.340795147 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34002778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.340336393 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.340266634 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.34170298 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.340318947 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337069975 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.342577081 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.340268656 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.342473255 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.342489568 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.343593073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340772565 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.341757723 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.340940845 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.34055512 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340847695 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.340131817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342108517 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.336135074 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.342041052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341520817 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.337863715 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.34575675 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.340816828 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358408689 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.341942388 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.340645521 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343863406 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.361361074 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.343865534 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.33892714 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.342563938 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.344285524 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.339247958 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344489276 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.343846108 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342164745 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.345208897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.345183965 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343775441 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.341651014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34537819 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.341140034 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341013537 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.347403933 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361080797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.344113961 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.34453067 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.345228721 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.343892975 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344647698 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.34452192 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342053399 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359971222 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.347573595 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.344060079 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34359643 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.340264172 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.344956178 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.345709772 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340648225 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346670117 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344043423 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.345777607 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.340098248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345549662 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343209937 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.344037813 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.346308716 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.343756232 seconds)
  done (took 98.982202275 seconds)
done (took 367.342762657 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.231970475 seconds)
  done (took 4.484114148 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.373852792 seconds)
  done (took 3.627403727 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.480801746 seconds)
  done (took 22.736826148 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.42210909 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.346739263 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.367624435 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.34160314 seconds)
  done (took 10.729908539 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.668857815 seconds)
  done (took 3.921360025 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.343047149 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.340001112 seconds)
  done (took 5.939186851 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.563353929 seconds)
  done (took 3.818087678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.53933611 seconds)
  done (took 3.794368519 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.344599151 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.352115112 seconds)
  done (took 5.960179252 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.326662231 seconds)
  done (took 3.581893269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.169472435 seconds)
  done (took 18.424845574 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.345391221 seconds)
  done (took 3.60271279 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.357232337 seconds)
  done (took 3.610909 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.966299375 seconds)
  done (took 6.220266903 seconds)
done (took 101.704360171 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.335993345 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.342772741 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.343646467 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.342148606 seconds)
  done (took 10.619343162 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.426079653 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.426370283 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.433582161 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416849652 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415189542 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.426616152 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37371935 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374380777 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417235698 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416667106 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.434327704 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416400486 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.425984286 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388311883 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.417238623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435065172 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417203218 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.43472099 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374485066 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417479927 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350645658 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.418250109 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417314588 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349529115 seconds)
  done (took 35.080486927 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.862700695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.418073767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.498819454 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.397903779 seconds)
  done (took 7.433944503 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.427475797 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.428986909 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.449494075 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.48464973 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.514940345 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.453744375 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.376151087 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370188505 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357866181 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430847826 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480985132 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428097788 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520296377 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.349307322 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571968584 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.349344511 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350647034 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428371171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.483200676 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500736781 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.352171036 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428861056 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433736324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.428723001 seconds)
  done (took 35.657510548 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.359053389 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.366816711 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.351888182 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.368023608 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.35296173 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.353464827 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.353949633 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358830258 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.351813448 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.352282726 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.353013782 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.36706195 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352719693 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352577193 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.361602326 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.353036416 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.354579778 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.358550241 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.361035274 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.353701299 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.352445933 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.360082121 seconds)
  done (took 31.107980535 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.34161007 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.340403491 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.692519337 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.59786244 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.343822577 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.346269461 seconds)
  done (took 13.92036875 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.418858594 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.576031114 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.348542781 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.709535008 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.802095971 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.354381887 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348235028 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.597062543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.920290373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907686173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.411781668 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.420273398 seconds)
  done (took 20.073417839 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.350747012 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.347600174 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.354164208 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.362011653 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.403474558 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.351556577 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.356008643 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.343616802 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.408207552 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.407860392 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.355388467 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.404803368 seconds)
  done (took 21.705898364 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436669159 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348775256 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356041164 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357037861 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35279147 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190395452 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42585218 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080607515 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.37283531 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622701042 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347524733 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459837608 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602609951 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348365432 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355262099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.334320703 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577664135 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853585131 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355591031 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348352083 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401032922 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347701432 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36315845 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567716492 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192238407 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349003533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.611538567 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348190958 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634541349 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365607014 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360364709 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350302515 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626022014 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00600484 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464506072 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560633448 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3512755 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350724294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.358743001 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.355293516 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36520733 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357065962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359873104 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35078405 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351350014 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351454623 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085872636 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377509096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.350624535 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349593939 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611566723 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452564529 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.356010399 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350761654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414161434 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355161218 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.357739369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475156284 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947944776 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350634197 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357918157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.355866472 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350582872 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355914891 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971199011 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.364280009 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357042605 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357357969 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352023909 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351965278 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376526669 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353007733 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378542027 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351752102 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067266682 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359185318 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359563779 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925771884 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363480421 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.357455144 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584196935 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353486721 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352843337 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.353896538 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353840125 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076514518 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365882372 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.339450682 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418682262 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08325067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584469815 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374860019 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385923761 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574586601 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.340105836 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354538035 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.365366251 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360033346 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376222496 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065024208 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373464084 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359481718 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609659785 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.565303494 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356600218 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.357437663 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833242598 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380534181 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.384582883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356449782 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569850709 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.944679436 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373949659 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357060759 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391345002 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354107761 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128816405 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370490582 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365306245 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356117566 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629802032 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.181703935 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361276222 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421135441 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355683326 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354006777 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355625247 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362096396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355531231 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.557813584 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381378099 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.36863413 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.356665606 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355841945 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.369015728 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355656286 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.363422201 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578949196 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364790826 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638212497 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355909109 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356797664 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355139739 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.577585866 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.356837244 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.384012025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616624024 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366924684 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371510542 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369968687 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386932258 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463005908 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386229006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.365704926 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61469251 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.361610287 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.36236872 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356983729 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364462299 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36427018 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365180357 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354021055 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953094539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336765032 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360633186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357140416 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.37389283 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426041636 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36456392 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571074604 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359310292 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374150093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.365451091 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.372240974 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581122397 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367052916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.372048773 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440037973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.829124155 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965445294 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380265334 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.358472603 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.359904857 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.357947164 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359479465 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359010474 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359055248 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572403864 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374304706 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355013345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973370085 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367680629 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360194951 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.390353854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371898172 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.367097316 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361292233 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.369620763 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361409746 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376880708 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374998444 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49515676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.376109937 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361836498 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.879680943 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367358812 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360854645 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360565413 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390365474 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36162502 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187638103 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622611583 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362429041 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620842361 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38303959 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.38331412 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360008193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360839898 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395690006 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.386512141 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372903954 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.370185694 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361237967 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369082188 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929074137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09704028 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91855249 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370251629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.373960229 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367697216 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078507346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38265324 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363370147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600423108 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078484867 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382688493 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837925272 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.382330796 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146747303 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629612688 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598918718 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367418506 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.364390347 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631849685 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579927164 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396761709 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375461721 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368827907 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.349727606 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918264583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383356647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466349723 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078617725 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382086255 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387267143 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.405825791 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367956985 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796153455 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38446416 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363919623 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364317966 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371822057 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176387007 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368800506 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364307229 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982649201 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371396934 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.844272986 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383427047 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578746769 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.399350785 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368270435 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.365063721 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.37468016 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.623211414 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629999642 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372865409 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365117669 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917439825 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.234207995 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.372992843 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367312303 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144511022 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372826439 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677456561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387460254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.378030809 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374274344 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366479711 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366803494 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.366381191 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370006291 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339614803 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891999568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.372249057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368228366 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402858768 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371723832 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.6198266 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.382695938 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964887554 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595713023 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365991799 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397107146 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.372229998 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367357971 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.358427065 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367019213 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366898342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377334158 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587949401 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382468723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.354069526 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422211484 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577296147 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368131949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372053286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615332378 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.369209954 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.370881856 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10918525 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404537647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372312895 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374842123 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366465406 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425914084 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435565143 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584111952 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.379859969 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.378741998 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77700582 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389616041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373129113 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.3849251 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465014237 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371230283 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.387726571 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.147795963 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968696703 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108637654 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967959151 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639236297 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375881652 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375606808 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37061807 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505477497 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369725938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645441248 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370741522 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.387009671 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395678502 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370513323 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376259216 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585530405 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6477195 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371070982 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372607209 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376701571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.370589013 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380112373 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.580981723 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89426721 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966783965 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378575056 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371583641 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093575431 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66565514 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371287243 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372106841 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3712821 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.378312584 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378080152 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.379421662 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381672638 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511910137 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636068136 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039158666 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.399841967 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.410460406 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.890933111 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375745547 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631683723 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37438551 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594400664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972427569 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086841601 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643443908 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44276449 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589023866 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.373834599 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509790691 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.388181215 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377577849 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374374116 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373208587 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.373652003 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.382481476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974794663 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641343684 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.380204452 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.387558542 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408428269 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.383145546 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595658635 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109454598 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600857886 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382782611 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377670302 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374069671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970199074 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64271705 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381109725 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379891058 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615341325 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375858449 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405485161 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.065242776 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.37486166 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951916103 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.268626119 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395804025 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377549921 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093121391 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97220426 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.394881554 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894298952 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381438615 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379701895 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65493829 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.381663675 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376567237 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660727905 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38047441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377573968 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598103385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.97216408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164549103 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.391729884 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381792641 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.384013 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376269823 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429102151 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382057218 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376310569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.799099523 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396583673 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376924475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38875328 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.390184637 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383187727 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.380568568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376759122 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.383277658 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.392321674 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.366213317 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38728986 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509323298 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936104424 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404132169 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.055818564 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.700723869 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631574363 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379662794 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.367821781 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.382639183 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378213708 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377972673 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377826476 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377581934 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975923523 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.38693271 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.392014295 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38354554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.378236033 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587606047 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386663146 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600242964 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383983485 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402169822 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.364615711 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377830833 seconds)
  done (took 972.109934137 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413319487 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.383603207 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.390964661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.424892174 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382853519 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.387359485 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.400391422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412908225 seconds)
  done (took 20.483194816 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.378461282 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.388098504 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.378733337 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.387909575 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.383071807 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.855438688 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.395545551 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.388021458 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.396278817 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389911302 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.380260586 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.046836562 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.406782478 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.37794244 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.374112581 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.390208475 seconds)
  done (took 32.606343012 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.373942255 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.528587509 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.391489852 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.446383906 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.3835668 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.383702806 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.637982463 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.400343809 seconds)
  done (took 26.835835514 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.388456668 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.389528742 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.389859026 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.394521189 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.391901208 seconds)
  done (took 8.243846172 seconds)
done (took 1237.135083124 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.385772266 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.384949563 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.386507237 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.386057921 seconds)
  done (took 6.832755285 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.36717291 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.368188377 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.36803915 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.383901141 seconds)
  done (took 9.776285343 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.099458838 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.039270632 seconds)
  done (took 5.428455583 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.861533669 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.865738068 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.859994688 seconds)
  done (took 6.877897066 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.667079289 seconds)
  done (took 2.959364221 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.270843623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.372879393 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.041102938 seconds)
  done (took 7.976400039 seconds)
done (took 41.139940124 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386208845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.632824621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.53197183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.380004601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.538119561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.533904087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.114134852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378021698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.383075827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389232349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.378125246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.556420087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.161423617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.626970089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.162895899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.721896776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.539486312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380985482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378402384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.39603118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.118114768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.378911602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396582684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.377958684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.555848322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.524453373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379340499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.717673645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.377594524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.379740069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.525543772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.379470248 seconds)
  done (took 82.974758517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379528196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.380255771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397320451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396526034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395975392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.401511863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.379570268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.390817691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.385059448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.384030365 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380659271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.396269335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.381765989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381394801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.38185493 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380421158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.379953196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387573339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.384505934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395293189 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.379848105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39272351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.387375671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.379820514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394847398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380077138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4078088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.379677131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399490092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394173553 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.387896894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405020831 seconds)
  done (took 77.722941837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.380514796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.381578209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.383424337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381503559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.381399971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.386940216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381409867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.381283154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393728786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393409628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382265522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.379942757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.382918306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.392777382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.383995193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.381733649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.399075088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387895382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382454236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398055251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.381309739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.381275749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381880245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.387249954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.385532867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.383938049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393150971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.383811333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382209392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38288233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.403691962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.397130311 seconds)
  done (took 77.655587701 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.703592886 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392433783 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.395406439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38811637 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396809708 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393577166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.388198383 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.709567029 seconds)
  done (took 15.061948592 seconds)
done (took 254.708493559 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.391015501 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.900898761 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.437890891 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.387393706 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425562188 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.414495063 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.615806528 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431052947 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.616173518 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.406081958 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423503597 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.39041138 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.209199163 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.54564198 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.24963093 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.373262678 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.288576339 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.388753177 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.986181662 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.676223007 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.413271282 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.387365847 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.254853202 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.317719763 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.38514429 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.47406115 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.492345115 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.618962048 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.552680536 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.472523871 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.919240594 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.406236607 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.399404456 seconds)
  done (took 64.948036192 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.393152887 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.398357719 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.397532193 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.3969461 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.397111555 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.398030109 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.39271094 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.398467937 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.396887911 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.396599695 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.398850058 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.398813729 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.397499013 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.397155229 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.398053335 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.387841367 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.393000832 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.397806254 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.394450571 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.388850057 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.397739135 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.39876691 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.399088282 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.398244041 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.398669487 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.398311715 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.39871439 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.400540897 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.398749858 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.396732795 seconds)
  done (took 43.204705261 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.398290253 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.983702435 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.141527798 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.406520654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.397496052 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.399300925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.688412314 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.403059934 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.398754515 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399459447 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.893364536 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.405672501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431847043 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.165588088 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.401848207 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400486108 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.39971182 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.396462015 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.999735481 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405763765 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.708967099 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.403840637 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.688864344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.410848059 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418281045 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397565919 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.401458434 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.222400729 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.420056874 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.892032513 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.21632112 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.689784348 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.180971592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.172410985 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.217202068 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.407566519 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.402008804 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89895946 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.400213698 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.398138277 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.690961473 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400943315 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.147337148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086467168 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.416671478 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.401798109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.267092861 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.920617334 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.646851277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407162783 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.153197574 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.401627011 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402920803 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.399925824 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.64608215 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.405527189 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399313077 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.253443199 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.425172337 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.691804988 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.409373363 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.400428512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993212039 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403315963 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.989079031 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.405095569 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.409059249 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.420725208 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152757646 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403131801 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.094371946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418371943 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.403172406 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.89856971 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.992611886 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29709303 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.401479433 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997872988 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.188814449 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.711757811 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407577483 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.207152146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.711170753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.404816504 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.407311302 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405933416 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.404798008 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513084717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.691929211 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.026008154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.09560915 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.269456494 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.715968047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.412388556 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.400820348 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.263851395 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.430303676 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404081249 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.14837905 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.103296941 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.423727347 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.408499083 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107672378 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.426832453 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.696465917 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412277126 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.15957616 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406716924 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469600403 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405264848 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.409955648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.424608076 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.697959129 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.408574218 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406978609 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.086919758 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.932453465 seconds)
  done (took 196.433137534 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.397404213 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.397216732 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.403247481 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.396994558 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.396542479 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.404975518 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.398316479 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.397480871 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.403254071 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.397037779 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.396897393 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.406235423 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.402726867 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.396520955 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.398501378 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.398149471 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.399097005 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.406244722 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.400416363 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.398872748 seconds)
  done (took 45.3038278 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408429265 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975960656 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.951237594 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.406621691 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.407672485 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.405167136 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4600437 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.409798886 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.408433823 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.709344527 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.581300778 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.413202725 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.40907275 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.406664165 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.947317653 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.402334865 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.710283248 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.98259746 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.412785863 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979892564 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.40192517 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408909942 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.40432209 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.978789243 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717311313 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.699126649 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.463437815 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.979967379 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.40914891 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.410873045 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.979188797 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410164481 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.406736863 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.976606772 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.426771507 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424545623 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.410270657 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.465377058 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465157345 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.712403449 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.985289153 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.704382722 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421159736 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.596535541 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.412748653 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.397308329 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.98495132 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.427604095 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.399068364 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.412191798 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.417229214 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.962722162 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.425375448 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.961068663 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.431591421 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.41096575 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.982575209 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.962533675 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975079443 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.582732852 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.410298618 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.701111138 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.411471517 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.9882366 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.428420729 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.411601671 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.412497782 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.585454977 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.005213231 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.702163044 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.715790813 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.716396818 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.412496403 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.470976099 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.430129932 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.716577601 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.470656972 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841974307 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.720598318 seconds)
  done (took 128.05622327 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.678622217 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524995409 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.798859099 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.002891059 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.912497012 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.548102228 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.519700082 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.67218952 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.412565216 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.49670446 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.062912109 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52653856 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.138394925 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.502678163 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.511008175 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.571180275 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.811242238 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.403475092 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.091612101 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.040183753 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.407218604 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.516754635 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.938603967 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.601789114 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.408949096 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.990374943 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.384764692 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.926667556 seconds)
  done (took 53.715290504 seconds)
done (took 532.956927168 seconds)
SAVING RESULT...
DONE!
