cset: moving following pidspec: 8045
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.644393385 seconds)
loading group "shootout"... done (took 1.143073829 seconds)
loading group "string"... done (took 0.417451744 seconds)
loading group "linalg"... done (took 7.710644436 seconds)
loading group "parallel"... done (took 0.157869221 seconds)
loading group "find"... done (took 1.298343448 seconds)
loading group "tuple"... done (took 1.917053884 seconds)
loading group "union"... done (took 12.345425326 seconds)
loading group "dates"... done (took 1.31009977 seconds)
loading group "micro"... done (took 0.201975881 seconds)
loading group "simd"... done (took 4.325134957 seconds)
loading group "io"... done (took 1.010100002 seconds)
loading group "random"... done (took 8.626027664 seconds)
loading group "problem"... done (took 1.453780965 seconds)
loading group "array"... done (took 19.207886993 seconds)
loading group "misc"... done (took 1.474127985 seconds)
loading group "scalar"... done (took 39.082320936 seconds)
loading group "sort"... done (took 3.144237386 seconds)
loading group "sparse"... done (took 11.675595091 seconds)
loading group "collection"... done (took 16.366777743 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511083723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122236968 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127121842 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118195513 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195831308 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122673077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125695889 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084976334 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.865390967 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137702416 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110723224 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.404780515 seconds)
done (took 5.45081026 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164927694 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086471228 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077659416 seconds)
  done (took 1.455297962 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063045985 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132859312 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06361552 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06488726 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065304343 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064967741 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065006533 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064365902 seconds)
  done (took 1.811339663 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068947182 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064211349 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062367832 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064521563 seconds)
  done (took 1.553389149 seconds)
done (took 6.357314168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.231115625 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096497998 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275278856 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.378113531 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.443863247 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091879545 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070608789 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066214693 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12429312 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320809822 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098915887 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.17632478 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085602795 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168057965 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.958894957 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11495637 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082910949 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119178477 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090933148 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129258973 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.37769773 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073701429 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069711606 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066011221 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06432175 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646185212 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665860904 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126666988 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080007461 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.095805163 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112832836 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646644013 seconds)
  done (took 10.473235498 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.08819991 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086523825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064461834 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12052891 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090817486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067773495 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072000603 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064675407 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085622074 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.120888968 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089922383 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09282849 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061823385 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064533379 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.06958435 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.190900659 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075350952 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075823042 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063308537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081856233 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.102642782 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074101233 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073702229 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073491872 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124787511 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165678448 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091922707 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09349052 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061824807 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.074768496 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112715372 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123231615 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064106598 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061977946 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11671352 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092806026 seconds)
  done (took 4.577479085 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.931218802 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088575122 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.094732922 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.591201677 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06238313 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.142600278 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233572005 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06973976 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.359356633 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.140004871 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131374631 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139665494 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110960723 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067678524 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.143798823 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111172184 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.462306084 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066077105 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064831423 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064083306 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066183648 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065679744 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061403652 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066971047 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092875852 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085361369 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.156502103 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.895378891 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.225563077 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06329343 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.154952642 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083639858 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.351698363 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067886285 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079193599 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.40584711 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118660494 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061801644 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157729417 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111836676 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060963025 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.111153328 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076074491 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06658384 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066278147 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065467167 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068602443 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075937823 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098902123 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069020504 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062302721 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062753891 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.157643096 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060448054 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062365218 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062693231 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145158036 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062498061 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.135224916 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061974974 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066325761 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099347091 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06613042 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085201637 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081334266 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.093139515 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.341493344 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.033937189 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063493971 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.927213745 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075153615 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06187705 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066331806 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062291638 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063619158 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060612721 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063395674 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067822618 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067325603 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066222241 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106293788 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065119355 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067475497 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064142845 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069122682 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095040227 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063676502 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.469361495 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096052994 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06266159 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071799342 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100431904 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063102814 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06659403 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063600888 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062815972 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.0620884 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.0623434 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066260722 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093181511 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066332414 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108722401 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.137686144 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064772239 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062247829 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068348651 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066022834 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066756518 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065112713 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066519272 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066008928 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062316927 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061414077 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105473322 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064779192 seconds)
  done (took 21.150151706 seconds)
done (took 38.423760983 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240301675 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075901181 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076330315 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07645252 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076594841 seconds)
  done (took 1.93135584 seconds)
done (took 3.309153992 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104237713 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061121977 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095547112 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.093336563 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061050171 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061250341 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097434293 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061674755 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095208939 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.094494488 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095729073 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095273277 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059990947 seconds)
  done (took 2.459683269 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06658411 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076616127 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07838912 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058033759 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067631533 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07724706 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059498075 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082140525 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08408721 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078446572 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078658943 seconds)
  done (took 2.185584851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065594842 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076764459 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078447653 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058308378 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068625975 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077546029 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058682055 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078216307 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081040741 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07863096 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078693664 seconds)
  done (took 2.169764201 seconds)
done (took 8.180038159 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062279035 seconds)
  done (took 1.414986067 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.485424879 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.186327948 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.063890357 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.081223605 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184919286 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090672455 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.198975289 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069428191 seconds)
  done (took 7.881443788 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09391721 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065068077 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066699903 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064592207 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064593491 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064675156 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065198071 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064896496 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066307011 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065365395 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066915746 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066426488 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066323908 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065750619 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066892595 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065364187 seconds)
  done (took 2.528675935 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093494996 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092130755 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068254494 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.068847506 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068635001 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067725691 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070030232 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069465385 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066794692 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068104163 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069807677 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068476041 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068109127 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06000174 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069801115 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070727526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066567394 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069309143 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069798675 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071382087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070196814 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059677049 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067966015 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069617396 seconds)
  done (took 3.163728519 seconds)
done (took 16.357808304 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17144275 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070362896 seconds)
  done (took 1.602844804 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063931069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.064405001 seconds)
  done (took 1.505840113 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069362377 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056758794 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.074515999 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065960471 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057452903 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057093644 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.072578529 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05859015 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057233466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058247513 seconds)
  done (took 2.004545732 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059030195 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064457211 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062646662 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06421033 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063372358 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059551501 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062450764 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059848205 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066323563 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058599786 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063074474 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078131657 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062461001 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079741816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06234748 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06298886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064792485 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062183615 seconds)
  done (took 2.535097774 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057899431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057658278 seconds)
  done (took 1.501283299 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060830186 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058546989 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060883959 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060903934 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059555082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058397235 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059206999 seconds)
  done (took 1.794290725 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392590016 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117343642 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327276186 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066312482 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074263173 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244248678 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060813613 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065572606 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065545907 seconds)
  done (took 2.833889085 seconds)
done (took 15.168113871 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076578035 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167041315 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.083885686 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.403666122 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089017763 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064032911 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109539363 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.163869382 seconds)
done (took 2.55768052 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22797422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.269081672 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.877042366 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06766153 seconds)
  done (took 3.60293321 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.309662413 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.074500805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073994522 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064511532 seconds)
  done (took 1.921849035 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061396142 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067262748 seconds)
  done (took 1.51996059 seconds)
done (took 8.675294093 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060743449 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087313652 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.05946115 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.05980055 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060330975 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061550674 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061382963 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06110745 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061049573 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060578603 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060696604 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06091558 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060930465 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060860047 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060674959 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060633033 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060522356 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061171948 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06101648 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060470578 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060805447 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060891506 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060888884 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060422771 seconds)
  done (took 2.904641775 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074569247 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061679602 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.062650113 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062383528 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.062883282 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064091148 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064277475 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062477974 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064229693 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06222484 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06429468 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064197505 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062377149 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063570675 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06151041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063162134 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062502705 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06160277 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060819536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.062988892 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062807236 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062635199 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064236162 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063747768 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06447485 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064659181 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062600557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063019685 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064275635 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064033101 seconds)
  done (took 3.315332743 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0602954 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056652701 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057341127 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065301939 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056462865 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057093198 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056939168 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055970446 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056442348 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057718124 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057469075 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056812099 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058135309 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057796363 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057269537 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057790309 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06181405 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075088644 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057755113 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057281283 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061248082 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057542408 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057341287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057193991 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057828727 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057247833 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057424042 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057626337 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05717546 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057979425 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057359365 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061531106 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062029409 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.067045208 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067327005 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061967823 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057658893 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061555092 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05848084 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056981557 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057035773 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05634865 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056056945 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056137961 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065026409 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056652258 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.056862718 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056836862 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056284127 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056096999 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057319305 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059400084 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062434455 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058604379 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057243315 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058305477 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056927512 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058104034 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057460535 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057147447 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058237822 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060535162 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058809107 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057800546 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075375158 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058950138 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066698053 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06020691 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058169578 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060466718 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057683669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073449858 seconds)
  done (took 5.677731045 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078079629 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082164816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06131059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060837862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056947015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056471457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063611849 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056988666 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060914031 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075095147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056880945 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060844083 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061924083 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060511608 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057513548 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062093431 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0655091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057716803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057836511 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061756196 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058172429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064841512 seconds)
  done (took 2.79956974 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1306592 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062254656 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098654322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071974233 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065635998 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071812077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063290418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063059573 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063242556 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063770242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064016814 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063148243 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065813987 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063840109 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063881622 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064011813 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063989221 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063723843 seconds)
  done (took 2.678044452 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072065757 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062590102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085247885 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063549597 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063783602 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062800538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066384189 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067192041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062948328 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063030501 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066983007 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06247715 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062507624 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063020034 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062495692 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062781225 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06278736 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063097799 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067239403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066315726 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066306047 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066551523 seconds)
  done (took 2.856334394 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070550938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060604809 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073544655 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062216342 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05664386 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057271187 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06187915 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061775829 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062463752 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061525566 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062349199 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057928656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063843389 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06209849 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063868136 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062645605 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061788669 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062236315 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061686748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05799866 seconds)
  done (took 2.659474256 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081339953 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059069596 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058655896 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077201095 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058598363 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059079782 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077422556 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059761943 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060723268 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080985576 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060184173 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060011646 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078702621 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07883116 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060190232 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078479876 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078963822 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078775285 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060434996 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060250253 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081037294 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060202335 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078502197 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060405783 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060133192 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060508795 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060095677 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078446083 seconds)
  done (took 3.323368194 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060087426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059409856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060031246 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059659791 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.05991461 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061002879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061322839 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061421816 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060786501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061082985 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060416225 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060468099 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060982365 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06030684 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061067864 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060662951 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061117825 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061153111 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060577123 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060852561 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060531163 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060575034 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060495714 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060890419 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061083766 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060348228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060997629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060615941 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061049667 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060752602 seconds)
  done (took 3.24057438 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069108305 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067167027 seconds)
  done (took 1.556832725 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059251056 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0719005 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056696228 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068038502 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06643852 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061411911 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066806316 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065757552 seconds)
  done (took 1.932793117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062612887 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084446383 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058195764 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059561466 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062393183 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116063405 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071141704 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072642121 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071999205 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061693262 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059610432 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071434226 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058476996 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070910436 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060259114 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067511029 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065485812 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070960752 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071038246 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057755125 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070757539 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059960794 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057735841 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059837394 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059031579 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06551959 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074053281 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070807744 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067059336 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056930467 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07678739 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058074863 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059058721 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067239669 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062279748 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058343772 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093361372 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058283477 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063100051 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058233822 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06976121 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077454163 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071546701 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075154403 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060016679 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059902653 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057823623 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060253753 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061340324 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067024341 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057977944 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065231441 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05781832 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059600753 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067701773 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058004838 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063127949 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066621141 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07090721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068121864 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070106174 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072691861 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066465961 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06590246 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059113056 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076623373 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059496712 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070158443 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071768764 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059012739 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070534422 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057519723 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05652571 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05757659 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089143993 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.05921829 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058760801 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057666513 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057590796 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.0591876 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066647899 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063001331 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064639962 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060997246 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072553415 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0665676 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05789831 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064570719 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075025208 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0613927 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058289788 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073817967 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061114007 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057364482 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074500716 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066711881 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059722135 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058505899 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061168535 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070647959 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059071303 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056578125 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065457612 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059253877 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060779977 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06222672 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065104112 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057803292 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068020919 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062828189 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059479044 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056646692 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062335182 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059079217 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056532017 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066724871 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058308197 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071891092 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063982264 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071062402 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071685658 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067350737 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072542832 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058030384 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056649928 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074691652 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067091291 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059204094 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074525661 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057478152 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.198917555 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.05696307 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.058480178 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.065778222 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.055966592 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058604005 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057167757 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.061828823 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058753225 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058759067 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061636011 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065196059 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068848737 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058499752 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065648161 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057650802 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071494231 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066644555 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061981434 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061484788 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057655613 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069715576 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064645422 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067435187 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058366951 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059418504 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058698031 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068503857 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06746732 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0599914 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06527947 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062418374 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058783276 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058394707 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060101487 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06156395 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061829294 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058962912 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065720452 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066249168 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074164752 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06554768 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06725609 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056685377 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057661327 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059652478 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057378599 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062166384 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067093765 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072804218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068885903 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077995534 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058451518 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067743815 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059441348 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073943281 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070316505 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059036873 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062384222 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057103108 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059611237 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067224519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068888518 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071550541 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072243499 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062825634 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06253326 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057654016 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072636773 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.05847638 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066305345 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06680507 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062513492 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058130918 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.05941473 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066723312 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062726173 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058303271 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.07258798 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063851196 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058006783 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071216412 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058110376 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068164404 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058082403 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061407625 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062892744 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.05997687 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067149895 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072212021 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0576116 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058404644 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072568628 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059744502 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059553649 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06616035 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072746229 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062513323 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065308092 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067811318 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067377805 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062417283 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067274176 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059246642 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067032524 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061615766 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069708841 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057874962 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075079594 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057196253 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072223697 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058875008 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.06813054 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058717617 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066616465 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058735428 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073709418 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05968254 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058615113 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06924617 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056898686 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066952589 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057718276 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062922868 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064333711 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067262431 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060030793 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066719276 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059776529 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066113401 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062855171 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065887208 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066763568 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061884791 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057467978 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065372754 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.204143273 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.064858694 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.058562175 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.058454606 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058222682 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06591426 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058514006 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.058249401 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064835249 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061781804 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063045012 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059110587 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060261271 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.06065352 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066971949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067848812 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075890818 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066311578 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065457278 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067846609 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058653171 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07342171 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058322249 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065539961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057414895 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064454215 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066748382 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058292653 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076494708 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059926045 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066337694 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070698861 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066682184 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062227549 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075354614 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061329791 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066304845 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066061648 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062766095 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064489686 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060270393 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066093745 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067267218 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068311231 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059603288 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064962398 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066417496 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060062976 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065658304 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059864404 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065669483 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059810108 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057055863 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062111689 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06809089 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061694184 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061785712 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057068733 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056087369 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057040647 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.063153656 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061047646 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06502899 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070982647 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.055806529 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058508999 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058160953 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064093232 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075249053 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067623359 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065060393 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061895955 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056683151 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.05902906 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059294575 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058503136 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061565431 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057314563 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058043789 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068174447 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060086431 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062900776 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058706189 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059266364 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066918168 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062779887 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058942932 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064333998 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057946152 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06285495 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057582876 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059796153 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061864895 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057175284 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061736146 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068095175 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073902032 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064666724 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066477789 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059240055 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066238967 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072602535 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065462371 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059122893 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066981712 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057938266 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075440802 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067176424 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066327788 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067776483 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.05910679 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073626469 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061982421 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067799099 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072726456 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059425087 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065125124 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057734148 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073169473 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06247798 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058121519 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066133548 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065477607 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063735631 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069389909 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058859072 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065757556 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063342729 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061263059 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059046262 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058444601 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065205852 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071302792 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.057532791 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.060628597 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.20308014 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065733823 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061756853 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0695696 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065017871 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058954679 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059847413 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061901007 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060122399 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070765595 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059725823 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063108197 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06317717 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058382246 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065013819 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074757148 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067776039 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067741891 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058133201 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057707795 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075414708 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061750122 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062265232 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065902392 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067236703 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069978958 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067052727 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074306313 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058935709 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06391703 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070977015 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059365115 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058161591 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062084038 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059697359 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066973371 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06779912 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065625945 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060021793 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065078663 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070737056 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059283055 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063001298 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062747002 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058964346 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067731128 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065363546 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066425697 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059287602 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057625411 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060840404 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065893302 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064933678 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06610166 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058971652 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065036126 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071270332 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065352999 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06135266 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057896182 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061410852 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066524619 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062843428 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057643232 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062576609 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061500508 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065127027 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067080295 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062664678 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057720533 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074298715 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065948844 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066551884 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060124776 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059868749 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059127826 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058374817 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068847923 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058269584 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059753693 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062622647 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060027233 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074953121 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066009446 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07312953 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059356909 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062871414 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058076716 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06768415 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062842595 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05839915 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068358112 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058085496 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073348477 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070099687 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067050524 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058009216 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063161879 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066336741 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072734877 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067458449 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06644152 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061627673 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06736589 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060066608 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06844639 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057985576 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057328057 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067816136 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0660152 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070106788 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057971845 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067696697 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060016145 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065879039 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065651112 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060012551 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059802625 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060004374 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067487822 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063048602 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067106398 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06263135 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073969964 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059343024 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068798534 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066347963 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068028779 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070874628 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069891906 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065875715 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058307057 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064926647 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065448558 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059084472 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062411976 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.199520494 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07773534 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.058965675 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.058924068 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07063796 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064211098 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058427705 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.063778919 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062676762 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.06815116 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.05971571 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068546712 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062687982 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060401905 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063419217 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063770325 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057644057 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058596044 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059158502 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067707872 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063150343 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.05881216 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076858756 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059951871 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06649596 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069574522 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064702139 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059994272 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057699834 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059665065 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070567058 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07360282 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062210686 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066563184 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06020701 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06720455 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057631128 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066433904 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066467464 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084607906 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057786455 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058830864 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072116817 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072676279 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062946866 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067379295 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06693835 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061261766 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079157718 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066034783 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059145745 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068266812 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060809932 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057720674 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057431218 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059647389 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069486764 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057931317 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06079764 seconds)
  done (took 40.208062968 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093238464 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058115316 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057204765 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058454647 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068966391 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059089601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05816476 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059073948 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059209974 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061018895 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058187011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058951219 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068355875 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070886069 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067950953 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061669688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058086052 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058868705 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058361743 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059124839 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068062706 seconds)
  done (took 2.838716264 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06354745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071253858 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068509857 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074330045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066060993 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062419677 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069423082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062981636 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069754834 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067324152 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069656012 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061840052 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067784704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067185469 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067389255 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062352067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069340415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06626873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061979813 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068966326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062545589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069158582 seconds)
  done (took 2.967019721 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058700348 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057506444 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065514742 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058530306 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057913198 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060764611 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057353202 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061538461 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.0614687 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062066194 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066285321 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058801013 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057155051 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063531676 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057528548 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058466893 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.096117435 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058591437 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058682633 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057680556 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063885421 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066752523 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05751175 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058171658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062075132 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06133424 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058056884 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06017373 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058239587 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062497953 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058791707 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057702025 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066206116 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065515577 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06213881 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061843868 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059448451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059035348 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.05832709 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057758064 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065711101 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059279089 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057898867 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059194446 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066049753 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057596207 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057640596 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06638618 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057461384 seconds)
  done (took 4.494474055 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.067125288 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1049708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06358768 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088661087 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07127827 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064121987 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06344072 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089447423 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059254126 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060146645 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071505492 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071268383 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061136407 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062578952 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064479241 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059567133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060100265 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058919751 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.061824044 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060040339 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063277624 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064396559 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.0693972 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.069516941 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059943419 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058881203 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058812111 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.060499601 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068534525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.062103692 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.060752455 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061037719 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.068821441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.062078876 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058792106 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059010209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.069375743 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.059242796 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059160735 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.057419808 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.058735451 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060715953 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.062945479 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.069913186 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059381268 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.063699221 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059847449 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057806431 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070785736 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06052558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064474455 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.070865136 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060158765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060865084 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062373987 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071015949 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061072712 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.05977381 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061189731 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070797543 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059154523 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061783344 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071445853 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060246021 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064472937 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071361074 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065249521 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061534297 seconds)
  done (took 6.036149432 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066023964 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088239574 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068275765 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069031186 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068130491 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068599831 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068719687 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068474537 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068433458 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069038639 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068560841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104931054 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06473856 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072275182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068152295 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06843064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06819065 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067999693 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068349847 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070162785 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068231652 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068829752 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068113845 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06908499 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070935806 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064715744 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067932341 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068707148 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068581225 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068160439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070488177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.066273048 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066589021 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06749873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.069705218 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068301557 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058815403 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068157006 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068239071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068322844 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064457195 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06854417 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067858348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065003644 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068215538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06823994 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068693703 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070829291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07524833 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068948455 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068473518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069018344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067776677 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066494065 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06685789 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.072972704 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067102831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06705375 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066590312 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06697905 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068176213 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075040207 seconds)
  done (took 5.824419601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070610762 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063655724 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075036947 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060282968 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056543806 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065877449 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056702089 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056523526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063410207 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.063130577 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065103327 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065835171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067836424 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064632749 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065252142 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068661115 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067040465 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067511331 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064933337 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067081267 seconds)
  done (took 2.825898197 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069436149 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072904687 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062639364 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066194733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063086738 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066783248 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061256565 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062119492 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062404409 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062263306 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066317524 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066871867 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062700521 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065876433 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066610805 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065378808 seconds)
  done (took 2.558138677 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063220402 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064028694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.063732551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058235746 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061533096 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057182695 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057641925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056453479 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056724607 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070537201 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059085376 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070517777 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059432015 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057808743 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059046496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064229653 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058157458 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059056505 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058931685 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063776824 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065188374 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060122959 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062742178 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.05869979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064159723 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065646675 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060233715 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062609238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058801454 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059508705 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064471452 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065289514 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058746143 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059734111 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.056940386 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058498312 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.057989055 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058061705 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062735473 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.057547923 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056415595 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061922324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057500673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058805985 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05713927 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.05953232 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057804809 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064770942 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.05924234 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065102654 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059126477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060864566 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059478638 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065397663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061900135 seconds)
  done (took 4.857357995 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071316266 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061846849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056801899 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056687804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062000136 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062336785 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062401561 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061975222 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062314656 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056818451 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061922077 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061317674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061825878 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061883042 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063091718 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06205096 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056100391 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.061629683 seconds)
  done (took 2.634033504 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068014059 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062058349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066011802 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061891619 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061229101 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061886956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058525584 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05807528 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058002912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062937038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062826237 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062568551 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058629348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062412955 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062624603 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062747933 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062266646 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058180112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06291306 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05834623 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062252704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058421099 seconds)
  done (took 2.874949858 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084642416 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080395265 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118381493 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074618925 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082800571 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067451242 seconds)
  done (took 2.032926298 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086072489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097589822 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061882702 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062808913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071685771 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066214245 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065550224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065982377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071728706 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070060596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065993957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07159503 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071296453 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067265766 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07151719 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073793084 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065656356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066115692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062973949 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073624478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066486393 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071450857 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065073486 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065601398 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066107298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066446063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07230167 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068225001 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066630244 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06926247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072066413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065443372 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071010448 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069553429 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062947414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071443964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066020753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074220638 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071555579 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068171794 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062831651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071664541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071474883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067632923 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073891574 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066184501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067748 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066093274 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066509133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0762798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071487659 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067756686 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071860151 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074216075 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074448103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076430589 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069831919 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067647637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071611163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070122818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067766311 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071852231 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068127969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070457565 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074344779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067877252 seconds)
  done (took 6.134587771 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093170158 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062617878 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064817688 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068585394 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0675788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064802991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064887609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06485116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066217706 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06388682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099414409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066354282 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068392692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068145175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066672608 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066400075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066720864 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06819669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063716407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07623932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065976545 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067973282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068245596 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067929404 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069932576 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073959414 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065865456 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066117588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066307653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065701544 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067523147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066283686 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067882106 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062884197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068022286 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065831036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066310382 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067579545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065961932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07153746 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067681546 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074006142 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065850011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0661463 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070210402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065922561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065793295 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063166944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065810793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063411474 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069735828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070168816 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070153363 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067946236 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06677402 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066647086 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066315714 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066333321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066117413 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07396706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067721017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065649697 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076276843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065901011 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066258264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067850806 seconds)
  done (took 6.051832763 seconds)
done (took 126.679762041 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204092959 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179994791 seconds)
  done (took 1.896820787 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069775951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091125297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0712212 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128999228 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06730362 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101314144 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099792838 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070639633 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066684602 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067983864 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068996509 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071253061 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134555597 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06708229 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066521354 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068998681 seconds)
  done (took 2.843810135 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10052995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173874387 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109263166 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066925137 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103024756 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073627398 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067107405 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077101286 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070312302 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070409374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073439252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071982372 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069640184 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071999549 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070265725 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073106361 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069513425 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07338771 seconds)
  done (took 3.021476113 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089509212 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081122028 seconds)
  done (took 1.713283353 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148574694 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101022377 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138479102 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.305766579 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.125219853 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.121839471 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125838203 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.120386607 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.105286146 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.117106823 seconds)
  done (took 2.944955675 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097182999 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165640825 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297815098 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.112907573 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071024155 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093823657 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11549811 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077313709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074504112 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074120285 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077065897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.071866042 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.092084321 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07117679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071362053 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071739079 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095314507 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071111891 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070042537 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.0707987 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095134306 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065797542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072472653 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072591961 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074565463 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074539319 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069083923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06757671 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073218797 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070627073 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073346687 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090384555 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072350975 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.093452116 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069339201 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.09427815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069623156 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069049076 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070312882 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.06894891 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071423437 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071781464 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074376271 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071454047 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066716996 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069615562 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067326984 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065415547 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073066409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06671634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073031763 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072921809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.093996281 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066516404 seconds)
  done (took 6.005430529 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102515402 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100009827 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066119362 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107106836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099169242 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065598946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09831087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093743223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102410835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065139596 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064772637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064747682 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071780568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074541922 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10955033 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100943659 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067064262 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065287203 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100921682 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101107023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064328691 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094569708 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093151747 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099841331 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063706552 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065271512 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063815999 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064384616 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0694795 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070668337 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064031677 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071857686 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.075942228 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070655529 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063385645 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06416609 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063905364 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071441931 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071640413 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071398445 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069903845 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063261535 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063899181 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064423585 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064801395 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063176361 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069852355 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.070839921 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069870062 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064215024 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064554428 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064078538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064359403 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070670342 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.06931647 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07101177 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071266241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064173007 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064201925 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067028947 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073490743 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071418603 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071323423 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064856166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071590494 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063839194 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0728406 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075665108 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064417876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064955617 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064914053 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064095305 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064579941 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069827756 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069843159 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064893483 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064346672 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063848435 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072244699 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.069717248 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063477311 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069469265 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063993053 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065560597 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065991696 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065759863 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070226588 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07243169 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064653519 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063846358 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064277622 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063920095 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063827871 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069304719 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070409402 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070913185 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069987494 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064413859 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.070217949 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070188837 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064884714 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070873125 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064274145 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064510595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065360962 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072445677 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070105718 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072277346 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064211184 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064035985 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07068707 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073122024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064070353 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.069777221 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203209034 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07102306 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064524431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076727994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064776287 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072578986 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065127666 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072656424 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064535562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071189041 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064650143 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064321058 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06467101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070900536 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065171616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06513168 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065121372 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064630534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.071444722 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074415039 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065148877 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070432162 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.070824175 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065692006 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070681872 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065041963 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07131996 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065052635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064748919 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064423951 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075403795 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065197151 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066347859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066006977 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075081258 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066818859 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074615463 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071600971 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064514592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078891836 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073075595 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.069882588 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073246292 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066317939 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066800234 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06608833 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066117826 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071509769 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073837233 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066459611 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065044066 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070397569 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.071874225 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063726865 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07044939 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070288152 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070134544 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064256729 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064192915 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073046331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072194019 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070338804 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.069969674 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070971082 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063779197 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070115981 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07042899 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064499272 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076441559 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06417001 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073862924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070458211 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069932766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070836425 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.071703322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072355088 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072731108 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07425483 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064028202 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064245655 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070584683 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064279406 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064372355 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069825351 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064530025 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064667444 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076525419 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064424481 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072676617 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064083107 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071598108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063948662 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066004869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078232846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066343009 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066409788 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072210356 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066400545 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072055327 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076162526 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073051182 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066066796 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066065495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07339633 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073774725 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065450883 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065414912 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064821838 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071108855 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071314565 seconds)
  done (took 17.440834156 seconds)
done (took 37.420411691 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191157528 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152990019 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183698754 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110017999 seconds)
  done (took 2.2743865 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.087575403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.091689007 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073257948 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062276949 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078855801 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063460439 seconds)
  done (took 2.040272684 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249716988 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176334107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162675129 seconds)
  done (took 2.16472531 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205743509 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189891868 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472827346 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285211337 seconds)
  done (took 2.828786467 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.122810584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.073761765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060193272 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069655387 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.099120335 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.126497467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.081105507 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.102221064 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.069966264 seconds)
  done (took 2.444000205 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.12122576 seconds)
done (took 13.467559533 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.21682015 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.228179918 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.117405447 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096114095 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065711344 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.228373729 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.200813084 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074202552 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.230370025 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077924782 seconds)
    (11/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067111392 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071811019 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154586142 seconds)
    (14/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072035154 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071765729 seconds)
    (16/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.169114158 seconds)
    (17/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178454298 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187594513 seconds)
    (19/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.190165431 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069743888 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07154274 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.292303022 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104784256 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.177949072 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071536278 seconds)
    (26/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.246758336 seconds)
    (27/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.146807253 seconds)
    (28/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.074105717 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161708857 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.146958537 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22393172 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071771007 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 0.164375294 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064193592 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.145396292 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16659924 seconds)
    (37/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.19381479 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.185176487 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120423527 seconds)
    (40/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.080526169 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069164181 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121126856 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061813105 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08838916 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086114004 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064194092 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17760874 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.083018859 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.139423188 seconds)
    (50/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064935077 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.209352438 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061653019 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.063279285 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.161853129 seconds)
    (55/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067996261 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073132209 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113897609 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079388362 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162463759 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068716725 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127125818 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061917819 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062414705 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072011577 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118729754 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06408143 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14982579 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069808681 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060140649 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208848695 seconds)
    (71/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.140129446 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071021111 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086291951 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062010704 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060917189 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148935859 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073653739 seconds)
    (78/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069665774 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071444889 seconds)
    (80/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12038047 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071830158 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.168949947 seconds)
    (83/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212760816 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070545263 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062089723 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08800466 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14797355 seconds)
    (88/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.090407581 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.139270899 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144394503 seconds)
    (91/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.083257051 seconds)
    (92/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.062744359 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084322309 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083581368 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181635294 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14836416 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086882526 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120243525 seconds)
    (99/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072232212 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073990694 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070465417 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084830547 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069060313 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066923511 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176339293 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.216279929 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071283456 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062037988 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068620106 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062059541 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116190191 seconds)
    (112/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069073728 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070026581 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164291779 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085906689 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070049785 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.181972642 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062549269 seconds)
    (119/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.062784579 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063981211 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075652313 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072088888 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064045941 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073887096 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074332505 seconds)
    (126/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064589751 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077296367 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063736777 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199731752 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087368544 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066668358 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073958504 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149465737 seconds)
    (134/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064622427 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175715549 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140203914 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151761822 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.075619215 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061349832 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081108008 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061907149 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119502987 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073188011 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07581918 seconds)
    (145/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191125535 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.178472751 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.1993121 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.087151403 seconds)
    (149/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062344508 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062078861 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069035325 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.209617897 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066767737 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063469636 seconds)
    (155/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06378827 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075125195 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145387147 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.079485108 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062051918 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088801558 seconds)
    (161/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064160902 seconds)
    (162/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.125959448 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063822263 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062758716 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088470631 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062640137 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.085146622 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.06972 seconds)
    (169/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062325131 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063938574 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062040562 seconds)
    (172/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.161806439 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14680757 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062633576 seconds)
    (175/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.069952057 seconds)
    (176/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165837329 seconds)
    (177/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.142020151 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069017031 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064828017 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061827292 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061144146 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151204817 seconds)
    (183/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.072953317 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083003226 seconds)
    (185/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062112662 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061438158 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135015212 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088038184 seconds)
    (189/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062107357 seconds)
    (190/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135964562 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063222116 seconds)
    (192/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061967037 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06094867 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.063310018 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.224901249 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071830579 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074884336 seconds)
    (198/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071147534 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063413178 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 0.133038828 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093439104 seconds)
    (202/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064102654 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06490092 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143927465 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063396071 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070479433 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108765065 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06263979 seconds)
    (209/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.156721812 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07125917 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064885573 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071037623 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06263782 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063091673 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066012303 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063981633 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065262835 seconds)
    (218/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06823471 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075537864 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075732027 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065193787 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066066608 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142490412 seconds)
    (224/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067971131 seconds)
    (225/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070865894 seconds)
    (226/309) benchmarking ("sort", Float32, false)...
    done (took 0.13271518 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064718356 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064541047 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064264559 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062974476 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176984426 seconds)
    (232/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066009677 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070418328 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062208653 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118722046 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062373979 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063309658 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062725357 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062943928 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062915055 seconds)
    (241/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078671413 seconds)
    (242/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065182448 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078013673 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112602861 seconds)
    (245/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064910514 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065066098 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070758082 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128763618 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083522382 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062826268 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085310663 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061975926 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063463164 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0654577 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076116478 seconds)
    (256/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063018651 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063666415 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131074665 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0681057 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061283297 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061698988 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069026034 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152783715 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06254561 seconds)
    (265/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.146627027 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062271877 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06241834 seconds)
    (268/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061025096 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.063936414 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068054218 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061532438 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068565129 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060531977 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061419995 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062514397 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.060716428 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069537072 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068639241 seconds)
    (279/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061791401 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174217347 seconds)
    (281/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062071926 seconds)
    (282/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062556151 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.061467237 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061090371 seconds)
    (285/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137259384 seconds)
    (286/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.06828579 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.082024565 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141681638 seconds)
    (289/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241055468 seconds)
    (290/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088672599 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.084942551 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072989887 seconds)
    (293/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.061077393 seconds)
    (294/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06145415 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080226548 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061635881 seconds)
    (297/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060699437 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068877029 seconds)
    (299/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061554946 seconds)
    (300/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06045137 seconds)
    (301/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065837591 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060486316 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060156622 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060774439 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061055261 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060962817 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084527795 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.060939817 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163656767 seconds)
  done (took 31.966511753 seconds)
done (took 33.562584248 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082567136 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085266147 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069799413 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080141555 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076363588 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091397588 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069762759 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074048721 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076330778 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075219576 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074357611 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068490232 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070800672 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070507423 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068641766 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083258101 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076089187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069989723 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070273942 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061036254 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069970988 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06181421 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061719931 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068490438 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074111446 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069697942 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071686808 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070673605 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061892597 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062411544 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066420424 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070360028 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064480917 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073262864 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069511058 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069762303 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070907369 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074069613 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060738327 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061918274 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071651917 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061685836 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069328704 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067790833 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066865093 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068674167 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069662072 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072624271 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082829636 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066535753 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072278672 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072589548 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074348668 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068552393 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067463103 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070684658 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068136357 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084266074 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069943189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065558746 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071559587 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070462732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068179468 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069370541 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069721474 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073493519 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073521313 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06879692 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072284048 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068876616 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0611637 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069528431 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066243603 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061885518 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072930459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075086905 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060291928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065937169 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069100465 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069816739 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060807637 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066007316 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060655918 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066517331 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065365879 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06770321 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066920078 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068586014 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060606633 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069584755 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068839665 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069593775 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060585412 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073517779 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061480212 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067336311 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061967188 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061799988 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060392591 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06675434 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061079925 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065427657 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069605904 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061647069 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068445109 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076091557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062906266 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070925206 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06235643 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062227956 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071442945 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071978238 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061536264 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065718009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060770717 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066733011 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060778655 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061120694 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061414977 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061653419 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065732662 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061271292 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065613211 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066573312 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073547035 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06090068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066052571 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065448568 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061504598 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06776309 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061840105 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06154577 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060529096 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07412476 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065378603 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061635141 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066841164 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065667779 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069498772 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060394963 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070019381 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067115184 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065751865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067850806 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060097807 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072693103 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065472586 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204830718 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061291364 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062043688 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060906147 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061368687 seconds)
done (took 12.197008025 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0627825 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.086861552 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069685664 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077314493 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073913039 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063512266 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065232191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.077211557 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064911218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080521519 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084678287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083406497 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087176807 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061021412 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062061977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0628632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060534731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069261422 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.075824465 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084108166 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090660994 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061749162 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070533325 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077367163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071985931 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077122655 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063585092 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063042078 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064654486 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.07846068 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085756353 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061811256 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063266768 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.074776251 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075008947 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.067626783 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062856631 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065857365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063134796 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062405896 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063847658 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075166489 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068389466 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.065817872 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063036135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062667115 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062208399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065066435 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074939487 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065067183 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069499574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.0727276 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063468287 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062469809 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060590297 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065560231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061929506 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062609283 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062570096 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062098317 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062584849 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064625784 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063117525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062529758 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065818307 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064162613 seconds)
  done (took 6.189210149 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079696776 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089783642 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078174679 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077887408 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062525771 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063286598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063018416 seconds)
  done (took 2.206551871 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063903845 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074212828 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077025849 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077310838 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070107665 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079194726 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063048601 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091752518 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062102975 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073851289 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.105052338 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07798051 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065538677 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073871743 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063347346 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069681973 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062878723 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070323106 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06995441 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077597969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066463702 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090551184 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076041324 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063297373 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08112898 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066283497 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061845635 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06324843 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063897565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063654345 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063106462 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099905376 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06565731 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073877371 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063762343 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062762446 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068343158 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065494841 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.064792375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071135723 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067088002 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063327345 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061201097 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063446669 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065013026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066117362 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061464514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06352836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063423437 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073055492 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061513347 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066134812 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065793607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066986275 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068512365 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066914784 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070326245 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063944024 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07327199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070252177 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063627922 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070335217 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069831579 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101244982 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069778944 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066527276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065694164 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.06680312 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063006049 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064818152 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063762813 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069642107 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061819088 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064571811 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065843852 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064076984 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065816552 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078130812 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078022919 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074739715 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064444662 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063407502 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066122526 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.07802164 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067114409 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063400347 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065232735 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061758185 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06679056 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063725361 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068133249 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063405932 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069910008 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064596492 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066481906 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069942488 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062544234 seconds)
  done (took 8.378258843 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064964532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064187511 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06504765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065646757 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066022652 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066373122 seconds)
  done (took 2.112557257 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084333311 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06328167 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077214933 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065290018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099083843 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071221158 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071527929 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072818721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077975235 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077580272 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071175092 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074154762 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.06977495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064894449 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069707712 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065013513 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071300384 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067594708 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076627206 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0667292 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.0772627 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066429453 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067120819 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076412099 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067264611 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064570531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063624313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074202788 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076334256 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.070061739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063976771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065048276 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070254765 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.069819377 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.068746233 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070161439 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06302288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.06786864 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064809506 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065142623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.071342774 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06432291 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065084831 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068205847 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07034598 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070933324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068422986 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066562724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068433098 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067679514 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068048993 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063335999 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065221325 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067830226 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070599439 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07007949 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068002814 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.068647455 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0642872 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070491743 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062885632 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06520068 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069875307 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065039293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066386252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.06777615 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070305696 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064207937 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06435875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062593796 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067814322 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062843115 seconds)
  done (took 6.668372239 seconds)
done (took 27.227967834 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.945689442 seconds)
  done (took 2.619568534 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.547454227 seconds)
  done (took 2.256824501 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.743013609 seconds)
  done (took 8.449619176 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.26567948 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.293462763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695932042 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.124284912 seconds)
  done (took 3.111788981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.68715393 seconds)
  done (took 2.399957268 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224159826 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.214806995 seconds)
  done (took 2.152178439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.336450242 seconds)
  done (took 2.04220657 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.079056859 seconds)
  done (took 2.783047581 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.209183453 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152365521 seconds)
  done (took 2.07854322 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456993042 seconds)
  done (took 2.16847825 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.082026211 seconds)
  done (took 5.79780564 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22353471 seconds)
  done (took 1.970367295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.226911324 seconds)
  done (took 1.943735111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.735525271 seconds)
  done (took 3.450253433 seconds)
done (took 44.942929955 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078505464 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081120527 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080810411 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077086027 seconds)
  done (took 2.011221339 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069135101 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065114455 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.06861499 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.068870128 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067334056 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.067868073 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.067656711 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065077048 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067002284 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065203547 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064653959 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066499209 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07053309 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067315471 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069530203 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07044856 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067281442 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067312238 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069705812 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067143754 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070322301 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067476224 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065889748 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067182067 seconds)
  done (took 3.340786836 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073367285 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067954019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070415571 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068139068 seconds)
  done (took 2.003672732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.070778698 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.078452499 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080876199 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087716618 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073335809 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073611891 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080142962 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081224879 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06313246 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083166794 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065898928 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064272271 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06449197 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08372067 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079979422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060351434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061603893 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073445701 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072569597 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07500718 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065923909 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063504826 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073848413 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073000983 seconds)
  done (took 3.473214035 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074814962 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061785661 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07287142 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086963198 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088120566 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061643707 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074208858 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089108574 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120787148 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06136507 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067805585 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061088776 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101658859 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061309946 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07529007 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102330813 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10495154 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065280511 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093109856 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061491756 seconds)
  done (took 3.318590813 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072956747 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065261654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066034191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061552297 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073948523 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068841832 seconds)
  done (took 2.140581119 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064308755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063973757 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063685971 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063294088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067583686 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063706905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061861987 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0642481 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065203547 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064512585 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063373549 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06372434 seconds)
  done (took 2.493495122 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15400568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065402305 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066394069 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064750555 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06712158 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062661491 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076241323 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064560931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079404088 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062907243 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06291039 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065119609 seconds)
  done (took 2.617009937 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089153632 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087754667 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121046798 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103367943 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084914731 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085226831 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.136761166 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.125011979 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102746107 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065242308 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078675002 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096679951 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093578086 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129766282 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102159334 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068199473 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.092745288 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075802317 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096908569 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105125274 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10182355 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104633836 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08366641 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09293083 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097212638 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105485611 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067332116 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066407758 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126916396 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.091440408 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.083683802 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086395327 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10083714 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.064659993 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080764026 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.092829549 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077937947 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094907694 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082555992 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089286875 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072367673 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.116722485 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093344695 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09981756 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111267233 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087437426 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097393184 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092979269 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076910334 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.108120049 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088512926 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085842211 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071578973 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143979589 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084913338 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.097387487 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102535772 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.076895198 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083305241 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088272997 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11572738 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.091339432 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100590666 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.241854069 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082807903 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086542657 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.126088987 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080852322 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097289639 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117859419 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.084836665 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.070844589 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.085960244 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065257378 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092276644 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093882502 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087094348 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102352231 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073868425 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11768965 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100832451 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068339743 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104864246 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086236318 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144404645 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091433553 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095159829 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086146781 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.140941422 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081047946 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075565612 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089231976 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123241833 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084962382 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091108302 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117979401 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083970198 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078052997 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071173825 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080129174 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088124988 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102524339 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091862796 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083740578 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078055443 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083962975 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07023381 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075913789 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092093344 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082646259 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111315072 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098015259 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107770016 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076994509 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104863524 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090945244 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124613597 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114355742 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082131363 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103971519 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126856252 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101812886 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080404434 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09535816 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107607366 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098447652 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084198713 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128092366 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10745072 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081930096 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085461527 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.237208418 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.100098915 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143776159 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085361875 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.100226857 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128369597 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100997043 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087703994 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079164409 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086499901 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102423439 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131696054 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090112779 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069092338 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090392068 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120469516 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072032594 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090945145 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.084300916 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.079696029 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077247892 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065400203 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095543207 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126575066 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107665706 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093757145 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.089461883 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065109494 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094195592 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091631409 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138467903 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109969685 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093169685 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.086470009 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09476459 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07597785 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.123489622 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.122364518 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086667116 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087022596 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117052511 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084703826 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.095409354 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101354298 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100262633 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.092027138 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131207274 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116631012 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.110099763 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099551682 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117512654 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076973327 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103003228 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070341447 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098413473 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.072802446 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097442131 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074800351 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107158385 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076991146 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097406586 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.06583576 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071014672 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.251834494 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085003469 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082160453 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125570224 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.117178071 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077978384 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088524932 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095406568 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092594175 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101520762 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08231129 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086891529 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074038441 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.07607711 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087185495 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090714939 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098303549 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074022688 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070937071 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131580508 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09920927 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087660116 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087504791 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.113710976 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082299012 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08069703 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103505925 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131101895 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113212858 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077790382 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.08846031 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066180473 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080445592 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.071460691 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104287855 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070305151 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105526765 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064227877 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.123627395 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082272933 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097015841 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087831589 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117817259 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081167842 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117986927 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082355986 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102470126 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089813731 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085855323 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101365431 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.087219858 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092985405 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09869416 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08119869 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084794907 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116816868 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102606749 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110940955 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101783484 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.129172655 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102384665 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070655017 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098430137 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086909626 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14500045 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094940895 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080932977 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083454439 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099205833 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078518817 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132534917 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081438432 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.077197763 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107582838 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.084701261 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084016663 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071219397 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.095588918 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081745054 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103121098 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.091513923 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.087576026 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099050031 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098468437 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079353736 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080326749 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114857907 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.120106308 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.094729002 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080061326 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081919454 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09247782 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086765414 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.101568289 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077018064 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071899342 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064953453 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068082451 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111879963 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099762117 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090135227 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088898343 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097398934 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069161326 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085293898 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086939719 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.07943829 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085161296 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108557745 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097745375 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120298103 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.094406656 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085133074 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125469066 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117983609 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082200779 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084932025 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088993963 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.070780449 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136249057 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105974685 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.070855926 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076440416 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.071143643 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078340409 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.066038784 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097459083 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097642501 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070509863 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091129595 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086682403 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.107431826 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084588296 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0710844 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.073675764 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.068147578 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.068379315 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090376361 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.070885353 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071092531 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1155635 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095240166 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.364784302 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080411452 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075348811 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131545966 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067687619 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130150726 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082392437 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107354635 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.078447276 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076790207 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086192629 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100329896 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105062477 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110525151 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068287038 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100447722 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147587649 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077363554 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07497961 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074419065 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111352477 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085483091 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140696213 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086258618 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08448428 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073545129 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118331046 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098874995 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07900692 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118124907 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076391699 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067261608 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077943192 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102891324 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068684862 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070867209 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108019168 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.618217857 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087128186 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073069262 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080868478 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114866224 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07881431 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104042584 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112280035 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102214334 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.176397397 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070132589 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086620451 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.100605919 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094186883 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087729091 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077981906 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086557474 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085803682 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07655372 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101586266 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.076487237 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084365419 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076868907 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.099884348 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.124412544 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082189315 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096028363 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08361623 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082307459 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094344153 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104495131 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100396692 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083203612 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.242372611 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102659311 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080278194 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076078232 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094825145 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07289062 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074648366 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108354354 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.079619992 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089397515 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099002248 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.081636639 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104220433 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112809953 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108625361 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094294348 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074944714 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081526664 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.083834002 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070129826 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075212821 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072360133 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067505576 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102952046 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080829197 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077765242 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.095532437 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104525771 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098031338 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105679761 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08836353 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094870489 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100824264 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124212573 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149249593 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095031414 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.113490192 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125875495 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.073915712 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071871362 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076449873 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125812933 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.076533684 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087355779 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.224968868 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073602213 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076437596 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086527933 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102677496 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084079138 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077066227 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094202878 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105610987 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080069645 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077596622 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088407047 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100617109 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.124779333 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084649774 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071266089 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103303451 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097265677 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117727676 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.06918078 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077878769 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.122409975 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083297676 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096842606 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075165234 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114980776 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125527053 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071207864 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085397613 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06711219 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.239188459 seconds)
  done (took 48.243086491 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.148422744 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147226105 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078289616 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093783646 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.188133548 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.203995918 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114445094 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090567874 seconds)
  done (took 2.918131316 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06443323 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077972888 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097458751 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079643337 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062828829 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064687824 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.188972396 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078986847 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062978183 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101591556 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07143197 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06492556 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.346839792 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064818717 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065563608 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070272718 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063498708 seconds)
  done (took 3.48237639 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.345612329 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613828611 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.311602827 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070472321 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.974789554 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084452548 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.201750327 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132691716 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077433778 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548367046 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.359925493 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128159755 seconds)
  done (took 18.715163091 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072373132 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071006481 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073893257 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.072947817 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069888385 seconds)
  done (took 2.22023907 seconds)
done (took 98.717224028 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077496181 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163140984 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064672006 seconds)
  done (took 2.122959382 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.077480951 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077043096 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076440496 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.073717111 seconds)
  done (took 2.173591562 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070236256 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07247122 seconds)
  done (took 2.003984389 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228692342 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15878978 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088842568 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077900004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075583996 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075675074 seconds)
  done (took 2.100974099 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068026042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067480805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067619621 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068445679 seconds)
  done (took 2.13046373 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064301567 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06214605 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06450887 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067436029 seconds)
  done (took 2.118992753 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078878044 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079443067 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073369913 seconds)
  done (took 2.092875067 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106405902 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094459284 seconds)
  done (took 2.060719721 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.074778723 seconds)
  done (took 1.939932211 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.082324391 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.089297918 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13809305 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.103585793 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137132137 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.121485213 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072622699 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074177409 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069149229 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068256574 seconds)
  done (took 2.817410774 seconds)
done (took 23.973848438 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074270473 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361657283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355695685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082210134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665160809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35251698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983341321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085616109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093390569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064818417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080268241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644647686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979202423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327339021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96598477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32530093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645379535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064412281 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063974888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065511212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973229608 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0659185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066898097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067195846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647000506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371400641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067628347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328291128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065165621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066538205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352646465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064725071 seconds)
  done (took 16.258151517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066280906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115791802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068758005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079498395 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065989856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065651293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066972657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06503922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104007869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064380605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080499609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064158224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068664103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065493049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083760092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064889799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066235941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066165099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067736696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066058601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083448291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0677672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068437683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068850738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068400936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080878468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068916284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067887023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068099638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069969295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071415512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069054103 seconds)
  done (took 4.189866225 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117892226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121401904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070500379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105247938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115414476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067190079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14543926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089769678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112570392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068042428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08366623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065468714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098859504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066151216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084493144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065278115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066542394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066101124 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064925198 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068219432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086188834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067679228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068270898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068295676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068881902 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082764919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068646453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068052656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068532656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070807145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071831461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069012527 seconds)
  done (took 4.487456073 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065660403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.06759004 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074840853 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076747772 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063393656 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064740683 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066473394 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063221092 seconds)
  done (took 2.431948104 seconds)
done (took 29.246669696 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074393406 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064441662 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067719381 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083397761 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070380758 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066900346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061243662 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07065018 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067345317 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.06716751 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068909359 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063464445 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067715198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062428005 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068560307 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062515751 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068588057 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066712803 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067276423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068659948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064877853 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067839961 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071247963 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067146559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067363027 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067047117 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071705887 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068694531 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063356518 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06579113 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06456075 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073291937 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069354771 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069203957 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063158358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062714885 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066709841 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065418996 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069135669 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071646237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064736416 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071473901 seconds)
  done (took 4.699717566 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080325623 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085703104 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.07819612 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078629929 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096247638 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07845046 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081558668 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07469516 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073328702 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081190376 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069871059 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07446792 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075434976 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068958504 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073750779 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070527552 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075591246 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070001853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075269918 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074461163 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083539958 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068346633 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075239804 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077711958 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072121163 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077176419 seconds)
  done (took 3.883086275 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068474663 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083075541 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087927363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149894098 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105902325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078060613 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07801289 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092029748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095672204 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064543292 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067898274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089929528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090799335 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070791904 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102910943 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081461062 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.074894318 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066096049 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070749999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096611889 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08671361 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081644028 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094782839 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08344049 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063572344 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072883875 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071020264 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078361324 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070855035 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075488242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06802325 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067297008 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06452938 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075497384 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067625408 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061729348 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.084551595 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075226992 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076896719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104660681 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072814699 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065356173 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092188481 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12435116 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063806437 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06649802 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067450063 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075351026 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064822697 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091370356 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081020733 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063638899 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08135027 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065151607 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065064153 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078733801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064890352 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065358218 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075083598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070371399 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084140873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.06813108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082523995 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063998616 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074641154 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065326488 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06499301 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062496755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096750733 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070514988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11177878 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064703176 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0616735 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075181843 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074239646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069650757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063350039 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080689631 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074690862 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067039084 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074727875 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065852096 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066565057 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097385621 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062378527 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061797626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062007097 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065888184 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06676131 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064045445 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076527556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063327154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067195484 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077985199 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063865324 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064044329 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066027908 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064553723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062803103 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073700017 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066947796 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064842675 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074978396 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064750791 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066906575 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077470185 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072250999 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063716597 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064432969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065619814 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064923154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067939442 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066784212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065319726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069703774 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070592283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069082576 seconds)
  done (took 10.63157226 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.153572095 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.145533815 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065369432 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140773208 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071516019 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068092763 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.141046597 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082375575 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064496442 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065290125 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063957566 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091196296 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.086852049 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097479548 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068502921 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064837463 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086669081 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095242156 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143351221 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138344375 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086635694 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070858505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067030121 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065539467 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065852248 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072321118 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079847978 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071425257 seconds)
  done (took 4.446305412 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071388895 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089197775 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068370247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075441429 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082501734 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064435645 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066221845 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065175049 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077922431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07239296 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066569914 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070866831 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068571112 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066489615 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065464466 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070780118 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07092727 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063451824 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067928946 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068451648 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073944515 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088143828 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068757815 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064108485 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066724971 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064132028 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071328598 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073379673 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06396565 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.077383409 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061635821 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068544207 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077352689 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065238035 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063939785 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064765868 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064270852 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06431488 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06504551 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062498101 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062148078 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068851676 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063318911 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.069709281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078040058 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071089561 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065347534 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066653168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066320799 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061085394 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066976112 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067293757 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067003744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071654269 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067621619 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066657837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068235949 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088280011 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070416894 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063338754 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063684788 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062548033 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065335861 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072189804 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080201698 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065151541 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063331766 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064168768 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068960983 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07799146 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063550721 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06897052 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061328782 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0644015 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065815012 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066748594 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0649575 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062706051 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063619 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064370518 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064734762 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063734112 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064148562 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066978568 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062179014 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062722765 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065008888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065507389 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.070581797 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062986433 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066710492 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065010707 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063080236 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06678605 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069229593 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067174092 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077797919 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072645881 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064846424 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062058594 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077789763 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065771674 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0636705 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070095614 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067986089 seconds)
  done (took 9.078749445 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086274284 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06660397 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083382238 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089039008 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074036958 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069686076 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077084777 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065234199 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079930983 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063476963 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073103429 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063389617 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077803508 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073388475 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065800399 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074318358 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066852231 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083187994 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077957766 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062908423 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072247138 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075576857 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075844351 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080683808 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079937608 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081159043 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075815229 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066927791 seconds)
  done (took 4.024343237 seconds)
done (took 38.644403949 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.957554015 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.131159283 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.96170716 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.15614924 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.171926155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.981299454 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.104380868 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.957174022 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.175770989 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.994122254 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.300309252 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.411176441 seconds)
done (took 69.261841 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.987639737 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.120269033 seconds)
    (2/2) benchmarking "String"...
    done (took 2.184232737 seconds)
  done (took 6.198804563 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.101792603 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.613872572 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.223345955 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.958874896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.963160262 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.387796713 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.720995593 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.394162233 seconds)
  done (took 32.158059075 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.147860086 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.179327678 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.664681389 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.694320177 seconds)
  done (took 16.623169902 seconds)
done (took 67.056140328 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.999408726 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.960153093 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.024447406 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.99563002 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.963800296 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.963562989 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.963723186 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.962421224 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.961132812 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.012119751 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.960177817 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.965463836 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.962000774 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.970883007 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.553720114 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.011971392 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.971344264 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.973251242 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.970899615 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.970364355 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.963388191 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.962057352 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.452896516 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.117363133 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.582884222 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.150823842 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.409293437 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.372856094 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.975240257 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.959899721 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.163239549 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.371043849 seconds)
  done (took 210.493928255 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.961697581 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.016236662 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.140750584 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.981898806 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.389891032 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.140457108 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.06979597 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.44717245 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.967212489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.974177376 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.080467146 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.961539688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.086395785 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.94567702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.99816375 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.980359287 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.201009562 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.103829467 seconds)
    (19/36) benchmarking "dotc"...
    done (took 3.001239069 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.115646809 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.977453554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.884451098 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.865787641 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.06143677 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.981629687 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.993055981 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.968162791 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.977349649 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.151853508 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.172672252 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.98464099 seconds)
    (32/36) benchmarking "symm!"...
    done (took 7.006509045 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.164744564 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.832961576 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.96924144 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.98951039 seconds)
  done (took 176.445799361 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.150203508 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.968554569 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.96117213 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.017149762 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.086334717 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.964484418 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.638256143 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.971994539 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.615489415 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.966697396 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.962090405 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.96304094 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.963002191 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.97401252 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.060865609 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.965595795 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.978385624 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.96477194 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.989179309 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.963172774 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.963035546 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.9638819 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.962617458 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.963458029 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.963420675 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.962674087 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.257007257 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.216231038 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.965126384 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.964165847 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.508997312 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.979024374 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.030406715 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.965777398 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.055417067 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.020713108 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.091471456 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.965923447 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.182331793 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.079891474 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.969054804 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.966706888 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.031877423 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.980659501 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.967700481 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.968933213 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.972661261 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.031187606 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.226716173 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.968214157 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.089182254 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.967780308 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.458331852 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.967557672 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.966986704 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.9684134 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.580082817 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.969464585 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.966721632 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.973188158 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.973064749 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.96753114 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.969065762 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.352743832 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.967519138 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.03839327 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.066728165 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.282164597 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.977129716 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.692789445 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.154255406 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.967674494 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.970156599 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.969513273 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.972542108 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.970275772 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.969373624 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.973198254 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.091250159 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.978873044 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.098380511 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.053692699 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.091412906 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.973359137 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.980240377 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.799051155 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.042770957 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.0073811 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.803588461 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.973744024 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.34182662 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.758533173 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.973840792 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.971485042 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.983861997 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.972187426 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.971961643 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.9767287 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.050151501 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.971782683 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.093497499 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.696190514 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.369210539 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.964853773 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.958731464 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.967170278 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.041491771 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.082782662 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.961880273 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.024015541 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.964586503 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.960599084 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.959909606 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.098170374 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.9606181 seconds)
  done (took 423.151863283 seconds)
done (took 814.196180251 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.536540745 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.510300546 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.604602779 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.525655474 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.500632723 seconds)
  done (took 14.571944249 seconds)
done (took 16.466381807 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.972216589 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.966626934 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.016206697 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.043122794 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.975082432 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.97671119 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.038496087 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.978555108 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.008791394 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.013789478 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.041577253 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.042872522 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.983473762 seconds)
  done (took 27.952714034 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.968233665 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.100306707 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.178008343 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.999674047 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.96930959 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.180979461 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.023714628 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.098376237 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.096448565 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.180410763 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.18373191 seconds)
  done (took 24.876638164 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.968870572 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.101265937 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.180704212 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.002737137 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.969695364 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.178299764 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.030741717 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.095027148 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.109764178 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.178779169 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.187018544 seconds)
  done (took 24.906115714 seconds)
done (took 79.631675139 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.963081399 seconds)
  done (took 3.858879821 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.980403265 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.109036123 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.963066126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.963323734 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.963646494 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.964385157 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.964076528 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.963202432 seconds)
  done (took 17.768026505 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.963871985 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.963954178 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.964660399 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.964525476 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.964866472 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.964411491 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.964718568 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.965126222 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.964683592 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.965121244 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.966010429 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.964995186 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.965700353 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.964880075 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.965275245 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.965485599 seconds)
  done (took 33.336266059 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.968768404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.965197452 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.965839662 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.965940123 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.964785577 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.965765944 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.966128042 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.964967513 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.966344245 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.965026051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.965431871 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.965942279 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.965275163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.965800988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.96536848 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.966357315 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.966850277 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.96556401 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.970936834 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.965545297 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.966867198 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.967388588 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.966240675 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.966707061 seconds)
  done (took 49.088448325 seconds)
done (took 105.956703211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.65267448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.676045195 seconds)
  done (took 10.228237173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.967395343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.967549057 seconds)
  done (took 5.838001182 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.969039766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.966697374 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.967327116 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.96776362 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.966811919 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.967467537 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.967073064 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.968070777 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.967129186 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.967672988 seconds)
  done (took 21.575568171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.968449644 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.966946864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.96728431 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.9677837 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.96710133 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.967321707 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.967207535 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.967188512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.967514004 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.967859784 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.968378757 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.968272997 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.967814168 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.968299324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.968261357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.968489816 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.968981597 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.968204442 seconds)
  done (took 37.321983241 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.968627133 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.970056189 seconds)
  done (took 5.839663533 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.968406097 seconds)
    (2/7) benchmarking "second"...
    done (took 1.969502736 seconds)
    (3/7) benchmarking "month"...
    done (took 1.969391576 seconds)
    (4/7) benchmarking "year"...
    done (took 1.968584204 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.968544582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.969525634 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.969484065 seconds)
  done (took 15.684933257 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.969972493 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.125353252 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.178011103 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.814329957 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.971393423 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.972030046 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.254882446 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.973274427 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.974037438 seconds)
  done (took 22.135529894 seconds)
done (took 120.525439901 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.780139528 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.970402996 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.227894187 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.026892719 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.005547694 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.30768516 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 7.001495018 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.618195158 seconds)
done (took 43.840985248 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.022655711 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.968583834 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.009973822 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.01212836 seconds)
  done (took 22.89249155 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.967985832 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.286464516 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.990622114 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.788357199 seconds)
  done (took 22.953373281 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.348798487 seconds)
    (2/2) benchmarking "read"...
    done (took 2.314522289 seconds)
  done (took 6.571176249 seconds)
done (took 61.344552584 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.971211099 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.972926673 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.971099438 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.97035864 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.970823455 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.970981691 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.971055881 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.971484165 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.971887115 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.97049371 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.971158077 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.970657588 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.971457027 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.971014357 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.970726664 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.971332574 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.971917491 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.970847906 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.971361758 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.971001577 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.972001671 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.97152131 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.971615526 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.97145139 seconds)
  done (took 49.215237606 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.971337638 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.972495029 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.971557945 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.971730423 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.972210322 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.972704695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.971683746 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.972192788 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.972329909 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.971885314 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.972205951 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.972758698 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.9714491 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.973341534 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.97161849 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.971470879 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.972062416 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.972802374 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.972312285 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.973289725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.973246091 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.973205775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.973953189 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.973162983 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.972694031 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.973099706 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.973409745 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.971659156 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.973013299 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.973399862 seconds)
  done (took 61.079675294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.972864168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.973716969 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.973972588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.973395913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.973980454 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.974865586 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.973854519 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.975151165 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.973702578 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.974329031 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.973842654 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.973648174 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.973780801 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.974029228 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.97440549 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.97421154 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.974095559 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.974632871 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.974104726 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.974553529 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.974280416 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.974903577 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.974783962 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.975223903 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.974933583 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.974991238 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.974621989 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.975971046 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.975277467 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.974610542 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.97501861 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.975256142 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.974736323 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.974980734 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.975135763 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.974144019 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.975128642 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.975249319 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.974737037 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.974952996 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.976432089 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.97622949 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.97603932 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.975542724 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.976479945 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.976821748 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.976071896 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.976147653 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.977183715 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.977256485 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.976645367 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.975495173 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.976117444 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.977815984 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.975945457 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.976814961 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.977610189 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.977670383 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.976913997 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.97694915 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.976741526 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.977612644 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.976964568 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.97705077 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.976660993 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.976498569 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.976251342 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.977368526 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.97741288 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.977172549 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.977897147 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.976863374 seconds)
  done (took 144.146403364 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.977278397 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.976969256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.978437726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.977128697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.978158349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.977837236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.978066829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.97684195 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.977160999 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.977088141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.978338193 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.977596829 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.977954813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.97760714 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.978336763 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.978368104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.978738052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.978584563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.978375274 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.979206916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.979055422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.979153863 seconds)
  done (took 45.427125346 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.978497572 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.978441343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.978896038 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.979206065 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.979297951 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.978227583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.978854731 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.978616128 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.978671841 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.978994242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.97897896 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.978513733 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.979476757 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.97745843 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.978574974 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.979283482 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.978238387 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.979567597 seconds)
  done (took 37.528792448 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.979240349 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.979853471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.978709194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.980128699 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.980413944 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.979410797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.979633698 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.979221888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.979885864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.980730225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.98014314 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.979691674 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.980506761 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.979523952 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.982399514 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.981447324 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.979394758 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.979683948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.980854811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.979942983 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.980277872 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.980116176 seconds)
  done (took 45.473914662 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.979990967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.980464373 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.981136498 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.981486078 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.981046807 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.980613706 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.980805993 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.981390395 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.980745554 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.981685388 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.982195812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.982681258 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.981372878 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.981678836 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.981148227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.981429186 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.980649669 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.984430851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.983423624 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.982512311 seconds)
  done (took 41.544475266 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.983119118 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.982392043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.982445374 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.982537504 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.981725455 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.983138909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.98165516 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.982196506 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.981321859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.982441153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.981448548 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.982493695 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.982538546 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.98255904 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.982299716 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.982770151 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.982233213 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.983187735 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.983037146 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.981996397 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.982342961 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.982455257 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.982476587 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.982023864 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.982520012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.981980205 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.982764358 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.982863844 seconds)
  done (took 57.421880658 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.983549848 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.983034949 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.983343939 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.984038108 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.982534191 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.983093895 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.983333442 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.983949542 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.983522313 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.984323664 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.983946008 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.982644362 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.983350937 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.984201316 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.983967146 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.984652662 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.984190046 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.984599626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.984580481 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.983977146 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.984213171 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.98483772 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.984455608 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.984110933 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.984278386 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.984539659 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.984490593 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.985415319 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.98428903 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.983900692 seconds)
  done (took 61.436096844 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.004031194 seconds)
    (2/2) benchmarking "in"...
    done (took 2.005897037 seconds)
  done (took 5.926093726 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.984876869 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.985087847 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.985768642 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.984810341 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.985717676 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.986007389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.985843411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.984886956 seconds)
  done (took 17.799525632 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.986501541 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.988319493 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.985934179 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.985544035 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.984978752 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.993800962 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.986530467 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.987204911 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.987442967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.986495526 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.990667974 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.990166596 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.993531704 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.990170121 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.987459389 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.986227138 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.988131852 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.988621459 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.987799081 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.986247347 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.988800686 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.986060343 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.986793157 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.986416958 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.98782975 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.989142364 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.997576878 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.987623326 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.98814934 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.988169018 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.994805922 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.989140819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.987675551 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.987834383 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.987206777 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.989096989 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.994362567 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.987587214 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.987187472 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.987489146 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.989443249 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.989087121 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.991158871 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.995962196 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.988582671 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.98815626 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.988687383 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.988367624 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.987894632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.991348228 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.995716814 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.987892472 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.988468607 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.989254613 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.990217634 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.987707693 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.988676255 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.990637746 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.994378276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.994979166 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.991594656 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.008597261 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.997497981 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.98843083 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.988238332 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.999120301 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.012908373 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.990983231 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.990747471 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.990257899 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.997393306 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.990866814 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.991068671 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.990628692 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.003268314 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.997968722 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.989537421 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.990567628 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.99105968 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.98970308 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.991539611 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.98962128 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.991576716 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.990156634 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.999755602 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.013299762 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.989732399 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.989238312 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.991800045 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.991114856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.995014743 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.992920403 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.990209282 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.9909401 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.99123815 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.993461576 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.990234459 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.990333126 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.990850646 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.999930403 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.991996299 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.992686467 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.994323172 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.999101038 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.991410516 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.991278491 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.991480577 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.991484474 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.998667495 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.990732447 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.990678215 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.992675414 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.993605696 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.9950832 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.992279942 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.995365449 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.999647349 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.000284923 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.993768195 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.995423849 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.996344099 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.994231433 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.001010657 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.015668441 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.992552564 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.99594104 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.997368643 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 2.002992812 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.996715867 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.993313999 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.995150693 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.993588169 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.993650196 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.996198847 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.993012515 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.992952154 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.993326872 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.992479557 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.993344543 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.992199292 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.994710055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.995275649 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.995882528 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.99320009 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.996533464 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.992916455 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.997104188 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.000363531 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.99420181 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.993975245 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.994775862 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.995736032 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.995519993 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.994960611 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.996009678 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.994356558 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.993785045 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.994764344 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.99705008 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.994235261 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.994254528 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.994840426 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.999541733 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.993876892 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.994294334 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.995246206 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.993665182 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.995193497 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.995817771 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.994970812 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.997205521 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.994561848 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.9992051 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.99691516 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.99666528 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.995782788 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.996427022 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.995098037 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.998406144 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 2.006667699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.999411854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.005052862 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.996309957 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.003707043 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.996626629 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.997497621 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.996419878 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.995781601 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.996661481 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.997534416 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.996620828 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.999163138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.01677958 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 2.006853069 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.997835838 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.997044809 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.001452999 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.000714621 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.003033609 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.997282095 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.997043592 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.99886689 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.995862422 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.996228624 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.997309537 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.999747989 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.99803351 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.996962983 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 2.001410465 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.997383313 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.997802967 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.997610594 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.997948689 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.998618259 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.997730206 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.996384788 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.997876438 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.998135527 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.006609599 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.001667554 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.99856748 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.998738226 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.000215142 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.998795225 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.999540086 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.998967434 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 2.001723998 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.997805371 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.00039772 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.006793461 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.998611049 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.998353154 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.998011219 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.998756506 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.999949298 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.000335222 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.001201319 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 2.008013975 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 2.001229717 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.000000258 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.004553771 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.999316759 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 2.000992273 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.99969819 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.999712286 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.998235231 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 2.000685467 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.999190373 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.000620632 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.007730658 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.000955289 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.999827104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.999515515 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.001579201 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.000665926 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 2.001177333 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.99934839 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.003281927 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.008959274 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.006081847 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.002219945 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.004117306 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 2.002326208 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.002469179 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.008195706 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.001653549 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.013718499 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.009825549 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.001221078 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.001386442 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.000540013 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.003674129 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.00166505 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.00141444 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.008181553 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.003311785 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.001926416 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.005870664 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.001747781 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.002019482 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.008437961 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.003593855 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 2.004624381 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.003300898 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.00243591 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.002546505 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.001625067 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.003781815 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.001151093 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.003399805 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.006443735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.002643467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.002247403 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.002261343 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 2.011473726 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.003068954 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.002313631 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.010691307 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.003925929 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.002201137 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.002868734 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.002780509 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.002664738 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.003439459 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.002525766 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.004510345 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.001873235 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.00604657 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.012622065 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.008488042 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.013715391 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.00409295 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.013853703 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.002749064 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.00332825 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.002646492 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.007063223 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.010238287 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.002551043 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.003187194 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.011881706 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.005995732 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.003820613 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.008756254 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.006966629 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.002673082 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.003776971 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.005084358 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.010590499 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 2.008031672 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.005608561 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.003720503 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.005577418 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.003669527 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 2.008791671 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.005467071 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.004567932 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.00404857 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.004085349 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.004262335 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.003830616 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.003678985 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.003965544 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.00561354 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.005441709 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.013326525 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.004639255 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.005644766 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.009620815 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.005415244 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.013447869 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.005048901 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.005136606 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.005833127 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.007154679 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.00807601 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.005712939 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.005521726 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.005433205 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.005671415 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.006280655 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 2.017481614 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 2.013478046 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.009650764 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.007272808 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.006753807 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.00645249 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.015188701 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.031205427 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.007990413 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.008538935 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.01115746 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 2.013294111 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.009464396 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.012125891 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.010265081 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.014715182 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.008328875 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.006568832 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.01050061 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.02042097 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.006897459 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.008269367 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.007834183 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.012238404 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.008859011 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.007808593 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.007766816 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.010686644 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.008608588 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.01913842 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.00820118 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.009049267 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.007337068 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.009343155 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.008021476 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.008542175 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.008621372 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.008713644 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.007505097 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.007652433 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.009469066 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.012626522 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.00804669 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.012071638 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.017745469 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.007779278 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.008471714 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.010444577 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.007721181 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.011047856 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.007869619 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.007772676 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.010466809 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.009209708 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.011179357 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.012366841 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.017534704 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.011032274 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.009024335 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.009996035 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 2.012881305 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.008281175 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.008702894 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.011171817 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.018636146 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.013656729 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.020462131 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.019681104 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.009668421 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.011094228 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.018399818 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 2.017758963 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.009363823 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.010498723 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.010835917 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.011955171 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.012633061 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.010544728 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.010926012 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.010035202 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.016068694 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.010390459 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.010167826 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.010570323 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.012435334 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.011881856 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.012369134 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.017418048 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.010731381 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.012112702 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.009391273 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.011748019 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.011061946 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.012417961 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.01016345 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.011514674 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 2.012681539 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.012533 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.015168733 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.012236308 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.011015168 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.012717294 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.012107625 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.01158872 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.011589626 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.011825631 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.012036057 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.014649922 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.018993203 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.012954482 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.013034948 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.012566225 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.016332387 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.012241462 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.01217995 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.011236739 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.012641588 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.020784559 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.014621933 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.012059475 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.012532366 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.013921555 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.017217203 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.014134833 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.01756742 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.013465904 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.011780064 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.01296993 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.015690071 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.022830234 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.016955336 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.015771501 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.021665809 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.016999003 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 2.015818665 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.013289528 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.013937635 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.013752305 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.014392997 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.016874844 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.014525879 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.015445778 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.014406393 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.015689095 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.014319766 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 2.015244746 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.013956485 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.015044937 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.018142854 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.024062028 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.023223327 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.014971095 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 2.015604448 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.013924354 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.016970814 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.025976535 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.014639745 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.01484202 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.015436136 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.016174748 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.015759118 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.02182932 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.023012583 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.018926198 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.015376033 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.019901863 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.033270293 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 2.017360244 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.025969695 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.046959008 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.017422849 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.015729081 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.015837191 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.016221524 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.015959376 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.019491934 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.016002802 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 2.023056257 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.016404532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.016424833 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.0243943 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.017267699 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.017067412 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.015892857 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.017820029 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 2.022353436 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.016758599 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 2.022954152 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.016978342 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.017210518 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.016616044 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.018780979 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.017487475 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.017814821 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.017490154 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.018898478 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.01729247 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.016436859 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 2.025816051 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.016787934 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.018684661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.029938948 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.028506878 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.016501606 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.018385194 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.01663111 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.02318663 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 2.019747079 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.017585288 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.020877284 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.026564619 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.020902854 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.025771055 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.019773 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.01945234 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.019043605 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.019082669 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.017934445 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.032366425 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 2.029700962 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.018533821 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.018015572 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.024951444 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.018730549 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 2.024628071 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.024452551 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.018507816 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 2.019695888 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.018933352 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.019393908 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.019334137 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.020571058 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.022715332 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.027175624 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.019052978 seconds)
  done (took 1196.809874821 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.018490113 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.019434052 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.020102274 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.019644769 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.019286375 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.019974662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.019987977 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.020397185 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.020988468 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.020322655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.020602392 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.019528957 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.020469495 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.02116483 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.018860981 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.020826841 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.020542788 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.02081287 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.02065015 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.02060787 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.019933076 seconds)
  done (took 44.374495767 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.020187296 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.02138457 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.020553605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.020669773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.020178579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.021529558 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.02179002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.020454193 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.021156608 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.021703087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.02016778 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.021317425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.021453937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.021382119 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.021650011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.02178031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.021290622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.021102768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.022094416 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.021493774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.021819063 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.021463024 seconds)
  done (took 46.419109198 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.02119468 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.021851187 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.021785578 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.022536595 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.022427228 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.021370098 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.023387 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.023582322 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.022099034 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.023161637 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.028907416 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.030699393 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.022325633 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.025799116 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.022853836 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.022557747 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.169597159 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.022281762 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.021633505 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.022457751 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.022840608 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.029757466 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.022416736 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.022763631 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.022196557 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.023129713 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.023698186 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.023188414 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.024854262 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.025141579 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.027705783 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.024271556 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.024663349 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.026054527 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.023339356 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.024505632 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.027296158 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.023287176 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.024732894 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.02487896 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.034089385 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.04945594 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.025506038 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.023857156 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.031556974 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.02473134 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.024387114 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.026563545 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.03358823 seconds)
  done (took 101.331461384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.024432526 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.024439903 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.02696672 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.02557163 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.024759097 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.025627266 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.024748962 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.023641875 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.025357212 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.025237996 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.024925918 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.025690251 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.025992215 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.025272149 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.024856462 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.026520598 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.025934789 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.025695148 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.025451211 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.025592717 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.02648508 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.026542773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.027785995 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.027334851 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.026346891 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.026924793 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.026137247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.026957867 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.026737007 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.026835314 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.026072839 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.026475965 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.026597536 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.02597608 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.026711408 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.025766079 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.025611928 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.026140734 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.026948476 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.026352768 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.027793614 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.02727244 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.02793886 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.027161305 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.02720612 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.026872671 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.026338667 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.026558238 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.026288677 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.026943225 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.026037067 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.026958147 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.026971721 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.027372789 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.027167321 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.027292636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.030012984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.027943342 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.027553685 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.028154216 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.02841307 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.028383331 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.027680552 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.028052428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.028465404 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.029389611 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.028264153 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.026967089 seconds)
  done (took 139.767804365 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.028178628 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.026875862 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.027933266 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.028261205 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.027884937 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.028183045 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.028152014 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.028752943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.028684091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.028838903 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.028455384 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.03007867 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.027576336 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.028588521 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.028312971 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.029058788 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.029211568 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.028980927 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.029620745 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.029038619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.030847886 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.029556245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.029025419 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.029038804 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.02923506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.029695346 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.029379399 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.028744752 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.029358782 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.029232662 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.030336232 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.028632542 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.028778885 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.030679482 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.029141069 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.029444487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.030213969 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.030395482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.030944504 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.029715002 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.030366373 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.030046155 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.030388095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.029558905 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.030961065 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.029605739 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.030019428 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.0304772 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.031428987 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.030863859 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.030501433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.029576721 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.030209434 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.031156849 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.030883561 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.031423308 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.03036627 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.031034013 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.030955334 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.030706226 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.031718097 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.032492022 seconds)
  done (took 127.799739099 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.031824841 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.031499031 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.030854295 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.031314666 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.032441987 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.031335349 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.032139916 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.033017891 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.032051486 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.03221685 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.032846761 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.032074795 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.033540445 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.031803456 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.032296917 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.032631932 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.032586208 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.033107281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.032955631 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.032954787 seconds)
  done (took 42.608187383 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.03222997 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.031857352 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.033230844 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.0321634 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.034146974 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.032511257 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.033734525 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.032623808 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.032595489 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.033662626 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.034385346 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.033193605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.033643029 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.032904383 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.033043167 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.033559277 seconds)
  done (took 34.492819055 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.032913226 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.033632075 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.032098157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.032887201 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.03306185 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.033857821 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.034047305 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.034450784 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.033973052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.034158575 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.033647283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.035222359 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.033839377 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.03331402 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.035271276 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.034584468 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.035731035 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.035692202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.03582327 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.035129141 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.035932126 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.035637941 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.034813019 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.03522548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.035077827 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.03591632 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.034900283 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.03502347 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.03544701 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.036152225 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.035391691 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.035715358 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.035586628 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.036403857 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.034312836 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.035522119 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.03633444 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.03576147 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.035888785 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.036100028 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.035933094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.035878033 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.036217289 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.035388601 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.036007959 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.035397745 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.036180485 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.036303218 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.037551289 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.035496531 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.036411708 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.035096247 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.036889582 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.036860124 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.037249843 seconds)
  done (took 113.903373176 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.037055181 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.036763209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.037464734 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.037091478 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.03723328 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.036252815 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.036954139 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.037350858 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.03736493 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.037499596 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.037773893 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.037477821 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.038146896 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.037089237 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.037695975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.037414242 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.037482706 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.038517649 seconds)
  done (took 38.639877512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.037295443 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.037537188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.0391796 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.037186099 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.037356893 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.03829425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.038910257 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.03836334 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.038214197 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.037987952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.037654004 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.038387368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.038420772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.038486194 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.038591046 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.038275296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.038405588 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.03904578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.037783499 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.03817267 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.038832386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.039357439 seconds)
  done (took 46.810499041 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.037560718 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.037810269 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.052125331 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.059881367 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.059215671 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.073318019 seconds)
  done (took 14.288123266 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.039805058 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.039644125 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.039445803 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.039355876 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.040147299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.039200528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.038852069 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.039967439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.039800155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.039604984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.039963819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.040571149 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.04039834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.040525261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.039947399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.040651421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.04034824 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.040182149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.04044591 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.040127855 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.04045102 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.040341381 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.039523662 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.04012331 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.040142914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.039806685 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.040373596 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.041370675 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.040672236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.041045239 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.040233994 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.04161499 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.040050439 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.040259129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.041240368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.039815736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.041542037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.041749778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.040443455 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.041108918 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.041079205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.042364092 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.04157538 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.041986885 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.041377324 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.041502057 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.041743421 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.04172561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.042483457 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.043314423 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.041665901 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.041799753 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.041791388 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.041121961 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.043057118 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.042484559 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.042739284 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.042579362 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.042321667 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.043787102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.043967929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.043302031 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.042918738 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.04381939 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.043347865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.042554937 seconds)
  done (took 136.686052391 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.042876708 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.043186975 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.04247949 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.044043982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.043189987 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.042817827 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.043380109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.043146468 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.043209017 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.043408194 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.042320725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.043468061 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.043475293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.044236669 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.044083673 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.043561278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.043517239 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.044372988 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.042871259 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.043440082 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.043679077 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.044136057 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.043545124 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.043850322 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.044148208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.044151686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.044610436 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.044470598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.043689738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.04429188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.044944392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.045520835 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.045314223 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.044646891 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.04494927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045121391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.045457558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.04546354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045577352 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.045846406 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.044032756 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.045188113 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.044770867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045032708 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.045479345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.045085067 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.044306273 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045409154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.045178695 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.04559433 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.048243849 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045980032 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.045352828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.045928576 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.044627864 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.046196684 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.04599739 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.045842123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.04638068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.046374579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.045827949 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.045660812 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.046208608 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.04601391 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.045972955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.047077063 seconds)
  done (took 136.924246935 seconds)
done (took 2789.767869111 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.10310205 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.186600971 seconds)
  done (took 16.264594505 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.210156174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.163714421 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.048612845 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.055582829 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.048663156 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.063848676 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.06480658 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.050595092 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.049325371 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.049148183 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.049439192 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.238756089 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.053011561 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.048236828 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.048674193 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.140062599 seconds)
  done (took 55.54671701 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.053267832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.053388216 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.064340454 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.054599354 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.052306362 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.063775347 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.077194852 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.051332216 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.107978783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.061188162 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.167767628 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.057986559 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.04665616 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.117765958 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.060613279 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.059854926 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.142979912 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.124628834 seconds)
  done (took 39.398955246 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.125666952 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.050054273 seconds)
  done (took 11.153894749 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.058383144 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.073527777 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.065162521 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.063898319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.060435143 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.048485788 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.070577077 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.059083131 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.044213973 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.036696264 seconds)
  done (took 72.556497832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.039903317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.037975525 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.03863049 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.033476 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.03162156 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.038279703 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.034742146 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.04034696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.74798357 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.074160534 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.043758488 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.043164533 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.033963212 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.035852727 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.034229599 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.060453355 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.142179782 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.032929259 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.032563721 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.040659881 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.035179246 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.084518511 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.049111548 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.037839509 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.068978839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.741736486 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.046139353 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.039585847 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.143386987 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.032831753 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.034817706 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.245428941 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.038226519 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.499166944 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.326241383 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.041143516 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.04607493 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.042230936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.031880721 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.146611216 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.036708156 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.039746645 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.995740801 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.298922871 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.136821466 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.081140672 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.397422935 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.038869627 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.034642129 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.068344118 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.038567324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.035966378 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.051644233 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.552978963 seconds)
  done (took 142.120963207 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.033128033 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.383837525 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.198423426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.033830102 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316409204 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.239192857 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.033707165 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.07877865 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.033580938 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263510586 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.285151941 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.136269787 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.033471291 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.033748795 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.035854061 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.031679377 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178685272 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.102266743 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.036467897 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.032569351 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.05946912 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272641861 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.154677517 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.036415487 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.059673129 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.239519575 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.154541009 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.135479276 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.826185179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.031895598 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.094534879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.035686316 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.033700959 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.032458429 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.186462985 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.126334312 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116886134 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.036397498 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.032917769 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.032130281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.777066523 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.231574389 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.130242928 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.16043276 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.285256874 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.238482491 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.810979266 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.033248119 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.763469274 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.195912641 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.261136029 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.266654514 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.154750253 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.037199547 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.375957035 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.033215275 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.033616121 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.279057077 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255141582 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.132893833 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.037481466 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.034122812 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.033692538 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322520223 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.037329828 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.129806802 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.038674878 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.033923228 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.131456628 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.133928055 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264061329 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.247957355 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.064704817 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.371972192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.542412056 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.279457482 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.099549112 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285073597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.037351969 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.034578036 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.112492678 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.870695836 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.288488257 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31540472 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.278882907 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.07060147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.753771125 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.035558932 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.259454741 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.256233869 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284952358 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285312604 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.276559762 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.361231303 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.035516614 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.036215141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.265751912 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.15505973 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.039473832 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.377935221 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.266717191 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.579348336 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.062191936 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340777709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.168030445 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.04089624 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.67000359 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.036855588 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.257958209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.076248978 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.03861413 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.037890877 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.254063323 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.008598485 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.037038977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.6838414 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.097776092 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.040987199 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272552825 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.035034968 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292878227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.04196814 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260018907 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.138723624 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057886576 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.201943857 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.280274528 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.030795174 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274215639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264274899 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.142919925 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.246334292 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.658466783 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.028188593 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.311891349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.029825213 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.028465647 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.194859089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.035275333 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.170906604 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.035856794 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307935385 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.054110775 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.262088231 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.028770844 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.282033048 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.057240829 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.074593146 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.028446946 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.155104049 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.028811745 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.876226809 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.181379917 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.028174556 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.027017986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.574756172 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.027649874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.172444239 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.250151303 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.050421698 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.098563906 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.687308355 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.027018435 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103443458 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047436137 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.409435614 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.027677944 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.275861806 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.028570832 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.024751623 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.024963664 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310363447 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.208403001 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.029948036 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.0281489 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.926150044 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.024096978 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.028148123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.204455479 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.396798778 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.023507692 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.224860982 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.026904236 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155679081 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.028618242 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.089909581 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.356321328 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.02226099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.023025151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.024633248 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.023395341 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.02495045 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.229853347 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.046756575 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.550062458 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.160503842 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.288035607 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.329951238 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261338186 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.068390542 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.026065383 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.274421416 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.030188517 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.083734091 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.031527623 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03935351 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250231815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.028960701 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.225669584 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296500253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.876460661 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.066823192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.027101891 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.020775072 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.021664472 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.157954487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.113646278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.024143679 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.024847424 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.135945256 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.140816075 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.235548666 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 7.023355799 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.152524378 seconds)
  done (took 939.552836392 seconds)
done (took 1278.573189039 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.021922163 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.024700806 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.02369927 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.029807449 seconds)
  done (took 30.0518391 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.024268213 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.026819205 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.023222168 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.022677962 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.021614091 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.021849408 seconds)
  done (took 14.091813919 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.104396989 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.023505107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.024921567 seconds)
  done (took 22.107181917 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.097680335 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.444619735 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.164518735 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.45787753 seconds)
  done (took 11.115744885 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.02300676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.021922765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.024577113 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.021866358 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.022447853 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.023441518 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.022672967 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.026350461 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.025630429 seconds)
  done (took 20.164752205 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.722554895 seconds)
done (took 104.20758622 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.328680679 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.241711348 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.998278995 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.098628352 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.116297423 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.238659901 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.026010018 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.861347474 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.328522595 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.02716865 seconds)
    (11/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.099572732 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.037232212 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.146538605 seconds)
    (14/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.098060701 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.100302049 seconds)
    (16/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.279010156 seconds)
    (17/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.284810228 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.40707698 seconds)
    (19/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.467436957 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.173521497 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.032623903 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.156043564 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.495896374 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.029089032 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.048469208 seconds)
    (26/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.811357463 seconds)
    (27/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.11586316 seconds)
    (28/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.159777542 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.119370063 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.300668658 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.809433237 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.198110412 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 4.993354575 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.259815653 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.122581881 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.447698331 seconds)
    (37/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.397476937 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.933090433 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.190795035 seconds)
    (40/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.903483207 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.192724313 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.022827668 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.199759397 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.621739408 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.382059375 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.128515296 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.229078578 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.442896566 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.241442085 seconds)
    (50/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.124454498 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.021982011 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.430531713 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.657034336 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.027364953 seconds)
    (55/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.108748054 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.681195223 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.033543093 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.373262667 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.203850595 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.128702634 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.158307077 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.102104147 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.175964011 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.044913559 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.147061828 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.023526596 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.13135393 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.050150106 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.538360582 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.31774495 seconds)
    (71/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.129767483 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.031101098 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.879158006 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.1598519 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.401940365 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.121945757 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.029633464 seconds)
    (78/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.129450729 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.485127607 seconds)
    (80/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.15075849 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.042311876 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.190808666 seconds)
    (83/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.826413432 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.193034758 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.204321343 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.41913593 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.055601579 seconds)
    (88/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.057736571 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.152079368 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.021977397 seconds)
    (91/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.723892878 seconds)
    (92/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.362183197 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.896663311 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.355478415 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.343949122 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.17213422 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.160646957 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.151541535 seconds)
    (99/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.023565261 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.224301595 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.051411813 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.88880959 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.051298671 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.040119958 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.02225891 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.024093811 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.050821459 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.022112634 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.20631502 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.027570247 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.922012092 seconds)
    (112/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.204695803 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.601171618 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.464298424 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.622272726 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.641062814 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.116440495 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.133102873 seconds)
    (119/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.154423874 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.024033118 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.40966866 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.047487621 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.02396781 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.969068928 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.028107734 seconds)
    (126/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.402283411 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.57807257 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.450322596 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.026040593 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.66777813 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.09691638 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.055991524 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.025259541 seconds)
    (134/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.432433004 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.026738879 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.103887986 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.136923031 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.811414699 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.109958692 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.346091012 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.319810194 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.136841999 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.322629396 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.334966856 seconds)
    (145/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.335496751 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.426714015 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.27802673 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.999113308 seconds)
    (149/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.268589647 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.320273691 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.059020403 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.40586886 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.088972366 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.026856909 seconds)
    (155/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.241581436 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.036861191 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.028596906 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.358980068 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.047304671 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.35800906 seconds)
    (161/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.208744929 seconds)
    (162/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.50789038 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.349534473 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.33864392 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.031683386 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.807857016 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.128100147 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.819719164 seconds)
    (169/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.784491235 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.333020091 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.040552848 seconds)
    (172/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.229903037 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.027680771 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.340431563 seconds)
    (175/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.42834747 seconds)
    (176/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.232795145 seconds)
    (177/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.140931779 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.054349881 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.67694698 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.30436618 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.227475527 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.13353015 seconds)
    (183/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.164301717 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.91764525 seconds)
    (185/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.334689572 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.269494309 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.036433556 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.610768168 seconds)
    (189/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.150294824 seconds)
    (190/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.108087697 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.032719228 seconds)
    (192/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 3.906662902 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.428396782 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.095347574 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.342930759 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.154226967 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.682219075 seconds)
    (198/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.068742319 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.395766199 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 5.74467929 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.833067418 seconds)
    (202/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.831843841 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.031553022 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.073136488 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.215772908 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.103142565 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.154559929 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.344064867 seconds)
    (209/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.512562953 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.270585624 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.802730116 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.037571242 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.110691494 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.424014393 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.095763126 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.031099471 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.049007154 seconds)
    (218/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.78701534 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.751196346 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.340613968 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.043152776 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.036876988 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.04692495 seconds)
    (224/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.123297643 seconds)
    (225/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.051824587 seconds)
    (226/309) benchmarking ("sort", Float32, false)...
    done (took 5.694968225 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.202616566 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.526076265 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.293080593 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.220415617 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.036704384 seconds)
    (232/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.124998598 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.055254687 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.118626916 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.820053104 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.41667511 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.209304951 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.472174895 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.17743416 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.130912387 seconds)
    (241/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.525976879 seconds)
    (242/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.300056239 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.83499845 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.172720582 seconds)
    (245/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.220403851 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.037965325 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.072237595 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.131830878 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.902817333 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.334372683 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.048815238 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.126812203 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.364437532 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.483459547 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.610043176 seconds)
    (256/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.202814824 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.032208356 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 3.794694791 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.298015084 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.334604473 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.44044111 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.04089578 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.144007009 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.281434399 seconds)
    (265/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.510242443 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.748107403 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.550650067 seconds)
    (268/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.543684165 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.852108876 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.18175296 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.375106647 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.056079866 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.309101078 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.28664281 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37052508 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.123124961 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.070318566 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.247669441 seconds)
    (279/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.115657746 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.036487026 seconds)
    (281/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.204278041 seconds)
    (282/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.248495719 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.345770565 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.194554528 seconds)
    (285/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.145595183 seconds)
    (286/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.05111188 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.155045097 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.035716187 seconds)
    (289/309) benchmarking ("sort", BigInt, false)...
    done (took 7.036328922 seconds)
    (290/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.065747578 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.809761195 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.989481909 seconds)
    (293/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.429321067 seconds)
    (294/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.667245209 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.933908766 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.481195784 seconds)
    (297/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.792475613 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.068001398 seconds)
    (299/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.216092977 seconds)
    (300/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.320941557 seconds)
    (301/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.188851835 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.176664108 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.313079266 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.20577385 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.282965111 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.252501242 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.054886515 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.136052977 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.03765017 seconds)
  done (took 1061.557286544 seconds)
done (took 1063.581630237 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.066239495 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.057022078 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.040296555 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.062253116 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.153307598 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.084370634 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.055742995 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.04436423 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.091294978 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.091212793 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.039090019 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.080576976 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.041715973 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.041745196 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.040721891 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.056493922 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.343737689 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.068915188 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.058111317 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.052342667 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.058640729 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.039066516 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.091492348 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.081305973 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.044666936 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.045095712 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.044475374 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.062320774 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.153600137 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.045137833 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.046064239 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.054236198 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.344549089 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.067831186 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.039729315 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.061398923 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.053379694 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.055517841 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.04548981 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.074394749 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.484235695 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.047483462 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.042543197 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.042876043 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.042665864 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.049146858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.042624445 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.051340446 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.057354317 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.058325083 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.482010172 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.064860922 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.046025966 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.043058941 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.057027457 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.043773825 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.049092302 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.058269269 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.062934572 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.058789786 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.334798358 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.077862935 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.046973018 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.061019568 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.052144837 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.517939281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.047061442 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.050450135 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.486458214 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.056285609 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.517353435 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.057789581 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.045103015 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.057840858 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.077081569 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.346326816 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.069629685 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.042926969 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.052826707 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.042823052 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.055915469 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.057999639 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.04972034 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.046590706 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.061287008 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.087357226 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.056865059 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.044861013 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.057306361 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.066284029 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.053273587 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.056424932 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.050109931 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.043127461 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.058347773 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.049387198 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.047725775 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.048433086 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.050297934 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.059673516 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.484700737 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.066902685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.04237736 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.043203199 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.046920437 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.060329454 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.485271747 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.054408611 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.070003736 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.095700599 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.048379542 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.337814749 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.07689871 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.063175116 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.057602552 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.04973201 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.044818399 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.338600754 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.511626759 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.066154226 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.047775197 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.045264166 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.063031227 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.048245824 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.04407059 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.349934732 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.076036003 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.063218853 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.169346346 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.06062432 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.079522444 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.046207647 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.05177841 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.092265303 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.063680058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.079918874 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.05258735 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.063353238 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.064953034 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.045006509 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.060215823 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.062560249 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.047993891 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.056463246 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.046437426 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.092732082 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.063882446 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.06258893 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.069832358 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.17185299 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.047062745 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.342186053 seconds)
done (took 320.86065988 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.134659195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.044641672 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.173181286 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.046847921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.136671594 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.117175294 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.046775129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.047042657 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.047048786 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.565667902 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.047569256 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.051491078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.046817705 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.047306222 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.118399191 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.047629781 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.047896101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.326908596 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.047649155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.126059394 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.046929588 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.048182959 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.047316847 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.542440445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.045073928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.048543426 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.127205308 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.048179888 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.333864229 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.046108807 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.0459425 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.33362901 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.12730977 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.063248837 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.055731328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.057085863 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.133587543 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.060747372 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.113122486 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.121576362 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.163589247 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.080196471 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.04853173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.045846909 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.053237056 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.048450943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.049330621 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.081245609 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.046632624 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.053807091 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.340862349 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.056082159 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.054004019 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.049214135 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.049710074 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.064259738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.049546806 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.049267065 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.126995592 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.049461173 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.115446114 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.545025532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.545897621 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.051088437 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.048701589 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.05092808 seconds)
  done (took 196.608556045 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.115099378 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.122962291 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.115835307 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.05406824 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.102653953 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.118776438 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.05398731 seconds)
  done (took 16.661086342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.056416828 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.0509964 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.101203048 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.100919231 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.049922977 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.228284676 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.061998584 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.056067673 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.077263706 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.049615753 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.728916705 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.100835222 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.059208132 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.050536752 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.061799755 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.122306623 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.053277775 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.051480257 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.158704052 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.199444727 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.056633261 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.059200006 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.077119753 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.062043617 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.052263176 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050490659 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.050585756 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.058191397 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.052169858 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.052107812 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.052577134 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.103283711 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.052952582 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.05052998 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.053140019 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.053758947 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.051155696 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.053648568 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.053085566 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.051244835 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.051946556 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.052017316 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.053832862 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.052319654 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.052474361 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.07446421 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.053316121 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.052782081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.053189011 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.05341079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.078274723 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.05372297 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.053803478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.058189952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.095460945 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.058875293 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.052876385 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.053517484 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.053461433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.05423172 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.05407224 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.201629744 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.104510002 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.053581501 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.104193289 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.209542047 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.054986187 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.054567939 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.055234246 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.147003105 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.054834035 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.103891808 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.054855592 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.195574747 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.054172464 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.231558365 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.076720565 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.057096046 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.057238389 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.053882128 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.060862475 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.05513177 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.055920612 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.061071576 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.06141735 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.055148507 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.055669888 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.055724769 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.062010397 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.055184798 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.10692336 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.055574976 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.054841828 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.197724178 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.057116018 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.163653948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.08151979 seconds)
  done (took 223.98593539 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.061854652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.06153522 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.056409246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.07022058 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.056498759 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.055668634 seconds)
  done (took 14.345124003 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.055817028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.059070984 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.055757188 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.056542701 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.054478006 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.055106308 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.056816902 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.057016825 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.058803091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.056267931 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.055332288 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.056845126 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.058544329 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.055869912 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.057377907 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.057156244 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.057586988 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.057794891 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.057585067 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.056152445 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.190128273 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.056357079 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.057160033 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.059025542 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.060222944 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.056547124 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.06884116 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.058166826 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.057701665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.063524442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.060749241 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.05661386 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.060400843 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.061447873 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.061344246 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.059704002 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.060524448 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.057403374 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.058066021 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.056860478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.057084188 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.057186493 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.058110567 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.058438324 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.058700765 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.062628919 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.061131998 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.069468152 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.058443158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.057582849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.059735101 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.059006296 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.05768875 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.058284561 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.062400702 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.06362285 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.062718825 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.05870807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.058343301 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.060482897 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.063461617 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.058630142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.060880458 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.062925078 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.065859672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.059640642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.061842929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.061743994 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.058638935 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.05943486 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.058911259 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.060141143 seconds)
  done (took 151.37543664 seconds)
done (took 604.967073437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.758880443 seconds)
  done (took 9.743848676 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.073913254 seconds)
  done (took 9.065231813 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.810229522 seconds)
  done (took 10.798503763 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.07426196 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.088674207 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.065802123 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.069213208 seconds)
  done (took 30.293575093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.245160395 seconds)
  done (took 9.232349299 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.066650506 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.057170051 seconds)
  done (took 16.17785325 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.13753746 seconds)
  done (took 9.127830027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.45820015 seconds)
  done (took 9.456847721 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.065465116 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.090828088 seconds)
  done (took 16.166370756 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.062253194 seconds)
  done (took 9.050722027 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.817547101 seconds)
  done (took 9.902633063 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.06602605 seconds)
  done (took 9.069392563 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.147499662 seconds)
  done (took 9.13419005 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.060142372 seconds)
  done (took 9.04687949 seconds)
done (took 168.254351305 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.066057368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.057585721 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.061223073 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.059215674 seconds)
  done (took 30.231254282 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.095520495 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.095989894 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.104787298 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.096130613 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.086389737 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.086030683 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.096326679 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.095908262 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.086727548 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.094036432 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.096819728 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.0939305 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.095679635 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.105670259 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.105225727 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.094839065 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.096572744 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.096987622 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.086796603 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.106399985 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.094193414 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.096254862 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.062655516 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.062704842 seconds)
  done (took 52.220959383 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.246865359 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.1273673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.214912997 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.106484546 seconds)
  done (took 10.684039838 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.061925534 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.12696266 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.113294751 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.109271638 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.147725767 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.173157615 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.115652811 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.272529274 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.1776318 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.18996689 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.070065446 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.08438468 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.089753105 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.112186921 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.166718232 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.064508118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.066049631 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.179152738 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.124905747 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.273674059 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.063936211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.118694202 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.145016434 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.11682407 seconds)
  done (took 53.15386647 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.064053174 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.072356331 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.071636916 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.0646449 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.065034688 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.065354152 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.071945656 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.066171123 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.086285718 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.066271799 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.065555909 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.064932533 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.072338527 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.066029341 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.064771436 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.078326927 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.079020402 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.065709406 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.069214751 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.07249037 seconds)
  done (took 43.383235762 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.061281513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.908465684 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.40733997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.314605935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.063371644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.063603015 seconds)
  done (took 32.810066742 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.07613984 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.069922552 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.065468628 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.122405096 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.200820271 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.071221586 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.064790719 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.074739077 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.107819913 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.129397255 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.082158632 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.090139858 seconds)
  done (took 27.147149275 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.065799408 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.066106168 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.066946319 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.076806622 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.074629761 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.071024026 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.072118817 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.06633097 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.078693248 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.081645393 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.07194646 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.075996545 seconds)
  done (took 46.863529783 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.280481306 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.291154909 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.266862237 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.538939015 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.053768116 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.964614968 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.736583654 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.821611375 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.36445666 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.043569581 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.027435804 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.970777257 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.308508624 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.06718576 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.319352169 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.992070098 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.067357569 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.336690934 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.068216842 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.067462128 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.3563028 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.120251788 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.279456554 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.113479929 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.279534359 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.404044659 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.309446452 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.323557293 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.401927289 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.186595767 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.128365744 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.109148015 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.076082753 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.078883482 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.069455771 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.078580573 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.33823175 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.069115324 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.13290532 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.059380961 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.994445208 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.391819548 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182657867 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.486671837 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.197933111 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.308910868 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.072254037 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.12705094 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.122586425 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.316197815 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.17552757 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.28118542 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.993179964 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.434087663 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193687831 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.07009919 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.075005026 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.768240422 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.308091954 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.149466764 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.405111389 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.181510681 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.072876986 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.156932316 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.070190393 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.181746175 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.256324213 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.073766603 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.067056681 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.076174669 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.166849133 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.283792687 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.070930203 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070514001 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.086447343 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.072054118 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.427575346 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.522592944 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.059053209 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.631205188 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.411715486 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.035906076 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.403973554 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.11309225 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.332464029 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.27640164 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.151642616 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.316462235 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.937548177 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.078001349 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.879344713 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.154502416 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.138448319 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.073923284 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.132050609 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.366147482 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.191867632 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.073951862 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.999947618 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.085311725 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.275877551 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.410356231 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.124757756 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.074046377 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.074833343 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.076789048 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.074998848 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.089684819 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.086592212 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.993191358 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.355178124 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.187714425 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.325256439 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.064910071 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.761189804 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.341180513 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200820902 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.647419031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.194370963 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.030120391 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214727649 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.079793179 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.078217138 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.262305184 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.486722881 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.141409821 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.3125513 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.131768263 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.105139455 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.080648049 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.156955639 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.301122315 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.074120298 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.307242007 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.311848209 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.730549727 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.130486169 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.150274436 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.084747147 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.289426019 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.157209537 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.607350708 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.279204902 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.513674305 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.054900482 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.674338916 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.328643492 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.459918075 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.09293495 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.139479332 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.106971576 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.781047845 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.002794037 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.082244047 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.393944781 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.249807267 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.111104119 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.078195691 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.078145769 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.084381996 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.159612956 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151808266 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.150542009 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.003493277 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.080112003 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079136013 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.077263212 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.617401367 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.756674359 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.366722188 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.0781491 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151485864 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.078976929 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.682425202 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.083968609 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.113809347 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.147863521 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.813474091 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.105342291 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.329244632 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.475691157 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.197858103 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.078001842 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.077607425 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.778503726 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.087919246 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.778391427 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.36117317 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.075264152 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.535854188 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.142917575 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.158261418 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.092130086 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.080322662 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.081175086 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.080249572 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.281853388 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.591437778 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.396004628 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.423954803 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.161697805 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.347888288 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.270215259 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.426065617 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.76007209 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.601037156 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.306403258 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.081071135 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0825465 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.658874859 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.087005566 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.296025359 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.283287618 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.336667421 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.373670397 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.494921898 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.086109469 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.09629516 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.321857316 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.079650546 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.511717179 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.13563432 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.43437323 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.889970659 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.340911421 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.143758394 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.092290242 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.728115932 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217398544 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.041486117 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.210086776 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.007752782 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.806788767 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.375885132 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.354500436 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.062686743 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.416414878 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.377353278 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.333457844 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.71046295 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.057375524 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.134545102 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.165235944 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.089127011 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.493228796 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.11943156 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.137828042 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.08702486 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.081663357 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.082510039 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.762153776 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.159685165 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213337946 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.823577012 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.442224023 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.988918666 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.350854691 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.13815544 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.522500427 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.114291415 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.296247164 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.08837383 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.517926723 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.127844606 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.3377372 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.032362853 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.296827004 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.269521514 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.098339154 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.088552106 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.009882328 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.954372957 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.088751193 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.164897262 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.960080407 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.086165415 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.379293435 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.568592666 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.115847349 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.085757923 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.39715801 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.49167273 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.259439559 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.09158358 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.297843798 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.211496537 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.003055545 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.569702013 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.666179707 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.785461565 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.096197132 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.287495934 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.412483884 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.258051084 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.118604172 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.162883619 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.349926743 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.066768145 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.086004636 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.605400822 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.182421058 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.326520139 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.373126317 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.453575926 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.489706947 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.326624267 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.072105845 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.284002885 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.426126892 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.322115209 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.018669891 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.178006396 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.299083124 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.346552267 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.957770025 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.795755036 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.327351284 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.091426904 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.012989964 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.295957777 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.586701155 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.450016331 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.628835225 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.159780993 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.112712185 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.569225897 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.10318601 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.021482768 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.08844131 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.03530992 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.301590028 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.15236168 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.122273548 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643225325 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.348618872 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.484834106 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.20753326 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.123268653 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.014381404 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.822789184 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.03707791 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.140962075 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.128525112 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.159655622 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.092287988 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.29073922 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.526656274 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144563547 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.625528132 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275044858 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382422803 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.355787809 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.369164079 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.035017 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361102876 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.036891395 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.506245961 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.170985613 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.165486692 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.088320251 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.09146898 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360425511 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.407912071 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.539758529 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.122212116 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.421396793 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.188137072 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.0918555 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.093771964 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.440184102 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.321683753 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.303196092 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.16761399 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.285784508 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.163076653 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.603253766 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.09445749 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.092678881 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.22624857 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.045918468 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.800685885 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.38251205 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.84319672 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.293263649 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.609763018 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.947110352 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.164822856 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.132736229 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.091438883 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.213138264 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.094116187 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.329759009 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.356380323 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.854193458 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.095415958 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.089791862 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.948911996 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.826638561 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.327493747 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.095015213 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.15911886 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.094056504 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.207001084 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.097898436 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.356711914 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.14606041 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.091378761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.100031569 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.304707841 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.606436993 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.107158296 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.791497954 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.294253292 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.097569987 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.574948344 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.538863553 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.22675675 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.131389108 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.162591208 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.318656892 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.604098261 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.165190921 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.086836929 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.319529772 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.094377356 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363496056 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.365615055 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.093583126 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.308408184 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.437027176 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.379358162 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.104785987 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.967367374 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.098064713 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.357909385 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.145382342 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.092629542 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.101750431 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.091301579 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.770333996 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.545465964 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.242468394 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.410020047 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.885157739 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.85181667 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.096088289 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.096165153 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.764874521 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.808115951 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.306742613 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.377862358 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.041310812 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.296238715 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.798492087 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.060702043 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.362344003 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.021028862 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.097288412 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.472763916 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.362936997 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.028706926 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.098068712 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.666112838 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.092846547 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.178338759 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.095043878 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.221455528 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.355943666 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.474128117 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.208467529 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.734139766 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.824624906 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.034316706 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.148720644 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.901430087 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.656738249 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.772561503 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117799847 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.110848536 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.020761853 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.0989431 seconds)
  done (took 1736.350498098 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.133607573 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.174172361 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.112735009 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.142332996 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.155866353 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.129956505 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.126890732 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.143897998 seconds)
  done (took 59.141230891 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.092793413 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.10834919 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.099050787 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.094989894 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.114855704 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.10145287 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.25361799 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.102430176 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.099551446 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.099881471 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.095218766 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.095246819 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.377268916 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.112332111 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.096132437 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.097645984 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.100181519 seconds)
  done (took 78.167120199 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.097724069 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.331501917 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.148644619 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.098578232 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.053571026 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.103018882 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.087011786 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.117396789 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.100880101 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.32688702 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.386566325 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.112448066 seconds)
  done (took 92.987737545 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.10043661 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.096902279 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.09732768 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.097100545 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.097665688 seconds)
  done (took 12.515875945 seconds)
done (took 2277.711694121 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.339023928 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.156584655 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.192744317 seconds)
  done (took 6.372406123 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.244317488 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.289568514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.400996528 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.162864096 seconds)
  done (took 11.126157218 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.354950525 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.476473714 seconds)
  done (took 6.854336256 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.453490534 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.105059699 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.459017748 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.09888311 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.104605026 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.102454844 seconds)
  done (took 23.33373094 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.100410598 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.099906733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.100314872 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.100428194 seconds)
  done (took 10.425207703 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.09721618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.832203387 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.100684096 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.110322663 seconds)
  done (took 22.165192373 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.240813129 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.21155829 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.238109725 seconds)
  done (took 8.715008416 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.248587574 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.937858918 seconds)
  done (took 7.21093219 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.241484724 seconds)
  done (took 4.266158387 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.12764722 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.369848954 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.613629381 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.628254982 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.715095006 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.851669766 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.403254725 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.335911819 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.502150359 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.516337753 seconds)
  done (took 27.088818238 seconds)
done (took 143.93967642 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.451888605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.126191338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.304250857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.466935616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.324117482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.303101278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.324668516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.454045856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.13752867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.127053907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.465338992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.325713036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.262662106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.114191242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.268273363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.113067016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.323344106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.467353985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.144403096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.363130574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.325457836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.110747502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.310690262 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.124060594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.326102634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.25387267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.653938744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.115080628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.294634075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.665430602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.255098268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.506621975 seconds)
  done (took 175.835986751 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.101078074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.10218366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.10191042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.101034628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.384931583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.102404885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.102065373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.102615362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.300467169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.288702322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.109509934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.379671978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.104190024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.101613006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.104261866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.101974263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.448785977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.10209148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.102403093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.103397726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.103298203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.222448864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.102997789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.227797983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.439433348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.102771061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.10268462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.101256061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.102930908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.102450588 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.103468466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.103173339 seconds)
  done (took 215.189148499 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.118536926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.101215309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.103084028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.104044721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.105042019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.104733304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.1065021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.103415468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.848695388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.834532137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.102319792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.103569217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.104256323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.104083359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.102998505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.104026407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.103627525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.105150215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.106273203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.10770894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.105654436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.776164902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.104041206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.797120012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.103546574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.104054413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.104212275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.104884688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.107374204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.10883926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.107359381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.105210276 seconds)
  done (took 228.232915062 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.347226908 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.10684267 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.109592407 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.116879625 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.107628876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.107600796 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.115079824 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.352983697 seconds)
  done (took 21.39988346 seconds)
done (took 642.696961337 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.443485794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.831584693 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.241459411 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.129322296 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.339230501 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.177864371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.124648036 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.18393313 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.957241699 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.193988994 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.525917231 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.129662539 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.88354802 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.148487326 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.246272044 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.179239458 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.461185733 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.773640623 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.258774426 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.752251093 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.283342254 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.062671763 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.197740466 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.008312731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.54687629 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.090902089 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.154688836 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465985986 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.128873275 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.288110781 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.734672012 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.4197464 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.136787461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.125957529 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.177876639 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.154854098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.335158479 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.13238558 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.241859486 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.860295394 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.751683189 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.849608272 seconds)
  done (took 110.164230018 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.116118392 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.113399951 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.113367764 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.112512921 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.121868056 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.113600841 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.113798085 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.11387772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.113906039 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.114117256 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.114210959 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.122390912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.114184834 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.123006694 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.114024325 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.114103345 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.113957882 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.123247988 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.113949919 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.114081401 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.115044134 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.114425017 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.111191408 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.114752233 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.114097857 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.114898718 seconds)
  done (took 57.044344807 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.110010343 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.298751895 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.347928982 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126967095 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.110656035 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.113077602 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.13814337 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.117114594 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.115106038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.115170858 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.229292801 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.117103738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.123291026 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.349723079 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.125284073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.112143553 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.112134845 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.111682164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.307929198 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.124074482 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.139968989 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.11688688 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.139524598 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.124263038 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.113075627 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.112781096 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.114856265 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.576141257 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.119824712 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.231510504 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.154212832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.144259867 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.447069934 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.360639092 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.162814429 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.120106239 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.113235354 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.237222657 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.117325261 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.112759089 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.138938106 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.118528606 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.352267691 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.638140877 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.124322512 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.114076924 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.577117895 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.245988947 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.152996139 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.121982008 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.36154698 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.126967862 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.113554536 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.11402886 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.149933453 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124646469 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.114126661 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.401217808 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.125093623 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.141073187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.118879915 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.11458217 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.315428125 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.120153942 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.302911461 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.120815618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.119066081 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.113878739 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.356817384 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.127310945 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.655698768 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.125159462 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.114245203 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.233847063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.307249705 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.600786454 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.12427902 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.318941702 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.465460782 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.147738544 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.123670391 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.564076021 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.150385419 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.122358417 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.115170352 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.115065729 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.115084929 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.160937244 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.139232028 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.567249829 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.651293648 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.418715954 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.151834326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.125506275 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.115584852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.404201358 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.123905427 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.116635581 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.347577249 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.663357166 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.126871617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.122198565 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.631394467 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.129173435 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.145605198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.125382191 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.368421617 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.128891179 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.161308391 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.117896964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.121550788 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.117809004 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.143932934 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.124132521 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.116916547 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.62518444 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.253781357 seconds)
  done (took 261.218193081 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.116297339 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.114777724 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.115703187 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.115020716 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.115230039 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.116876472 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.114908592 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.116076496 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.118463839 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.115146349 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.115916854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.11596985 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.117623326 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.118833126 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.650131039 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.130303871 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.617046306 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.128885429 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.129125928 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.13047423 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.73583739 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.133425402 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.129464813 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.131011913 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.129207327 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.129172524 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.139191846 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.176326627 seconds)
  done (took 175.161486605 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.132177908 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.207992553 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.144850492 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.179576338 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.14467571 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.131814986 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.303974301 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.153119578 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.136041295 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.131390022 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.132063071 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.161944684 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.1401366 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.230275673 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.165836156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.239624678 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.235635312 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.139596033 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.131909469 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.132544625 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.179881835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.14772252 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.163042942 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.194404408 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.150025403 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.187986041 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.149992499 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.133057394 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.132583171 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.268805779 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.156647032 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.165211153 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.167357383 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.152530429 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.249361403 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.248255559 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.236791805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.236825259 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.138347553 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.134061632 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.135288921 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.136030619 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.187908026 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.150824694 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.133969832 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.249526222 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.154076665 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.134639615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.134025068 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.134313444 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.147101169 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.151612577 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.169494258 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.256885991 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.181889296 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.168002508 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.230371271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.250680275 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.134504347 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.231038991 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.141561938 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.248147121 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.154249565 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.136395489 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.136406376 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.138248873 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.18395547 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.250409668 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.237470061 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.141394783 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.231321026 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.18927313 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.155044453 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.136678565 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.136365452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.189318648 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.248429449 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.191637217 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.200306517 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.174817928 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.145204132 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.134615914 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.137084402 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.163114003 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.1440467 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.250530723 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.253881102 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.145425692 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.136658579 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.136955089 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.13767521 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.160774513 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.20167631 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.18046162 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.244100844 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.175748181 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.173760379 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.144519311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.15190823 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.141929735 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.169759598 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.1450028 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.150062178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.412583933 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.167236577 seconds)
  done (took 230.527048424 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.534623047 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.184253858 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.21042481 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.394890024 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.531424093 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.112471838 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.174966885 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.185803619 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.20597326 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.314110002 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.259768296 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.229634726 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.178644813 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.159345998 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.181709543 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.208586936 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.210589227 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.486622909 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.394903434 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.898235674 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.174643566 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.454793702 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.529350129 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.55043714 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.23897323 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.550520806 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.767940526 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.279226786 seconds)
  done (took 70.668216877 seconds)
done (took 906.818811282 seconds)
SAVING RESULT...
DONE!
