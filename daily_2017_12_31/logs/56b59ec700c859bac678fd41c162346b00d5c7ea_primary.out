cset: moving following pidspec: 27622
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.176558079 seconds)
loading group "string"... done (took 0.509605692 seconds)
loading group "linalg"... done (took 9.775760265 seconds)
loading group "parallel"... done (took 0.166470331 seconds)
loading group "find"... done (took 2.490836062 seconds)
loading group "tuple"... done (took 2.288798941 seconds)
loading group "dates"... done (took 1.45236636 seconds)
loading group "micro"... done (took 0.482310397 seconds)
loading group "io"... done (took 0.560503917 seconds)
loading group "scalar"... done (took 55.462928955 seconds)
loading group "sparse"... done (took 14.370053587 seconds)
loading group "broadcast"... done (took 1.283279334 seconds)
loading group "union"... done (took 2.730276055 seconds)
loading group "simd"... done (took 3.69420146 seconds)
loading group "random"... done (took 13.790536597 seconds)
loading group "problem"... done (took 2.289292557 seconds)
loading group "array"... done (took 24.971125061 seconds)
loading group "misc"... done (took 1.120382195 seconds)
loading group "sort"... done (took 3.977141074 seconds)
loading group "collection"... done (took 21.356141968 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615957047 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119746443 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208844673 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.213257968 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.245353944 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161626771 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159535615 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.165676147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.649260868 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204440155 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137830936 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.364918182 seconds)
done (took 5.950833518 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.298952915 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.103273938 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1719763 seconds)
  done (took 0.931370942 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.10400524 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098380839 seconds)
  done (took 0.852958494 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.106015019 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119406608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089330795 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105311367 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09055135 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089246495 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.104336411 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090157028 seconds)
  done (took 1.338032164 seconds)
done (took 4.18003132 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.459308824 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.932675311 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.542141224 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.157850534 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.337659521 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.28403163 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.296761964 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222990001 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092151896 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085339579 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168472811 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.467705236 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.390995533 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.981216373 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070060645 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112956414 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133548015 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.839552512 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081543152 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110364897 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523437367 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.204376467 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.102450639 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122245057 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187676649 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131832929 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142009234 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093866229 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.815527869 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134510634 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.195126155 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.10011537 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140796237 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.168088836 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.225255004 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115594771 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.747162859 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203624929 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096980467 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100343517 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.725206303 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123175625 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.201777157 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105866634 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069975575 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.157292295 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113788455 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079975879 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116141222 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08752422 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.181030982 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.499933594 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108352158 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.188619176 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095952986 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741944962 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104860381 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.291245796 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126824096 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097408509 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093439878 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093183215 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173771616 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098687112 seconds)
  done (took 20.668596215 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165977756 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185775057 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08082007 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163396422 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.128981673 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09886091 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090727497 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081666587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133328694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182597499 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142379277 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192293515 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079506722 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092702049 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.156602925 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233331927 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127408749 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.110525571 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092284793 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.114672438 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127859073 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116066192 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09733639 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09673659 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174738054 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20752344 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112856615 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128391624 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092022932 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099566545 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145342519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149781445 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094223122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091385309 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.193318293 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109058273 seconds)
  done (took 5.356653316 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208037379 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12604749 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.236643793 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19310201 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130847898 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181636532 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170342331 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.288393264 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.204544963 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.501820695 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.172071433 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129740661 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10083354 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098822795 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082498576 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081611999 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.877204794 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156528156 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168015177 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178356273 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114283978 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08373583 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.716876224 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103327001 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08626559 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111855204 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.172322862 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083884595 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.211728713 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095948222 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.489795682 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08633073 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096437422 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134679449 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194180603 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142533723 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123873311 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111512596 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08917982 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216003413 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08666244 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100794659 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.934462257 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101180781 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085750287 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120853927 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1344648 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10809289 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10689597 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136096623 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089079478 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110296739 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.902707544 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199034131 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.159345734 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086002276 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282483177 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.125750948 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101353022 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091653752 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.237735294 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126882724 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100142547 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08231194 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09537607 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097959913 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105460482 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084268404 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.102660795 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.68947074 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102698557 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123124059 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.692756326 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104749234 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089153361 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125224048 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088678015 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08241697 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10186273 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083622836 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091299884 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104839377 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089020759 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082105674 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162322517 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099243241 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107517273 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127459406 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09043755 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.103720336 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114790945 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099519004 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090372733 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.179365931 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097823215 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106854433 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098968356 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146745424 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093306424 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101231995 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19488301 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.10016995 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114138918 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100946802 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115982856 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113738163 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084306712 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087047333 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099774127 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084653836 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149879671 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101621888 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083695072 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089245708 seconds)
  done (took 23.605963488 seconds)
done (took 50.283733352 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.37553813 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07867663 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078970404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097171048 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078394883 seconds)
  done (took 1.43441618 seconds)
done (took 2.136044254 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.126466163 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.102085266 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.117778918 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.108061888 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.121012047 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.105220356 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.105814584 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.121361508 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.103086794 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.0972026 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.104382327 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.104647809 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.114645312 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.112930428 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.09386558 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.117535215 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.107376737 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.121775517 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.100747783 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110087675 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107290628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.106023966 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125516024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093472075 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106880349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125605909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106865253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106500757 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118215812 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093489484 seconds)
  done (took 1.899458951 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.103712424 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111233644 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107163315 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097692311 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125494889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09307271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106172464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124959449 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107203008 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106021054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.121578421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092703412 seconds)
  done (took 1.895456617 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.087979805 seconds)
done (took 6.803104041 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.67932029 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.029075003 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.157417657 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.269246131 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.583288587 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.272861517 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.637105631 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201503023 seconds)
  done (took 17.650319504 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.170887372 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109805577 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099842631 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097699175 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09456635 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.111552747 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096689043 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093219991 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112091181 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097623483 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096516303 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094953946 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109299892 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095253137 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096831692 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111704428 seconds)
  done (took 2.450442483 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120953199 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120338302 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118479644 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.102749369 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097364808 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11615294 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101781017 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099471919 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115061067 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099837169 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101076537 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118063512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101803826 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097105248 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.119556456 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104695736 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097492663 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117316595 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102719979 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101203283 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.119547928 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100534946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099463879 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116738041 seconds)
  done (took 3.366570416 seconds)
done (took 24.176248063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159448794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10701662 seconds)
  done (took 0.98164276 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162373886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.174627051 seconds)
  done (took 1.051419535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.121484343 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096250938 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142344118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105970808 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093750504 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110074648 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119097286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094573114 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.110044574 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095804216 seconds)
  done (took 1.811708198 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099666292 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098201912 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124263599 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145241976 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100921335 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.113853951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098417708 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096220766 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.116628843 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093929943 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09811771 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128057821 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09805345 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127909747 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098754829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098530099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1186044 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099188377 seconds)
  done (took 2.677307541 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097468303 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09417853 seconds)
  done (took 0.915461522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.099820988 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094233733 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09504373 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111585831 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094055468 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092464088 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10934092 seconds)
  done (took 1.419930981 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.6099983 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237052864 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.391224481 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071383899 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120451836 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.339288976 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101987771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090616805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073065504 seconds)
  done (took 2.784031514 seconds)
done (took 12.361412271 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.0982721 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.168995911 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609188654 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11751519 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.109834885 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153926139 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.302158621 seconds)
done (took 2.294002293 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350498036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158100299 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086466705 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100457337 seconds)
  done (took 1.420827932 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088472132 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10626434 seconds)
  done (took 0.928567258 seconds)
done (took 3.087245694 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.118217219 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098864659 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115259014 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099026445 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099216432 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.11572597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09830943 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094718036 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114061017 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096662964 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098744832 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.09845171 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.112278471 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099446011 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095428879 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116602763 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100644827 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097657422 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115348063 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100819529 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099095115 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115792108 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101663544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10031061 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.117869659 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10079404 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097508815 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.115225839 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101034554 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101187278 seconds)
  done (took 3.863775573 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.125839248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090335748 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092974189 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120210711 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092646135 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095268574 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108093881 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093018821 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094550512 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091720977 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11203657 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092537577 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089044705 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111259664 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094785727 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.11716882 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.122183685 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090917683 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089630558 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09339595 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113071762 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090280291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09279151 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.11028606 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09309646 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089743461 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092969528 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109971094 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094290198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092101224 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111930574 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09704562 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092407921 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101611231 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.235132652 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093647107 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098206001 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107790542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095693323 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089885551 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090017814 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110321367 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090529855 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.098769887 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110579807 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094944702 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09010198 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111037133 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095200841 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096585551 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089692492 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106981326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095100992 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094886364 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.113204697 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091745528 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093847681 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.090710522 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111188035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093352114 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090496623 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.107298082 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09848357 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0937088 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1240219 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09921193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090705701 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093977234 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.111074791 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098198317 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094778052 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121020259 seconds)
  done (took 8.05067123 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098683555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097869318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.097881789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115659435 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097642962 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097813951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09620791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114841492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097333913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093798416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111693725 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093940813 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095148267 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094095174 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109863319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094327491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093673916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111040413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094363767 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093406057 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09377759 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11032577 seconds)
  done (took 2.942650198 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225866701 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120475723 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142227817 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124425554 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111920654 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123242448 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099100959 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101828532 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114875459 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103806751 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102661516 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118256657 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113196556 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105635944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124588016 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107758442 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101525083 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.125990865 seconds)
  done (took 2.908411159 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097957568 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098841901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095127594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112975664 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096471645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094569855 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095815989 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113506803 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.094283937 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094535513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111860517 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095287566 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097099039 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093329075 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111699145 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094364465 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094752989 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110198873 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094988908 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09454828 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09424617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11296733 seconds)
  done (took 2.945023549 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114517164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099413461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.135383804 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100932995 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095862601 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095474455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117763031 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096834135 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.101040155 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112906983 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097386488 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094992332 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127857445 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096481655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101265306 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11360926 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095883509 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09600786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112596639 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097088063 seconds)
  done (took 2.844820802 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191828534 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129583598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111897925 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118427436 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130656364 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112358228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118272159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129707598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111257905 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139982118 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112952153 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111500581 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135937678 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115977874 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112164819 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136225586 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118328732 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13561254 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113099193 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111670763 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140841021 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11201719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135677135 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112518763 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111344393 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128907212 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112274877 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115893654 seconds)
  done (took 4.212820749 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.111615157 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104440111 seconds)
  done (took 0.963495578 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10186334 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100971119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.096738931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113738266 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097614405 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097337408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114120479 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102247354 seconds)
  done (took 1.571736661 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165757461 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.184825371 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099568475 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105873352 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.17935777 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.170593706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156600774 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117667094 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094986031 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087528096 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.173903445 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.090184291 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093783512 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11239295 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095379803 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099869014 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113956273 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103950539 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103005779 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.115258694 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099811506 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099855582 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114585441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104576977 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089123324 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115947975 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098906485 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10516691 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109942987 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098221742 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093440623 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.113600759 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099347118 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098512777 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094732325 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.18038967 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12211928 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092769328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097393459 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100331084 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145987994 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096230282 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096954215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113552383 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100120229 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099901261 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.118393551 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095654815 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087951048 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108181284 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096939875 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091296588 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.11211694 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09698929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096823917 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119621202 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097932354 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092359558 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091037312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109234099 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.095801391 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091419981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115199356 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099283252 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096247597 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116185036 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095462082 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094622501 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.114795237 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096892725 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095312401 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.152660575 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.098865635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099653958 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120182901 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096397695 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092364799 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119328463 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095887159 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.096441957 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.1170977 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123804069 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096700525 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109786747 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.092625946 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102029358 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097346778 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116977494 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088923549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103739127 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11768099 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096858563 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089122863 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113401978 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092591794 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097931346 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106716007 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097366955 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095591573 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099446743 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12046047 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094262449 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098707204 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119806237 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102173524 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093940032 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.162342614 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092273847 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111154565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098120564 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100961106 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089870409 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114552 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095946237 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09296579 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111336834 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100550834 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095829462 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116347434 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10048463 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098313442 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11537923 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098211384 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09542515 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092392585 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.119124369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10361323 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097089035 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.117127567 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09736245 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097284986 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114883145 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100411296 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093845273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119827738 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09330613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095499656 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096639281 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.119740898 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097932908 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09171362 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114920552 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097581149 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094709676 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.118560092 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097248639 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090718903 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.107645981 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097469001 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091080606 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.115583262 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104291229 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091916829 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116156941 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092979492 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10292437 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092360658 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.119787552 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098601555 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100190175 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119990694 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089211271 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092382892 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.118494674 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098194388 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092148835 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.115836357 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097071555 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102409771 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089079318 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118636548 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088916762 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092683515 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119985639 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098484743 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098770363 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.111730204 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134820545 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108050302 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119460854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097118668 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095682427 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.118645641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097148711 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09955894 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10132872 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120463092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094815999 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094517469 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121153389 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093116032 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099060434 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114532392 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097862621 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088887759 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.11619453 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089121559 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.1003465 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116967165 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101343868 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102211245 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097488146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113471814 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104824677 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092007599 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.120038679 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09025448 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101357875 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.125219408 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103552462 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10184277 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117268835 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095425254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097054014 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124352678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098976953 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097448051 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098154125 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.111152885 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090702208 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103041396 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.118561494 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093166179 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096859411 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11723387 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09941496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093601374 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088725504 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.119843985 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099914848 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092244676 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.120321169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093780631 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095097665 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123017728 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090167879 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092244285 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118881963 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100460321 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09650487 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.116935596 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10121381 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102323683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118967663 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100262786 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094302051 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103456337 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114856378 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096066853 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093139553 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.11879467 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090966754 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09818553 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117232845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.095064602 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093309198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118645678 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103185657 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102230199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095873611 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119935476 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101887649 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102049588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113923536 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103838146 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092416991 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109616318 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.094144314 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09012953 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.119101896 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093241299 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102332462 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094034738 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115728928 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100133503 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097855209 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113524736 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101230659 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128450186 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091928035 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08961079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095210746 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115773442 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094194766 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093580504 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117781202 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098752784 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101235001 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118900265 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093975556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097523479 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.122099729 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094589249 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102592868 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102947608 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.125673124 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092828258 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100489816 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113066213 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100880275 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.091253409 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117184125 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096652446 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096843798 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.113728068 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09622019 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.093298469 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108933131 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094174164 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101775568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114212748 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101671917 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.097042422 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093794675 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112528875 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092579099 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10211271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114481842 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104860026 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096921497 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10875745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090894976 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101295024 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115765445 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102439217 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092773552 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100623618 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123738506 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100401246 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097717962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.125283272 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105496898 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103126434 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121568078 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091554261 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094919179 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12007368 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098110869 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099635453 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09897109 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110541812 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100451327 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102042333 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11927223 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095262824 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089863768 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.118814544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10262253 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100205484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.119915297 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100031134 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098027129 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093193294 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120900653 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102932994 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.098169981 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123548118 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097532812 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101888827 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113824454 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103301684 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098089502 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091585548 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110119041 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094930527 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103925152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110960213 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102214882 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101583795 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.114252476 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096488304 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101637388 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.113402361 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100961813 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102918733 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094905632 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126876456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099502654 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095107908 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.121608187 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101475472 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090872092 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115793623 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096950546 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103517292 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116027291 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102723898 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097806157 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102369425 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119280117 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10280423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101939302 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.12093811 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092182419 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10382226 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121161913 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100043448 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094085282 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115358486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092699595 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097252618 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103780229 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114649946 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105852286 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101680076 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.115135585 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09614955 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103367894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11605164 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104074247 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.095655462 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117856976 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091490122 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100192052 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116698529 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104263519 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094570632 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110948992 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103662208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103180974 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101562899 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.121357333 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104423523 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090849663 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.1111741 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100462847 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094603515 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126030625 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10052841 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095235794 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115111157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099968379 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099337877 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104447906 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.112329687 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095357885 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098639137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119020966 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096959721 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092199391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121588697 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097037272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09931259 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116840844 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.092648784 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097325719 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124162473 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096782323 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09306512 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095906019 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123318701 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097633281 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094264429 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112268595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103104953 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100184819 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124421842 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095113682 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099088752 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.114382678 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100808822 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104551233 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115198772 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098340045 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.096253785 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103472652 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122383365 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089846308 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094383135 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.126985534 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103003455 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099310406 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.119920951 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.098243666 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104684808 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124914941 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100876456 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091578483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.112965184 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097161794 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091664319 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100217635 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123272562 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097577364 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094924601 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121879468 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102611245 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099951396 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119258083 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092452556 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104275387 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095650128 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120944575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091663015 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090865179 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120338024 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104322697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097024505 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118144081 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099174042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100609641 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112014099 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.096113162 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101542787 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102135364 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122684924 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097257639 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095880806 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120477872 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10755201 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099631751 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116675671 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104897086 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104239008 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118499381 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098800745 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101876028 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124170149 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100330465 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105299848 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114910455 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097922547 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104607434 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10511597 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126974421 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097486506 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092190198 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122450763 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096287474 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09263955 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121286429 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105214089 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105579121 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117617736 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095198382 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107647196 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122696467 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099026632 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095479425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115207696 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104322262 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095842184 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102421679 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114894995 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106120134 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104647379 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123651108 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107284884 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092048075 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124106845 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100900973 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106939771 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119573673 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09323145 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092226782 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101744134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126831079 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104390008 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102039184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.123185333 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102941423 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099649534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118057706 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.097427792 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.1058733 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103155688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119851531 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100651246 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097863717 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118995287 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099953258 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103385319 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125634608 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100490725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107680564 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123449859 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097515672 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096560735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118990679 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103770191 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099301413 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102755253 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115829669 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09284472 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104128738 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.126846036 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09827925 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106395767 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124664364 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.099012238 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101139158 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124669153 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103265546 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099255685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.100447796 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.121583796 seconds)
  done (took 63.476640963 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152005357 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107334846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121225093 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101984732 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116708683 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123503573 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101786516 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102520134 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122819348 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111344537 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101509331 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121290745 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116095596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121230239 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137905875 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111033853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122519061 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103010849 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101779916 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10267759 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1360702 seconds)
  done (took 3.23594889 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104915295 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.101354488 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101215163 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122517415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101530781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101555832 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101247551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121570928 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102251766 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100774286 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120724366 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102119338 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.1009446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100385986 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122166834 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101273754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101899152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121355731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.103387469 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101737146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10052792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123013909 seconds)
  done (took 3.158448691 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.134282924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104181133 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097890384 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12141533 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104090805 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101059241 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123956707 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101668136 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107129659 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094568304 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112526458 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.106194634 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097605694 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121156008 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096130551 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10125158 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107368348 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.125057248 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105373477 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.10163498 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112504777 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101766272 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101783727 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091436109 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.126578991 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107023632 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104281593 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12403109 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092607357 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105537524 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122476246 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095286665 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092177303 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091922962 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111821785 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103706087 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103661942 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121961292 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10180747 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092607826 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102047927 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125447132 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092430505 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.10089509 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121758422 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095485554 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104097857 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100519276 seconds)
  done (took 5.91573329 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133403714 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.137886777 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.126304894 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129017591 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135882819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111061945 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104250169 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154580048 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104009697 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10423148 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137618679 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1147432 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127439918 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109002648 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106928251 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126634727 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107783344 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105235496 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128021422 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105629867 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109244815 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126032112 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114352947 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114055415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126926381 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106286393 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104434028 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127859695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11408178 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10872618 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127999117 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10863003 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112966644 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.12735041 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105267228 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105057359 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136771905 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106848651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105564987 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.1237582 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105741098 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107165179 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.12721202 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115761548 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125089707 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107521492 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105696053 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10256376 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134863306 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106394491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130402472 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115916129 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106418103 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.126822762 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108794205 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113447909 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125676697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105256468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106506369 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13465061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104973042 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106349826 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.136265883 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105249175 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109827935 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135517807 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107393118 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126455784 seconds)
  done (took 8.860259541 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138146975 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120127353 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13729344 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115715124 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107424545 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128997909 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108523875 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108301764 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130493459 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113440486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107637001 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.2365372 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.133148387 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113044597 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108535104 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131383324 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108795349 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107438949 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130605336 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109043491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107546883 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135759714 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109036726 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136064178 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119317742 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106460267 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129298012 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109640046 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114760722 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129501586 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119813048 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127916153 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110063424 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116084626 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141468169 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109701449 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102836256 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129312958 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108561742 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108019596 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.126962705 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117536463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108292498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.126492994 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109718881 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107862712 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137747137 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120365305 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133672806 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11429035 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108228311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137289254 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109645395 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107603956 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137159725 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12179786 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137249992 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116683869 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108455596 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136601697 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115497213 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14246137 seconds)
  done (took 8.358843107 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107952087 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104302121 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104289222 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125069805 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105215472 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104426736 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.124282047 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105153355 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105077979 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103449305 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126706818 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105705226 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104473339 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124073546 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104809826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104162983 seconds)
  done (took 2.573988619 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124709411 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120252992 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.204648708 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.359409963 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126591979 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110494366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103967294 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12744127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103490841 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108654728 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106923059 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128407186 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.119578684 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104777986 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126334625 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107737572 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102758366 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128928023 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105012303 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.205504452 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107599423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10625785 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127502749 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108091473 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105118849 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13069833 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109819006 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104260926 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127342812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10486819 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107969807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1327617 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104879809 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108316321 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104885841 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127365872 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105772495 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105094709 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128527701 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104539084 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105513933 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.1264895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105300967 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108042804 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125111736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10645612 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104009216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108865294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126783082 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105921145 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10443896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.133519399 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109258605 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110440405 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131883894 seconds)
  done (took 7.519822077 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119946385 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106391053 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137500569 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104992759 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105792017 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105251442 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127625592 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107344936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105887898 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125355856 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105951714 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106803521 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127443134 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107656031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105710321 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105392187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.12439127 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106515812 seconds)
  done (took 2.855827817 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106988405 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102795145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102530487 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124823092 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102663418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102991406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102937764 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.125825852 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104466264 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10222791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123883147 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104606042 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103435537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10208463 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125855381 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103287957 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.103093255 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124145194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104247562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103358669 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102622206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125378335 seconds)
  done (took 3.229803525 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117445326 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.201015341 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110276865 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.21049423 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100890078 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099157293 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.134061954 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100261347 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116029808 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.122235037 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100064815 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098961081 seconds)
  done (took 2.334380755 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137376587 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140320273 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127762826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106056228 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113133787 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1314018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109688045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108004212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137872862 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120583553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109337284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136355717 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115576807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139666381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113068665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111840546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130340028 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109531906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105547303 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144745084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109495778 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137110488 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109957313 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108812004 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131046667 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116215062 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115646766 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141892254 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109137122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136760732 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114033323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108677215 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138715834 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121634657 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105512445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137620784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109276064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143195728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114187018 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116189106 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128784653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113447868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115210391 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137241114 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11536531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115045382 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108846391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130674486 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130098946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134268622 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117573416 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112457044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137370058 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11590435 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150059159 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120975976 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115476698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1351148 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120775454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138533778 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114188712 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117200239 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142348895 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11345056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139090477 seconds)
  done (took 8.955078504 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146637569 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105982331 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132192189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12118142 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11631467 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132237869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109908033 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109493367 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132952865 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106712331 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172707148 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110923989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116151188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139098481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110532274 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132235812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110460779 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116409389 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128236404 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12940196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109466549 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138798247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117438258 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13875922 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121839253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113098766 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132913342 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110062083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110322418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131925758 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115885049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131464621 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118443827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105916036 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139771489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110827307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109666317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136054191 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111678199 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112334077 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139469255 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123636689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132078489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110945936 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120385059 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132779758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109934809 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106452741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132360774 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10771923 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120675054 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143972815 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120515017 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139340135 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109984931 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109726606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132187995 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111892502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109406497 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135474557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117639307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131878432 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129966284 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10988367 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133602915 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119437824 seconds)
  done (took 8.921026397 seconds)
done (took 160.435433425 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.185639095 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.218989637 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.234894681 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164472296 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.156517641 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149047572 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128598452 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.105359249 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098427596 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.119602915 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177584832 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098520025 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179802265 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.098190762 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.265820298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098534066 seconds)
  done (took 3.310132395 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200589089 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332397725 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11214695 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.126199687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104113052 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101928012 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12524687 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103333217 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100894902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130292768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102419402 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09764298 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128936462 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098735771 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.1008454 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122833284 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108109107 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101651905 seconds)
  done (took 3.143359121 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123907578 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147190231 seconds)
  done (took 1.112826084 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135407309 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21791154 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304969515 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173875755 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122252169 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141804733 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151231578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135180673 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192212398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135065193 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113116334 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099626149 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15016952 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106920671 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117756429 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122884849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130234274 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116555517 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.137549303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103394347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.127372611 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.12773881 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106927422 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13816246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18317028 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133586312 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107822326 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105608049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125117526 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118110355 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10760022 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139143753 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114169774 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186103605 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105121288 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179174996 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109152655 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123455766 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11652065 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10230746 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126353456 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10571085 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115249291 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121745059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107699114 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110111565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.130086147 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106061182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1096731 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132293334 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110310161 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130305527 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1567894 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131459115 seconds)
  done (took 8.001712218 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.950401234 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157401847 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104812123 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.004251491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122991318 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112049919 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.905485061 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150668196 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.195366541 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.980636875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116854202 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133164089 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128145122 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231474561 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.176510919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.244406374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.809565729 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11133626 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161021551 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.125571834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103093599 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145444214 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114793898 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448297655 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102972505 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111731745 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120289917 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102737668 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182532274 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103761503 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09883011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159726566 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228021433 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.11296015 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125193507 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10436279 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105331059 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.140871656 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.172845611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.146940867 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15425115 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10007628 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100968932 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125607353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120884058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098997342 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135656163 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.123136502 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14613798 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099893195 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1070285 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101189918 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127262974 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110161808 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103734179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272635582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.250208253 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124393342 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102978548 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119869583 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.185964936 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106989152 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120414642 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143109208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218780899 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101629373 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733801673 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.13852732 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102413447 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109453862 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107317289 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122322623 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102544618 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14253069 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40864683 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103111244 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099081273 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127600111 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.146375917 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102116358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128340053 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.115645716 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102079636 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133037116 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108652223 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108728267 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147474757 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206084484 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107767913 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124766273 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101099745 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108674153 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126009011 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20982016 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.132902087 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.110437821 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.16283 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132685578 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.118233243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122783436 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124036529 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.122450646 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106135454 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129200123 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10168624 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10879851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138214707 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10775807 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099959569 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127871698 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.117081685 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115225162 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127678591 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.127051172 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.409836628 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.140683337 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.1000522 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113486344 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123310888 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158976519 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126028604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26199577 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103043971 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12021211 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125849069 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.101433748 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102292048 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143103695 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108781209 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108972746 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102102558 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125503221 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216188737 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.117147798 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12910204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.151888157 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171189679 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103565961 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.131495887 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123400037 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.130861059 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107743399 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108104756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127153661 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.724088202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126055278 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10242776 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10562431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1601869 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128222309 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107603866 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102702269 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123050611 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805438219 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107460416 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103610424 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.137096763 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10734307 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108797275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100815496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123924304 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.116023454 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.152580603 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108109681 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101283803 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103524011 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183464551 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103983825 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127250027 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103666338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103771827 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134835272 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10967179 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108511647 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145469985 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.108962615 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.120738039 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.50876239 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103901666 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104049567 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.149315011 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105563898 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209894881 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125051465 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.129790859 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.124341655 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.125451751 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.247205949 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140911245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171204508 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111695172 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146679098 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101257691 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10128549 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.132903223 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103908448 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104589519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.108730441 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129335703 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112875091 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145715357 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126057462 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.183989038 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100543441 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.144776225 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104395522 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10880506 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.23683911 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103378717 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109450218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.135004734 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104580758 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10564828 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.908058348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113765466 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110969971 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125294949 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.116131688 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.118190912 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130276179 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102962986 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103782273 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139033824 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.164120351 seconds)
  done (took 41.653649647 seconds)
done (took 58.064096648 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234843447 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17119136 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.355163415 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148162631 seconds)
  done (took 1.854136375 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262692823 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.168530821 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.241221822 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100595632 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.247358896 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100059832 seconds)
  done (took 1.990718232 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177307988 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167375324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145148176 seconds)
  done (took 1.360210773 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214837666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211185819 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352104563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.239939586 seconds)
  done (took 1.957280295 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.273396995 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120547103 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131378614 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227616781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.244727081 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211499577 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12661552 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177619239 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134216914 seconds)
  done (took 2.553629121 seconds)
done (took 10.584511254 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.15029281 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.13752358 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.148414996 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.116725463 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.139022356 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.164472249 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.132033916 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.134265831 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.157374719 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.116678529 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.129577988 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.137247677 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.194981237 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.160257782 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.114621711 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.131013333 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.137234175 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.142963416 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.134641784 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.138858474 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.137791008 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.113009971 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.137863464 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.122492677 seconds)
  done (took 4.193949325 seconds)
done (took 5.070803798 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.208982522 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103844366 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.135755752 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111970938 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.214065794 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120040758 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128072881 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.137164056 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123520756 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111919312 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.127400895 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12664894 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110898161 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.209084363 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113868522 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127775338 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103574567 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123077668 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151388242 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131470406 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.215435554 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106349217 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121811619 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126085272 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.192141208 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129742474 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111373104 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113014448 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125108575 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138270181 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113193515 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101793607 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.15469169 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129137064 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102128265 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.136999379 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10406893 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085511852 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112107447 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137855499 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125800209 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113119007 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136450472 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104581327 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113169649 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13706454 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103543188 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114694262 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126841608 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113592927 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105744959 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.152956733 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113382203 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102611132 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125410789 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104124522 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124669027 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102604275 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149522344 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104398596 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102896991 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127184147 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115251491 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103354258 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135856822 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103501982 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113769022 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.137489884 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11224827 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106027437 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102446066 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137574177 seconds)
done (took 9.934013145 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110492202 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146608183 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.209684104 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213870063 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131786712 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.117142133 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.143289895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126923449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115120066 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147023181 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137714798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157969823 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194745732 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143747618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118022124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114936129 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.1389618 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110588714 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.217005808 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12734447 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124159532 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144651427 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128970134 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119113286 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132710963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13824545 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133650333 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115860482 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107369226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113812938 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150674861 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10810895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109618379 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149299116 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124318466 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116137339 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141985899 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115738211 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105901039 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130491177 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11319669 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122925219 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.13062907 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117306538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115256348 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146132799 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11551619 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118643504 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13225789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115766416 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106651181 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154348052 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120237608 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12117211 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.1451278 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121348894 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119503366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1447898 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11183087 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12152241 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130541308 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107820084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107930256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151474405 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111946743 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119604302 seconds)
  done (took 9.535885035 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129329849 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137216831 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141792209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120223009 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110930771 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126051566 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103308076 seconds)
  done (took 1.757514192 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105668858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.198376297 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219503212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.220676211 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.216419269 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.203572003 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152817469 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103242355 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139651508 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138365944 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.197646919 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.252354268 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139447835 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118516798 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224793222 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102167288 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.225338576 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.177369564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143656083 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.196737893 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146092208 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137188212 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114505136 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.129380631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.190884256 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.130650859 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273508768 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123927336 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11270353 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141812012 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118638043 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205545449 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192541711 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141588315 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112057679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220491597 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.191397789 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14371361 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.204683697 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133209839 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.191741287 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143965779 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120157739 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117299472 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145026803 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.180720016 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148996188 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119496202 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116608669 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.228628653 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112459968 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.221458335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115256456 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.143800379 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114419261 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118387094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152233558 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.121536606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.229521748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120812036 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.219869673 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219689245 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.19389748 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.221248346 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128624092 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.22332125 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209336718 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118757826 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.217434415 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119749836 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.222423584 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118127109 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114536665 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.213890098 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120949908 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.225466899 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.225231656 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116153278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115341685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13344258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116911785 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10335719 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.225875543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117373429 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141897305 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12230977 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115121487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.150905284 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.19019659 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152685098 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118417938 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114229993 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149998767 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118957754 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144589469 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.200627439 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141015485 seconds)
  done (took 16.397701743 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108728706 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10625051 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108976923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13064201 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106167044 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10543067 seconds)
  done (took 1.578365801 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14485139 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11874488 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153623625 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11946995 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166209226 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.22914833 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.232909858 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112617129 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161920414 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128162996 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.230917311 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.206310706 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.2317974 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121719657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.23507899 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119336779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.236041885 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11731464 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152904442 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116484958 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143329744 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123017271 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116368699 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.222128568 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11972 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146822277 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111935849 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127432852 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152530963 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114203512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122968 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145727685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111638705 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113604616 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.236156676 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110574608 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141840329 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121671526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120562335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147038675 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.207953816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144911663 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125026518 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120961937 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140671858 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111804559 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121554138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137276217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.235936318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121183091 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121061936 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144961274 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119665998 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120959076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136787239 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114015757 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12247313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.236429169 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121605388 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137826238 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119234938 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12065695 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140478007 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123557036 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11875236 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.147346285 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111745577 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119991612 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141428165 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121002078 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121724495 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.145285619 seconds)
  done (took 11.379410438 seconds)
done (took 41.532760285 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.557033394 seconds)
  done (took 2.475909851 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.948844595 seconds)
  done (took 1.863415694 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.424294105 seconds)
  done (took 18.366909758 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405735903 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321133126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.02048202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172778316 seconds)
  done (took 2.840095187 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.066468288 seconds)
  done (took 1.989942135 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.421010185 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279968369 seconds)
  done (took 1.623666611 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.693909856 seconds)
  done (took 1.615797992 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.733997006 seconds)
  done (took 2.656847884 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276187889 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245572231 seconds)
  done (took 1.456207213 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.642355423 seconds)
  done (took 1.57998336 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 12.837596608 seconds)
  done (took 13.779026862 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262033378 seconds)
  done (took 1.205927794 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294700107 seconds)
  done (took 1.231474188 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.470215295 seconds)
  done (took 4.406935207 seconds)
done (took 58.019366751 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123466816 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123789847 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122420795 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144899272 seconds)
  done (took 1.445573156 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127902148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118955465 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122384766 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144615232 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125348275 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12015849 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144471086 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122119846 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11824393 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145753459 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119637449 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118304707 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146581226 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119047287 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117277261 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146163982 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123706418 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118980218 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.119281621 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145918866 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120007059 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.121683144 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147872615 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12394529 seconds)
  done (took 4.020026579 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119654817 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110223623 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112198446 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133548533 seconds)
  done (took 1.420360013 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133996437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133670201 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.158906737 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129146243 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13372428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157883886 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119549736 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116990591 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145216414 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131257128 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135004066 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159131349 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13423025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125340373 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157307485 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115643746 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.124644914 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157450447 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130901516 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131342417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148685648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129752439 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119067235 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155563771 seconds)
  done (took 4.227249363 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200181384 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131768057 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174940202 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.150400978 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.142851053 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149706109 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.165801256 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.153970524 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124880078 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.123886747 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.145654701 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.119980654 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16637134 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152284391 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122113378 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120104175 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.153054157 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125448691 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189913574 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123228285 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124504361 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.157768851 seconds)
  done (took 4.161535621 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.210484341 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.137199484 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109926858 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108346474 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.147761468 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.113096533 seconds)
  done (took 1.772945933 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112429408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105434884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105823717 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130598594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109798749 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104661184 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.104158354 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130460193 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105219166 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105846932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129994447 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104360625 seconds)
  done (took 2.297506516 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245299181 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148204075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252600168 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386156909 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188862927 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162019997 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307248879 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18927542 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180141205 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166175337 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183534058 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188716195 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15588097 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238846846 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14368195 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187972778 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171203083 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262914588 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168174588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237226519 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184452406 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178498675 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219478229 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17558743 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141780585 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161868492 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.146141683 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13019367 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193585672 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164900472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198407774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150518632 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173562611 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187444709 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237514496 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200871749 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283545934 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133546855 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196037641 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.22021126 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256573882 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143628043 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215673814 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153243378 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129279291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244525029 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17652977 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186183238 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161315389 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146013437 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206470219 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178576312 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197631549 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136121722 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323610939 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158416189 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142649186 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206368221 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190801011 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23002703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205636652 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124761518 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198366283 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193500779 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242194071 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141309496 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190595678 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125576224 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193873865 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237306059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182523081 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187710383 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210512637 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13258769 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17284047 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194423496 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152744407 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234501655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19830767 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120228337 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148623691 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159372748 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128007236 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219246861 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123050668 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247827654 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131779439 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.213771694 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177784152 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179066067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158870977 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186887836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16238261 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174995252 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101544676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142772326 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186245236 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155816783 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156938659 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152042173 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166545888 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126587271 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14980195 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.150259415 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170745811 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161812546 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158278921 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198274566 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13330496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207394411 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147914869 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191148177 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167653083 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222895499 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130934286 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159094258 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223969473 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197394339 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136951751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198190802 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226460891 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151324613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133813066 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190828787 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22314639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144271152 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228936211 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13700273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162637977 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137460193 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200110524 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1600915 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.186220582 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128638659 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191821651 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186628482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153327685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139231642 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208145631 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134334022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124002799 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16267507 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13438258 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141423255 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.17830474 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138880059 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180111993 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167125965 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194246685 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154456943 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16053339 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170840211 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158662366 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172657895 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176282222 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119661975 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200442385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19859667 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157569583 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181217335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187542565 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204988472 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174046385 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128675593 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211235519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126914859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.15011593 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160065435 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197648808 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160951364 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217610913 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202198167 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164522628 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192121745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146455132 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193269963 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211119555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157442009 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165373559 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173425935 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195709675 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122459403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122369151 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154685184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136595289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129591567 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164117012 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174435851 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19080306 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200877613 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169843947 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163293537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193674288 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152616343 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158384509 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207455918 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138799431 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219501145 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191287866 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207575969 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140250482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189690648 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122648043 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153297408 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133575572 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187135636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138498692 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135674615 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167227956 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192597952 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194718837 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147473399 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215181782 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18969427 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231029632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121460227 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162056888 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191811529 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168763923 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208554989 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132643605 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183954144 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193460434 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167269242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192230147 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195784066 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178683836 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21957023 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195116972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129939879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143445159 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18729259 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136790064 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188805076 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141889803 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157444844 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146595378 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137746255 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168930377 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210672513 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142401108 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20056474 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155252563 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194850094 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125923776 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167977963 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176563436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169946773 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105630419 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163215595 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216417486 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147746449 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178046259 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167551346 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157801392 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348539503 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205638425 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198464962 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135556201 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137207448 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202014912 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183632868 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158987194 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213171106 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141545345 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238867244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171946802 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167771578 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13079171 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145831626 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177471336 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136933652 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180821002 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162730954 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170760509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210849602 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136386609 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171876712 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206590995 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144584783 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17764597 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137273952 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252599019 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196461558 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170513468 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193138008 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16210103 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210512569 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124016918 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125848155 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160594187 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185679702 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156964278 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177724855 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190945629 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205557294 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177286398 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188749342 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140435427 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15527767 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168380565 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146522009 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208616033 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162094769 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135817629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215476576 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125836294 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130120759 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189310785 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30780028 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146629967 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194864022 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105988267 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302129324 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129913918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131393708 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18608405 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167479515 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161380628 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182813842 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203185774 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139457128 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182648654 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135100749 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203197477 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182105903 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192805958 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198695767 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145070391 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188224268 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154880125 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196834559 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145933404 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146460007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185844442 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195843196 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202370918 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132421339 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197652551 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169391532 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200361878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198413223 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140369018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210326638 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129240075 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163684906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165146274 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124904344 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184951087 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.164935225 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156468207 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170553287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200109562 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130183439 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154682182 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146773728 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192480689 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140612407 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129557097 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211735479 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128927621 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210719698 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236863576 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129480112 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16762489 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169459249 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130262596 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165459997 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143499329 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130218766 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.198970509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176051577 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.156382819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172353535 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190855054 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161757902 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180830264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141656275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.2982535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128258648 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219133559 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149193197 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246347876 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14822118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207920121 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169251581 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177309824 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163930045 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173530117 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222415949 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192456238 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168374593 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160255842 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142922947 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136688533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162053609 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151648315 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198065495 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140462336 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.163036853 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169621183 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171513887 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146723281 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140387013 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231428445 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149374853 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213201413 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216799365 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136958857 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205052275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171306241 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157127615 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162606339 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200011581 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144791617 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181224143 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133603224 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136118027 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24267385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125099621 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189206796 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174215637 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200115089 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171954775 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163587721 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177547416 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168762433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1767727 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155033622 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151363065 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198174233 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134628841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126501384 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200500764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157280443 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194618354 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142343958 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.200195793 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19715274 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150963601 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133762204 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305282036 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159527507 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223675602 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132434749 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136877988 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171942635 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156718302 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19445263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171093225 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159159427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129085759 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172786347 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1556402 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.162600887 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171065143 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210210144 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157048453 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217682053 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135558414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284920248 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141928369 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17323997 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1446971 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130180985 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138707292 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162363777 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140803644 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205954454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243319012 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165179931 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174351488 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134592439 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125742493 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158336538 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160526052 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177190184 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169191101 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174957848 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103811668 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138611732 seconds)
  done (took 84.790987289 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177450228 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168799549 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.181462078 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.238890817 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207627448 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.308748181 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.24647847 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260309533 seconds)
  done (took 2.817891841 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124846656 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.183767695 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141627446 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143660365 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110714689 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.464339666 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136195747 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146620619 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165513195 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156173794 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136796464 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574310839 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117706112 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143717619 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122289933 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135125353 seconds)
  done (took 4.035189646 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.998296101 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527342296 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.876084158 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.303607069 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234380366 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.210853911 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.771583872 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.199117117 seconds)
  done (took 12.152324819 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.180179366 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.1732355 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.409376408 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.307331006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.191191836 seconds)
  done (took 2.302175892 seconds)
done (took 126.380205095 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.1299766 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126025342 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125120267 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155552641 seconds)
  done (took 1.566963742 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.188566787 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095806699 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093649536 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118201834 seconds)
  done (took 1.53429016 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409686175 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090873835 seconds)
  done (took 1.554783327 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151154529 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136114914 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16450969 seconds)
  done (took 1.494590064 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142796387 seconds)
  done (took 1.178941537 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124033431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120432682 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.241630927 seconds)
  done (took 1.525589041 seconds)
done (took 9.902043922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150495726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.947701791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431280187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135874357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715247651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4281193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.425948342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177391617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163056225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112812766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.17361412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693655582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436126206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.884118355 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397065104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.878683609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.724853757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11480918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11845499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140677021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.405688894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110963342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140478665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115047017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.692626191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450554971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112359188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.890841699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138767485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116118501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400497995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139512415 seconds)
  done (took 20.998553998 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156517256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170249307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145397602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114132289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115103106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141398828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124374054 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124417407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194095157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112182326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161690798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112532643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118107996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112845891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165051055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112585063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114839105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14229646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119817257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113877437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162848012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113007873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113429776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141647103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112969676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135188702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14034703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125291392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111950076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143922417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118089491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113532875 seconds)
  done (took 5.247101323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.167716379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180193208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147031596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151756536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18966761 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115250859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199928857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180227043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168693062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141720306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135607229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112282921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.182066363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113704775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163623131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114252406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116230524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114898116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147629578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11478288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161274078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112818691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114867202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114413672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.140760665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137498197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113243556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.15190826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112362545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142482379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119223297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113791543 seconds)
  done (took 5.545846403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133258655 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129786167 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136885539 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16623634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123108381 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127446971 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156514024 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124260985 seconds)
  done (took 2.15345841 seconds)
done (took 34.993345662 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142974792 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129753809 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134266086 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158571156 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203279454 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.150281712 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.133651821 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11969127 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157511579 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137949239 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111193049 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.122842839 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1631172 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12578495 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.238341717 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.130233459 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.239669354 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.207148385 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.152180652 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129896971 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121200944 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.240974236 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126520314 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.151720913 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.198001992 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117246724 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.226804682 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124815062 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.154486981 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115086158 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.236290376 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12567425 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12269527 seconds)
  done (took 6.191941417 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.227336355 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.123745081 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.153164247 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122205103 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124805251 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149879925 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.225493113 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151233981 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122169966 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121840365 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.121555464 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.239204876 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12756897 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.148444791 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124736504 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110764969 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.255744888 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12369212 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.113473612 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.123546022 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.1195239 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121965209 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.269519317 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116766823 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.1225007 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.152547804 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.124334217 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125250569 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151510395 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.125025614 seconds)
  done (took 5.504816006 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132063297 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136453265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141680673 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.226543083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152294318 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164392736 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136660753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133258296 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173404928 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116286805 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130392682 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181683674 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133146853 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126198562 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143428396 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131879623 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131648072 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144600939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124556432 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131200861 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.132383766 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.15808867 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137005341 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.124452903 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143173456 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123414109 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.125543233 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.158278331 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123967013 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131013623 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145854783 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117113438 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116798761 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1782418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116992165 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128773392 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165353981 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128788471 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128019195 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177115286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117864206 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116144748 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169859861 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171985739 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11580743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154486962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.118133476 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130607752 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112888295 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.16294838 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157632995 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115770735 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.165442545 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113903984 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113064855 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153154827 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115842262 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120313521 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.158292982 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117298571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133921213 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.150649615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129143079 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117241898 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126558342 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.143835611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114938948 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11833559 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171971226 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123873907 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154075872 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143372349 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128353398 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129177882 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.155439642 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12923856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113801917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127152703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155835814 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120342939 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129204457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147253388 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116444549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.651828549 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.1683484 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130250366 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12684368 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154874736 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117330976 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117730599 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160575581 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116881244 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118011556 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127901877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144283078 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119368556 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125269699 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153884836 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11347709 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141967333 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146378052 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115129005 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141750344 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118534136 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.146927521 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122788097 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155578819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144444935 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12396829 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125825165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.143630575 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124530903 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11619718 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.142051163 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132351607 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130344291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122072395 seconds)
  done (took 17.546166149 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.337157421 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.331283265 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183934179 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413235612 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128317783 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.246168006 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.323936323 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.296384411 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.147221913 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.149500363 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.199912338 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.285453877 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117113654 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143411517 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.330233916 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.414535065 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.145500754 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18433508 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15022818 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159049299 seconds)
  done (took 5.75758937 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.129102473 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14903952 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.134650137 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163681943 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126446653 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.126826053 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.145338374 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137974305 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.125858098 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.153966579 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119062558 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.123185554 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.157540985 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131577502 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.126770092 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.167535295 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123093151 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.116323465 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.166111068 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117960238 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133012098 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.191617987 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124177897 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.133915337 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.16282348 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126769512 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113745734 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.145243958 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124251469 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124496621 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.115939643 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152561079 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12362166 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10111177 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127143393 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160537081 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121988987 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119140237 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.149619448 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118460395 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126872302 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.156689115 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125104186 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13586522 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134684713 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109891657 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157733633 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127899303 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105089932 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165713427 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128892768 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126240169 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152078265 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13452575 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123864942 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132342193 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152759081 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127498034 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116687457 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143465888 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115219223 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117967392 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152379476 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127327475 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127542296 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.124954719 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.154140915 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117813752 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117160093 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146455344 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118959166 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127709936 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165772019 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126256388 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122683432 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126243514 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153218101 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094751289 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123752526 seconds)
  done (took 11.634785368 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146226685 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126847604 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132550744 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176417304 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128578486 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121269801 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155124234 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134398804 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126971954 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161771102 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128639424 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129092109 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167343081 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126412254 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125527856 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159321139 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129079812 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152373197 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.157505667 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140566375 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126492808 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149388984 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130282124 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127321059 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169806138 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128706046 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.13982109 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126842737 seconds)
  done (took 5.014818407 seconds)
done (took 52.708378637 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.18967937 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.397437585 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.173322385 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.173021656 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.196397312 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.17461415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.175818481 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.174485019 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.681450932 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.144659054 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.176983103 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.172368935 seconds)
done (took 27.921718503 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.264775076 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.312598848 seconds)
    (2/2) benchmarking "String"...
    done (took 1.407200046 seconds)
  done (took 3.808795176 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.315107699 seconds)
    (2/2) benchmarking "String"...
    done (took 1.368026099 seconds)
  done (took 3.759705655 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.163472929 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.164949199 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.549735752 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.167067616 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.167250155 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.166363597 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.164851337 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.18315887 seconds)
  done (took 15.641405484 seconds)
done (took 28.720859549 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.146930056 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.424990021 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.41264133 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.141135932 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.169594511 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.174091942 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.170719424 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.204841513 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.167981182 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.142597556 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.576979255 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.43264253 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.181562677 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.553896269 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.140584702 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.178347265 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.182443054 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.469650002 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.167015622 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.20110406 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.142309692 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.143463084 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.172246374 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.168960744 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.175233029 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.176676461 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.14470773 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.165468154 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.428403343 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.173334394 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.203492088 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.167769144 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.215192593 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.170559989 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.16710135 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.185313714 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.43120068 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.179555104 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.143479888 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.173710925 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.439175937 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.19318937 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.168298139 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.177411339 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.145000297 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.146862251 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.146614455 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.281743805 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.189935686 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.175140602 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.218458518 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.564244096 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.17720928 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.172742085 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.171461382 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.473619853 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.190679235 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.26504821 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.19516207 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.173324428 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.167194825 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.165638285 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.188568575 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.174035678 seconds)
  done (took 141.608397008 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.169321572 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.171619407 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.171146559 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.176889471 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.172702728 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.172090136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.169547048 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.169793668 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.172515136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.19791175 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.171782552 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.169232 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.171107969 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.115964797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.179276002 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.185498901 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.172580943 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.17430601 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.179347974 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.17029798 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.173445653 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.173726876 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.18543501 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.168513183 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.171289736 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.254795258 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.208487631 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.201591825 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.182079292 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.17122175 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.217720173 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.179577099 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.800575689 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042292261 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.176481181 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.193860883 seconds)
  done (took 79.01797229 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.171012789 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.17287702 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173197513 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.206276868 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.175207623 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761106674 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764124186 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.227447765 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.570952541 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327890371 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.569938067 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42175402 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175624674 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264692912 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.183680373 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.172234898 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270344888 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.202014811 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.170726194 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.172763022 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.765544407 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.188800101 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.718042366 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352222792 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.187016047 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207537024 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.174465244 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.567890199 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173667332 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208091429 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.515252111 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.223463209 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.172225736 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.513621792 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.36390876 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284175496 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.175158739 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208008407 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.175686045 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461212334 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.174799906 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.175484354 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.562259439 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.177334518 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.179646051 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.810199227 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.175711504 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.766845008 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176468283 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.117568602 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.174398728 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.175033973 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.268059937 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863224101 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.177476193 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.175942014 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.178978278 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.175707179 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.177083422 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.210774155 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.364804633 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.038797542 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.174670346 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.18081306 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211066678 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.177281065 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175552042 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.177086845 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.239102616 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.510244712 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769322492 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.17947344 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.724699139 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274168241 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294538467 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.174439052 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.176307852 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.178134545 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.179062146 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.292849911 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.177132371 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.586905411 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.353878411 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.192215828 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.589123515 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.279699118 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.176406319 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.532084286 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.179205513 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.178273308 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879824924 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272565785 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.175450781 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.177536519 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178342703 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.590823646 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771665045 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449258963 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.179344195 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.1786755 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.847006569 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.182263856 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.608454663 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742143456 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832588242 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.182649892 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293331244 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.355167601 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.192175261 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.179754035 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.595227235 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.181401091 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.234354674 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.177073286 seconds)
  done (took 367.966401451 seconds)
done (took 589.675850614 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.083690134 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.037126678 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.156524349 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.042224255 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.036520826 seconds)
  done (took 11.445309957 seconds)
done (took 12.538912874 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.435505439 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.432609809 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.43235592 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.243817293 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.43246314 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.431555528 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.322943773 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.39950511 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.434652436 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.457212693 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.213076271 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.454306491 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.39034655 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.257552839 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.207710805 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.325719682 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.222964328 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.340431645 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.325078928 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474981948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.322459171 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.234297673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449119721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217995597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483174968 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510502178 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.360749324 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.349401609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206272098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202221401 seconds)
  done (took 15.902490948 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.221218331 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.475756538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.321008661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237621427 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.44933586 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221087529 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.472704045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508969852 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.369642806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.359579234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206122042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204872282 seconds)
  done (took 15.921192749 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.20094671 seconds)
done (took 61.102139702 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222536145 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.281805566 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.21696797 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.202802965 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.19943216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201054917 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202753274 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.202661995 seconds)
  done (took 10.821797333 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199440799 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200068104 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199972379 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.2007036 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200828797 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200399073 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200691535 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20176725 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.199972247 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20085446 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198451695 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199356967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198577913 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20123204 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200642382 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.201695882 seconds)
  done (took 20.298664114 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203773777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200513364 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200048343 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.199867475 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.200271327 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201447161 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.201836455 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200694806 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199439532 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.200792678 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.200711525 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202598928 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202285537 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201408819 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200368791 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202174146 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201730801 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201347119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204318248 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201316339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20100087 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.200833459 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.201417806 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201846821 seconds)
  done (took 29.927349474 seconds)
done (took 62.146167224 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.187722578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.21349284 seconds)
  done (took 5.49643292 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.260874595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.263799547 seconds)
  done (took 3.622767107 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204748772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203962755 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203398464 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204430265 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201901556 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202850592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202987865 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.203329389 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.205008508 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204072461 seconds)
  done (took 13.133711721 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204949977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203260683 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.202280626 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.202078191 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.204715738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203921516 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.204852316 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204640669 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202739725 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.203008207 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203244138 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20360539 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203113364 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204134926 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.205638278 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203098444 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204930171 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202253724 seconds)
  done (took 22.763751207 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218856948 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224945975 seconds)
  done (took 3.540628139 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334080581 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246212311 seconds)
    (3/7) benchmarking "month"...
    done (took 1.308832672 seconds)
    (4/7) benchmarking "year"...
    done (took 1.300245407 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.246612953 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227253048 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.245607493 seconds)
  done (took 10.00635362 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.191083606 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.491057822 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.680046842 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.349002854 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.180122498 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.20190994 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.165597567 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.201673123 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.205706764 seconds)
  done (took 13.763208774 seconds)
done (took 73.427034219 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.18960985 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.213265817 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.236002812 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.20443624 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.501997273 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.21993371 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.192012521 seconds)
done (took 15.86157777 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.170804397 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.183826291 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.172900928 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.206536934 seconds)
  done (took 9.832370753 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.208824406 seconds)
    (2/2) benchmarking "read"...
    done (took 1.518092755 seconds)
  done (took 4.824628841 seconds)
done (took 15.760344713 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210187499 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208150187 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.208140095 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.208228533 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207984516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208988314 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20811367 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207367154 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208557768 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209883655 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20951506 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.2062296 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207678476 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209058217 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208679852 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.20878617 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209273892 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208292751 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209284251 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208454362 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.210763096 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208075205 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.208623537 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209007781 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207965888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210730589 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.209466685 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210366929 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209635069 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210824955 seconds)
  done (took 37.367086086 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215249475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215481864 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.207777774 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.207761387 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.208024446 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.207050529 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208311553 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.208908416 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208618929 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210458052 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209905455 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.207916152 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209684293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209894204 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210483994 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210511727 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209602322 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209113621 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209187116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.209796807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210004953 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210572285 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209739992 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210038913 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20926276 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.20949814 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.209306118 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.209428915 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211786322 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211267569 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.211489045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.210381726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209601525 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.210303991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210422078 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210700747 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.214977565 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218172967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209887814 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211443944 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.210212625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212097179 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.211855145 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210794452 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.209774516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.208636031 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.210446563 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213109013 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.211055457 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212352456 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.211075296 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.210937135 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213911173 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211697126 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.210901004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210284118 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212360307 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212657194 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.211671962 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.211801773 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.212390718 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21342318 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213534983 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.212169557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214012365 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212843051 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.211880447 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212015257 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21058237 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.212367333 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214206066 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.212327997 seconds)
  done (took 88.294746538 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213787518 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214336527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214633627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213199968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213999508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214549337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214505846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214931815 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21341875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214478557 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215029083 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214597963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213664766 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215350125 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214199933 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215010827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215462381 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214845006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216139249 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216504387 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215624879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214080268 seconds)
  done (took 27.828159679 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215138239 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216722779 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214588133 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21761693 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218099363 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217036225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215164006 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218479537 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214160018 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215591501 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215543727 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214967957 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217686368 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214401791 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21600005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21713837 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215260884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218390951 seconds)
  done (took 22.998087599 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217680124 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215526048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215708281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214543638 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217390596 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217609444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215746168 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216716548 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.216182442 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217028065 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.215474295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216569888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217010937 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215761517 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217329458 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217278296 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218785902 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21637224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217370496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217829328 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217248101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217427751 seconds)
  done (took 27.875753791 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218058009 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218379773 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219075854 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218116336 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218457621 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218253578 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218136798 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217553846 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218857639 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217014839 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218404462 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216630693 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219155589 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218121288 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218625824 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220165976 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217427394 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218686698 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219324854 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217271525 seconds)
  done (took 25.474280856 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220650306 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219476297 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219401629 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220742547 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220336156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21990865 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22091573 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218633573 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220194035 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218950464 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220267287 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221055568 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221449019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219615396 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220326979 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220451357 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221050062 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220360243 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218681048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221752422 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221814137 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220904746 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222053442 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.220301819 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219802223 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221215928 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22143511 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221115373 seconds)
  done (took 35.283280537 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.239655238 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239128926 seconds)
  done (took 3.589246895 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221699994 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224020904 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.221341921 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220991359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223004787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221615853 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223015167 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221869817 seconds)
  done (took 10.888905637 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.216542006 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.221940254 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223506771 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222544287 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222315006 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.214803115 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223158193 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.225984781 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217062164 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.21663738 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.222804133 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223595386 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.218581972 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21776376 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.215636482 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222573359 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225386263 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224143478 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223356672 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223753313 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225652089 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217419476 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222056819 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.227906543 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.215815283 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.228445768 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.225798775 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23004487 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218062296 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.226177362 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.220536167 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226891726 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225394573 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224754973 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224385723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.224974853 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227513541 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223722611 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.228407553 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230531424 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223894586 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225080837 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219756755 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.224129554 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223040385 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.231058962 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.224653187 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225279436 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.217433157 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.222563876 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232414017 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21751859 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226893898 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22547827 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224530945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231605831 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.233836153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.220591946 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.227065921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.229853088 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239672691 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.235891061 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228256696 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.233244554 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229927083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.241508882 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233257193 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233252553 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230368566 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.22679822 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.228582939 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242430965 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.2416509 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.233217044 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227499601 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228087043 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.221596435 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23212202 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229873148 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.231248306 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232763011 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228493932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228896253 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240576352 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223607239 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23107475 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228046377 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.227770626 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221782192 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235040364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.238958765 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.229178171 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.220874679 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224994449 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.227321097 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228973668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.220465754 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225651405 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.234471844 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230993868 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229689277 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223842355 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233569455 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236675834 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230571825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234553809 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235523346 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222914295 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237369801 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.237741753 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230106315 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.22488889 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231451338 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233076059 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226075632 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.231820256 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.237783336 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227163675 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237367484 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231206396 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234410137 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251106851 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.236760266 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230513696 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.227598671 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240552981 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230395552 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.22949314 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.238204159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.231012723 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231589553 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227757517 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237973596 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.225707465 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23567547 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228655916 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234920627 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233690182 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232115687 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229060818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.232925564 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.229543629 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.232851793 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237182334 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240106559 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228223499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242717392 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.234383852 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23036208 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236634032 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236347379 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233301055 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228266286 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235623415 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227345271 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235309678 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.226789726 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234870637 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233173777 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.232591394 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232313799 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225374118 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231098155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238681323 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232857327 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.233162505 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237446017 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.233778538 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233219363 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224710651 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236388337 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224859045 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231399838 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242203536 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234594021 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.234867167 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.232552117 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241902687 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235010719 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234037905 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.228603821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.237208547 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.242038511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238899769 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24316849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236309747 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235988146 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228466758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.231206249 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238368082 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.230738137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.243940775 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247104936 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251498163 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233274051 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.240113771 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.228291457 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240665025 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.235591458 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.243831184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.23626355 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236247484 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230286277 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238627889 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.231222221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239877292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228613693 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239655669 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236936923 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237059416 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235956746 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231595135 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236369292 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240031955 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237369423 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237869465 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.229501828 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.240674722 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.228383748 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230697965 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.240907785 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237864256 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240766135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245279241 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234943429 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243612949 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240316772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233029287 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239927928 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236098137 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240086694 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244219103 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.242870581 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.235117732 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245276451 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240616758 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.231463621 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.239017602 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247737609 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238694335 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.233307425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247596071 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239413295 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238798374 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240679236 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233595248 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243777844 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242585019 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248291445 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232248756 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242853403 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236131858 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243654742 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.237761667 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242949079 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241015687 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244852917 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250341166 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240283592 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233227571 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244391328 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240743376 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240497089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235945729 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.24836553 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.242792649 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243869792 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24025768 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238027176 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245025744 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233051574 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243972363 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.237749208 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257878777 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.263495458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250146817 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249307283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244995135 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244229238 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245082282 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239129463 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237843379 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240894298 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240115035 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.237586845 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.247623678 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236767577 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246075729 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241529462 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244100607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246383957 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243101046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.236589742 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246730978 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242634305 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242902635 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234031067 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244326485 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240291343 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246325421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245241017 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.237666103 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251076963 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250252353 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.241661574 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243753018 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.239207202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.237721453 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240739121 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.248517135 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.23812882 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251064033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238271128 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.248066354 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.240170836 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251970197 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254566581 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.237602121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.252936168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244388071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236091279 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.239493827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246566151 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24923649 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.25788897 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.237862783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.248799043 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245236664 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245366001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24596223 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243660312 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245315379 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245396121 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251102849 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.251895651 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.243430396 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249515703 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255956655 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244607212 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.244270994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.236890108 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24982017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256639296 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.242276396 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247841065 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.243132897 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.249024843 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248037803 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246371968 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247277591 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246474659 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250732713 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254192395 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251600949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.246583417 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253462685 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259486071 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254087945 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259988776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.242440527 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251051523 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245897539 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.242914647 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.244312498 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.243958311 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252640951 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.24087822 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254253392 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248103645 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.245854369 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249895561 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25441946 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24033213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253082677 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269056132 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24038885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252988466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24858529 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.240553487 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253393574 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247221775 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.239021748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.24462116 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250657108 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256081387 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.243423633 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252533139 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242831545 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253587138 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.24884042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.248159793 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250587955 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248571873 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.242168909 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252262546 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252390476 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259952278 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244033697 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249471661 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247520407 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258334451 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261744099 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246287685 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256256033 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.250407289 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244368078 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24914923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254946695 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245211843 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254557848 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.242767892 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248458857 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249850122 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253448456 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.257037008 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253987636 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.243775515 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246809961 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253808942 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251190962 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25184967 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24728871 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259408549 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245449446 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24487095 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.255260885 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245124999 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258914284 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246487965 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.252670842 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252140551 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257448425 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252251928 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251844897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.245665249 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248863037 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261592334 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259408605 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.254476366 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252241132 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256266174 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.245852215 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251851523 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255367404 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248341602 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.249711495 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257249486 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2485274 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249254319 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25016263 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256458213 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259494255 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258552567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.247480447 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262987216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26506896 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262378222 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.245892075 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25428779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251249237 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.256066054 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253298142 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.248392355 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264380457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264997477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257689432 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254758875 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254827284 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247343002 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259652994 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255381016 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251472833 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262216926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250587925 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263118832 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255945019 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.255555002 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.247764158 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250336955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251302793 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.255067296 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25869079 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254507383 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260267932 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254806724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26167402 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257688831 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.256728206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.25650372 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24831347 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258622072 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250783292 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259391082 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.258978611 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.251264331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261471575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255718865 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249724404 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258161752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.266103955 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256347801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250482317 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255319344 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263289542 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268416722 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256594633 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249539809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25849942 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261701638 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259576174 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.257638708 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25214783 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273532624 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272274963 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252951302 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256798416 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264636827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269227353 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257630475 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260042925 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.254243816 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259064088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267894558 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259523752 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262355473 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268027231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253420674 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263972528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255128785 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.259201433 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263260189 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27127314 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258760841 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.254387469 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276164456 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272004753 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259895029 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286052887 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.268744061 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261695227 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264977017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251687249 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26153822 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256314098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265370487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261013475 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260707497 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262069818 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.253179432 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263966545 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.270160302 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272581478 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26042904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.252629085 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.255630782 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.262350946 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26120162 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261415169 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262859502 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261561299 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261047268 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256431138 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279150986 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282336078 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267356486 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.260190336 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261368875 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262905299 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268412759 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264769172 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269420873 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262341963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262475784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259669114 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271972767 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262780493 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.256790404 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.260362747 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258586013 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.267876279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27412447 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28717584 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266844257 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267347787 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265834675 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263132 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258710788 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266899612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262532354 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259374423 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259602984 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269292497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264402988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.262549455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.257360416 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272224007 seconds)
  done (took 742.604789283 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265298659 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264620808 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266669725 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26287257 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264426943 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262140076 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265524421 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264142908 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262929742 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263797713 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263117522 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264364383 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263504546 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263663759 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264551775 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263577456 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265070111 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265328243 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265167088 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263093552 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264560189 seconds)
  done (took 27.696880318 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266329885 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.265572303 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265474147 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26484915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265176929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265428127 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266272805 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266774551 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26729533 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26584315 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266701111 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265750212 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265955052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26699262 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265848821 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26757844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.266767039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265731316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266696394 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267703877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267353498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267233305 seconds)
  done (took 29.008386998 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268250813 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267515804 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259993769 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.269380312 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272687023 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.265734316 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264762798 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.267422695 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.266670102 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.260201819 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.261310109 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.260367802 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.267100427 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.274988203 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.264110051 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.274830696 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.266937327 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269854623 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.26751189 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.26720626 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272359999 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.281693289 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.266537824 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.258895352 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270440507 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268036655 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.267413507 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.270169383 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.260947259 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.272090077 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.269093521 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.261869966 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271989564 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.271903238 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.263705606 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272699627 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.268747877 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.267873279 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27014365 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271425053 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.289131137 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270708604 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277418432 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.284631517 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.270776439 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.26377061 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277016952 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.270554277 seconds)
  done (took 62.070723965 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272483645 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271275367 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.269730226 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270759092 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271160875 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271152903 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270976677 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270840966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269169238 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270431121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271415754 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271033707 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272312172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.273154224 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271714874 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272074398 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271094344 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270807211 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.2698864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272164302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270831641 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273126964 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272331403 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.274303665 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272918732 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27117181 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271531989 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272709073 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.272712525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.272886386 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272603513 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272122971 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27214071 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273198777 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271751661 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273667471 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273809352 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273414502 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272219517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.273054919 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273196292 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273516207 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.272472629 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274252028 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272748939 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273297118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273017356 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273186501 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272921512 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274214968 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.273719296 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274298434 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274619746 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274445781 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275548478 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276216578 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273433181 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.274743074 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.27539974 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274191886 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273323557 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275304444 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.274308785 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274785099 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273957051 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274899939 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275503685 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275756415 seconds)
  done (took 87.707559942 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276536643 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274998169 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274254668 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276367323 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274467087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276042959 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274930599 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275408959 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274844021 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275886498 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275501986 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275919097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276122581 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2768594 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276528576 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277023998 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276300379 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276699453 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275433333 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276202962 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276406043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277303211 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277493348 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276234597 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277632989 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275487109 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277068722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276918275 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276287199 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276925442 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278462042 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276962779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276133666 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275516835 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278141397 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278033204 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276090124 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277727398 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278483305 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277729938 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27646834 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278487635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276973107 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277033632 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27993332 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27695779 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277635508 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278049291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27742149 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277794959 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277098104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278755581 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278406468 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277947855 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277391448 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278781564 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27828028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278138835 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277948479 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278989237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278316547 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278228849 seconds)
  done (took 80.33116143 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279736942 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280629201 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281033286 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279252287 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279006924 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28146018 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279214399 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280557125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280353057 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280153834 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28033896 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279442616 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279518479 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280987913 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281076487 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280236895 seconds)
  done (took 21.643614383 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279086759 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281278086 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280583736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279927491 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280552948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282087917 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.279755043 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279690106 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278416459 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.279580627 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.279565035 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280837155 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280316604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280908026 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280540616 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280771006 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.28080822 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279870385 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.280926293 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281689223 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281727136 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279593894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.280854946 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282096691 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281404805 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283250601 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281354826 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281089151 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281582513 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282276211 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280894053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283937359 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282212758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281485645 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282121986 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281897639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282838482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283639723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282385245 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283126682 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282513321 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282065246 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282478578 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282012586 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281953778 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283008703 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281552426 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283958731 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282627661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283119577 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283773594 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283785353 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282989918 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282973375 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282828398 seconds)
  done (took 71.651908713 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282857685 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284119223 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283519605 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284199007 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284234088 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283485373 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284428194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287248637 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283433319 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285108611 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284863625 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285409632 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28558487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284314183 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285358053 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28566509 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286660466 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285035047 seconds)
  done (took 24.289828025 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286809116 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285955296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283634514 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284465057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284667833 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285792094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287286984 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285823753 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287059322 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286016092 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286771129 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287742688 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28598065 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285421924 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286419087 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285547302 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.287194679 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287451316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284783123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286889397 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287120557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28650261 seconds)
  done (took 29.461340987 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.277353412 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.275959805 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.277105807 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.29587914 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.296798085 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.27721323 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.275549723 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.277100498 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.298764198 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.319033245 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.313743498 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.295792851 seconds)
  done (took 16.64652997 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288150614 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286807438 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287081501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287578915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286868882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287187657 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28769888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288097384 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28780421 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287097903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288240882 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289172806 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289266867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284875753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288010346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288286919 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287995299 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287526228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287670965 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288128659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288656948 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288197309 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288935772 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28894416 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286445017 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288142401 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28810117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288262693 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289763946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289168169 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288982128 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289962731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29099352 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290082672 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290603457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288025756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290055623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291075053 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289526923 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291290613 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290742601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288658281 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290692946 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290021305 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289196243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289600277 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291987306 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290453181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29087393 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291792007 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290734241 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292180327 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291479047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290805399 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290409358 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290957843 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291109255 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292706855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292076657 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29239545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290817556 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29095976 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291688001 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291434412 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291988716 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292512443 seconds)
  done (took 86.276769885 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292482146 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292554754 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293476892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292659699 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293290297 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293607754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293268951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293348486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292438086 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293237373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292253439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291929341 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293747533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293571273 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292719536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292203215 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293048075 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292679034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293604624 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293427751 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293061061 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293083537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294171164 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294260193 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294339138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294340441 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294802163 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294854413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294137874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294149162 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293989596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294413944 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295064494 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293991533 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295111228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294157012 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295322106 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295246699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293938377 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294130364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294347048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295106085 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294883616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294935133 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293982675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295520963 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295367427 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295385997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295260365 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295592169 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295831046 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296088063 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296552851 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295556502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296683719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295424624 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295279341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29624017 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297492243 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296576044 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296118715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297673549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296755679 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296939174 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297621594 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296766883 seconds)
  done (took 86.613765529 seconds)
done (took 1646.705435079 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.456208287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410269138 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.306616168 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.325568718 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.3035465 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.28405218 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.297199838 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.919409103 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.93660975 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.73847427 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.306161638 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.479799329 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.338237307 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.17233111 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.425901455 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394868517 seconds)
  done (took 33.269324636 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319869643 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296237659 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421219018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.293062954 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320969822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.494966888 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355625274 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294564864 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485803708 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.311854527 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.291572724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318354151 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293266465 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.289893153 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313806664 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496153651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.580597084 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.296246377 seconds)
  done (took 28.650809438 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.799463331 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.317134615 seconds)
  done (took 5.292795095 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314002419 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294001196 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294546219 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29386946 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.284994348 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.28315151 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293371886 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.28841571 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.290889054 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428749952 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.296507421 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308908527 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.311063726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.293211333 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.302804761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340912196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445695103 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.303735802 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300714853 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299226465 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295890112 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396187858 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33912746 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307462366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432738241 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.286275862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298132668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303277146 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.426596287 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304539394 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.293896584 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296335708 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297532385 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.288384114 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.852509391 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.287707854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.319485185 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.302891234 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302098809 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.452471963 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296690671 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301770597 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.294017576 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.856500218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.411164892 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427909376 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.304393456 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.297978117 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297673061 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369788603 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298502951 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298080536 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361356905 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.144144714 seconds)
  done (took 83.49286074 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.289893042 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.286728488 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.146239995 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.294422105 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290021693 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302519223 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.307080181 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615882048 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.324491244 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288782382 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.635920038 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.303891181 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298298135 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.344878229 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.34557773 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.334644645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292419534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.291983387 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.289397352 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.287659819 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.290628219 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293141217 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.288906393 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.512201347 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330742807 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.291915903 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.288457375 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.292318713 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.293110821 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.288558842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.289320208 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.3161756 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364960202 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.291127022 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.605991438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.308527847 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.300799905 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.291555505 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313679367 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289645782 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.292952327 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.887633497 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.289178074 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.289508677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.306282118 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.893257139 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.294455868 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.297647086 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.297950588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.241292489 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.290537754 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.292166016 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292528588 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293769498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.290152903 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.363126595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.375642837 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.293423804 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28983855 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.291094284 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305068779 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295403623 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.299353922 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294886635 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.296378256 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.290900435 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.508284914 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.300887573 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.301770924 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.309882919 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.294998921 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.29172164 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295366581 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.330022508 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.410006574 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293801628 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.31109546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310845448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303443319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.290766166 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.303118503 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291548185 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.622383885 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310935862 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295114098 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.313213903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.322057315 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.362372282 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303515744 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303145247 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.29572417 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313597682 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.610861267 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.336938939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293028906 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.29219876 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.293881779 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293210461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297458325 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299117635 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.293733985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.299965699 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294253941 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295465405 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294413228 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.298636544 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.292136537 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.297232369 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.253560443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.29855508 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.300282529 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296865582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.308126112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.300620588 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.500720231 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.302869822 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.662093761 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.299514295 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294088329 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314443042 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294218607 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.328925384 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294202924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.298755274 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.307165219 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.669257486 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.313466625 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.315982532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29812107 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298262048 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299307699 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30063047 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.341647212 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.295655906 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.310258828 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316069309 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.301113092 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.295557558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303596732 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296174395 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.301311819 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296068072 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.289565026 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.614702107 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520569701 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301148157 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.299393795 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.301666874 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345729979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.160499975 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296749984 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2971461 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601979539 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.504762165 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299833523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.296795985 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.314887378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.251374121 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.302126346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.298655468 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.30297254 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.298098323 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308291751 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.307230464 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.298601769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.301121029 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317615139 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612996035 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.315504917 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31459034 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.318077319 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299686446 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299524035 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320330628 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30219192 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.29969786 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.299808636 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.433315272 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.177651237 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.298683884 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31050867 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306353392 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315508441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299864211 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308033359 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.304027242 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300506779 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.357283039 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.302589696 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.300837587 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.299114071 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.311820973 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986532615 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.304236152 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.321013856 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.178535689 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.304595067 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.304585522 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.30318046 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.304569597 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.358224613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.30065014 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.332623404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.651234988 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.306686069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.344058532 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304469619 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.363180494 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.315551143 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301705968 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302531252 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.317831747 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.300105941 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.084521524 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.300443138 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303127279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.305749362 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.301819386 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.3069069 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.301415919 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306962784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.280801978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.307250932 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337608517 seconds)
  done (took 509.208754383 seconds)
done (took 661.09362334 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304781665 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.305624857 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30668442 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.307071275 seconds)
  done (took 10.417472535 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.323504739 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312548369 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323953436 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311540094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322300055 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311050063 seconds)
  done (took 9.100971405 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.305265869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.307961059 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.307882373 seconds)
  done (took 8.116780236 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.551162765 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.324472549 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.703620542 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321695541 seconds)
  done (took 9.097699255 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.322914925 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323512079 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322618462 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323313748 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.324187844 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325973791 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326804915 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32530882 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325574282 seconds)
  done (took 13.11348198 seconds)
done (took 51.044229904 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.392409959 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.39066502 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.336429749 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.350893112 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.450724196 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.39885469 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.400123702 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.414978947 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.397421239 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.365860359 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.389696141 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.338492688 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.391783244 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.518508023 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.345990773 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.394618757 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.343042158 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.486250087 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.396082911 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.347681494 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.4175047 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.347514518 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.352229759 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.336673686 seconds)
  done (took 36.500480592 seconds)
done (took 37.701649181 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34405345 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.401423532 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.316676652 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.317085434 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319041601 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.308863616 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.340133327 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.318232358 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.332979734 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332724627 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.308211062 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.327432345 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333565114 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.329619449 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.352345459 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.318565985 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.318921646 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.327510074 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333685065 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.335799345 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319838494 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320721318 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.347712826 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.316805671 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327357499 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327300522 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.325960044 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.311565532 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322882963 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335756651 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.31458864 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.321093126 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337398291 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.330417136 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321152636 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331196063 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325220416 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.404645672 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.343236552 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.330981305 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327458305 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.336985687 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32381299 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326028534 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.332747951 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.348043751 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328685684 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.334245042 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.316368962 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.322566633 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337545484 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333563088 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.332594963 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.324491572 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.30894083 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.333002064 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331575517 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340492947 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.329426846 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324110484 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.354509027 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341436162 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.335615322 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329579581 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330251496 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.337890789 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333055095 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339231151 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330120393 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323054139 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324003802 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.331561963 seconds)
done (took 105.037716576 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.448231358 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.317787422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.473788853 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33192619 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.494604031 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442734016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.328360655 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331829276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330640323 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.122030612 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331097652 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329690783 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.318498546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.333730547 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442071154 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330126776 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330490973 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.023050838 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.33254639 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.456212997 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.321554694 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.332886283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333507796 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.127177418 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.322223519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316947958 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.458586303 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334134067 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.025638821 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.316890174 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.317713673 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.026194053 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460727853 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.352947725 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.342712831 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341840567 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.497319745 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334438963 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450107851 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450702633 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.479840864 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372681663 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.314906068 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323775942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335874777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.335929193 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332078817 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.361415816 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.321952267 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.334761822 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.026470877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.34438454 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343711601 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.33421171 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.33372487 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.354777962 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334104325 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.335207325 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463627124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.336570303 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.450954412 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.130583638 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.127066231 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.33667626 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.321809125 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.336389447 seconds)
  done (took 107.94129011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.395636258 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.402082651 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448231112 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.323701043 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376080326 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449973286 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.323967803 seconds)
  done (took 10.926003774 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331073092 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337379601 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374698684 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376329159 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.334168226 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.498319737 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335920825 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.336955735 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.334252935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372849668 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.336575414 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33374657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.343885229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.324370929 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37441981 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.337585775 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440624718 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.328750683 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.337507581 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.481388643 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337222716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.344375177 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.375930236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.351817142 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.335290286 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.33125087 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.084017727 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336734048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335273046 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.333796631 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334908149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389806936 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.334747199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.322564558 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335367833 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440212285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.335176212 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33591278 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.334423958 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.326304589 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.338716269 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337767909 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.33710981 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.336908337 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.335498745 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.35058378 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.337836046 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.335847258 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.337069117 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338110597 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.376461241 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336517065 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337880402 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.335836263 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.3820597 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347099092 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.337595273 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338770243 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337910757 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337592785 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.482764621 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376185983 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.336935232 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37604709 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338018396 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339754559 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.337784007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337754053 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421296949 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33830946 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373182636 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340196701 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.509573687 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.353908 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341557773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.333316294 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.332298818 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338968749 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.325934876 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336851366 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339674644 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.330821937 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.336352851 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337967285 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338854426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.488055295 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434424358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.340021014 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.343970316 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338106194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.338471864 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.382744491 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.33867791 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.337567035 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37704642 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.446932297 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.379805671 seconds)
  done (took 137.488683889 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342683317 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.34087146 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334398692 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35792158 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.332465284 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.330332864 seconds)
  done (took 9.250829531 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.333767801 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344384055 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.339487886 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.338377292 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.339589438 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.34121509 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.340865805 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333748767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343643581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.339316671 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336955583 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.339713292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.339229127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.339910656 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.3409876 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.341311691 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.341337097 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341475594 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.341583475 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341363132 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.328551423 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34221 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342334677 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336288636 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.345069511 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.342854543 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357281045 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.341333506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.339638961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.339737659 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.345324899 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.340029356 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.334427906 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.336371324 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.344759332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.335782734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346163056 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.343309107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3407262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.341378689 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.341394974 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342335171 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.342897279 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.343580852 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.338645017 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.338115241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.348864215 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359333261 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341348664 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341020435 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.343872258 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3437708 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.343107785 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.344906107 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.335765304 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340746722 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.347568256 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346419032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.342923539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.335631303 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.345743508 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342812881 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338525126 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346591434 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.345874189 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.343841478 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.337546668 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346572428 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342775114 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.345293865 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.344365262 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342294194 seconds)
  done (took 98.8227708 seconds)
done (took 365.634842083 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.697180121 seconds)
  done (took 3.912240288 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.528967101 seconds)
  done (took 3.746662444 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.140384934 seconds)
  done (took 25.622940076 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.423251544 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.327452378 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.34467115 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.340612086 seconds)
  done (took 10.651466045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.866024768 seconds)
  done (took 4.082658993 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.338959968 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.347672242 seconds)
  done (took 5.907781323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.584389029 seconds)
  done (took 3.798994234 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.104479675 seconds)
  done (took 4.334930665 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.360264849 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.347857162 seconds)
  done (took 5.936097989 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.305054283 seconds)
  done (took 3.52398641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.44261239 seconds)
  done (took 15.663142756 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.357862892 seconds)
  done (took 3.58007474 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.368944465 seconds)
  done (took 3.585794789 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.361329339 seconds)
  done (took 6.580775549 seconds)
done (took 102.148200182 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.331662438 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.333207484 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.330331693 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.333710923 seconds)
  done (took 10.546786934 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413310396 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411678324 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.420546801 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405178664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407810846 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.414073063 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39030699 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38749645 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405590038 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.401104121 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.417569965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403316404 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.414456471 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374048768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399743508 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.417931754 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406161889 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421742186 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374960014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.408780136 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351613335 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407405038 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401339137 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349773878 seconds)
  done (took 34.827450847 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.856970094 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.413723789 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.495015374 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393073114 seconds)
  done (took 7.378724688 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.455205065 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.456458941 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.481205159 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.514905792 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.557086192 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.467604185 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.376703519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373428542 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.361200984 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.455754157 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529242316 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45574145 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.673242285 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.349525 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.669269851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.349614904 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.35069109 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.454617719 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.504982284 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.540028274 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351942847 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.453514951 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.457506638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451115394 seconds)
  done (took 36.312215956 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.359707762 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.366367586 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.351859377 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.352837249 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.353383663 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.353860006 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.366094231 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.352506729 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.357629915 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.351883055 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.351815479 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.352024798 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.365374722 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.351412667 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.351028522 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.359580555 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.353964321 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.360104479 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.360392465 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.353893784 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.353795847 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.358401655 seconds)
  done (took 31.058590483 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.334891399 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.33302943 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.688003358 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.589581227 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.338600847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.331907105 seconds)
  done (took 13.839144177 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419415666 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.574201351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341824918 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.719178337 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.809085909 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3431812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.345810966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.621017656 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.954079555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929563573 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410863383 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.423830692 seconds)
  done (took 20.118325117 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429978331 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346270786 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357686977 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355823452 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344749122 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345155269 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360957741 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853182839 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.350665826 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622902719 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348251115 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430476065 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598174979 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345785365 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351467824 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.328568311 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578839393 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883685051 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348592808 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346603637 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398354064 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349315319 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358161295 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57730076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350393106 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346643455 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.612535158 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350247275 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6708583 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643705359 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642258093 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349762973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62399162 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829750801 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457421017 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577388915 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344099863 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370804891 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.334327233 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.380873323 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35078126 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367406741 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642459448 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356864992 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350786885 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363774664 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866610619 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.357072648 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.351091614 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352914085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646245321 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437103041 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.356962515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349820969 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418810781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352386723 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.356518231 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464636936 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994639257 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358576882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350925276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.355639166 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343182947 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383971532 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048677023 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358177755 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358424671 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359335855 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350464991 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349925062 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392765541 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352520792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.374747606 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351819176 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209144124 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355001867 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353047119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950418093 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350862196 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.355584588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580906973 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347874935 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351660698 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.352358368 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35316127 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211990659 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362802551 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.319127451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404290097 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863052303 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581650468 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372221094 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383581816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576633646 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.318595536 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353753196 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.352998991 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356465447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373166279 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867875913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353061553 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357620209 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606581942 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.566444095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360988417 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.31658837 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872612546 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353471789 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.388923811 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365047403 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582729788 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.026817937 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660743689 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359615267 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392650095 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356181162 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283199655 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357913021 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.363041863 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357125579 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651618006 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.300818821 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357159176 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428441512 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366619377 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356357069 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358801708 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361211776 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356004763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.560062717 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362903655 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655809895 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.359144995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357527885 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.366736712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352671233 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.36186222 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579417938 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355967076 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630813299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355391903 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356098137 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352813945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.573823603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.354286552 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.387130479 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698000435 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355302454 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362341922 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660066497 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395469809 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470673517 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388939918 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.357026088 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609741028 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.362802667 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.366103506 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358380234 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363453431 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361352873 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369642574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372838205 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024828537 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336263203 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365326853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361005682 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377932482 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432180665 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367939517 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590325327 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359851687 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383849415 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.368587309 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.359070872 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585485667 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65562699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.36327222 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53550665 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.874895366 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033592152 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375427299 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.359670403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.358989036 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362446399 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35895274 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363732413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360717217 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596959438 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6694375 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352807206 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030844891 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366962575 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359670964 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.371491522 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659742243 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374562703 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361847254 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363134835 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367884886 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366548306 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661867114 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588897329 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377579675 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362575285 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880788215 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368380991 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361900202 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365081672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389129444 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363297821 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956632324 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705040632 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362335844 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666757476 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36665593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.382783801 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361177795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367910317 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36611119 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.393363707 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375968311 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.602998631 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368440586 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36900384 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003292526 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251456861 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976165119 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370134806 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.363513891 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367421787 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88405962 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362433835 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362823916 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635786506 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907165135 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364989723 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908691785 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.365404755 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196840582 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668602626 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596387554 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367067681 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.375173233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673151854 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581756895 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390685707 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365363789 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365604789 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.328284721 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949750764 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367309593 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548396973 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910404432 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379720825 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370049415 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.418517505 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367837183 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829647433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369147597 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36399769 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369048242 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382192322 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959164164 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368191731 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366179378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070407185 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373213538 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.886466529 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362017093 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601656703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670932882 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.643797398 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.377739899 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.362781288 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.635077919 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667444742 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370264746 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369932615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976838277 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23797079 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373522465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366210138 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305337987 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368013688 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692613794 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.373505022 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.369806497 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374887296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367193982 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367757453 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.368669485 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375822367 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339897887 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927339716 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.360692785 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360112759 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397109652 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369131186 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617381099 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.386794116 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035791249 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599676517 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376242276 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400672644 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376575416 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378094673 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.340772418 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370202595 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366969725 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367495714 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594598478 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366438907 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.339283416 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3935518 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58174926 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372645856 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378587422 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62381761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.370040385 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.376377698 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286812164 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402111561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378034787 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371982239 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366555263 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400781451 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445079286 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607917634 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.675269921 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67666479 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834497541 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387492284 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376381136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386843426 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452385255 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369882 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.40299972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.368833842 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036027598 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266206299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045999862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675854986 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374716689 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381965305 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37056505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609191362 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371898143 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648821524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372311285 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.372732325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398427568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383106317 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381278383 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584115485 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645377912 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371994089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380700036 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37510457 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.371899076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680637227 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588876898 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932115457 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996558778 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376370992 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377087226 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898767388 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648360834 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37558176 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373451356 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372241947 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.378945157 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384859509 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.38371032 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388036854 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600930535 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677878882 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870157947 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678361409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.404533321 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.25164061 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389319838 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626761153 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216844824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608557022 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048722328 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.175039218 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633017473 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449679416 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616251853 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.374078761 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609975325 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.383003505 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370709008 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3760475 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37533929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.375322329 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.678987837 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062834673 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629073711 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381473586 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.389505381 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4079331 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.611146104 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599566345 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253729019 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597856837 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685850986 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380767193 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377419679 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069272176 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686722618 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380823005 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379844421 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616940609 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374548374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41261148 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.249947915 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.376334724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981866468 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.587201388 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397295168 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381508635 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183370567 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063403675 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380726882 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925365178 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377043603 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388696259 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654797613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.385650595 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385928677 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665818636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382055543 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385629174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616614944 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056853629 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192870315 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.380925087 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377384958 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.379560415 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379815435 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411140209 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382581557 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376302028 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.824648406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3802182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380375918 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389215872 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.389545805 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382836335 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.383331652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379364081 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385578856 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.358833057 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.358610219 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387394651 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50305295 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977476898 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378729584 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99740921 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.719023489 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628419816 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381736975 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.346233261 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.387093445 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381105766 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377698249 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379751856 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372292435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983478712 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.37833233 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.693650025 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390353388 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.593887005 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593066476 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387382637 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620527767 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38326161 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402865737 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.347863828 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380578014 seconds)
  done (took 979.315084876 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.390952495 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.42052889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425068998 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.407057548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407949634 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.512271797 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.479614495 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.487350366 seconds)
  done (took 20.782426683 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.374486349 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.383567401 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.385555365 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.382225087 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.378878238 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.900433585 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.370859926 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.384483506 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.39617743 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.382873988 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.369578845 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.06187711 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.379617315 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.390386128 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.395828048 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.381496902 seconds)
  done (took 32.584726859 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.401960849 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.523085764 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.684184347 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.408256909 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.416237721 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388842475 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.704988878 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404594563 seconds)
  done (took 27.189324429 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.388234594 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.389198313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.38876117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388182125 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.390879838 seconds)
  done (took 8.198993862 seconds)
done (took 1223.372418543 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390694529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.387283096 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389506999 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390721137 seconds)
  done (took 6.81357017 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.349137543 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.348693778 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.352092033 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.360639137 seconds)
  done (took 9.667918229 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.793979405 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.012820895 seconds)
  done (took 5.063910803 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.387074731 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.147268188 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.135835917 seconds)
  done (took 7.928664452 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710380498 seconds)
  done (took 2.967581125 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.785492912 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.87337162 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.375421196 seconds)
  done (took 7.293816632 seconds)
done (took 40.997367428 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.375387049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.144254944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.544008159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.373504047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.546548084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.542865767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.618359933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.373865435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.385640663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.383394562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.372351811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.547074374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.603186653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.145116745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608465227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.143107827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.550053607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39094679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.371804948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37833484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.619278931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390142884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372258503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.384553742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.546223854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.534179887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376392757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.144435286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39226424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374888739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.531687373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.375369008 seconds)
  done (took 82.697086534 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.381488629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.372709197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.375610657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.398753926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374546106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.395747437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.395609625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.375162087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376526924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.395513409 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.377260669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372895238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393190397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.375703888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.374342928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378325639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.371482876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.413552066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.376077298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393043447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.377157911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.374843758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374504599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.375738081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.382954483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.375734446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395141729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395962383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382564565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382473425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380894257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382017844 seconds)
  done (took 77.506083576 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.376319833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.378120859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398303865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396805597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.379976573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.381379168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398312007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.386979703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375601991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381270303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395984732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.409337901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.379418481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.378970929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.375369092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.37916049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.377343582 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392177556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375769001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376473865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.400054027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387833153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389696829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397459602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.389183836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.377423757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402301419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.380188491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393871149 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383256383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.382756923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380616793 seconds)
  done (took 77.617377745 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.669784061 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.3986128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.400931942 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.391350989 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.400719931 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401416112 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.390259407 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.630141755 seconds)
  done (took 14.943454967 seconds)
done (took 254.027222138 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.391130914 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.392410968 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.422812488 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.3965116 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411157102 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.421676482 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.627599384 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421607223 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.618111665 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.407874594 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.40924728 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.393910387 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.337411659 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.544905247 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.388057888 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.389988802 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.407125873 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.384412644 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.396250908 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.646636307 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.423395288 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394951164 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39118716 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.393550082 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.373631793 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.462768743 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.469453641 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559579298 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.525076344 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.46785302 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.39280057 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.394841718 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.391034042 seconds)
  done (took 66.712871584 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.393166477 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.402822598 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.401205974 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.401037238 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.400686909 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.400654809 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.390698301 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.402349835 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.399403821 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.40079781 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.401577354 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.400489942 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.404507685 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.399850051 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.404133391 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.37106968 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.392127993 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.404779184 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.392097289 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.371842213 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.402566211 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.401807107 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.403432014 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.402590875 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.402019022 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.402496529 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.401909522 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.4065091 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.401502723 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.403332577 seconds)
  done (took 43.227904289 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.401874332 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.3849724 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.385656046 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428950447 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.393936459 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.399453728 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.737636541 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.407577155 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.398832321 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.39755227 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.389037438 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.4045438 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451466094 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.396791704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.399079955 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.404916356 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.403566178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.396514065 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.388273373 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415790949 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.739777941 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.406163925 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.730961812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.414254297 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.401241699 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.39935956 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.401683573 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.389642052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402784197 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.391088326 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.307012782 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.72328101 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.391157931 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.392971007 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.293000111 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.410116896 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.404066399 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.38898623 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.401646232 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.4003818 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.728088591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.399323823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.396074732 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.391063198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401109358 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.409222413 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.388821525 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.41316526 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.675228277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403918745 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.391410934 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.401356579 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.410067141 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.401336708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.672602898 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.403804034 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399059066 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.397614154 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.405340596 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.732886321 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411380285 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.402062242 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.393384031 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421270375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.41218343 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.402709917 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.416007379 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.401075832 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.400456859 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.400923348 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.392973848 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.401154102 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410823094 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.393193994 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.433011661 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.395905159 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.403622117 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.392353215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.408095438 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.726669287 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.406759329 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.394358138 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.764769753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.405119294 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412107014 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.413373441 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.408650361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47604758 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.723398609 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.367574851 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.41811896 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.399142351 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.735615612 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.409491618 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.403411502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.403311177 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.413330131 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.408424533 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.399647292 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.394326522 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.403803928 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.416143515 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.395568416 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.405519942 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.731781283 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.409861343 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.397160528 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.404811381 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.481738433 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.411677694 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.416283663 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.407525159 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.746165645 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410878536 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.412057511 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.395988452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.398941787 seconds)
  done (took 207.890671397 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.398515939 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.400903224 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.406616273 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.397817847 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.395781995 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.403812495 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.396485368 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.396252257 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.402064207 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.394805684 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.39775851 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.407698899 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.405640405 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.39594151 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.407296025 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.400883158 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.396919492 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.41189011 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.401550505 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.398095039 seconds)
  done (took 45.293168139 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.413990201 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049151995 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.001330666 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.41718614 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.414152701 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.402692288 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.471710725 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.415978642 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.41285163 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.75172109 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.605302617 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.418235927 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.414380508 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.412677972 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.000190106 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416345204 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74585779 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.039135369 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417290926 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04802702 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416893764 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.412770782 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401186321 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.05117831 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.765221738 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.734554855 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477604583 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.048821136 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418669262 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.414887716 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043049001 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4163223 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.406036875 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.021159309 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.417433527 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426550602 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.416632251 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.475695593 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.477801343 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.750663777 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047657431 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.741969174 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.428827091 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.576080553 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.419979594 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.384899966 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.052135985 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.420428239 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.386156087 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.419628746 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.423918219 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.010134841 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.411249605 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.0098881 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.419284043 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.420009212 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03902337 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.011772718 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.001380686 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.608224606 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.408179082 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.731397792 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.421636005 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054495773 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.42097403 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.41833719 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.41657668 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.608777675 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047835048 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.733617676 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753368502 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.755610716 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419442431 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489330772 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.419662324 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.753025143 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488666815 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.815945295 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756701418 seconds)
  done (took 129.684840377 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.708774659 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.539206108 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.837567877 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.029568445 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.971059058 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562039186 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.543252665 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.673944171 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.43039867 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.507139184 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.151163657 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.51448425 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253566912 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.49133515 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530880166 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.566267947 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.859349706 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.405019976 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.105854281 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.111777181 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.415167681 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.521797724 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.230097157 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.835685053 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.406260461 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.228995843 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.403692561 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.987015973 seconds)
  done (took 55.102412542 seconds)
done (took 549.179965724 seconds)
SAVING RESULT...
DONE!
