cset: moving following pidspec: 1641
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.375336435 seconds)
loading group "string"... done (took 0.559067073 seconds)
loading group "linalg"... done (took 7.153051146 seconds)
loading group "parallel"... done (took 0.157365981 seconds)
loading group "find"... done (took 1.099379537 seconds)
loading group "tuple"... done (took 1.744535894 seconds)
loading group "dates"... done (took 1.289106519 seconds)
loading group "micro"... done (took 0.216168077 seconds)
loading group "io"... done (took 0.987919741 seconds)
loading group "scalar"... done (took 37.784099398 seconds)
loading group "sparse"... done (took 11.681183807 seconds)
loading group "broadcast"... done (took 0.973368679 seconds)
loading group "union"... done (took 12.668199766 seconds)
loading group "simd"... done (took 4.544322891 seconds)
loading group "random"... done (took 9.27617191 seconds)
loading group "problem"... done (took 1.869162054 seconds)
loading group "array"... done (took 20.698939724 seconds)
loading group "misc"... done (took 1.742058013 seconds)
loading group "sort"... done (took 3.207545289 seconds)
loading group "collection"... done (took 17.182047401 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483034179 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122115643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113307177 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118726027 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148011699 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116328507 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124735729 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085216767 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.780532154 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145960778 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118227958 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41050415 seconds)
done (took 5.077621412 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170914547 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082397571 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086046706 seconds)
  done (took 1.298275991 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0664617 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120834592 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066292887 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066766662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066569125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065830031 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066883461 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067146906 seconds)
  done (took 1.649455132 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071938997 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06767072 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068051957 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068870403 seconds)
  done (took 1.406505989 seconds)
done (took 5.732189134 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761866619 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203119553 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182014697 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395096826 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131756315 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156444681 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65974193 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318652104 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181727507 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080856704 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103591299 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.321725727 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109478025 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633852044 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073081786 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089062076 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137153309 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432495672 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066762316 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08176074 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088456342 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127381873 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084593425 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074271328 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141028001 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067690263 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128946111 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080423722 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065533066 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20556577 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172791782 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655922496 seconds)
  done (took 10.179457256 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095784904 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096800203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068276403 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135492596 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094968475 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068900309 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070417065 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066410203 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08581228 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126958825 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087669911 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100876609 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064684491 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067869187 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083812018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206517002 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081820494 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082866257 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07135084 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07668118 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118163605 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077390571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077410307 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076610992 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127938703 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179837079 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098642001 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099093295 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068799159 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081921655 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115976161 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130085341 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064611002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067123197 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125906877 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093832333 seconds)
  done (took 4.603831889 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.274730697 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143046391 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09266211 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13536055 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066337194 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1119201 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10896291 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066662237 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082596081 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204287004 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.290685009 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.581265623 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113154171 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10343301 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067130854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067539233 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066510769 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354296859 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110635138 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106570811 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082158047 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071194838 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070366816 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.345683876 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068392829 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064525054 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06906776 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059189282 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126458536 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068830718 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.926552767 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127978382 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068388496 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102596576 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161699644 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0865842 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273636127 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06736407 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065004247 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152692904 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064435383 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071610082 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066755794 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084128939 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104817636 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111245823 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065208479 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068676728 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165898236 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065386363 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079996104 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.986410188 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154198138 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076680041 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066256054 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249676273 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088741858 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070934706 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066053348 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18269389 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13161438 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069134438 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068099134 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069431452 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070801566 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352156758 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066353587 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.719298352 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069466208 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077823377 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070754322 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071329599 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074326075 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073865943 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086826098 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06719218 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076790825 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067476517 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067202479 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068555568 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087169715 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356316938 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066162601 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071557841 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066105272 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08522546 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095468669 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065794962 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064315138 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099453467 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063077533 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.169475551 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066221674 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10747918 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068558356 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087546224 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0704466 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11486498 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06546515 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064944968 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091027389 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064556968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097661739 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068750529 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097889016 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080856171 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067340841 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398309653 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064540899 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064467816 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066981047 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064445859 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068333289 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065962248 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078486611 seconds)
  done (took 20.922531493 seconds)
done (took 38.111022265 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.275264063 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078541794 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078631429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078580993 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078830393 seconds)
  done (took 1.808410076 seconds)
done (took 3.009872134 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119269082 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100570203 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065453654 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097717962 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065696924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101654425 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100511713 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082941649 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101242144 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065473975 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098224229 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065415118 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065413705 seconds)
  done (took 2.348302442 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083028283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083133138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070612268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084440238 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064659423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083693987 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08200155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090034349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081825523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073383258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064783946 seconds)
  done (took 2.057416759 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081114085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084853179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070823171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082660165 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064818282 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082714607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082355682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08693779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082709353 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074800315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064576671 seconds)
  done (took 2.048620631 seconds)
done (took 7.645029064 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076335844 seconds)
  done (took 1.257987836 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594964222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.107708881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080910502 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111432443 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188240886 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121409111 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280625553 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089302382 seconds)
  done (took 8.936166656 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101565227 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073445404 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072795447 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07101208 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069576563 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073426795 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073169631 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07020305 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070025239 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072403826 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071121105 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072768594 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074113892 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070325948 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069084779 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070966953 seconds)
  done (took 2.428175252 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092823642 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092801105 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07540745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076105814 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073674633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073244665 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075879877 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075032534 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072467643 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073598466 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075910614 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074788576 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073435216 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066362199 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075585299 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077433649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072230056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075571869 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076211142 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07629538 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076185513 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065606206 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07298607 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075229816 seconds)
  done (took 3.105976624 seconds)
done (took 16.920115676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112317902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071675046 seconds)
  done (took 1.369033309 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081310117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083036571 seconds)
  done (took 1.356411635 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083436475 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065358977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09246749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078401938 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0657422 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065901101 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088624897 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066127639 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065622563 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066035669 seconds)
  done (took 1.931297676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069097886 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078261131 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070260436 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080707444 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073148627 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063702343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072151595 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067355331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077592154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062560607 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071080028 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083674055 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073080446 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085489857 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073994473 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069011444 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072259591 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06919 seconds)
  done (took 2.508343416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065328977 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06629001 seconds)
  done (took 1.333834357 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067052823 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062772889 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067472955 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066568235 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062925651 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062139259 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063024657 seconds)
  done (took 1.650276879 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388181948 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111974207 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300324887 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072426241 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083058559 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252798578 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066422612 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07143061 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071619095 seconds)
  done (took 2.66302085 seconds)
done (took 14.015811327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078283205 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084530428 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094311125 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.359962827 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091224979 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065650036 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115006723 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192057078 seconds)
done (took 2.29432016 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214554005 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611778766 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.392752485 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202442695 seconds)
  done (took 2.408318227 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321627423 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087472531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060331389 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068745552 seconds)
  done (took 1.75032772 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064871858 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068115818 seconds)
  done (took 1.337999396 seconds)
done (took 6.921954142 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06644713 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065276696 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062988657 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066593485 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06454222 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064199277 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083920583 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066766321 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067127897 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067316319 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067154128 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066690855 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067267405 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066849145 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064740117 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064828118 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069733708 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064495141 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065092626 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064464148 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066825468 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064642154 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06443081 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066926838 seconds)
  done (took 2.841697013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081890634 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065449202 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071782632 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070845762 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069044461 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071026563 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070556241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065542851 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070775272 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067689518 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070445554 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071263755 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069378767 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071518686 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069318738 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071201121 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072414874 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067777362 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069566664 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071237239 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071923718 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067374073 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071273616 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072095254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071634869 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071009709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069504544 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067524643 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072216329 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071223813 seconds)
  done (took 3.329621303 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069288967 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06358684 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06421313 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070469175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064452423 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067664322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064306422 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065234869 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065695272 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064630502 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065819182 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064585666 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064769693 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065718161 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065692855 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068133507 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080098362 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06528617 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064490503 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065169122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067768242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064455903 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065034119 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.174014628 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064728908 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064176804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065036042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064500621 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065234379 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064492819 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067778994 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06793393 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064665019 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071287517 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068184369 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064287663 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068409879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064061238 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065050351 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063796008 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064213176 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064377944 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064618374 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071102581 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064831891 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066029359 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064337797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065652706 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064779218 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06722505 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063727784 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064844931 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066498799 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065530159 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068321681 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064045026 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064937238 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06388259 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065415454 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064919764 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063712814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06395069 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066628747 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064802391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078781844 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071184329 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064386506 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065972182 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065523396 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06652475 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066098939 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077596017 seconds)
  done (took 6.096282982 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088978839 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086003833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065361664 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064966596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061742033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063643082 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067449921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063407369 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064831199 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06869417 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065266267 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066423079 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06636895 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078234587 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065563903 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066768073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0708787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06335513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065189717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068437667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065755559 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06892275 seconds)
  done (took 2.738015037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153450981 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069752917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106150627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072171441 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067737838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073849125 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071004523 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071247461 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071143961 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069701906 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069287027 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071095116 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068499028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069221846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069459371 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069658025 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071518059 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069175094 seconds)
  done (took 2.610974853 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076256845 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0654503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086160925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065985742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066167436 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069623803 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071900902 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075155892 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069095728 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067059513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075548203 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069714841 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069443454 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066779703 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06921187 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06692551 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069484402 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06729736 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075105128 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071879278 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07152894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075374228 seconds)
  done (took 2.789506572 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078447896 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067536929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081956406 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06913941 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063301462 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065432033 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070980311 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067482543 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071029519 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069078997 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067431845 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065660671 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0703656 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067456504 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070507362 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067228744 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068597126 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066876518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068166397 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063344789 seconds)
  done (took 2.609156358 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087769304 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066791973 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068778128 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07721821 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068633207 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068593835 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076006632 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068268551 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068859813 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088523131 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068765951 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068653378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076165501 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073427395 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068436382 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076123444 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07614418 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076053058 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068445158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068710428 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089219984 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068396022 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075868366 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068406404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068282154 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068552075 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068159629 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073350123 seconds)
  done (took 3.270511048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066302984 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065399904 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06295067 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064814789 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065011544 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064777189 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064885284 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06492834 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067250094 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064398557 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067038322 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067065283 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066970793 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067213796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066751652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067181595 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066873891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064625232 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064838069 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064506867 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066689297 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067430718 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066818072 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064889315 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064277991 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067104022 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065191836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064293187 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066766454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064655699 seconds)
  done (took 3.205411792 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074592405 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072741118 seconds)
  done (took 1.382360079 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062795506 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079608241 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063068919 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069461506 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069515384 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065756654 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073441199 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07116877 seconds)
  done (took 1.784825326 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08128108 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076775854 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069118979 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081402224 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077779501 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084545754 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134389234 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068640517 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074396033 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065559553 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080999092 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066540165 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073808305 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067483295 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073022728 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073779237 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065339219 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073772112 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070162646 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065970891 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06879994 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076342485 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069760544 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062706469 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06861857 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090477471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078676797 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066923664 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070048752 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074827409 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073070389 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061221153 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066760962 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067452463 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065371469 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077059395 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083098556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070160428 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075711969 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06783481 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077997571 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062331814 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071865442 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074065189 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07714782 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06757471 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067942369 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062183214 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064800973 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06943726 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062546594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067674409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062337953 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076734943 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071160883 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077876206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066120126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06869398 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06997819 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070839749 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073873826 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06931692 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06972056 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067025289 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073933781 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071912978 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076830595 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062758167 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061560492 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065888298 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077613451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09079786 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073847777 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068588987 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068665755 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065319699 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070892654 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069211649 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073687503 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073782631 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067974803 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073716497 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075103399 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067915936 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07035449 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076225191 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065783528 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070558882 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065461539 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083917606 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066309942 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064954426 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064523865 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076583935 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070249557 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067110161 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065510015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074841921 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06162418 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067542013 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067675377 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067644616 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077160007 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070708526 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071405231 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075637563 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074033233 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066972186 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0696199 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063316109 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06732387 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065723608 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073546219 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060794684 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069122117 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06748169 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066877047 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.201962991 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065633609 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067768566 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07395449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072484727 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065539518 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064626954 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071485745 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067838907 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072185004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07684635 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067420246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063427966 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063297718 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071950531 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068621237 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071338736 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073726681 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072031444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06291063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066105677 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073860168 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077253163 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069045933 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068385947 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074936809 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069558592 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068503642 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075440492 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070566149 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067052396 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074464188 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068648937 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06375339 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071752852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070988072 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066516614 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071665485 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071905844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070265649 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068691773 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067344909 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075637682 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068614207 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066830761 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067826699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066894611 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07906901 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070209487 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06350064 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06493916 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077532351 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066216643 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068306386 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066408998 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070113092 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068955675 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066323836 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067381597 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070101192 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078677185 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072231501 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068801387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07362668 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079764017 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067654552 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070750684 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0677766 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069433324 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068985496 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07710895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073515666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072376188 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070275679 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064680696 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073254638 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075459156 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066805885 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065011957 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066461205 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071534339 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072889935 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072128479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068160811 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065784692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068167502 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070575775 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070435164 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06733475 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066579306 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073836099 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065812535 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074478437 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06880451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077019248 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070919357 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062576947 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070689357 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065938672 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073406211 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06271985 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065334142 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066733988 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06858736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065988832 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069465944 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060653433 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0727399 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07368808 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066777803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065759393 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06653024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073060915 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068306917 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070504236 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069728761 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072181022 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076562824 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065595182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06937087 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07698972 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.195859404 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061373821 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072061441 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065618253 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066027018 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06514144 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064446962 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069307093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074857801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073231723 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060332626 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069234594 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064718197 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065706958 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062553072 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070682557 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071284121 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069400079 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074667916 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070127801 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06889048 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072073054 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068009278 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069703034 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069100252 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071889073 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069658914 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070997419 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068348844 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072204619 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067765527 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066075881 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070809632 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068841778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068866818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073234906 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068131853 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068574657 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070176002 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068911982 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068468035 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069031686 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067119381 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07148647 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069417344 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068322082 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071007162 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063586888 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074698098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067282363 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075060985 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068166853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06486033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075906388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070168993 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073936626 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069448331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068601943 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06912157 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068033335 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07123745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074892846 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065929653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078965657 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076491977 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068604821 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071183228 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068450268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06944686 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06687191 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068320963 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067747657 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067861351 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06775304 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072189059 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070101402 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068300701 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069421743 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068288911 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067822422 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068366724 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062249595 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066667495 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066870045 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067394569 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077933519 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068835805 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067453351 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066708812 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068812964 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067161607 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06411793 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076133806 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076973883 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068428058 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075149857 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066739088 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06921988 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078181681 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061752196 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065513232 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065106793 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065543153 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074629196 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067627962 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077035779 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067301738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066227605 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06428291 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067660425 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065412852 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060995469 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06413127 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069770129 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065395554 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065503699 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066937809 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06916115 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06713771 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0759333 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065665929 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067087347 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066687869 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063879554 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.197829203 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066088999 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070031803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067778799 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064565648 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064088243 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06671728 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067007263 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067730533 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065894327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067690103 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075057693 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066530445 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071288285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072041181 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06432635 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071384386 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068249562 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068091567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066623965 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071893761 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072173877 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069799817 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077237643 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068366253 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069343274 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067667991 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065898473 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06775591 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067701606 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06892179 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067421531 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070183494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076984263 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065918615 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071758195 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068129886 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0690325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074824599 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068860073 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071424255 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075774512 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068167272 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070224596 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07596531 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072696199 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071504296 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06955618 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070586617 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074045871 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067561515 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074763254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069420508 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068832805 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070178837 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066380573 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067806082 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068597764 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067618654 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074670387 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068827489 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067300957 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067612357 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066421781 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068490494 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072219506 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075484252 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070318192 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070881522 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063808031 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065236663 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069431902 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06600177 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069100152 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069628994 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072534059 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068268961 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066767276 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066501798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076771483 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073380919 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071131521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065548927 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071358417 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067964313 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069522876 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068545634 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067913627 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068824523 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071750637 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069321961 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066662326 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074961522 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071429373 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068782456 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069903002 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069042763 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068762426 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063275835 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067994217 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069468617 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072971379 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069367296 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067141084 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077149024 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064457199 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066123257 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068419988 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064495318 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069460697 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060698019 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066718171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067477338 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067287627 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061734712 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065917647 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064342549 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068266628 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066467037 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06140085 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07653162 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07522517 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069465562 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065108529 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.197364677 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062207175 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061629428 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066285785 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068827278 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070216166 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07885369 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066801266 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067516013 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063521098 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067567924 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071245583 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07194201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066436757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063905742 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067227862 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071003588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074196751 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067174231 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067487926 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071467582 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070882177 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066671856 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071899348 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065324026 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072293609 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081491645 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068779773 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069483972 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074843203 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076444607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069398255 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063828401 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068966383 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071265068 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068566467 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06964973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070688844 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084236121 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071306823 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067978479 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067586043 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071048202 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067248156 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076588592 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069306997 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068424843 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072668837 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069967265 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07770676 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071102364 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076187401 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071468832 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07114328 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067076064 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068467412 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066438102 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067178106 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069240809 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069053754 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07415493 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076552035 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066911974 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078804827 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077067947 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07017928 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064857265 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066716423 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067257159 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063250911 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068942059 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066708106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06626329 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06568046 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066568853 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068339828 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073238474 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06830026 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068782416 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067788486 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062135087 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069879039 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069922236 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06843088 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064262298 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067610345 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068292148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071724409 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07088097 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065025319 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06923855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06892552 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068036892 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063007587 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074291458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06653549 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069709866 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066987967 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067708111 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068578666 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071506275 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073028742 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067880482 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068520604 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070438603 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069702051 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065111041 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065794181 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072191624 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065185646 seconds)
  done (took 43.309421645 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099402388 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063506341 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061393687 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061909211 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073127506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06251355 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061122094 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062437589 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062456161 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064756681 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061703607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061406614 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069970444 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077328964 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072811777 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066096286 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061991072 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06455506 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063384766 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064269644 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072448631 seconds)
  done (took 2.739652848 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073622084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069628132 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071179157 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074506193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066316944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069762488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079726151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070398281 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075872857 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068373576 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077875276 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072369769 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068693148 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067491382 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067924644 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072023636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07758677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06888169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072497318 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074520423 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071997729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074275316 seconds)
  done (took 2.891989593 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06597553 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065169153 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067936448 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061810395 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065899987 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061072773 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068531083 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063566781 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068630513 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064370705 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064348957 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065420954 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069115823 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062570514 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067218414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064960963 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110358542 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070401636 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066833043 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067943555 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062787308 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069392459 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062654719 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062872434 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066458073 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071076453 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068335174 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065943302 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067168478 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066204699 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06721278 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06511023 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069056222 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067885318 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066388573 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066514419 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066772148 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0673648 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062641476 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065459533 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067472137 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06327358 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067953781 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068512382 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065165273 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06491375 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068562257 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067059438 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062457617 seconds)
  done (took 4.594221773 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079035312 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109136136 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06853924 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089981983 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081619193 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076509486 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070720677 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090920528 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064655754 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065788011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082616047 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080938817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066932477 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071555664 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071003653 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067016931 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068187117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066138011 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071004903 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066585903 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070813938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07324611 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081495138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079876557 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070597895 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065895817 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066264223 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071107362 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079340928 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071701356 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071534638 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072009516 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08167714 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068325191 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065939169 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068455156 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082583797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066978914 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068657973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064449623 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068908843 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070532451 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073430446 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082377396 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067218005 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072275603 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066747397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063562402 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079657411 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069069037 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0748232 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081018434 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070614989 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067114516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071478144 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081631446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067151388 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064993722 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06956795 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078939539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064162474 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070030442 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080378384 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068665249 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073820426 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080681648 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072099956 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070353558 seconds)
  done (took 6.426222022 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073590536 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071903497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080739128 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07864328 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071392677 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071381328 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071381735 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071377261 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070961861 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076239185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071591363 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093356793 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068952641 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076452215 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073511841 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073924707 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073644467 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074135113 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074029132 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073717573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073937162 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081291471 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074259752 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081946278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100933265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068997978 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073379748 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07415938 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081292131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073763653 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081006841 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073727877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073537187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081775401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080726126 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073335102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066765518 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073070218 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073794515 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073710018 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068696785 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081311678 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073479346 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068597295 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073013028 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07302176 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081141656 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080306739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075764622 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077899573 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073443358 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081347176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073081789 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073277061 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080894589 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105599405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081200375 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081435026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073767133 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081329982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080950317 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087372293 seconds)
  done (took 6.086573896 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082776422 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073658381 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076069819 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061258903 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063416075 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069328727 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063647394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063539796 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073427443 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073998264 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076063482 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0690584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072375579 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076067548 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069354354 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072882478 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071405695 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071241231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075735394 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070766365 seconds)
  done (took 2.75919919 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073231889 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082531223 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066361008 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071600739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068098804 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070560223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067466667 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068366926 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066457557 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067915776 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075089607 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075101451 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066783688 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070656224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075121609 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071001782 seconds)
  done (took 2.461950837 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074334067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071451251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078716433 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065675918 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063471968 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061908241 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065039888 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061627025 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061960886 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077322259 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065578333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067703274 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064836165 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063624006 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062222641 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067883906 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061797394 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063559428 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06492558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077470384 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07612707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063729336 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06575524 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065320205 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065417583 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070181412 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065630539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065034046 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064234863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067361426 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067542039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070482206 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06432165 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065011337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065924323 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064628893 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067004794 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067410494 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070023649 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067182947 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064808003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066823779 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067171493 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068232741 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063614198 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067701095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063843842 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069244093 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065035487 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067673736 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066873652 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069718567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067665824 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074022509 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070349095 seconds)
  done (took 5.017302742 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078854222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068979877 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061624407 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063444513 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068088171 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067918711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070192137 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067967871 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068608554 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065485127 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069274202 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070447038 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069162578 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071389314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069433693 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071152722 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063381144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069595756 seconds)
  done (took 2.57377213 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070933488 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065540109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071932827 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065695078 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065544465 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06849001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061483417 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064105914 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064178455 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065457713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065720397 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067517172 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064126871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068376782 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066617203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066685513 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069243417 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065941332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067159798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063210809 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06935645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066085386 seconds)
  done (took 2.792060863 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091895683 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082221273 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137732667 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077959725 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08340301 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071397383 seconds)
  done (took 1.875620265 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091319324 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078711049 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066799898 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087872555 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07340266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067060829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066872282 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068487185 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077276969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077541725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068967262 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077582286 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07625209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074980098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072718795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073787188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068792969 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067260318 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066235352 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08466782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06913917 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077392335 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0691934 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068619585 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068829484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076427254 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077639453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077805225 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068606903 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077544138 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074249803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068875885 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077957952 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077727791 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070608205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077664569 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069132778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085651124 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074339455 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076637504 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070421619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074666725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077536511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073376257 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076786003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068987905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073634312 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068881136 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068734817 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087306002 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074633397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076365903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074571443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077689633 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07732591 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086685767 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077385401 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076306301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07452798 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079745063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076603851 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074372321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075713455 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076604391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074883386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076165137 seconds)
  done (took 6.274141493 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080480536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085288503 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067590358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076310785 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074623026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067014761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067924521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067050295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066811731 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066635292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106458756 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067470132 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07488985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074863359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06720479 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067220475 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067305074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074740489 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067392216 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085623604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067842572 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074997786 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074691294 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075170726 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075248395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072346623 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067489338 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067270993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067384913 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067536692 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073022052 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067693107 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074794175 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068478223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0769355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069614698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069074561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073867624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06907198 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074592056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076957693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085253915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068885771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068849205 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077304702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068759448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069071278 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068482465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068863491 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068307707 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077226271 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077356347 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077610489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076747876 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069064828 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069006288 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068633758 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068620727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068657179 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074274558 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076368195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068702308 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087403533 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069173403 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068647165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07664176 seconds)
  done (took 6.146229991 seconds)
done (took 129.8098943 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184680268 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16582318 seconds)
  done (took 1.677452367 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068719855 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096485533 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076514888 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12903396 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066408306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099759216 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098693357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07790693 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065626805 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065756183 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065928232 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068203048 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13109584 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066144852 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065786604 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068518651 seconds)
  done (took 2.650632256 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096521114 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158072575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099880159 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064350511 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096224404 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072547407 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064260593 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075043886 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070383429 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064658353 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072690274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070178601 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064848261 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070008826 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070627856 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072315783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064213753 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072498291 seconds)
  done (took 2.762424676 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100391785 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091524913 seconds)
  done (took 1.539463688 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154216799 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10478342 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150076834 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343837421 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166129733 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229268874 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1268348 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127167314 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116969695 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122767113 seconds)
  done (took 2.987198479 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096888692 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15187651 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254302836 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114326806 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071766422 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09453552 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11543584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07740532 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079890249 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07979896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079824549 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075909382 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097747035 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07285174 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072788695 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076622403 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104317578 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071622927 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073482726 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076281232 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100668524 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065900898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073736724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072104849 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076664782 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077065231 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065568517 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065129928 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07663185 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073549694 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076157392 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092630019 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076537209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105818555 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069555313 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106998659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075794012 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073225191 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073402771 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073233998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078321544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078410555 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072023073 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075764333 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064844972 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07677726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066519649 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067209188 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079943569 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068991612 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079696847 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078951558 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107789161 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066627961 seconds)
  done (took 5.94157727 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100477079 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103543466 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071316278 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110233409 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099136858 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070779618 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100854378 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092661951 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102150084 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069806419 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068051003 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069827929 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081498007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082676783 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110328181 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.1038258 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073225174 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069986827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10323043 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101802692 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068147511 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094601494 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089255152 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10092782 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066987924 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070037413 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067599102 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069734056 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078156281 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080276285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071319259 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08146356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083928213 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077607811 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067023502 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06744614 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067742223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07841068 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078819422 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078118946 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07702178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067177182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067444248 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070075556 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071747847 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069038395 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080854454 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08183117 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080639024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071175426 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071414619 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067470917 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070758552 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08085941 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0776243 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080061918 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079224276 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068054418 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067945195 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071251029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080342127 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078831454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078032349 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069262169 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078396548 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067837132 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079342263 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083285999 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068398915 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069088149 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0686553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071051772 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071364589 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080173758 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080136261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071640422 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070973221 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069998392 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080547434 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077888086 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068094995 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078418003 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068552609 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067897544 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069610802 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069619405 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077485382 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079441074 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076864562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067718486 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068821855 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067926332 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065836255 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075171694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078071047 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076288926 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076598787 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068123752 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077438543 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076439496 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067966454 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077414003 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066898102 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19736869 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069735205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079324113 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077823206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080577647 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06957037 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068098254 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077975441 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08071325 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06826554 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078613643 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080989046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079897268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069087503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08141855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06838128 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080382447 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069857436 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079103095 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06859936 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079036988 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068603042 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068323345 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068579736 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079346203 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071281135 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069269193 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069705712 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070018462 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078889852 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082449383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070307989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080891659 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077748924 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069734726 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078314159 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068378737 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079067015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069752785 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069885427 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06762973 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081977927 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068166343 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069032928 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069225987 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080061123 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069348112 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079665205 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078446716 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068042002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080580582 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079999402 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076458323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080776971 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069763431 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068108517 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0682724 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069627724 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077861364 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080637509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070274797 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070749367 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080392188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082384042 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067564116 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077519398 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077587281 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078075311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068525733 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069291399 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080047854 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080339453 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078222101 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077941474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077853531 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068035666 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077348752 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077591976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067454438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083680937 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067621894 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08154157 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078348602 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076379044 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078279761 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079717104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079717563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079794407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082010968 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067644556 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067508882 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079107846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068156673 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068935448 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076594948 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068162117 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068105262 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081140106 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066855646 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077395389 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066538218 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076896734 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065538557 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068223349 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080654865 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198608672 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069982607 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080634582 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069869916 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078661552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080281034 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079074924 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067710863 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06995941 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079724835 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079645589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068437876 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068352979 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070833955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078352651 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078413345 seconds)
  done (took 18.587664311 seconds)
done (took 37.500082896 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208160139 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151391474 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178125949 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117375058 seconds)
  done (took 2.097918853 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119225402 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099741554 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094756472 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064726073 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10082883 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06450312 seconds)
  done (took 1.92480557 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309279117 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209204115 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181240646 seconds)
  done (took 2.07662289 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19694305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191068316 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.396011557 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251330152 seconds)
  done (took 2.523174661 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142121278 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088203797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066252353 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082541571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132957263 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159469296 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100171697 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125368304 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077483151 seconds)
  done (took 2.403230943 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146493018 seconds)
done (took 12.552257863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127297473 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097916366 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108790316 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113531483 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21485783 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091415791 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.134876614 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196828777 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103414002 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19759664 seconds)
    (11/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.178390127 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083252265 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075170828 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07929125 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074815862 seconds)
    (16/309) benchmarking ("sort", Float64, false)...
    done (took 0.126779789 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103042562 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126502738 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079008598 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091976891 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233449764 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074542103 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.101972458 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196393782 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072873941 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.176556487 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102470434 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090629545 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.191162969 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157710913 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.180876127 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074635811 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.209640881 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152983262 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.090636532 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073175365 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194193998 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138124087 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074171671 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155311635 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136109687 seconds)
    (42/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053068777 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088900661 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196293707 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071996096 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172225283 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070979263 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075883835 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10659082 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073925765 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189885525 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087729201 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.074942592 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092359562 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.125567406 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070326747 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074546496 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.188239355 seconds)
    (59/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11226702 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069017735 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074802566 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143551472 seconds)
    (63/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.074261409 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068527347 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090963709 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09518459 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188435615 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070459855 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09773464 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162422283 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.152220169 seconds)
    (72/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067822576 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075072579 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074487974 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051922425 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086204622 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147558543 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073894477 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065223049 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.065286759 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080370635 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077682206 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10731864 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084806953 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.218847898 seconds)
    (86/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052177964 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145458402 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079926758 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.288901219 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174325575 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.10931984 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087168948 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064748745 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052307442 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088480688 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050680193 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099019547 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072246356 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079931704 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103866797 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071574114 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157996507 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051416229 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.155651775 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088874986 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075741857 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068011256 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.163497324 seconds)
    (109/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196220136 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060383194 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173236177 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051306326 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088908378 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148727921 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070447625 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076931639 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147846826 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071704979 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134152851 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089836502 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067140996 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05087187 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138035713 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064710154 seconds)
    (125/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100075642 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053208413 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051887629 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053384425 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118502936 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066233077 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052904886 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.135697914 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053986958 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074688663 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093909713 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073866208 seconds)
    (137/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082474594 seconds)
    (138/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101024519 seconds)
    (139/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077374193 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07178981 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073361941 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065327504 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181848667 seconds)
    (144/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.0536964 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152797254 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072843908 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072247207 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096309269 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063190672 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094881474 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161110701 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066602947 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073325491 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066446398 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066158492 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073921379 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064389542 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06889145 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077351015 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067383688 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067174753 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073436392 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052669764 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093543552 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112957762 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063198742 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.188577563 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065488862 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052871628 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054160364 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151696322 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074379475 seconds)
    (173/309) benchmarking ("sort", Float32, false)...
    done (took 0.127310823 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077161881 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067311462 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.198005506 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148074434 seconds)
    (178/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091521212 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053815887 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072843369 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052371879 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053463931 seconds)
    (183/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11825263 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050574296 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076833646 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065883145 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050871572 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089907871 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106224748 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074921617 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141784482 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067808016 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074652985 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052243271 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.215612701 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066220533 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066427081 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076047699 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067191814 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072060751 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070948919 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125243746 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086223984 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089981439 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073367455 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067516152 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072121026 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052890595 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139767511 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065622546 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053416801 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06694207 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067297668 seconds)
    (214/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080809412 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186303635 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071716351 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071091493 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0529885 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175823259 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07414398 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072120415 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052584809 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066548794 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.0912657 seconds)
    (225/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096264603 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080004021 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071119449 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051538871 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070353801 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179804581 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167961046 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072503722 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063360799 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051256162 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051206063 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065242797 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141628606 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071194472 seconds)
    (239/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052657118 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135544861 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052303443 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064305411 seconds)
    (243/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051738158 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108084102 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052704379 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050999034 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065459583 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064928448 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082219635 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052478272 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073264923 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06438969 seconds)
    (253/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064738448 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052137069 seconds)
    (255/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067178715 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136219882 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174221243 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064405593 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071314237 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070514423 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066150244 seconds)
    (262/309) benchmarking ("sort", Int8, false)...
    done (took 0.138029544 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067491883 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065298533 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07673627 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065995488 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070619259 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134714667 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060665798 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060105156 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050869945 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110776987 seconds)
    (273/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051993935 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07173824 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05316042 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087460887 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066449794 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091398799 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051063418 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124328282 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077707102 seconds)
    (282/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07147512 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069112287 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051145879 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064695939 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071692381 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050728723 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063480901 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053832779 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063205487 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050844651 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065266922 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072192757 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050723678 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064233275 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065253428 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091230503 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073701464 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070323771 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072096383 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066637821 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064778065 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06591221 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069915753 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051945084 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05094283 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052167377 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086523037 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093981266 seconds)
  done (took 30.578088268 seconds)
done (took 31.968036847 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085170955 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092883395 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074496412 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093003174 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080987994 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076764164 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072404556 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07841757 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079911386 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081474584 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078158865 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055215084 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073996245 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073927543 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074764196 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091063103 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077748869 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072879402 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073022106 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064659201 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073124918 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065412371 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067019994 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054742934 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077783126 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071377379 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071888185 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07384562 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065957316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06573124 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069260733 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073169747 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065425226 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078097541 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072289647 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072914069 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074468636 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075881009 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067631627 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065782124 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073812052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065577374 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072305192 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073135589 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071696226 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071442577 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072484411 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077409057 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091021977 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071564304 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07384072 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075167095 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075514275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072163645 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069014755 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074554186 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072738014 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094442814 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075369924 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070618632 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076418121 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076035183 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072871696 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074933601 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074525633 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076948705 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077581465 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073118471 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076675541 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072415949 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065513561 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07237036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068665545 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065401437 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074969439 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076582633 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064218398 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070700902 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072429172 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07093032 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064378438 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06713056 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067052369 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071479005 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067073596 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054607491 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068506241 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071229451 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064374102 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072720398 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072686386 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07388187 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068800511 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077378771 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066524575 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071588449 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065846954 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066995606 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068547522 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07157729 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067003742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070060615 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075707281 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068853999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07293579 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081062592 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067176972 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073608051 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066277375 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066428994 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081041494 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076510797 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066871692 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070290913 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065857109 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073552555 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065960731 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066639745 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066530904 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066870839 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071647424 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066082036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068894587 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072841394 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078280866 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066127904 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069359694 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068836714 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066078777 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071683881 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065426877 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198793775 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067979549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062265028 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068555328 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065559832 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07315955 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068262 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073190689 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066934449 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073734683 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070594093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071187203 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070525334 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064781571 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059451329 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067917638 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06836135 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067251408 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065285716 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067076588 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065163974 seconds)
done (took 12.519745419 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066407012 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141752876 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099226258 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095162329 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085742153 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066948823 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076060565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101901378 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06755328 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101929494 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086882073 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08484456 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112055637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064842201 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065431133 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069312383 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067345043 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081858808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101053181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086851298 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115657074 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065421462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093862764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089700544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086864142 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101513989 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066989536 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069719512 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069377565 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090635837 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086691005 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069739647 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066677233 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099525454 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092052719 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083001601 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066392632 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082207072 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066339469 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065701702 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067044755 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097593979 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079427525 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080451097 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06959021 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068996402 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06695677 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083188975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088566859 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07845326 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08599688 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101881466 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06845158 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065477484 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064267684 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084865807 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064863058 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06881106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06595049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068104743 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065943252 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068824243 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082791496 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083927855 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070767182 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079787804 seconds)
  done (took 6.773937367 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083168001 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08962922 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083183216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082626406 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066120137 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067321398 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068922353 seconds)
  done (took 2.023702679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066488211 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087636218 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088995748 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089171905 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084233453 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089945297 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0779538 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068540261 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083868106 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069496203 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09236902 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105854631 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069329782 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07525696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09109957 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06625558 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090304603 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066797927 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071939593 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093042066 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07067012 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.084968086 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071576028 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068995398 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083012768 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068633979 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116392417 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073964041 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070051522 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071534904 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066307479 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109637692 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082256489 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077981517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068482796 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082859945 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082590827 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066823147 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084559092 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073621027 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082134803 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069232389 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069208243 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066220219 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073127417 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078474061 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069275035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06886058 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070975201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088642856 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068697731 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082139249 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071726501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070963568 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069472654 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071757794 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077881862 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068859188 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088001159 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069768419 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085447037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08487888 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081689782 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08507531 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07035659 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082459111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082159079 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070500651 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069901334 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071656331 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084887678 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066447577 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069916755 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078940567 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070250758 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091941798 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092052755 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06982173 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078069297 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068944317 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068209706 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068226112 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091626154 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071291455 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067931743 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072711956 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071338416 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066474144 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067655138 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07189225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066204013 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07006189 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070982157 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071220584 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070970119 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084893497 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070568366 seconds)
  done (took 8.93013333 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068045748 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068425335 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069083036 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068465283 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068253158 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067619824 seconds)
  done (took 1.915017508 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092845648 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069276064 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080063312 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072475752 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104015224 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086030269 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086527923 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07827087 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083318903 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078207117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086112851 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088328774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092543272 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07220048 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08673932 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072055327 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087034165 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075402652 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078083039 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073197949 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086044831 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072746575 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072724113 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081020689 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074884711 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071616661 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067384026 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078206305 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078004241 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078333881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072395137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075068856 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070508982 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077938625 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086278943 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070217752 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071307375 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07667301 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071974788 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075259877 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087838013 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072838807 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074174078 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076742445 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077845696 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070436766 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076903483 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075672115 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085646504 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07681476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07698327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071135315 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075290463 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077076321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070436023 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077742538 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076714193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086404563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071989929 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070301073 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068403336 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074825449 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077625199 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074902182 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078090726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076193459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069908806 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071728767 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072155611 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071017751 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076057842 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06866697 seconds)
  done (took 7.042298495 seconds)
done (took 28.155928641 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544666605 seconds)
  done (took 2.016471695 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599544119 seconds)
  done (took 2.096782917 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.631489172 seconds)
  done (took 8.127060245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.387908696 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470039623 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691836615 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129988753 seconds)
  done (took 3.223651734 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674160622 seconds)
  done (took 2.180362325 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209620081 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197123748 seconds)
  done (took 1.925013368 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376389873 seconds)
  done (took 1.873763532 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.118432112 seconds)
  done (took 2.618157721 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261278835 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162249118 seconds)
  done (took 1.922266542 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.468059661 seconds)
  done (took 1.965546699 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.840879873 seconds)
  done (took 6.342430402 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211564987 seconds)
  done (took 1.758400498 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239138475 seconds)
  done (took 1.741115967 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710713967 seconds)
  done (took 3.213103 seconds)
done (took 42.505470727 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080545103 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081352641 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080754603 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077621684 seconds)
  done (took 1.809523404 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076731451 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072985848 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076632561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072949299 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076771429 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072427378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073867012 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07654303 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072278328 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072954428 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072242409 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072343751 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074789137 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074584505 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071011181 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074751236 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0761147 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072688054 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07510588 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072551547 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071129473 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074609168 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0748666 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071959944 seconds)
  done (took 3.277019368 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077571409 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072737462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074150671 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07159437 seconds)
  done (took 1.806519849 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077471568 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091911965 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089517302 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077281609 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091456856 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085577861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069062564 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069226898 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072523948 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077162273 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06822927 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095579781 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087409786 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076987969 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079158135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066039044 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068432953 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086797679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077092112 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077457925 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070340587 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076977766 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067952099 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087565548 seconds)
  done (took 3.394203898 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078216366 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102865144 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077404427 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087615093 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08998897 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065590177 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073973637 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089327746 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123081408 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.0652311 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069907317 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065414607 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072344397 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065439772 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076091916 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104700913 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107819185 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068568155 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095270352 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065270368 seconds)
  done (took 3.160807689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072854415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070238923 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065908117 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068367478 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077737664 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072312507 seconds)
  done (took 1.943901899 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06804397 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067064605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067287755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067288075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071907758 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067064658 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06704146 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067047624 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067255271 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066825097 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066278896 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065636826 seconds)
  done (took 2.321807868 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.419118959 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068003946 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068662148 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065333904 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070450262 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067192089 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079666936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06779191 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090236124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066574701 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066381289 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069128118 seconds)
  done (took 2.713736245 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206122798 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076295216 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235651436 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137194879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111005273 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115447131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104365426 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113086665 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142306182 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101303177 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166485348 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164725011 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106808311 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136965565 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088995178 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097909598 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154893655 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161356785 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102877958 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164493117 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143129721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124337417 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146497691 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101104752 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105559534 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121396336 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070813121 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080038292 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169432862 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13091246 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145624239 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111376842 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093491252 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175717194 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1702791 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142066925 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134183883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083323627 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102520809 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132732781 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196613441 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087462469 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161041406 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245733904 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082385862 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132465807 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119745377 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119158205 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107743683 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089695399 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145599185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182009503 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138386573 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086389093 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112198958 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114791027 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116060269 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103693078 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180783315 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160745026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126667387 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070707289 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098938269 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153533704 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131234367 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108620146 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125665266 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094016695 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133598058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15752274 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118135292 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142337687 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128436865 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088510153 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1187708 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139195607 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127692989 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169178303 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123982178 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072649869 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125059217 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103374555 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081445082 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142968326 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075433296 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174765355 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098534865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105648311 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112445739 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108136724 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107882505 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159263233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141966458 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247492456 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066247604 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103776539 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12051942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147607304 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087279511 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110169394 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116443337 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077379897 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138187511 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075307018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123367636 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07552701 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125505442 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131736642 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075814583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121016015 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100787683 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100219825 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13346638 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159396048 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089276534 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082089675 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166601735 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120801022 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105164354 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144858681 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155618701 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103099079 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106486978 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150933364 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178218261 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089878502 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162631915 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107282619 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083713657 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087689406 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123561393 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112430494 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121936413 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082270213 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11833064 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169266075 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075152286 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095268199 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132640997 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078621769 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08021191 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102212304 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099474267 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094241549 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099682053 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106130794 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137895211 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121666409 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104448064 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273637944 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099058542 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168876979 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088463828 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100969663 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104430608 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069903537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13636688 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156542567 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079223851 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163880856 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122363238 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10497703 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119036656 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083003729 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140659887 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078717466 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070069706 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142722736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11065308 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110636344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150736804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104456018 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126875103 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119802867 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134189304 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135269786 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134120383 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109098489 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089839118 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111730222 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125149217 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073488739 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091034879 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081504263 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106871208 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097064288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083214111 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141593296 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124080151 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102446995 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112010194 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096347893 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147138081 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076404784 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128371198 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11848175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093243966 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151059263 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150778369 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130977903 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09904107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143020273 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069814581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074045233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234823616 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124409198 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083677605 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084019331 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118171362 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146987938 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129589121 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137599914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112560325 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120877705 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155449804 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069869817 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115346479 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146881592 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120975624 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104694234 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091427407 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098380808 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141790071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10787836 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180636366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114416339 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126047958 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152446227 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099163218 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084002085 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10286932 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135023219 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104569255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14422283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09954794 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089021644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109338673 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074302683 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099737653 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126945042 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119246044 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135219901 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114579431 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132576653 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07721231 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116145885 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120000407 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122042111 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064149682 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118843906 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159837602 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093260686 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117592636 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151277029 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078663781 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126543385 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323629655 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147967034 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084531736 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109331343 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118738231 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128285603 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122132646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140963368 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107808064 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135189185 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11003004 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085813446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087101753 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097918008 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104736351 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093998381 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107837302 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11456956 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095295428 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13184171 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102756759 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109334162 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117590742 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098602375 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09033971 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096845669 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174160084 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119712242 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173078076 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099931369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144503299 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162880184 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074501213 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078564416 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077721388 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141297882 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086673547 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134835224 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098104729 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105756882 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123629843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140871684 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095042635 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068534238 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108475711 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133823631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112023547 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097583101 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103482748 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161112641 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099906411 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078731113 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11291423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103879424 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101513674 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315666079 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062268769 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098423954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07647485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081044977 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128716041 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152006377 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080230263 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103437102 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119328088 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110638438 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12775545 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101513795 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099856254 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114706554 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150994422 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129667705 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09065674 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128918051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128910671 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156399916 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104762247 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095476139 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171948613 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152182626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164097814 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095794342 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117170579 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116950412 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111926099 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143457869 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085891433 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16624148 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084620998 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139412319 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107584737 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09323395 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131307813 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098571848 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087888789 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147437999 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117508967 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082560594 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077660397 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11744246 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119991169 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106414753 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074957942 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137628291 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072322062 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131190943 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167630957 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080322371 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103267812 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241394031 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081833339 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108612412 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103882713 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089836751 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099305919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173346728 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088568346 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149868844 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140974582 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112905731 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136772401 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099488754 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635713219 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078287196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151034329 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116420663 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172038498 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097268045 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116926968 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109356428 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123231238 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145680056 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104484624 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178060972 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132332223 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1162327 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079628659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102226387 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102374244 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088440494 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104880172 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113208061 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116050825 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093482359 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115189024 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123083525 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08553884 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094937266 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155653105 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116350876 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143484167 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139630255 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084930639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116610798 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137896174 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079240426 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121027914 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150206043 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105230392 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096651429 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.22338686 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103621807 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169297998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073263954 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161633251 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120628698 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109681018 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113726887 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115940281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13102462 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106618775 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120985217 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094057998 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111972777 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113355893 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08180483 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07685236 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105719577 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112378695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098447295 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099592779 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098363838 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151739244 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071620965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094954974 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103717373 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144421296 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174988665 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088459416 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082938379 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119060035 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112434778 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112806313 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120299004 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079058946 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082010052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081803059 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077014981 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108215906 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113593995 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107611379 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112337692 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163567351 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082475039 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225705624 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095554346 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104772276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06976367 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078713834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09541699 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097062835 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107623858 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1001033 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167196895 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093316982 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089094084 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091236862 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072558984 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081593362 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272521806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112126176 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120130784 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097860175 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062706121 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108995554 seconds)
  done (took 58.870211473 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108183607 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082860588 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096996494 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149285726 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122028063 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211771041 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157664703 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199338393 seconds)
  done (took 2.754300447 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068510997 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094066027 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10041892 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084716478 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066105597 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069813529 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22374433 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080654323 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067919799 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088331579 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07989348 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069079622 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422721155 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068405041 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070014601 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063195631 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067362829 seconds)
  done (took 3.401538566 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365286156 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602501822 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370893933 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073073702 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.852485487 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092391781 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.034632759 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130025941 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074277658 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525361132 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705980526 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12736437 seconds)
  done (took 18.578451171 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076587976 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069903657 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084844951 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083849395 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073324982 seconds)
  done (took 2.007697215 seconds)
done (took 107.601399601 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080956572 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390203018 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053854507 seconds)
  done (took 2.092548216 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083165837 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085611012 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084615519 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083080823 seconds)
  done (took 1.965168645 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074048222 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07638729 seconds)
  done (took 1.770914475 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223348077 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138806297 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086904008 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082003385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077871931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079181156 seconds)
  done (took 1.867257942 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072757121 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074654217 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072493298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076158731 seconds)
  done (took 1.919919427 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076193886 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052816868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054544751 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056435032 seconds)
  done (took 1.86469598 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08626255 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078575827 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078584902 seconds)
  done (took 1.870482586 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100919906 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084507339 seconds)
  done (took 1.809721716 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082065286 seconds)
  done (took 1.707045574 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098958565 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114082433 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128637457 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109205178 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135701561 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108524535 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084680531 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086267322 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07680292 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.0867556 seconds)
  done (took 2.650505903 seconds)
done (took 21.668335375 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079131248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.358285954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361293275 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089138732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667224931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356183087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.963705818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091635156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113373322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067251213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083617689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648409298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955346821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318360739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94476748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31492953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650326668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06839669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067493399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06804955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951512566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067538169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067341996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06807146 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648292542 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370800005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068076144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31563379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067319543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069052014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354840397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067625086 seconds)
  done (took 15.993003016 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070966595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117666376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074095008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083322585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07048091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06946202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071149391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06928162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11873536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067495413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08411879 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067221377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071555148 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068176451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08705191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068342443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068422554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068453439 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06798683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06838073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086352825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067470332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068110793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068333331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067616641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079388126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068089096 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068127367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068809461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070354568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071070809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068939967 seconds)
  done (took 4.020170802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113894077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124742117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074065504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102739983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112217297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070296528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143003685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092154389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126862853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068646474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084172556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068020957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100598168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069093731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087630024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068688706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069209086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068757283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06796324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068537655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086998323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067737594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068366895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068546029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068651552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081362604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068665628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068229446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068655727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07041043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071581476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069229032 seconds)
  done (took 4.276580177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072171162 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075566647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082495753 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083432778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069863204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072091673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072297978 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069616967 seconds)
  done (took 2.236017402 seconds)
done (took 28.154625376 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078954164 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069490335 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072590106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080863686 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072557989 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078604777 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067196366 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074374465 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071704641 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072753414 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074757121 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067435926 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070740934 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066994803 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073110143 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067892724 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07888192 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073360279 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078623139 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078806694 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069853885 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07270555 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074134845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07906869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078912407 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079444056 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077304735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072566526 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068867091 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070338963 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076285236 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085330626 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070790109 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082284765 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068343865 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067800084 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071280383 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067556312 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078821194 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076456727 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069308011 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07572992 seconds)
  done (took 4.724456918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087335756 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090979862 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084221431 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061216396 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066451317 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064969546 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087872152 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059533569 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059421635 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087092923 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055667003 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059009037 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062281874 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053822379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059325528 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056867577 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061439308 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055776981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05903731 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059067013 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058536106 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054098414 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059829633 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062293966 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058392326 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061993629 seconds)
  done (took 3.336115313 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074460354 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084663938 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088814329 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12731551 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104483558 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077036972 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07797441 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09241653 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085369379 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067000324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070724028 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094046277 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088150833 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073812903 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067580646 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084591906 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082272187 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069520214 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073858135 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090582766 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08414196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083273754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093486881 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080680144 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06663313 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06905283 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071874188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083495643 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074928389 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078792747 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073434188 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073819652 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071490071 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079511743 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072965178 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071398223 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092529207 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078006358 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077617097 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07126286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070481516 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06848964 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089618849 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124304735 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066804323 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.084688505 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075289104 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076642714 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067409334 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085823223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078453539 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066817837 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070158608 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066782392 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067259261 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079495412 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06970475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069532542 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076407195 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070290528 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085490114 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071144651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082010912 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066540582 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074291181 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066656199 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068086749 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065999985 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092080189 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068848008 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107341113 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06879896 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068448265 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076142894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074881041 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072853342 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067483232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082170315 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080007047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073004 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07545011 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070944369 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070047648 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087649764 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069190149 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068705065 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067966588 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073307875 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069598477 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068514891 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079630325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067200718 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070059715 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083909139 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067031979 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06893983 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072968279 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071783896 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066711264 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077773706 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072068509 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067609087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076219858 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067445559 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06987976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076914317 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072663286 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065710332 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071493032 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07332322 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067885793 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068089761 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069668378 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068776664 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07484362 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073269931 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071063433 seconds)
  done (took 10.565545083 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160416768 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153962949 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070470452 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145354784 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076388904 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078961467 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147323025 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094185642 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067520843 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068735061 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068999681 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109285024 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1057419 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114914471 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078373187 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068027849 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083197012 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113506058 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148874119 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142544531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083815939 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076408892 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069779043 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068927904 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070517591 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07836006 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085685318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076453023 seconds)
  done (took 4.388596447 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081437305 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096845943 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07423369 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088628126 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090708003 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067588039 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06998477 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069351317 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080309544 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078132881 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067404663 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072920663 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074313456 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070694195 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068738112 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074316371 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074831346 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068798207 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070709375 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072610293 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077164939 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080860711 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071279478 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066689896 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073841595 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066740111 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064091944 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084174082 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067739605 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090053816 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065481596 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074824976 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081421597 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068354259 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067011599 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067594173 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066976452 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067405646 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069367204 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066311674 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065917835 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05753554 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066825979 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079000566 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073636128 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05634203 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071969014 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072555168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072579092 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065030141 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070168804 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070325774 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07041934 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074059894 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072418878 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072275881 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068461011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065711431 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075356563 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067011996 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064312578 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065637677 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071587453 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065536505 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075269482 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071571439 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06583331 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066762694 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068997784 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073343226 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067117087 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070549245 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064754697 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069084503 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071865946 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068913352 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068301213 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065928015 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066646118 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067642802 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055350219 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067556671 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053268354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070031358 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065378216 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065765158 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067391137 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072279421 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079380483 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068261766 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073007217 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067862231 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066269342 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0699765 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060396723 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070125992 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082340164 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082577953 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067049002 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065181884 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081483731 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071451431 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066147721 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056096522 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074395101 seconds)
  done (took 9.09739635 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089405841 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069825272 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083691951 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090732115 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087268938 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074625917 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076344439 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069339216 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082105096 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073601157 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076343897 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068075553 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077161604 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076931432 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069962734 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077065395 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071948759 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08293953 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082044838 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068723242 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07555389 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079741616 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08912337 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08029527 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077940819 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079602881 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089239519 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072094169 seconds)
  done (took 3.879410276 seconds)
done (took 37.628487698 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.718730613 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.902306518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.720075769 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104304413 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.904146243 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.730851357 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.870104318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.710688039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.892100667 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.761857074 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.957746624 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.779354886 seconds)
done (took 64.710278754 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.776317069 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.849398768 seconds)
    (2/2) benchmarking "String"...
    done (took 1.984195455 seconds)
  done (took 5.484802229 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.012240399 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.315419503 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.956356348 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.708377628 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.715920794 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.019184329 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.525434222 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.240121095 seconds)
  done (took 30.133983369 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.898632566 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.946471698 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.438828505 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.469196662 seconds)
  done (took 15.466260189 seconds)
done (took 62.622012239 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.728185359 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.716673536 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.733661424 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.694381366 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.767693916 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.715527426 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.848950061 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.929254623 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.711407955 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.695520128 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.710713427 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.128548677 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.715878149 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.804336904 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.707686332 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.715609388 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.725896467 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.140771606 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.862668923 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.722071834 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.720946027 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.760539933 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.70342979 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.724906271 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.709722251 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.704816547 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.123330313 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.705330558 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.320717205 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.707955801 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.733536001 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.967005566 seconds)
  done (took 202.30977082 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.704336952 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.571713728 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.649096683 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.707682576 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.052232039 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.895193268 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.849761782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.169854352 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.706409771 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.727036844 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.843333296 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.708197384 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.909293095 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.703041917 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.735951195 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.713949213 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.874428305 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.895854289 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.735402227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.871992408 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.711270897 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.713210482 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.655982459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.846871945 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.721091143 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.767729867 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.870142175 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.737529088 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.909577732 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.83526572 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.716933686 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722531142 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.935218987 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.585979514 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.713129145 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.722275649 seconds)
  done (took 166.837370701 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.872083768 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.708015703 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.706618054 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709600022 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.719776557 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.707977142 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.70744922 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.837705198 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837021077 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.174569583 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.966009016 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.761872536 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537059989 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.707959468 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774631992 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.72051543 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.710075558 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723090161 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.737119705 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.707688415 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.708963036 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83562914 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.722611496 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.820938453 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716290804 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.709585939 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.713866706 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.088501846 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709771053 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.714862456 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.967037166 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.709846492 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709028553 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605286119 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.358767589 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801756162 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.710717248 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.714715951 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.709013629 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.930291953 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.709248075 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710149165 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.708401247 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.711916172 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8862482 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.709214223 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836179143 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710501481 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21078456 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.710842688 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71045856 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.869674797 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.374160623 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.70973047 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.711939527 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.712136409 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.710002055 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709146629 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.714883158 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.709336961 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.785304081 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.710607038 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.71283545 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.713751741 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.70935149 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.918761236 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.7129763 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.414427407 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.769787485 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.821014444 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831015776 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712841079 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777126328 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803947326 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.709171916 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.709835158 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.709965998 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.709106653 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.790517208 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.709724535 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.83248039 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.717639479 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.711769465 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759885721 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.778485095 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.710328531 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.609848452 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.712277285 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.710477456 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028733615 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.710219098 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777720482 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.709830934 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.710715481 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712537675 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.832318431 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.833520345 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487939637 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.714914151 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.709940155 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.59680612 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.716808296 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.901640507 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711707024 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.890867227 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.711694289 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792811567 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716183024 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.71376917 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.711710694 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74318971 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.712256565 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.768711929 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.712110223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.083667986 seconds)
  done (took 393.89856103 seconds)
done (took 766.634082621 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.38842097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.337742013 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.453850205 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.369494522 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.345378812 seconds)
  done (took 13.548380575 seconds)
done (took 15.201028613 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.797531486 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.802665537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.737238042 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.801632083 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733362008 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.801396336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.782170699 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.738348518 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.769084405 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.737445296 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.771560808 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736905975 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726342682 seconds)
  done (took 24.590513229 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.947258965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.964632454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.785261847 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.955724978 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.764174949 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970804495 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.880081372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871351054 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.883458329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733661257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727644163 seconds)
  done (took 22.139854342 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953502544 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.951496225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.788382623 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.956243971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.764372519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.952204645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882495317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871763296 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.874326458 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732090839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728000454 seconds)
  done (took 22.111409919 seconds)
done (took 70.496477519 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.723058675 seconds)
  done (took 3.378790003 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.742992555 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.881379825 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.727779539 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.728233238 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.723549655 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.724431711 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.727429104 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.722911675 seconds)
  done (took 15.636868971 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.722707072 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.723665145 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.723115194 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.719574631 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.720779995 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.723743577 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.723615641 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.719994338 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.720691928 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.723625206 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.720709543 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.723085619 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.724855662 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.724196823 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.722290671 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.72073221 seconds)
  done (took 29.214461863 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.724307521 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.721348066 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.722946354 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.721730699 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.721574973 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.722917761 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.723036692 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.721495722 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.722965362 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.723288272 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.722242715 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.721848401 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.722517995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.722056828 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.724475416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.722677827 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.723027642 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.721982904 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.726201007 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.725308428 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.723635182 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.722805054 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.723360568 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.723482624 seconds)
  done (took 43.011830839 seconds)
done (took 92.898112668 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.621000198 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.110369934 seconds)
  done (took 8.390186366 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.727090039 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.726407998 seconds)
  done (took 5.151312752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.724780054 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.726290215 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.724911639 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.724680712 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.724477623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.725574603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.725667196 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.725025221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.725947481 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.725769363 seconds)
  done (took 18.911734614 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.725633514 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725795244 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.722925065 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.725601455 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.725355039 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.723763849 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.725931991 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.726271344 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.72557453 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.722744069 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.727376383 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.723482912 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.726745168 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.723887795 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.726475526 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.723156031 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.72426867 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.724037178 seconds)
  done (took 32.709848625 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.725927754 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.726757273 seconds)
  done (took 5.11352425 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.72444252 seconds)
    (2/7) benchmarking "second"...
    done (took 1.724944765 seconds)
    (3/7) benchmarking "month"...
    done (took 1.724853296 seconds)
    (4/7) benchmarking "year"...
    done (took 1.724128207 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.723899839 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.728136234 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.724671086 seconds)
  done (took 13.73623192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.727661786 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.898232348 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.95050074 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.385799716 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.729995975 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.730361482 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.638256612 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.731225124 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.733033685 seconds)
  done (took 19.186513668 seconds)
done (took 104.857680194 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.538424333 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.722556073 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.082370299 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.801479697 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.740295382 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.01873076 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.733050142 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.942241641 seconds)
done (took 42.24089409 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.727333209 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.264383178 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.538440467 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.00033125 seconds)
  done (took 12.464997067 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.708072715 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272173891 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.772306152 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.40141367 seconds)
  done (took 19.831001072 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.091834112 seconds)
    (2/2) benchmarking "read"...
    done (took 2.092869437 seconds)
  done (took 5.852082583 seconds)
done (took 46.538233822 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728874499 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.731366761 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.726998746 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.730025693 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.72713529 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.727430667 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727015008 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.73026921 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.730143469 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.730747108 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.728012935 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.730627803 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.730149776 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729765001 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727118534 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728102571 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730144366 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.727585666 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728547709 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728280741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73075556 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.727743751 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.727565574 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.730420954 seconds)
  done (took 43.158539007 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.731076877 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.729321058 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.729662531 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.731303437 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.728343037 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.73134098 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.732286769 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.729099706 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.731036238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.731203397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728494393 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.729451214 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.731593696 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.730179766 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732042706 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729665439 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.731562349 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729069831 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731632301 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.728886939 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.731687983 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72925754 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.729453075 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733045647 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.729902816 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729436652 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.732477839 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.730420004 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731636143 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.729862947 seconds)
  done (took 53.579144072 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.737047847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.739187675 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.732430081 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.732859552 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.732709172 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.734697295 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.732407111 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.73229034 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.733742795 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.733400271 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.733381168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.735056978 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.733646487 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.732977914 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.73391302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.733339615 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.735079676 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.733072696 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.733400883 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.734119421 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.733208627 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.734245417 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.733884367 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.734470116 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.734036158 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.733157507 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.733774456 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.733483027 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.734240098 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.733633483 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.734376899 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.733640175 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.734248863 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.734203524 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.735869103 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.734486142 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.738371911 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.74129289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.734960722 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.735299867 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.734799595 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.735008314 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.734104692 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.73501804 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.73459585 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.736540883 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.73421288 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.735493852 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.735722366 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.73573181 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.735401889 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735239341 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.73588749 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.735219044 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.7352271 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.735167383 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.735433856 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.735044486 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.735821904 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.735097016 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.73429091 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.735258045 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.735895563 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.7365297 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.736402074 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.735060764 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.73580363 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.73552644 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737195571 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.736668689 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.735933615 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.736010752 seconds)
  done (took 126.577181903 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734791229 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.733724345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.732573346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734063632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733407267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736865895 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.734034564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735986363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734118784 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.736621299 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736668611 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.734048064 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734450018 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.737463292 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736723435 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733825074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.737513745 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735329126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.73800978 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.736780941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736581301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734104681 seconds)
  done (took 39.847053764 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737188486 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.737676295 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.737333465 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737258401 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.735407754 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736968111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73803973 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.73788907 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736738307 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734814679 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735266494 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738016095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.734382793 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735505654 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734849271 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.735649939 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737988257 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.734473825 seconds)
  done (took 32.927141991 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.73610247 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.7353494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.73773832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735054786 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736822241 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.739318623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735669134 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.738134677 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.737895312 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.736236951 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.73852841 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73836003 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.73925108 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736376196 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738567727 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736435092 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.739864215 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737038128 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73890713 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736231543 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.736241747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740375356 seconds)
  done (took 39.897763441 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739200368 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740006087 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737211671 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.737069517 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.736356931 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.740046034 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.739779807 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737146576 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.741216801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.739673667 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737697575 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.740430817 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.737517548 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737373796 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.736999498 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737290335 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740954656 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738526024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739488136 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737520099 seconds)
  done (took 36.445071491 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740885704 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741535144 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741938718 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740052547 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740982558 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.741525915 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741614417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.741999385 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741163437 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.741778113 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740809006 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.739912699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741786058 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74155463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741019879 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741700864 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740945963 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741310152 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741859222 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742997003 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742582914 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741280964 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.74194317 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742443302 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741530902 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742005148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742133088 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74251705 seconds)
  done (took 50.437725903 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742979182 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741802605 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.739645093 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.739848541 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.738875354 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.739156135 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.739571119 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739364068 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742158037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.738916486 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.741080431 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.74286933 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742627064 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.742722521 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742230527 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.741715415 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741655709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.74021304 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739965466 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73928124 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.743318812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74290726 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.743258979 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740466408 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740743838 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.742889293 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739921903 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741316199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744210197 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742340936 seconds)
  done (took 53.914104858 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761740142 seconds)
    (2/2) benchmarking "in"...
    done (took 1.762916529 seconds)
  done (took 5.202065435 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.741566229 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743201882 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.743444155 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741797492 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740461804 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744827659 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744276905 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74204145 seconds)
  done (took 15.617976664 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.742335355 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744959006 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.744486047 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.744322924 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.745156799 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.74459869 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751199611 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.743494602 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.745449079 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.74394798 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.750314558 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.752468015 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.747610289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743138653 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.744017539 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745052475 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.744606764 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74505731 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.744787321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744403623 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744343774 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746914803 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745985438 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.742220718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.746095106 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.756534582 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.750223646 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.744584847 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74442936 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.749908998 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744149654 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.742961259 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.745826903 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.74596692 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.745739442 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.746611135 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754332623 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747408946 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.752971372 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746889886 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746754273 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.74365095 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746023385 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.750153536 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748162133 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.746338371 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746624871 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.743870865 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.745425303 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.748549802 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.751764474 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745457426 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.744361649 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753307009 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.747478737 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753029985 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.747267874 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.748901464 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.754255463 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.756367458 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.760968468 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.752837986 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748660743 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.747025521 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755784801 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.768353262 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75381782 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.745925158 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74486281 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.747331797 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.755447168 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760871847 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.755701704 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.747668848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747902903 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.747794059 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748078663 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748549883 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754899815 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.751309065 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747008295 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748181798 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.75790241 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768877652 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.746664734 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.748738231 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.748508288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.748516714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.748999947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758376346 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.748866716 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.750289641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.748495154 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.748390322 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.751649035 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749286239 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.747463654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750757674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.746990179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.750574046 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749637349 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751406027 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.757531217 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750649995 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750394644 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.756133363 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.750516578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749166023 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.75878875 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749719816 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749225679 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.749603099 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.756709811 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747880983 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753093311 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.758194191 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.750110745 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.75190664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.74935804 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.750888266 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758637468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.774639465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.751103109 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.750744942 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.75597882 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.760292795 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750949508 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752986853 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751112614 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.748969234 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.749646453 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.751210698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.750553927 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.752172714 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7519787 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753131433 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.749412722 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.751238883 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.750928931 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.75182571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.753390574 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.752032999 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.752788917 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.753800413 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.751825947 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.752471619 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.757867494 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.75242036 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.752388831 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.752418664 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.748996038 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752893338 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.75404513 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.754254205 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.752963152 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752724527 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.751654916 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.752357005 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75278465 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.752528226 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753331935 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.752571337 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756391406 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.754211884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.756967362 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.751761507 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.750257984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.751745341 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752357878 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.752792468 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.752848733 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.750317318 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.755293425 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.760027201 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.75383261 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.753977485 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.757308461 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754147089 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75318328 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.753555239 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.755530588 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.760100297 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.753886697 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.760148173 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.753911993 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754933523 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.75381814 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.754166695 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.753560889 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75419254 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.756205817 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.760936448 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768234476 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762396001 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.754251509 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.757577204 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.754530351 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.757786343 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.760565273 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.755252159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.754935634 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754918246 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752745484 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.755791876 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.758319988 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.755407526 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.75426528 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.754617169 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.754663002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75531236 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.756341956 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.754950594 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.756605806 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.751950233 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755002145 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.75699282 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.754482041 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753435834 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753550754 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.754941365 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.756166224 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.757996797 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.764905469 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.753382683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756954262 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75539929 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.75546199 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.755679688 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.756783649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756330366 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.755525645 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76406786 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.757225352 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.758413751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76345558 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.755772897 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.755043646 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.758703682 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.756507158 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.754368507 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.758485756 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.763473487 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.756190407 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.757588632 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.758282025 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756767634 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757234285 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.764530302 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.754466781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.755923194 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.758511883 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.759811589 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.75437906 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.757951943 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.758243811 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.758624164 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758908189 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758643235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.757519313 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758405863 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.758423151 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.757797495 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.758404267 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7599234 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.7644453 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.763604541 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.758148893 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.763483322 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.758709364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.761411087 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.758693962 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.759158771 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.75886568 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773216541 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.766204866 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764727549 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.762473433 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.75957303 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765728427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.760260489 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.76283583 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758236859 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.760024712 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.758689635 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.757389636 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.758651717 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759665365 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.759037102 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.760247685 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.759433554 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.762405713 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.759018046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.758427112 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.759969221 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.760109264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.759815676 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.758597148 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.760101789 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.763101837 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760765942 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.759686374 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.759084634 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76668959 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75964008 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.761123567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.758303965 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.760488386 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.759557568 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.761337298 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.759890471 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.762459647 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.767639885 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.762882352 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.768929137 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.761825751 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770100025 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.76121558 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.762958102 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.769299076 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.758198091 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.758860864 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.761322162 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.761869083 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76875641 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.76199452 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.762309535 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.764814049 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762911043 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.762277929 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.763521183 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.761290291 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761985853 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.762680843 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771087166 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.761682176 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.764357975 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763307586 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.759776536 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.762532299 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.76250111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.760713152 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768277905 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.762492004 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.762003622 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.760790262 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.763076144 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761597555 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.762288342 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.763354844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.760060895 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.761591637 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770534979 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.762683081 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766488506 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.76227928 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.773282109 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76346532 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770327407 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.763512114 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.763287819 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.762919237 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.76298493 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.766258085 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.763072178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.765108951 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.763696484 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.762905177 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.766875852 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.763506015 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.767001651 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.764024767 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.764197204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.763711109 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773109809 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.786300305 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.76496604 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767385379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.761656692 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76523171 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.768549257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.764895746 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.763278316 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.766564752 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772873206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77176774 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.764293908 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.765306256 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.765704174 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765115412 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.765674488 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.765336569 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.76531216 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.765408411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.766846626 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.765309836 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770753561 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.765195745 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.766068293 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766145395 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.764524134 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.776070542 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.765234153 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.76581668 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765678606 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.765736031 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.76563304 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.764563315 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.765812097 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767716775 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76563144 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.766049282 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77022516 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.770335359 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.768603617 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.764849027 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.765919998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.766202949 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.766878334 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766567107 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.766397857 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767956597 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.767944463 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.76648422 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.767500198 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.76267529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.766429794 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.767115283 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766443006 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769188841 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.77255879 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767257596 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.765577249 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.766695432 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767599463 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.764844121 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.767038533 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.777227137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770901707 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.776096531 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.774712627 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.771776765 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.767840484 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770143541 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.774267613 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.766432142 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.768291174 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.76853291 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.76987744 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.76763779 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.770898917 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767608907 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.774622833 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.76790682 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.767763741 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.777527593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.768734475 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767853332 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.768381074 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.77099177 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.768175051 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.765883886 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.768549165 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.76778909 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775311915 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.770126525 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768215446 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769141339 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.766281986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.768537074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77370129 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768736438 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.769390118 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.767012422 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.768516495 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769536044 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769072939 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.766651686 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.768149328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.769398938 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.770640544 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.775018124 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.767416474 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771652173 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.769889043 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.769505152 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770085242 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.77053029 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.767326492 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.76734674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.770415116 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769941852 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.769204816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.771342806 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.769467562 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.769977242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.771194748 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770269904 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.771853426 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.779138042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.777862725 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.768918191 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.770448065 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.771221526 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.774388566 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771825942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.771155081 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771057071 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.773354941 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.770680839 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771221465 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.772333266 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.772919104 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787265065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.771712494 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770871331 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.771394643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776930395 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.770741371 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.768737933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.771858029 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.774301986 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.773567774 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.778961086 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.772042374 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778127497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771294751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.771258558 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.776066093 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.774191604 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.779011324 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.774974119 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772933156 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.772963959 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.777268576 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.78791759 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772257393 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780452545 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801130634 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.772883517 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.772391214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.772897014 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770978765 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.772829826 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.774977288 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.774327037 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.773731965 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772058311 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.772766401 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.77331981 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779216413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.774294579 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.773222957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.774085149 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.772460065 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.777394601 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.772106843 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.773977738 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.773855544 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.773741613 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.7754402 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.774998363 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.774243614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789205929 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.784087023 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.77478478 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.774691034 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.772513413 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.778360083 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.77557908 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783976515 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.781700726 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.774684453 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.775355812 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.775136703 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.774705822 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.772043246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.774927963 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.773928227 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774388144 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.772693167 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.788208123 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783296357 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.780227819 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.77488982 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775759225 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.774646978 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776120995 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774635801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77498529 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.77652737 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.774830143 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778323886 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773877373 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.775604793 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.777705299 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.782598753 seconds)
  done (took 1051.594119116 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772369304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773040524 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.773493598 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772870586 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772516656 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773354252 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772699245 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773522552 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.773662574 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773798315 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.773244714 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77348372 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773203172 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.774305983 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774345528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.774252497 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774045633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773047698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.774260511 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774141538 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773866066 seconds)
  done (took 38.951443735 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.775334256 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.773221591 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.772926193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776557619 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774157278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776447266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775506256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776941086 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777115522 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773913632 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777378588 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776183798 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.773674093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.774645181 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775563387 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778380337 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777184492 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774379331 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.777461386 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774873324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77632524 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.774819895 seconds)
  done (took 40.772567336 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.778320754 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.777982907 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.776752991 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.77634815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.777846595 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.775755966 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.777823326 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.777660562 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777786975 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.779213789 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.7764867 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.779063907 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.784709911 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.782629516 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.781772701 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.778582682 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.922806607 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.777973283 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.779304708 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.778745835 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.776586155 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.784120882 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.776744243 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.776301315 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.776876608 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.779309589 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.780019239 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.779875601 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.780824387 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.78045743 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.782866156 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.780274667 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.77950979 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.780345431 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.778515328 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.779712222 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.784869881 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.781035001 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.77648294 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.780502953 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.789003334 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.799797792 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.781208136 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.788200176 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.780343999 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.779764144 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.782734127 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.788430039 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.778597504 seconds)
  done (took 89.091631757 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.781268384 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.780138022 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.776496909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.780091482 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.780830141 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.780490191 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.780989473 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.781010619 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.77764651 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.777999476 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.781942445 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.77774972 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.778290733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.78077872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.780347889 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.778410289 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778703386 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778636756 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.778919148 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778670381 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.778112823 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.781434775 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.784421083 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.780693517 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.782192358 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.779315397 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.778287617 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.782127014 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780796765 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.778376594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.781304239 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781474529 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.781988146 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.780106876 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779465159 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.781711044 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.782200856 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.780453213 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.783457637 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.780326383 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.781533778 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.783289694 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.783265061 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.78287398 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779901489 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.780681915 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.779596877 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.779965757 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.780465843 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.782845403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.782984885 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.780038864 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.783450063 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.779514402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.782977504 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.782803395 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.78005113 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.779965352 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.782590558 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.780924492 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.780032838 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783313653 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.780791273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.783178477 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.782973688 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.781085983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.781973417 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783133934 seconds)
  done (took 122.808167821 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78308557 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.784066759 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784851367 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78448822 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784277248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.784657096 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783976219 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.784248447 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.785369372 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785144288 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785314727 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.784296843 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.784912493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785013674 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785971991 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784924756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.784560549 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784971405 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785358874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784932913 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.784830802 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.785134157 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785726126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786025919 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784919291 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.786436011 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785190743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.786167577 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785254134 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786724462 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787470415 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.786444637 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786492536 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785504698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.786724362 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.785941606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786647206 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786029141 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.786187953 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.785871838 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786322874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785535701 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786621464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.786272836 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786948562 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.785900284 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.786400048 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.788190808 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.786598498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786577234 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.786981043 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786758417 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788425263 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787724362 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786675257 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.78735996 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78770712 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786871613 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788160079 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787464516 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787771226 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.787295005 seconds)
  done (took 112.445598707 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786456935 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787378898 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.784432985 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.785102147 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786552894 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784688557 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787218499 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.788327497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787103582 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.785796642 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788519126 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786259291 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785546973 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787976692 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785332126 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785269476 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78527021 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786451437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787801028 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784999981 seconds)
  done (took 37.445605492 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.78553319 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788307378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.786282065 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786244755 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.789367863 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785247473 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.788620605 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789365797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785501753 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789015268 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789141286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788321629 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785524946 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786668065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788734861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.787145626 seconds)
  done (took 30.31926826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.786087208 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78850777 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.789269477 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.789313814 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.787127401 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.785777863 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.788796846 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.786753306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.78641741 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.789093768 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.79013739 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.789924864 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.788664864 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.789106441 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.787037719 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.789922786 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.78622454 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.787247009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79015545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.790673583 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.788383749 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.787216982 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.789658842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.789524909 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.788303606 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.78886553 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.788028972 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.787309828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.787705102 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.790158989 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.788795437 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.788669484 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.788438943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.788968046 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.791548791 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.78874801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.790940096 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.790180629 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.791212338 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.791031295 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790933914 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.789022144 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.790467103 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.790841294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.788679029 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.790399331 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.788675306 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.7885584 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.789284039 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.789112745 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.791359324 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.792206595 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.791507302 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.793000277 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.791875023 seconds)
  done (took 100.127773586 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790407526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792075216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.788948242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791310086 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79143353 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.788431227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791428628 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.78937062 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789407913 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.791772056 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.790772883 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.792673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789504371 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792679477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791469143 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79170947 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789179017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.789776548 seconds)
  done (took 33.955449012 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.7902288 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.790143741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.792684263 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790115699 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.790932696 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792941933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790381495 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.792700032 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793277675 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.791297092 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790804477 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.793377904 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793934902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.794105745 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791047477 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791008335 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79391752 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793753918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791028717 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791583005 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793540343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79341365 seconds)
  done (took 41.15118533 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.792583322 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.792449405 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.809859343 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.810300662 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.817115204 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.824500781 seconds)
  done (took 12.572602156 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792647622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794682964 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791798474 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796622898 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794474732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79160701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791723352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792062641 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795309508 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794533274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792426111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79573805 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794696762 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793298499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795751801 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794959116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792890416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792279664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793332864 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794823178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79325293 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794494499 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792344101 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792953321 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793031648 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792668675 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79578686 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792864537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793326762 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79531492 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795795302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793596872 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79622581 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794664591 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796939999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796186528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793470127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796501631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797544902 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79372017 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796002746 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797311046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797090427 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794612447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796593061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795022805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79344442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794720792 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79302009 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798335926 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797280668 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794797773 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797025172 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796583494 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796994218 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797388381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794308779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794945265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797137584 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795564296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793832763 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797458029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794608292 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795845162 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797644188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795231431 seconds)
  done (took 120.187444495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79466767 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.794168001 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795502858 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797815845 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794898806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795302391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794890564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795792951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795149274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795488235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79754868 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795197082 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795615912 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795076144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796436263 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795607515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796244364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795368174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796540276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798157254 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795743903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796706259 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795587236 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79630124 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796858966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799428651 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796543825 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797338145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795602318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797196879 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795920853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79728556 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79668935 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796693702 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796898782 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796353681 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797569176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797904431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797353586 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800220161 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797344451 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799796157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797631337 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796722789 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797266744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797425927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797115237 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797394683 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798742917 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79723366 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797788122 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79778642 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798643713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797828698 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798036058 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796767646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797973328 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797531837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797345892 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800772572 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798321181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798474505 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80094982 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798257603 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798272469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798288923 seconds)
  done (took 120.336672124 seconds)
done (took 2451.026576437 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.825928645 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.81700466 seconds)
  done (took 15.374853829 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.960988763 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.915220112 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.798495546 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.828959956 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.799016499 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.820908376 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.794070282 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.799944798 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.800122711 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.799032513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.800191805 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.988453966 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.822087138 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.799207766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.798942231 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.891676015 seconds)
  done (took 51.155242746 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.802595214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.803540018 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.815253007 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.805463421 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.803160683 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.815944743 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.835128368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.806712985 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.838303113 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.815422551 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.877765202 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.812864813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.80278518 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.852725221 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.815710395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.818181683 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.89074668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.877737772 seconds)
  done (took 34.62347356 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.879928718 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.806906853 seconds)
  done (took 10.42729474 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.796672103 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.797761876 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.819789223 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.798772682 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.809663143 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.843632583 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.820889111 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.818160063 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.835944275 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.827227115 seconds)
  done (took 69.906218114 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.809881028 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.805168825 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.805672355 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.803243074 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.797088583 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.802183069 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.803681727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.802780125 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.484874518 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.838886476 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.809912546 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.809036973 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.803431546 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.805958268 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.803029581 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.826226183 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.943668354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.803343504 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.802976139 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.808878748 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.803872082 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.85623482 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.81753166 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.806356074 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.833896796 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.490704657 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.813093615 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.811122193 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.921945316 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.803623887 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804383795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.804896845 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.80690856 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.196118699 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.125643861 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.803869177 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.814626079 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.812593056 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.802869396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.933980098 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.805158101 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.810126013 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.797914627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.118912264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.887190064 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.846782327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.175472547 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.808319445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.806387307 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.835152286 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.807595724 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.806631312 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.818592152 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.316057138 seconds)
  done (took 129.214430736 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801850929 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.090071052 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95376163 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801943832 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07406926 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008183182 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.780474834 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.851040291 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.801872568 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005371774 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017209887 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910753778 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801387776 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.799013939 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.802084571 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799487841 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962329096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872930333 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806360582 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.799833462 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829875908 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011628034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.924177391 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.804432767 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.824094179 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013312306 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.925096774 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.911309625 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.284890332 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.80019128 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868672837 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.803329223 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.800984613 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800555094 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958956894 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.905594001 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892112493 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.804251668 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801536117 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801103615 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.463168861 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000578248 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901579186 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946044936 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.956946797 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010037908 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450357307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.801767711 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.44512542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965932044 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017730802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010201711 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.928869186 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.808657554 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.957426605 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802295854 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802782754 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041040322 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948184659 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909872933 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807025576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802202774 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802838604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04743429 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805451764 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902359792 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805054367 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802585069 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901982219 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908883616 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94542336 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020216434 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838220908 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.525997638 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.015556935 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018975745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.874388562 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039608449 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.806518189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803452867 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891498678 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.558065941 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004721126 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.056583101 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027756451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84053189 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.399661623 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.80401189 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.00296555 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989312419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000291074 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9558259 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95856892 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.126839823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.803644053 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.80423626 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.031978226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943360202 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807985844 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.165350377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039742328 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.422290436 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.827130145 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102242808 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940448129 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.126063931 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.432291395 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.805362353 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.974301843 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845801086 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.806303436 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806371356 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.996542415 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.617016887 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805565645 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.527293605 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871061759 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808293882 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009619373 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.808964352 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017001397 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.8104997 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041597352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.874976589 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841097173 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.978139706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.953259513 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.600565238 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054406504 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05150603 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926354924 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077432385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.533174109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.806718987 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082653235 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.80764145 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.806135062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.974906845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.808529372 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955923339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.810030642 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.034717204 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833482154 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965936076 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809937217 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038370627 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.843730186 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861735776 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.81117218 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931389388 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810164686 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.700251226 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963792067 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810554739 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80737983 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.210323468 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.808282383 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954999313 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.040733271 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833848197 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877758596 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.338081792 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.808116456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895847403 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835323277 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.416172817 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.808024051 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.021187663 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.777878181 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.257503399 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.809089742 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.049206724 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.043655901 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.809961087 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807934505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.54933345 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.51651163 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808028324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968017669 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.251764269 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.464314364 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013640647 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810723959 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938767196 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.812420652 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.887514931 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.15802115 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808008832 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.808818961 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.809648256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.809972875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.809286304 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.017663418 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.842782521 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.304809032 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.946483583 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027821103 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.121377054 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.030361426 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857680342 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.812019334 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057801785 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812174946 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.876115742 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.812337254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83404216 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042689091 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815321455 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047282445 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06616357 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.718158213 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862798795 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.812908272 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811741937 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.811418528 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95851274 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902911934 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813884711 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.810437659 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922510486 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.93185744 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004882965 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.408518822 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.932013781 seconds)
  done (took 884.336812317 seconds)
done (took 1196.770350982 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.811838103 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.812443 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.799367912 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815473622 seconds)
  done (took 28.988184512 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.820514934 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.818061843 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.819789898 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.8173487 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.818868971 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817019478 seconds)
  done (took 12.661156605 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.870938515 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.814158676 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813579941 seconds)
  done (took 21.248353107 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.887037829 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.224881021 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.923391976 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260862525 seconds)
  done (took 10.047868233 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.821467508 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.820366905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819645988 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.820836795 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.82218165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.823028101 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.820027649 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.819837685 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.822687675 seconds)
  done (took 18.141426615 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.187169607 seconds)
done (took 97.02318655 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.477594131 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.813878201 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.927031033 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.591844782 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.17815103 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.702576217 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894670276 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.247520077 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148751229 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.993886907 seconds)
    (11/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190975391 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.949857149 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.843930861 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.812889957 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 4.510988945 seconds)
    (16/309) benchmarking ("sort", Float64, false)...
    done (took 5.605936897 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.721755725 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.807154747 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878095111 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189567013 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.802030327 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.86042139 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.697911912 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.47517045 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.898402046 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.98069939 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.381280064 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.963406758 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.807098478 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.238863564 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157085954 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.845099145 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.984087919 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.951922162 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.828621373 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.943461423 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.814347528 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.03716416 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.843075774 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.91071257 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.842486338 seconds)
    (42/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944162636 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.824036832 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.80880739 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.292838399 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.777379204 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.397490432 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.411489616 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.072853437 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.933951337 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.801363892 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.136275281 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.347997309 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.187271232 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.238876176 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.976465885 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.428504855 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.254524387 seconds)
    (59/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.090107101 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.882472758 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.900032231 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.83978863 seconds)
    (63/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.066683193 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.883895249 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.057986911 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.780156537 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162857029 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.885486422 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.802613547 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.930238102 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.020780716 seconds)
    (72/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.921353178 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866864866 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.443260199 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.886771535 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891302229 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.921633615 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.906521917 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.026137132 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.620538103 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.951861188 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.82454286 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.129053778 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.837249372 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.944167287 seconds)
    (86/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.958452463 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.820368152 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.998618141 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.055807717 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004556828 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.124651762 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.701264096 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.209643641 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.336844511 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.709637183 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.131381352 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.955533121 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.834499047 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.492249236 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.80988195 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.962526081 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.002033063 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.964643237 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.338593199 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.07003628 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.827270895 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.964741079 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.716498362 seconds)
    (109/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.158936852 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.330842435 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.823358036 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.186839737 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.820981348 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 4.213311195 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.839137602 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.820200186 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.954741486 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021350199 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.805294536 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.207986405 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.808098533 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11402957 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.821434188 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.09997435 seconds)
    (125/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.968499275 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.80854975 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.981240298 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.954728185 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.161248218 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.240686667 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.128305735 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.27478487 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.066530736 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.847920878 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.505354162 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.096548067 seconds)
    (137/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.744323688 seconds)
    (138/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.162813065 seconds)
    (139/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.835143758 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038576457 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.085644808 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.941904604 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.821108874 seconds)
    (144/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.992497664 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.920238166 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.956749541 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.964601664 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.824788662 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.115050832 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.868269086 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.880237959 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.420205926 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.071367167 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.988546569 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.048464681 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.852819009 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.807771681 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.283663925 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.856210102 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.069586191 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.232236894 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.327000641 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.123993422 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.827484663 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.452203973 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.026804185 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.132719074 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.954390986 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.20487874 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.255844374 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.041025037 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.856606077 seconds)
    (173/309) benchmarking ("sort", Float32, false)...
    done (took 5.57925258 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.85797474 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.1224189 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.812530079 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.632296265 seconds)
    (178/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.855107361 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34068254 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.850644553 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.082218997 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.337385516 seconds)
    (183/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.831135605 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.425233986 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.498955284 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.829736115 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.046389849 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.469752757 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.024063394 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.918673128 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.927872521 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.889198373 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.883954229 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.120858065 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.155195052 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.828082568 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.264291979 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.914785368 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.824118766 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.119809803 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.932579893 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.930247963 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07483472 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.517993204 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.87756889 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.928701931 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.110011391 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.021857315 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.830818658 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.891345989 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.980154898 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.231339009 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.124546827 seconds)
    (214/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.346785439 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 6.83621459 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.856753768 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.046926794 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.812964746 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.832053159 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.542214805 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.037660947 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.680733551 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.826996877 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.879468572 seconds)
    (225/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.955735508 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.66506128 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.862652483 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.024160483 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.851691795 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.826733116 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.827693836 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.857922869 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.869113133 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130846942 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.708955048 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.123672452 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.830069586 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.961376505 seconds)
    (239/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.813742659 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.723434079 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.210671917 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.774682632 seconds)
    (243/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.902557942 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.910409138 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.813063382 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.439090428 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.16755435 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.48635414 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.641307271 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.817700467 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.32415962 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.134886977 seconds)
    (253/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.927564249 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.21402976 seconds)
    (255/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.136999221 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.910663643 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.130426113 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.934110354 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102539737 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.858609451 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.82785601 seconds)
    (262/309) benchmarking ("sort", Int8, false)...
    done (took 4.79761944 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.948326535 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950655454 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925483148 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.930362587 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.856038608 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.828406247 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.337373499 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.998140954 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.718548224 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.949746263 seconds)
    (273/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409102565 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.214431035 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.815909354 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.934599114 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.957042888 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.884199234 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.02114687 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.939369239 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.337868837 seconds)
    (282/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.866358405 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.915223358 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.451594623 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.169288978 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.918111768 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062474095 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.922174321 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.814650586 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.394157248 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.993223304 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.833139756 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.024876071 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.433680008 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.049573257 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.83475244 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.890121195 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.916725081 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.873542628 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.841340211 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.93888553 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.158389615 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.942514016 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.854529214 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.471166094 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.124898236 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235407065 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.835532825 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.833914509 seconds)
  done (took 1009.523268511 seconds)
done (took 1011.339067619 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.158739502 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858227002 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.842065413 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.863941 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.953735375 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.874031095 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.852178522 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.844119807 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.890232551 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.891122313 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.841956067 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.874620748 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.844594895 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.843777546 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.842698912 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857868758 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.150461606 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.867720288 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.861319911 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.853260807 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.859757972 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.841559983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.892781026 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.875806833 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.847696733 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.846324831 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.847038407 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.863545028 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.955631238 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.847278193 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.847173768 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.85488058 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.151305603 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.868184236 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.838317004 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.862931683 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.854775902 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.852649369 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.846698755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.876209782 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28927949 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.850545117 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.845797838 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.844556537 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.844756222 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.847160811 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.845088442 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.851018361 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856767108 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858885964 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.286902323 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866150025 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849578676 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.845771951 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.855030124 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.844457856 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.847776999 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860845206 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.865266619 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861174724 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142827132 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873687674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.847117653 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86240162 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.853329046 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.324440743 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84760914 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.849495444 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288061071 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855692159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.324177786 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.859658972 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.847505595 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.866389853 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.878724661 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.153062341 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.866024579 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.846669786 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.854005579 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.844609053 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.857349701 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859384187 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.852088337 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.84760981 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860436575 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.878629839 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.857187238 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.848010649 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.855549288 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.86553483 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.853913551 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.858956708 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.850091857 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.842048158 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.856477731 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.850589356 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.850194839 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.850295225 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.851708708 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.857967566 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.287885848 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869426409 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.843528687 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.844222404 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.846247106 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.861532851 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.287508628 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.85340318 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.869299964 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.895091948 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.849589386 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.144200203 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.87614231 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862940726 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.858840612 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.852021757 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.843883407 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.144612108 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31500721 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869609532 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.849577326 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.847540346 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864840084 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.849902223 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.845525512 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156203432 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874791833 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863450681 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.970296404 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859480379 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.881830914 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.847109834 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.852638552 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.878268564 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865930287 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.881966642 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.853465144 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866436172 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.867025953 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.846047121 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.861848325 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.860100373 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.851745004 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85623265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.844112019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.877332763 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862854218 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862247304 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.870715384 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.972329636 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.84719161 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146789947 seconds)
done (took 292.633244778 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.917899174 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.841493911 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.946857782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.846996697 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.931783204 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.931966977 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.845150655 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.845107641 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.844497449 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.225464801 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.844835746 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.846463578 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.847052149 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.844535048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.928359172 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.84860472 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.844804503 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189763759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.849021387 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.918328491 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.84596682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.846413819 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.849359192 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234676899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.846319724 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.840801374 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.918628909 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.848997675 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.199146359 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.847640994 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.84480675 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.197765619 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.940898826 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.866484749 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.859029709 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.856600144 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.933273322 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.853221537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.93023303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.92905564 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.949000986 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.890342956 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.847894412 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.845114769 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.852925934 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.850167153 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.846630207 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.878073741 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.84715844 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.846912994 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.191299652 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.860020003 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.857379251 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.848167456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.849247231 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.87284272 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.848968203 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.851586616 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.941052332 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85127057 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.912050683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.236827233 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.228116183 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.84984844 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.845800284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.848145609 seconds)
  done (took 182.954014934 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.917955404 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.924747224 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918487721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.852910058 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.339202537 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.923502193 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.853860547 seconds)
  done (took 15.50982869 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.856433829 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.851143127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901398833 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.901212869 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851019006 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.001869309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851304335 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.862502491 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.848578188 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.903660938 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.850753596 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852204228 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.858099557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.844985797 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.899316234 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.862918749 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966359058 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.852502244 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852508672 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.008267044 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849603494 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.859184685 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.905175695 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.863260368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.852388093 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.858088049 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.433797297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85430919 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850525112 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.852220588 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850190124 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.894894535 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.853665985 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.84928823 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850013567 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.968015662 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.852738033 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850832505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.853209121 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.846978231 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.852991191 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.853251993 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.852345788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.850689878 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.853612529 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.875701257 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.853916632 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.855005127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.853136016 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854452632 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.902825028 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.854190144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.851575446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.851209339 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.910337589 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861501507 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.854243336 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.85149001 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.855304156 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850678665 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.01008456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900781133 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.853715671 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.900422433 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854654568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.854283496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.854241678 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.854425141 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908994218 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.853944554 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.902022954 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.851357767 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.014358182 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.877724645 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856008743 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.857377854 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.85669266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855613023 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.856060939 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.860507612 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.853545823 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.856121332 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.861459618 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852615419 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852613514 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.967613282 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964390029 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.853159223 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868124063 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.86129391 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.852528116 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.906578472 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.855590551 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.853366529 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907807804 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969966928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.911597841 seconds)
  done (took 204.190007897 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.859222869 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.862241282 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.856394042 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.870368248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.855526362 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.855243723 seconds)
  done (took 12.943466795 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.857790137 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.856647496 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.855763797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.856270302 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.856433522 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.857112918 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.857167072 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85668412 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.861205439 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.856337777 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.857004943 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.856830352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.857564756 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.857166021 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.857563824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.856829673 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.857063995 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.855183573 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.856996632 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858196508 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.000061929 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.857570864 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857771274 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.858065276 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.861957013 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.857789409 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.865108337 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.858667513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.858241923 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.865470064 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.861706073 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.857850452 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.858426932 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.863735821 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.863917638 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.859015389 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862774657 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.859761358 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.85520266 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.858492988 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.85872021 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85906238 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.858181816 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.859523205 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.859808746 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.862895059 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.863211424 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.865713981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.859049042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.859599714 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859838164 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.859370969 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.858389948 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.858968287 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.862075395 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863087096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.863560234 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.858846751 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.85896831 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.859763782 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.860312578 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.858983895 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860593905 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.863971179 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.866561603 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.861566118 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.86022029 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.86370127 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860537174 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.859745337 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.86043864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.858419595 seconds)
  done (took 136.814784677 seconds)
done (took 554.203758778 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.104616122 seconds)
  done (took 8.893118351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.945224244 seconds)
  done (took 8.820290938 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.444541499 seconds)
  done (took 10.233219197 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.854500708 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.885657081 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862757196 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.853429353 seconds)
  done (took 29.25487683 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.220553874 seconds)
  done (took 9.010606825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.869033022 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.854122043 seconds)
  done (took 15.580241886 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.06263123 seconds)
  done (took 8.852829741 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.146039983 seconds)
  done (took 8.943352245 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.867788684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.863522576 seconds)
  done (took 15.536804139 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.840982568 seconds)
  done (took 8.630315103 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.606653087 seconds)
  done (took 11.408081361 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.865165754 seconds)
  done (took 8.667939825 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.937793388 seconds)
  done (took 8.728498183 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.050801953 seconds)
  done (took 9.840758764 seconds)
done (took 164.191224817 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.856890448 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.857901501 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859537782 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857111245 seconds)
  done (took 29.221542453 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.895718836 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.896723021 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.896744402 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.906767605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.89826851 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.898043937 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.888124176 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.889297466 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.906619118 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.899726341 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.897864849 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.899662539 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.896527515 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888608717 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.899129183 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.89796667 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.907137158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.89795698 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.888770372 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899078961 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.863618083 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.907039017 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.89905902 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.86378491 seconds)
  done (took 47.27347419 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.061463404 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.933141128 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.016091409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.913905731 seconds)
  done (took 9.716852893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.914809594 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.915795341 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.928773388 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.966775175 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.999615289 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.925611275 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.890885182 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.884784839 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.871351178 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.917454473 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.992639721 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.932592496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001940038 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.863730873 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.051005859 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.864282308 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.864056727 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.917119893 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.968455315 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.982291163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.86457877 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.916420091 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.919329382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.933528769 seconds)
  done (took 48.080912639 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.863309829 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.870702374 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.875604579 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.864641814 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.863900468 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.864550341 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.870741299 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.866109352 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.885935733 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.865299593 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.862601736 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864008948 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864663911 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.86466894 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.864289909 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.877216591 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.877834742 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.86383072 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.86806423 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.870418795 seconds)
  done (took 39.162507104 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.856975148 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.794435442 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.209552791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.114074855 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.856704001 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.861928084 seconds)
  done (took 32.487180474 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.87822028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.868198732 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.863894282 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920417912 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.000500614 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.871560303 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.864913038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.875499924 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910509761 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929957347 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.883267236 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.891819741 seconds)
  done (took 24.553802472 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.860750003 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.863086725 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.862037838 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.87967773 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.87602573 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.871759634 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.873118819 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.859988727 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879782711 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.882833217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871791017 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.877173036 seconds)
  done (took 44.255992547 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947983722 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.905544206 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.887726569 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545885878 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241495677 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073185914 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462644164 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203179365 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.868018635 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134318039 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86380292 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964244314 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118338475 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.34009924 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893814441 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.324822428 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156597752 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079020642 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89092626 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545599946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926904752 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.032203494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.66852846 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920152461 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073639675 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.990646474 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.122639043 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86217486 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997865883 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901030455 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872854857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86126723 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137006112 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242067641 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96868402 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872242246 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480133027 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.577053852 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.854152055 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.630279731 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.565243149 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.983559927 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87409566 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863256068 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797555764 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.004725515 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238905913 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.87192296 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.575445012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863614102 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875797385 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959670716 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.868405126 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.680628982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78697849 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.868678652 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.860760941 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87026204 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434062211 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965106687 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044286866 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.836317448 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.954945183 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624837725 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247368149 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.012603221 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.868358896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869128491 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799234883 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.544236567 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919930173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194364863 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.887405053 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458096704 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157363809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.898650145 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808200884 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163351415 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379023445 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.838133971 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093672988 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866718417 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801925128 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.822641182 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801541394 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124027211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905257385 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.62316628 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907836144 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201847719 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879433508 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885869018 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889177173 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090468061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.750878215 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867507569 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.62761453 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01139101 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888978548 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203669728 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803855865 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.870675688 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12454845 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.079264663 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.926946824 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363636498 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029419905 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418736158 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.918429197 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.008132838 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.914297226 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.152193925 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925503814 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989680928 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921953777 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868292186 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174766648 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443788199 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.003246485 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.88374777 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996455998 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19928633 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900116744 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950266256 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871347144 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867658705 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.630885773 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420697757 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.868977597 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.870598586 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932361442 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914127596 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869875885 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817300912 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.495121899 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.898373523 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.883863225 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092835692 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.426392096 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17917917 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803771665 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198278737 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92520445 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.09149235 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512129539 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.941302964 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130186669 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936037119 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.96247513 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915140067 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888938626 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967669737 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890792915 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.005238811 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160587 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.873977405 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.877765035 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643386803 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906660519 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878871656 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.876234502 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.619173522 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140320365 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895941143 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878666964 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.759926944 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.8843518 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936011816 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876692218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881548581 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.409291343 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582488625 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.879008814 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455683706 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0961481 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881960038 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.574097516 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98736306 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.959784556 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140167384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931166576 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806243203 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.583653912 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.564945767 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871896577 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807855952 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870898521 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881134756 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883019426 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.067792051 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160471849 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916720765 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.536801838 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.915182214 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883595006 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.877956336 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873554312 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384501822 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982894603 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045500411 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916118345 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016546104 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.887095229 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808533913 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877643158 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877478126 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.873572892 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.873080294 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905935334 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.563368825 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24923561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137470093 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.482121302 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888258721 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.58772 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.932093308 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.875968019 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.509283138 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143131833 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.905069618 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900798204 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.885896721 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.619457884 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.581892715 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44166586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193916118 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17479038 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307224539 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.074931759 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901705809 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211954541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811771385 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432169119 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933097862 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218727932 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821795851 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962826752 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.521011446 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211900606 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889303978 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103406384 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256580771 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.572086729 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014291533 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087127993 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910417059 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.013174747 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835144837 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.397572327 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018601041 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542965421 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079839681 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213322845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522426059 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997221247 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.87514885 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557894632 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965329149 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.589735544 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047461574 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.048581515 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.782319719 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34792021 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8869328 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.102464338 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229346455 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.036724558 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.000651473 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816190507 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887760727 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888338149 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.877638178 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.872593316 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.760082046 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.130151052 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888152829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810213072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.974565733 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18661521 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.77977093 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.883424635 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876733216 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16835298 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405396913 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044178106 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.960225783 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393945506 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885472172 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811997754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812773072 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.570418729 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884571077 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.852425137 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083427288 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979656615 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824318779 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938110059 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956993322 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133956579 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.892028055 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142564968 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154330103 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.578164977 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90589857 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979400013 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513790698 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.983439814 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880087569 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114632891 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633858153 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106212487 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.912829724 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.841054727 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.877734345 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094286904 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88035959 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.758247571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107459644 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.603033472 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.886285254 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206150867 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954585549 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.746028214 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921348656 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.970400156 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888631726 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960192355 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890909461 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.890478308 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890988617 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927624201 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760807904 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001642123 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.894946451 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974412229 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009434234 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403592567 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.886901859 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149586034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231962555 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221884099 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940353154 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881858333 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880702412 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814830536 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030092106 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107097192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15458762 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.012227456 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.993706557 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906577728 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.529445841 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070327775 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121469388 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156598392 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.777067394 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369585719 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921821535 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.883192367 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893354152 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.092691904 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089106798 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184803988 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031420904 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946158374 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247079924 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158603889 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.882909481 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883697037 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472598583 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.902022115 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.566155775 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925940727 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.75743943 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154751669 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892777909 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263446927 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909775725 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.038338711 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.65566471 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610799011 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173375247 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.873616595 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943258467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149663181 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259962829 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197082081 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951165928 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89522778 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.993735515 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032246306 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.764705884 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885928194 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884415847 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933170741 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.594923858 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894187669 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173986839 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196306013 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.88266359 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.766827666 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908746472 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.895081869 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108887867 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162414476 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143079801 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895334478 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892093402 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.699708932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175278286 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944889391 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820073763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.888620987 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98487649 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134839001 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905100375 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.337703979 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.596946545 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175342918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.887317923 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907460831 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028300268 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255376534 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224489095 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.42149627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101432097 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.475992255 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444969165 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186774989 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.891675296 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.022891243 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188705928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.89107919 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.945410308 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92342488 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.149531908 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198914015 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.901027028 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567805482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.855821517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228709299 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447651772 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828360497 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897170739 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.947351418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888888415 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016539405 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898823397 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.768406092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03389088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.664662854 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.18460971 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.891721429 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.876731558 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.589195567 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157648647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91858542 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030617359 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89908728 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.60075935 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.240276982 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144469249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.955709414 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.893843684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.892204074 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889039372 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875207455 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084546944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.083990092 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15833144 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.987167662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.924193065 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892768644 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.105012825 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099909966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.764468126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024407479 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961977621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929786019 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.793306856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397606407 seconds)
  done (took 1675.7656668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911693914 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.000630733 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.903182395 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.931400461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903726704 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.998354747 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.968807806 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974561669 seconds)
  done (took 57.416091727 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.88914759 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.089349074 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.896782144 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.888074859 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.898498167 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.889339491 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.055515313 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.899312947 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.897653452 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.900213729 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.890485112 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.888861766 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.200965928 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911773755 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.889419175 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.876077511 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.896770867 seconds)
  done (took 74.705189177 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.926890255 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.964285717 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.91242116 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901062563 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.846387677 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.902818303 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.6850543 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.893027382 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.916252223 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.12197568 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.523859199 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.907816536 seconds)
  done (took 90.327760584 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899747379 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.896600503 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.896893499 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.897023897 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.896008154 seconds)
  done (took 11.315494658 seconds)
done (took 2186.097648985 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.14319686 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10786935 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120246365 seconds)
  done (took 6.053575963 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.039683439 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.087155665 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.207666362 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.213433481 seconds)
  done (took 10.376201953 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.174541852 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.264492696 seconds)
  done (took 6.265082208 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.2897479 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.894024016 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.269887246 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.891630343 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.895986497 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.895609831 seconds)
  done (took 22.51354514 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.896528201 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.899959178 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.896292191 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.899005987 seconds)
  done (took 9.418090563 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.877097966 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.615275981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.878044078 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.894269761 seconds)
  done (took 21.090620301 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.64579222 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.656438735 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.640300684 seconds)
  done (took 9.769552579 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.465310497 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.778587655 seconds)
  done (took 9.071156182 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.16092087 seconds)
  done (took 3.986953552 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.028259617 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.203187319 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.36566567 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.393179997 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.47540255 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.579740922 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211848355 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.138595432 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.285184006 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.329187336 seconds)
  done (took 24.837915053 seconds)
done (took 138.805821001 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.270884362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.135735486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.095006437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.230390033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.114835084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.096132736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.112968095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.214422228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.737143048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.734498012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.230244581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.11529472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.059418088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.132197511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.058931867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.131131664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11265282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.283243835 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.926161699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.124505937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.115581376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.870643878 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.074465834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.884962837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.116471983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.046433734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.448368944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.133307163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.082867714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.459689175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.048713262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.278797332 seconds)
  done (took 173.304935676 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.659546603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895900587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8945217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.894499642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.520686325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.895348885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897189075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.893740204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.128934254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.111525389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.896264638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.484395641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.896144096 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896490025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.900763833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896285703 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.237245403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.683440577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.896624506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896559737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897389183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.425782994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.898212161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.447610419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.2474402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906718567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.885529627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.911509281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.901514758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909524556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.914693288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.897069936 seconds)
  done (took 209.550250848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896765442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.898086318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.902213887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897929263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.905014348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.898773103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.907469649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.898061251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.463139439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.466226012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.909632897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901295178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923690367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897282126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913591107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897118909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.908315383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.911614513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.903795269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.909771284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.91735392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.733742594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.920249035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.732977943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.909642944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910736648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.897876522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912804018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.915619324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917648411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.914855173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.899043582 seconds)
  done (took 221.644591053 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.099977496 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.906081852 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.90646426 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.858846545 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.907301547 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.905686855 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.897747456 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.102989716 seconds)
  done (took 19.443052074 seconds)
done (took 625.782107329 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363424518 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.20666326 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.093532572 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.930018729 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.151483595 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.964684062 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.925984832 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.98942357 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.65445795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.996646967 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610098641 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.943414101 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.707935175 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949743298 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.054438218 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.983291379 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.461247386 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.553266157 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102285252 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.990516868 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.102908617 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867234142 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.999655334 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.692999858 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.727492833 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.906013931 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.101409172 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.470012641 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.935948453 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.090314647 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.69202814 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.324543144 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.935870086 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922796581 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977309799 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.957867816 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281236604 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.934035535 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052779081 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.716174422 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973376775 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.552203128 seconds)
  done (took 104.681816589 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.897274396 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.895796021 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897202137 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.896627094 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.896307552 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895536195 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.895683174 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.895197965 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.896282471 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.895915772 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.894668679 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.897666563 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.894619253 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.89692506 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.895100449 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.89438215 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.896997981 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.897827038 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.895555149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.895723227 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.896913387 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.895141851 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.895770272 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.895477931 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.897094616 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.89711081 seconds)
  done (took 51.147476371 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.90993989 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.051471239 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.133511339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.927129758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.908388515 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.912484508 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.928429693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.914789814 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.911826627 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.911380114 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.001481152 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.9160267 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.928788021 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.13531874 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.923309498 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.910829348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.911033612 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.909371384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.057604429 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926462608 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.929928269 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.915244873 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.929978771 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.923119117 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.912461776 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909793548 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.912793136 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.354255584 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.91704459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.002791359 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.952116454 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.930280548 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.304811251 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.145169837 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.961826481 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.919643755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.912343628 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.008387797 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.917100107 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.910952846 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.92878269 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.915218423 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.135653799 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.403567546 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.923687925 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.921240758 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.364598842 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.01426186 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.951250462 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922368092 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141382414 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.926326556 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.913422532 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.91290743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.948338641 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.921749129 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.911806066 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.218900998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.922446614 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.929575843 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917519433 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.913088294 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.065719101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.919725656 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.054699444 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.92024097 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.920224243 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.913079936 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.136350081 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927088023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.404622878 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.924953971 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.914141107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.006443876 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.059658805 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.392483233 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.924966521 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0691244 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.321113609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.936638071 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.921117484 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.343359709 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.940818688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.920654945 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.916445287 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.915663988 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.915908536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.958554658 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.929210096 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.343516251 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.409914582 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.233929239 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.940854575 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.928494051 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.913925931 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.221898761 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.922191929 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.915359825 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.132094012 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.421785947 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.926185497 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.921911981 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.393316857 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.92778993 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.932690516 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.922299531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.141738005 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927865197 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.959263034 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.916677421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.921424222 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.917491401 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.933824728 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.921156369 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.916584766 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.384901873 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.023645502 seconds)
  done (took 236.644927967 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.909746206 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.908430372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.909342312 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.909727399 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.907969007 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.914272493 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.908143966 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.909864086 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.915028877 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.909142172 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.908976175 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.908857323 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.909759187 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.914003703 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.441777972 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.917739689 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.525101541 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.911980852 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.910649725 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.910506754 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.591459209 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.917230931 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.911012887 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.918890044 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.912749496 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.914800079 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.911521469 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.947429104 seconds)
  done (took 169.232547666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.919956085 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102583647 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.939084807 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.954175865 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.927801891 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.917275866 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.941721479 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.938148121 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.923339902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.916777257 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.917029556 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979113023 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.934914838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051925955 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.952966529 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.951360486 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023281039 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.927336769 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.917542364 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.917795182 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94711867 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.916885729 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.98125916 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.050022984 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.941319059 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037545286 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.930268773 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.921867257 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.920029046 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.038772709 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.937886346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.982419719 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.952315557 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.941984462 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.042209552 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.041562541 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.031331328 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.952264612 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.924223126 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.919163796 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.919041994 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.907733877 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03795655 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.941992193 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.921162081 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.028660077 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.94413014 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.923569088 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.930918275 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.919901155 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.93390203 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.937560864 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.987974008 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05362442 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.959259925 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.950108889 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.945325178 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.219265531 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.931646786 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02156954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.919263786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.040472121 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.94200688 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.909461363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.922046923 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.927684485 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.950285544 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.953822502 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027289467 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.928082341 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.021531505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.961233472 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.928522838 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.922420707 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.923826353 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037105195 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.043817115 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959408611 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.957955216 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.953238451 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.917207129 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.921797248 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.909888001 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940163911 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927458892 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.039928519 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041702204 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.934430317 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.923784427 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.924767975 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.924552536 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.947823736 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047860332 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.960604242 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.024029787 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.991086082 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.997539504 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9376475 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.935594993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.926632999 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.986679772 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.938746224 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.934776642 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.269500861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.998934041 seconds)
  done (took 208.262830497 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.411696544 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.97804408 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.979283684 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.202436223 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.348237459 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.724126891 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.97652477 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.973350433 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.996672064 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.138986998 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.032621212 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.985225372 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960556052 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.945038667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.974432327 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.991303071 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976867711 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.283916809 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.094993982 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.113666955 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.954415759 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.27563717 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.292427426 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.347463727 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.006131857 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.303262287 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.648998374 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.21588821 seconds)
  done (took 62.990776863 seconds)
done (took 834.793470699 seconds)
SAVING RESULT...
DONE!
