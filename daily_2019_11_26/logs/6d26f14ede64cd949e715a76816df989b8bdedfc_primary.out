cset: moving following pidspec: 2696
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.336323032 seconds)
loading group "string"... done (took 0.620446564 seconds)
loading group "linalg"... done (took 7.239147736 seconds)
loading group "parallel"... done (took 0.154307387 seconds)
loading group "find"... done (took 1.150711385 seconds)
loading group "tuple"... done (took 1.796334773 seconds)
loading group "dates"... done (took 1.32004516 seconds)
loading group "micro"... done (took 0.225554525 seconds)
loading group "io"... done (took 0.953996385 seconds)
loading group "scalar"... done (took 37.643526041 seconds)
loading group "sparse"... done (took 11.935899381 seconds)
loading group "broadcast"... done (took 0.939084511 seconds)
loading group "union"... done (took 12.274052232 seconds)
loading group "simd"... done (took 4.441547732 seconds)
loading group "random"... done (took 9.104095152 seconds)
loading group "problem"... done (took 1.735711042 seconds)
loading group "array"... done (took 20.952348243 seconds)
loading group "misc"... done (took 1.700923252 seconds)
loading group "sort"... done (took 3.377596525 seconds)
loading group "collection"... done (took 17.44829449 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516572519 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125676131 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119069018 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119983683 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147501375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113761071 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12522164 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085391653 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.875693515 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149606005 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118255359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434943409 seconds)
done (took 5.286641938 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174529844 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083517785 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082162786 seconds)
  done (took 1.340951093 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065297582 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124791753 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065957485 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067293925 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066986503 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066761522 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066139665 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066751549 seconds)
  done (took 1.700160171 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074337426 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069436916 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069079732 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068097365 seconds)
  done (took 1.460141402 seconds)
done (took 5.928730187 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799130843 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203367755 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18862199 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413977444 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131754588 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159481824 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647468924 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309169383 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189791435 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080621411 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10522022 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329927066 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108987308 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638344031 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076636024 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090839331 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136033546 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419663101 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067501276 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081973734 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088444815 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127882993 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08621013 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074277953 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146471729 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067347341 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137356566 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079937369 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065922693 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213670794 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172132681 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663121729 seconds)
  done (took 10.318992443 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09713948 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098045015 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069054767 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122956642 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09695919 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069782266 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070713731 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067388773 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087520723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129220503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089202445 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101965621 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065553022 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068476246 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086013672 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205936117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083133127 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08207052 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070577308 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075552056 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108435912 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07858186 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077715857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077456874 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129485981 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180545904 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097419148 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09807796 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068817995 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080855623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115284229 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125958629 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065458493 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06591578 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124639084 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094332233 seconds)
  done (took 4.640996359 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010217159 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144007863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090354068 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135645468 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064347014 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109898332 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065326872 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080659091 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210240009 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.452199937 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592581883 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111341917 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104112849 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067503816 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068151999 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111427634 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064036679 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066256894 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501174442 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096206424 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108043033 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081981884 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070484612 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06949053 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355475011 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068548298 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064598107 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068849795 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05748265 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125710144 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068249126 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952777753 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126550251 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066683458 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100902733 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168091957 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089202156 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276279619 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068761598 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064007202 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153308572 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064677267 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06975768 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066379089 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083207543 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103314945 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113728565 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066917323 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067615791 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163175001 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065375799 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078851942 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.645803446 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15328557 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078698515 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064244365 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064245605 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256364158 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088284742 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06903909 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06436721 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.1845558 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134573708 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067747271 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066821557 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068338044 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069466662 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360039624 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065887241 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.895728211 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069938718 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080075742 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068818044 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069031985 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072950003 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072471833 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087985802 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066342352 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074702315 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065830386 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065743856 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066902707 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083503208 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376407412 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06707744 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067697524 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064521985 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089104605 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096321907 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068015105 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065087124 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099157429 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067921109 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065462599 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106961733 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066232918 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083273394 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068796302 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112590514 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.171161119 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095978643 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06693864 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096579466 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06958413 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098584662 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080534478 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07259859 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420310572 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06530134 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065060395 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068666707 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0655939 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067510016 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065640291 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079097031 seconds)
  done (took 21.195728894 seconds)
done (took 38.343337389 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238772249 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073731653 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073641215 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076721721 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073851414 seconds)
  done (took 1.801520852 seconds)
done (took 3.045925185 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123220952 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100521865 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064637596 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097922676 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063781233 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101894758 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100624569 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081271891 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100780166 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06428339 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097963211 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064079154 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063922069 seconds)
  done (took 2.3911906 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085499063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084715541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070087079 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083123117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063951269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083178594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081796683 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089821235 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081373678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072566516 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063826286 seconds)
  done (took 2.098387048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084109294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084758946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070180692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084851101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064194202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08236014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081737448 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086409943 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082344338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074092457 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0634842 seconds)
  done (took 2.093888539 seconds)
done (took 7.815157221 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079303174 seconds)
  done (took 1.305111529 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.600025413 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.227160476 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081543008 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111641783 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188815317 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118730754 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277215783 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086772511 seconds)
  done (took 9.103513857 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102656591 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072472264 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068811364 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069889785 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071915131 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068601731 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068129975 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070880638 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07076671 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071418104 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068659795 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070555826 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069013457 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067917986 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069619369 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071629038 seconds)
  done (took 2.458146294 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092500775 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091176172 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074370939 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074856848 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071713936 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07147052 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074093247 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073067906 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070514622 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071629184 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074299085 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073323374 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070894212 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063855935 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0731637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074843753 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070429017 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073474512 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074248353 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074521589 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074796562 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063847793 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071251048 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073575713 seconds)
  done (took 3.11481276 seconds)
done (took 17.217977102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115984805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071289615 seconds)
  done (took 1.421117835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083515344 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08324065 seconds)
  done (took 1.40780085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0845439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065742588 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091287466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078273267 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065740789 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065084718 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088851923 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065957787 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065769515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065571448 seconds)
  done (took 1.980485897 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070500322 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078700883 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069950242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081319046 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073310591 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063588797 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072239762 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067288927 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077582444 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062295954 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070779627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082666209 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070752882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084166415 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072307524 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069093014 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070486517 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06696717 seconds)
  done (took 2.550621201 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067609448 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066906288 seconds)
  done (took 1.384572734 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068193472 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0637287 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066506414 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066223913 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062643613 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061705481 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062991577 seconds)
  done (took 1.697815501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385345547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112350421 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310582896 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070775705 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081682616 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257719134 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065606633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0700949 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07048322 seconds)
  done (took 2.716607302 seconds)
done (took 14.410410204 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081582219 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087058344 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096883255 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375903843 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091416397 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065442868 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113445158 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191390168 seconds)
done (took 2.364075846 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213324114 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631748926 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402132311 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205036506 seconds)
  done (took 2.489797787 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342228306 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087606525 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05887995 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067046394 seconds)
  done (took 1.817225683 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066900599 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069306599 seconds)
  done (took 1.395673429 seconds)
done (took 7.174847085 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066903961 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066726054 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086692164 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063463146 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066038414 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063367807 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063169622 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06595541 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065733427 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066244379 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066062389 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065807535 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065765938 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063169144 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063365445 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065572451 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063736094 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063565139 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06587742 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063723238 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063336921 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065746431 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063788349 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063132677 seconds)
  done (took 2.87149845 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086434198 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066739003 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072146667 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070858257 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069772475 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07090611 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071620944 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065525879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070981189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068405473 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069367799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069316441 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068173888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069446163 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068144356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069971037 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070895079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06566134 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067904154 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069421076 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070944391 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06590068 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069461599 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071075183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069016037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070282223 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068148338 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065773782 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071527829 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06902087 seconds)
  done (took 3.359830377 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070407559 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063304789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064145847 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070428904 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063596188 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064511847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063237265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064382063 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064113668 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063192929 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064942209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063069812 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063481674 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06464879 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064659154 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067290718 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079197723 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063666803 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063068072 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064020246 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066718213 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063659534 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063202949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063605982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06321407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062795229 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063771887 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063065866 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063986248 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063329859 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066601835 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06684321 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062826178 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069932811 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066621233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062864612 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067125835 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062804971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06349792 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062468998 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062572996 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062704822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062980425 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069687834 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062918187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064481507 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063348232 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063953668 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063223527 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.180662452 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062354365 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062598665 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064815251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064157242 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066770251 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062794399 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063501789 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062685858 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063553691 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062548271 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062164726 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062229347 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065620512 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063835625 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078122352 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069823998 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062986668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064515943 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064078399 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065627152 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064761529 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076378935 seconds)
  done (took 6.060224827 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092011636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087432603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064954417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064995208 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061458389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063743134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069774952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063659715 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06496337 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081374917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063480967 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064691607 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064609082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067192312 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063722478 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064729292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072053066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061119938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064020629 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067128921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063488442 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069933932 seconds)
  done (took 2.781747546 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157589802 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069930611 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105090309 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075119425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069739087 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075053423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069540138 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069601054 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06974296 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066982337 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067039646 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069897729 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069531598 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06742615 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06727818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067315038 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06921224 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067560721 seconds)
  done (took 2.64837661 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078111829 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065486773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086528787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065849233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065714763 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068400319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069873929 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073738495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068083435 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066088454 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074059393 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067687057 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068025173 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065871397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068008516 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065230511 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067731151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06616514 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073960028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070147592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069995592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073647646 seconds)
  done (took 2.813578618 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080535392 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067871637 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081585634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068885645 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061805378 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064504895 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069914862 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065750059 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069831106 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06747577 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065364741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063410966 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067888238 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065097416 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068180404 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065005065 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06719542 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0650346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067522491 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060953809 seconds)
  done (took 2.630303284 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087656871 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067780306 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067236192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075010462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066986313 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067065284 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07438906 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067384353 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067136321 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087918722 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0672559 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066969261 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074739976 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071664628 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066793875 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074514479 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074622194 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07506988 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066613606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066739771 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087385467 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066577735 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074138678 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066519912 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066782233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066759708 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06661902 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07169453 seconds)
  done (took 3.277864747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067945409 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065460257 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062723373 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062987584 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06302766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063252466 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062841905 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063064446 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065545137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063256654 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065609267 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065916907 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065639549 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065181348 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065394607 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065632143 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06632724 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063006901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063417234 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063366856 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065838414 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065083764 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06529647 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063441118 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06289861 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065757303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06297685 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062744603 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064998316 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062859913 seconds)
  done (took 3.213701033 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07633623 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072519324 seconds)
  done (took 1.431060617 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063252954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079387249 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063248064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070154798 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069957603 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066266669 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073516685 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069058839 seconds)
  done (took 1.833303127 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08316004 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077675819 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067621182 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079445865 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076056441 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082764589 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133874213 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066527602 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072789638 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063715089 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079293312 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064594276 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072267 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066532377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071946959 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072275823 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063538642 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07154091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068178846 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064544266 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067254882 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074365049 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068638779 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06103494 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067162264 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088203974 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076808364 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065073963 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068651136 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073450432 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071500966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059519011 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065639364 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065950329 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064119976 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075593919 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080465971 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068385659 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074417793 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066593731 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07596257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060790938 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070560004 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072282559 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075782993 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06627614 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066895314 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060831267 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063480719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06791713 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061375002 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068283177 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060512534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072611603 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069829399 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076760918 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065201918 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067044195 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068468825 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068943903 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072611786 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067283191 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068153746 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065122616 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075401221 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07093441 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074476856 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061017134 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059636868 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063937991 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075452248 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088512162 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071747564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066342667 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066509491 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063404833 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068611468 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067092865 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072182109 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072209668 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065999574 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07098571 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072741021 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066265481 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068235336 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07374935 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063854954 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068789131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063517093 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08206106 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065069416 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063729726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063168037 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07575528 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069337889 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065417512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063661027 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072855067 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059722093 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066164721 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066681713 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066656316 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076778617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071050525 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071085005 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074622382 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073365266 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065920635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068534675 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061957948 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066068956 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064071748 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072165528 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059340273 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067869498 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065809509 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06497507 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073014562 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063022297 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064687123 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.198410907 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072920894 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065156067 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063662075 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070188768 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066325 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069123083 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074329478 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064575629 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061150741 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060909391 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070131278 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065607748 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069872489 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071400665 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06893313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061135277 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064372199 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071619608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074919286 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067005638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06765658 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072414655 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067733663 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065443586 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072757539 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068852116 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065673234 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072056063 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067541433 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061348599 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069625768 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069092985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065424024 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070239094 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069369387 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068891385 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066314645 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064527681 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074406181 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066948026 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065328686 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065987289 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064745592 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077216318 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068429071 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060984631 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063288513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07545065 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063958236 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066504763 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065022518 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068391096 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067053866 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064253314 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065199024 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068296739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076945522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070148183 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065936328 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070868703 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07729699 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066028914 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068049696 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065561777 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067304641 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06698918 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074816056 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071941968 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070965971 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067999862 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062608626 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071480162 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073449398 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065172826 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064024372 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065410228 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06988201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071846407 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069952082 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066703729 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064302196 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066923039 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068782813 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068597162 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065794671 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065541765 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072751225 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064193264 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073003837 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066931999 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076183326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069086504 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060968815 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069019364 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063741401 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071965813 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060853011 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063390041 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064901114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066509721 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064638537 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06903042 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059822096 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073159909 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07331643 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066291912 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065245777 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065527 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073161443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06771248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069390895 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069102114 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070721737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075483326 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064505668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068250917 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074815809 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064930029 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05934456 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07004192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063129487 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063302151 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064037674 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062486186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.197447671 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07465982 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073362464 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059664838 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068548533 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065466262 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065560691 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062169612 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071508461 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069878 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067715969 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073317918 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066907148 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067362248 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070171821 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066588076 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066897651 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06728434 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069290789 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06719801 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068691791 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065918686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069856818 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065831101 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064573512 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068419758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066659759 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066900675 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071711068 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066115856 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06603404 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068917584 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066970052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067175444 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067840801 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066023288 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069992247 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066836396 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066888949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068084371 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061342889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074055242 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066292692 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073670944 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066675674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063302113 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073773999 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068812315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071689173 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066605743 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067143883 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067456847 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06612267 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068918988 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073267461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06409102 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076559397 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073807206 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067065558 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068906931 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066305117 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067039303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06448186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066966221 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066569488 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066570283 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066227852 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069824652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069049959 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065999918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067882491 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066847993 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066076129 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066942405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060694609 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064865673 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065526566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065535035 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075027831 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065972147 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065626106 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06486474 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066947657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065612561 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062841676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073840796 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075171839 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06658261 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073327384 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065410226 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06800829 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076577459 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060428313 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064069353 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064142343 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06386975 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073637273 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066474388 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075368188 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065817531 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065543023 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0631346 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066393137 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064585238 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060335245 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063548807 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069394782 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065036682 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065102496 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065831813 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0683695 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066976233 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0756303 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065421724 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066276488 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065645483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062775895 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06442539 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064601854 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067914043 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065779307 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06293224 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062145426 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064193986 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066013432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065875788 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066986081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066474718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.204541515 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066461955 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069909133 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069896373 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061390603 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06962298 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066685293 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06667017 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065479811 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070776466 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070028934 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068129017 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075769445 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066150053 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067002499 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066988231 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06445044 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066148837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066586442 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066706701 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066319217 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068431735 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074086437 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064483028 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06956962 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066835004 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067296808 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072716204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066566202 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069921277 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07274072 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066762544 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068156434 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074509375 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070513208 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068973902 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067667562 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067900812 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072406507 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065439845 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073361162 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066925375 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067978293 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068785746 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064927977 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065693473 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066365016 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065334761 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073525079 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067302052 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065725181 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066051295 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064335174 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06727055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069291819 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074037673 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069279515 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068431717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060726495 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064108348 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067518971 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063398337 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067441906 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068234244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071608177 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068361759 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067391186 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064977777 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07479196 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07224722 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069854473 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064022821 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069450233 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066471051 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067861196 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067020611 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065872695 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066956587 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069870323 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067481791 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065136158 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07283335 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069008758 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066473975 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06724677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066487727 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065999895 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06072782 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066908672 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067796527 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071090455 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068337049 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066013239 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076631029 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063952159 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066271686 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06955691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065288643 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07077346 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061569753 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067295719 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066658403 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066645693 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061531835 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064903247 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063819226 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068224864 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065321228 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060787564 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077216935 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075032074 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06890573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064782403 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064603543 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061159173 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061046535 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064670608 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066494386 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06721243 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075499569 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064257985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064361663 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060022876 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064902879 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067372321 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068011645 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062121097 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060072142 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06403207 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.20162657 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071953345 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064958079 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065971867 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069728223 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068780708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063913933 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069430903 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063682022 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07020342 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079206302 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066580905 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067779843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073103619 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074135636 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066875995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061247781 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067381355 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070003298 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067877202 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067544472 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067747029 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081086106 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069521143 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065595022 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065805835 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069378432 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065624889 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074360142 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067283289 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067403204 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071607683 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068656998 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07588192 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069645398 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074885293 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069738716 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069170345 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065416357 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067275933 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065202 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065463307 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067511005 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067122168 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071718225 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074163133 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065894508 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077119572 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075688249 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068568924 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062699438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066049215 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065801232 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062021076 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06868053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06455649 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06430545 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065054723 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066655164 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067550255 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071328856 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067526833 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066762837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065984216 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060063578 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068683473 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06908708 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066843449 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063159173 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066323714 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066770555 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070630274 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068879574 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063430495 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067387396 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067446072 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066668179 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061215135 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072925466 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064887573 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067737617 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06530584 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065908218 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066667038 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069005405 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071033438 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06702931 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06815655 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07018753 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068140892 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063520075 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063622438 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071074274 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063928156 seconds)
  done (took 42.397627393 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101253124 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062897673 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06127378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06116195 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073270694 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062688253 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061343523 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06281997 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062164234 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064566052 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06153783 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061322944 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069926197 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076817593 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07304374 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06613433 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061026173 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062505807 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06131533 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062329838 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069880945 seconds)
  done (took 2.76823371 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073790305 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078143082 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075991015 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081978471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070448346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069642258 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074976669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070068215 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078157966 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071951478 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077622929 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070094077 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072168144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07185977 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072332212 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06993335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078229171 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070676069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070120942 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074844327 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07019492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075428238 seconds)
  done (took 2.967336181 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067333567 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06535696 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067772682 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060809692 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065596545 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060875876 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069215435 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063840273 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077041554 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065269562 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064659449 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064526478 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067489386 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060490164 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065588014 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063183062 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107744997 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068499987 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064836828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066025033 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060639823 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067497318 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060789603 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061690581 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064424227 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069239176 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066170779 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063875825 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064939956 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064720015 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066273293 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063411885 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067352756 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06575119 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065029897 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064709791 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064842572 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065049118 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060895409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063872694 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066585406 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061262769 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065916576 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066739188 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06379789 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063254945 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067943549 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065891959 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060725233 seconds)
  done (took 4.583611949 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080045087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110251908 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067070087 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088639547 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082134967 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07240641 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069343765 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090248748 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063170001 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063967032 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080949933 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079335211 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065243674 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070408655 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072209322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065203242 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066356899 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064312754 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068837452 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064306249 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068924728 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071748762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079434137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078054663 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069543834 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06433439 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064406295 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069642642 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077443599 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069945009 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069945176 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071297077 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080115487 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070300803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064744641 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0676418 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081477941 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065583996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067570886 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063162398 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067543682 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069739747 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071882009 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081723831 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065327232 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070544776 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065078804 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062458558 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077789759 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067442458 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072797971 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079568229 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069398481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065324461 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0697481 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08040049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064903183 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0636767 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068031269 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077106275 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062909595 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069093962 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078525417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067287878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071977623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078808701 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070122719 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068832685 seconds)
  done (took 6.373081279 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076704997 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095233434 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082932281 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083589225 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074983961 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075076322 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075451696 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075312808 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074852641 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079938775 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075416858 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11568987 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070683111 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078219231 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075281925 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07502501 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0753711 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075355576 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07525463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074990902 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075023578 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082592343 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075325411 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082917616 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079363002 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070561641 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075066616 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075077193 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082784667 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074859802 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079082845 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074655095 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074660842 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082646885 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079013346 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074545566 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064619039 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074489209 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074465954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074476495 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070198232 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082398417 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074415904 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069926896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074548432 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074314844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082288098 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079028675 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077455907 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07921176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074636068 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082659979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074329258 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074839725 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082647355 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085387802 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082136667 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082597159 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074898484 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082583151 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08261475 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085535688 seconds)
  done (took 6.212038949 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084784908 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0745746 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08282072 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061217883 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063685775 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071860952 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063533203 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064230629 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073790247 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073949461 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076445848 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072028188 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074863558 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076666613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071470775 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074529772 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071623172 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071403584 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073470782 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072075117 seconds)
  done (took 2.823472812 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075417898 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083972484 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066931537 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072449802 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068485308 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071561269 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068450393 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068839973 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066388662 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068684615 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075628323 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075871965 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066243414 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070884036 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075382704 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071287673 seconds)
  done (took 2.513188884 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085724303 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072372369 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080457334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066571212 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066694068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061929282 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065018652 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061479318 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061683423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077436723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065210284 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075825239 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065167428 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064173443 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062208426 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070535466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061449415 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062453774 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06532421 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077500614 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069257549 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064076929 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068774432 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065020707 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067762951 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07009897 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064597266 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065207076 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062390412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06557342 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068056103 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06857446 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062177294 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062829434 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063772637 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062885251 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0646843 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06566491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070804925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064893103 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063164039 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067274799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065170906 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066368024 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061443319 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065875337 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061648759 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06742666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063110788 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067917882 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065054492 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067957416 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065489769 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071866944 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067900205 seconds)
  done (took 5.039732548 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080208122 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069982507 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061543662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064066457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069138581 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066962685 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069037971 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066896014 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067191555 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064074498 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066808626 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068255986 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066786259 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069271178 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067152666 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069126176 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061240021 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066697535 seconds)
  done (took 2.592492119 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072018704 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065878009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072331577 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065849906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065494078 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068053824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061551948 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063901645 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06366477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065516554 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065285218 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067790064 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06369601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068144878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065169304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064919446 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067221959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06358592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06501007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061116236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067402602 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063904302 seconds)
  done (took 2.818579599 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094923737 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082151067 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139629185 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078244356 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083716534 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070830267 seconds)
  done (took 1.922262768 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090629865 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100785091 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066120051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068772738 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075461213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069007138 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068938352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069846809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077662127 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07534378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069294503 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077878113 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078082046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07736626 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075456642 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075928415 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069519729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069258577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065714322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0833314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069941358 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078395397 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069588261 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069271998 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06982947 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07740274 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078253734 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075536626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069757633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077992481 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07523693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06943541 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078160342 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074900686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068629636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078448793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0696172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083019558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075220748 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076946213 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068508882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075769441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07798858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07405776 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077910998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069584547 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073961471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069820601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069593485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085318919 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075303695 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076813099 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078034382 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077897256 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078069078 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084997935 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075365966 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076992432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075530622 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075215937 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077083604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075333369 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077366363 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075492685 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075386369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0772617 seconds)
  done (took 6.34373954 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104823262 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066665101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070699578 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075829679 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077352396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069764206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069538847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06974618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069844366 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066332653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107943242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06972701 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077245947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078385478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069822176 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069730079 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069559008 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077267192 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066771723 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085447703 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069337309 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077198559 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077381444 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077209682 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075547939 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076034932 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070413583 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069662378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069802747 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069411265 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074138332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070030355 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077748236 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066463133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077745387 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069947335 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070167456 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074922905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069886486 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075509077 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077651261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083700432 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069940529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07038082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076018752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069965276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069827216 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066779481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070364466 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06688898 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075779834 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07621092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075851106 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077483289 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069919613 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070286927 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069792562 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069615795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070401089 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07607346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078016085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069677747 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086430332 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0699966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06992518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077872829 seconds)
  done (took 6.269796808 seconds)
done (took 129.801397073 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184346037 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164474264 seconds)
  done (took 1.718809826 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068888688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099263963 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077244975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12949615 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066605275 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100090425 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099379282 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07828414 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065992124 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066342015 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066032155 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067961895 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131198284 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066098773 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066109905 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068757744 seconds)
  done (took 2.701704529 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099593718 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16360405 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102990972 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064782972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099616623 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07278096 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064734891 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074819484 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070914267 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065221768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072869243 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069980681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06466124 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070397547 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070704079 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072530365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064774272 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07300964 seconds)
  done (took 2.824321521 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100631022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091005245 seconds)
  done (took 1.579842327 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157616623 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104844067 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146088262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352880983 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166287784 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.126900778 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126882139 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127508059 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116226207 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122978473 seconds)
  done (took 2.931302575 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101436085 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154695187 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266454566 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11640256 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072860654 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094433581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11804116 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077814337 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080303992 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08012804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080105054 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076387181 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099711117 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073179382 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073299616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075559393 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104073634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07213695 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073979435 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075761139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100353846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065510801 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072779752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072369238 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076914436 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076964855 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065146904 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065035686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076543541 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074283596 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076419931 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093096565 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07655286 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105942889 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070018897 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107341855 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076105916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073338022 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074110697 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073375678 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078694713 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078554419 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072248971 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0757185 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065328086 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075993901 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065831185 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064768697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077682816 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066438136 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077335952 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077989595 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106055954 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066529444 seconds)
  done (took 6.002135713 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105012539 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106726505 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071471456 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113513353 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102317891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071804209 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102755655 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095639205 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103777536 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069614635 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068079648 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070215434 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082608699 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082693494 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115013019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107136743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073048342 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070940782 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106519445 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105127747 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06839164 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096625548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090824881 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102820308 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067065679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069904382 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0678419 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070259936 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076792602 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078448493 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069310217 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080599093 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084581875 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078074493 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067168291 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067650215 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068406459 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079393944 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079325239 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078427649 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077020543 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067269215 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067351037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068976344 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069588891 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067719091 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078098697 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080265664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078604814 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069066445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069886848 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067475746 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06876031 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080436417 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077057483 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080930458 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079569031 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067734934 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068427624 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071956378 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080302397 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079319519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078875921 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069121264 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078300357 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067647897 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079762099 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08463863 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068251299 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069733001 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06824654 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069376852 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068915195 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077795213 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077320691 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068759725 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06891147 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067939366 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079576775 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077661719 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067709458 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076472251 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066574163 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067819131 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069110397 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068988235 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077327205 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079630198 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069278858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06742551 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068959985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066399778 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076525259 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080313596 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079409343 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078558037 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06891707 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078321095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077943796 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068918713 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077970764 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067134369 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068654052 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067794276 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076458039 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.204967279 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080522516 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070360239 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068514657 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07833011 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080830925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068726106 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079057245 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080700644 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079550958 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067889569 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082454402 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068577941 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080351595 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069778329 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080651059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06915934 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0798114 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068862244 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06770152 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068968397 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079560774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073575686 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068959401 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070570369 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07026206 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079955897 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082473266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071937034 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078436903 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079328967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070835826 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078898051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068314214 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078972911 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069862578 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071039896 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066881878 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08242871 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068100358 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069086837 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06987926 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080570271 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068771356 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080624467 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078740307 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068592098 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080647487 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07982097 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077966665 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07996837 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069827098 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068505556 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067446179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068736554 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077618915 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079139815 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069749455 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068379716 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078225084 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078904362 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067112412 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078846017 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077823159 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078630653 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068431279 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069129343 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080211252 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080341891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077778055 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078354883 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077963866 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067988149 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077203123 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078318891 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068018173 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084404185 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067504136 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08269872 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078578808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076650207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078795136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080108256 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079636214 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079937987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082735369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067625438 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067687649 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085754355 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067847672 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068828077 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077950994 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069432014 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069383153 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083193239 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068397808 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079411297 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067799652 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079372323 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067017617 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069125058 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082693864 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067318206 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068275796 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07806377 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067976312 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075265153 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078118355 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.208472449 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068496627 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071399664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080625951 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079395632 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069174565 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068824184 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070461443 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079604444 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078488444 seconds)
  done (took 18.661690113 seconds)
done (took 37.812958792 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211632341 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15338323 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183231498 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12138588 seconds)
  done (took 2.156573906 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118722718 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101256297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092487262 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06480941 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098579855 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064570555 seconds)
  done (took 1.964744698 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316561354 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212034892 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188828663 seconds)
  done (took 2.137724233 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202261468 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190372114 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41980937 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262318689 seconds)
  done (took 2.608489865 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143548414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089165706 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066650435 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083527243 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133889889 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160275549 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100575363 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125200698 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077989774 seconds)
  done (took 2.45855938 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148877769 seconds)
done (took 12.896357102 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176156649 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.26844185 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.241025884 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091359595 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208825638 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.236830442 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187824054 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201972827 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21078959 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082092151 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071725291 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075418788 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072289753 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077950064 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074864911 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.152653649 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175920853 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072683801 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.180531265 seconds)
    (20/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152099663 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.176607661 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101769582 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089404099 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064829844 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114514937 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140661271 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183460192 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108505488 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.153891051 seconds)
    (30/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152273154 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102669753 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051030371 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189048541 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091187157 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050067971 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089217393 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071041229 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075925248 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122512471 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.158491899 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071135559 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090187544 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07984097 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080138899 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08117212 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.168841997 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071451869 seconds)
    (48/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073080107 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073099804 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.153863873 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071998412 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152025777 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194173286 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203994957 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087838537 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050499303 seconds)
    (57/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051031382 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149373076 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0957398 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176368563 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088746685 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067033038 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077657403 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143446938 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107099609 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049887391 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108997036 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071446844 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075102976 seconds)
    (70/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090135776 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068845479 seconds)
    (72/309) benchmarking ("sort", Float32, false)...
    done (took 0.131598805 seconds)
    (73/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050151242 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090786926 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064463618 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075759591 seconds)
    (77/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060010669 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062043707 seconds)
    (79/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080587503 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.165431494 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162125362 seconds)
    (82/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.153776246 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122385499 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108899903 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073567581 seconds)
    (86/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.227290945 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051431488 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06589983 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.066842389 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112868067 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051400411 seconds)
    (92/309) benchmarking ("sort", Int8, false)...
    done (took 0.142972137 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064701354 seconds)
    (94/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077488618 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053076921 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.16344693 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.180852303 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072782704 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101174014 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.192004769 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110447168 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065365994 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184822508 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094783115 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066154861 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093041042 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154939209 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064985742 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065327978 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052416056 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065701639 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184010428 seconds)
    (113/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050868441 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154766535 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.183289031 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064540937 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050051491 seconds)
    (118/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05130426 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096033741 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075800164 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073417008 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078294652 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050253719 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069222906 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093698904 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065992879 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089693593 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138903439 seconds)
    (129/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075901321 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052721147 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090462286 seconds)
    (132/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074218766 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050235894 seconds)
    (134/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050254057 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090735849 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05398633 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.136533065 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072472244 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051550935 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071977809 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093014659 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053299564 seconds)
    (143/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071662436 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072754977 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07081657 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071914012 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050477473 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10766891 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149966382 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07056438 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176688919 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071774986 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.147574564 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051323606 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068899788 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.161391785 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050123343 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064425308 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071908604 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050002689 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072373037 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091542179 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07450089 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066567878 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124474789 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.10877356 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070498104 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092829441 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.384549294 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073012939 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078026438 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161476128 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075656702 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082532214 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139591854 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.049983005 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135670194 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138765817 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107006325 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050121387 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141051458 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095168118 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070915248 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064855181 seconds)
    (185/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072826309 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066363842 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064596594 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071657798 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06722073 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065960715 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050496027 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051055874 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065902796 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073273712 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064314685 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.1786369 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064149607 seconds)
    (198/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050388172 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194104054 seconds)
    (200/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.207114461 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175315168 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066470547 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156489946 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05180977 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05114892 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064334083 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.161715725 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051965098 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066439879 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074692472 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071318715 seconds)
    (212/309) benchmarking ("sort", Float64, false)...
    done (took 0.130997405 seconds)
    (213/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190770615 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066571155 seconds)
    (215/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065973549 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087908159 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064948686 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075224865 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074101764 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051805695 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091430106 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051054095 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102077442 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065545367 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073215038 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091032137 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066077497 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071371605 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074301604 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089016485 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171839898 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06174486 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064148922 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050770183 seconds)
    (235/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051785819 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113221201 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063848141 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065360991 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155314883 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1359974 seconds)
    (241/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067397153 seconds)
    (242/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050579675 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093742699 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066875754 seconds)
    (245/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09951078 seconds)
    (246/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050783721 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052471669 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090332091 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068033829 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050369389 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072466654 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065332693 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050561963 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05113809 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05087596 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051976998 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065438959 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088077043 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072310803 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063814512 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073309394 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088616189 seconds)
    (263/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060279277 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067799645 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079986091 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071413271 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132266475 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072633089 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065278836 seconds)
    (270/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072004126 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052999712 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060480414 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090403937 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072288847 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051335459 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050134384 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086274236 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05176189 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061078431 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119953421 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074737805 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051738531 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068228894 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072997221 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066258171 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063578931 seconds)
    (287/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072326447 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063588844 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071366802 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064893728 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072260037 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098770361 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051439436 seconds)
    (294/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068982531 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070486098 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050205953 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087892925 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052069685 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066379833 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064905871 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051634429 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064658354 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071579042 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071946879 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087818946 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.0703734 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051029455 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066598802 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087574986 seconds)
  done (took 30.797411069 seconds)
done (took 32.229795363 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084055426 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092214101 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074267285 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092162786 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079846718 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075032019 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071875716 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077882412 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079546879 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081296176 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077641396 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053404024 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073305066 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073416294 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073913588 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090612381 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077400732 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072231423 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072383019 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064139147 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072252021 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064622558 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06679114 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05367778 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078172471 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071578869 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072052075 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07322313 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065027144 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06471477 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06859993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072589768 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064748933 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07813927 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071893854 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072087628 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073592446 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075960683 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066377253 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064995478 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073569441 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064752289 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072117877 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072946582 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07163458 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070929003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072217032 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077383917 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090455785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067412445 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073671762 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074985738 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074927923 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072124826 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069269514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072419175 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070477801 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090574115 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072603662 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067302017 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073163786 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073599341 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070762794 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072332539 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072203206 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074397337 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075439318 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071158239 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073800622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071348875 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064369629 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072019783 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06844954 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064957937 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074886336 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076374719 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063371001 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070487392 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071824813 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070418416 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063981308 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066710219 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066744101 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071796259 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066973411 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053592028 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068966833 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071958666 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06396911 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07316555 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071728172 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072060788 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067151914 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075668042 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064121729 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07044262 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064823755 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064546906 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066364088 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068988045 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064239975 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066378362 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07393058 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06657279 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071316461 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077976995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064356373 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07108461 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063652487 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063874977 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078889101 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074003819 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064554419 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066873102 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06375493 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071903549 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063962088 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065045588 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064871539 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064617115 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070796247 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064172134 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06632311 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071928914 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077453156 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064464649 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067578177 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066467007 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06404049 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069710634 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063954801 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063825533 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065993861 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060848173 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066201144 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064125735 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071250181 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202465686 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074354965 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06707995 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073625669 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071010396 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072394724 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071085976 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064250301 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058558492 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067735628 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067627658 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067920799 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065482412 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067834044 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065217106 seconds)
done (took 12.373226968 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067624582 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141566718 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098221612 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095365851 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085724872 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066052149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075877438 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10089918 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067216667 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100643254 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087559838 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084345049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111509228 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064171284 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065164779 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06875353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067040101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080985424 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10028534 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086241932 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115340761 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06501626 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093851589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088989389 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086545059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100875292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068459117 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069194086 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068821479 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090120852 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085839001 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069105788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065891397 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096651312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09174807 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083161534 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066123402 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082096884 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065918834 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065879581 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066782316 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097237359 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079036376 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079160749 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069277686 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068241036 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066985191 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082792984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087859156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07800565 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085990898 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10193778 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067790399 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064836712 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063916734 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084327161 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064317547 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068150283 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065100834 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067681555 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065457444 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068759283 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080190548 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081582554 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068585059 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079273862 seconds)
  done (took 6.773397905 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086146411 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090432648 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084018339 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084318764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064864683 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065752758 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066110567 seconds)
  done (took 2.058060489 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068048212 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08840965 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088782418 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088655603 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084699572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087259554 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075256727 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066189036 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080118597 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067265323 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087229012 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102028619 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06661811 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072260733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090284244 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065794454 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090368518 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066029737 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068876877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089801324 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06766383 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.0817364 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069134173 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06567441 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079893963 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065770501 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11357998 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069935883 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067952051 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068899701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06381739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107778223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080223013 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075315219 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066323487 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080547696 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08064179 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064208557 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082443892 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07122208 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079585831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06621526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066898791 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064173755 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07038153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076386999 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066489764 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066586986 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069038093 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086066028 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067074183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079945516 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069186745 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068403548 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068026164 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070005212 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076209732 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067009679 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085957245 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067213097 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083072031 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082198328 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080321831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082625514 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068888098 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079868838 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080155479 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068857221 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068588723 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069889012 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08267426 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064452756 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067528707 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077397071 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068256112 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089337855 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089190215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067437384 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075351373 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066767783 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066185762 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066068215 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089498597 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068645019 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066056374 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070089388 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069205516 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064448681 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06550606 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069685874 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064250753 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067542099 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068785848 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069178452 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068655208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082727274 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068536723 seconds)
  done (took 8.751536577 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069305554 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067672298 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068844145 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067498623 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.0675843 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067383266 seconds)
  done (took 1.950177162 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094411043 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069026351 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080456535 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071872253 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10513557 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087555812 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08748986 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078138219 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083758969 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078240197 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087214466 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088493644 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092618981 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072222462 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086015841 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071447374 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087007205 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0748727 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078122964 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073070286 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086363209 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072529802 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072554959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081308863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076014686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071813764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066799992 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078546281 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077885016 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077961719 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071733707 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075700031 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069888717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077609966 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086584328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070176196 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071704813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077006449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071777531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075601435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087912119 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072431723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074300132 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077144263 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077969985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070616741 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076956057 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075809217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086143073 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076841241 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077504239 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071394518 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075626837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076820102 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070167887 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077784996 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076758669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086732328 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072530608 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070199847 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068522776 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075473836 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077663125 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075592694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078397481 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077082926 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069981468 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072947018 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073330117 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071567992 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077294866 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068799267 seconds)
  done (took 7.093975104 seconds)
done (took 28.135594012 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538052912 seconds)
  done (took 2.041491643 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612204552 seconds)
  done (took 2.142443232 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.641624754 seconds)
  done (took 8.166991571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416228761 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.508748963 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725587218 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132675698 seconds)
  done (took 3.35709991 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695299224 seconds)
  done (took 2.231660711 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216395765 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20360449 seconds)
  done (took 1.968302747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377980478 seconds)
  done (took 1.904163284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.145859219 seconds)
  done (took 2.672264844 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262024599 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175869257 seconds)
  done (took 1.971675686 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482162153 seconds)
  done (took 2.014963746 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.873399736 seconds)
  done (took 6.408596386 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215311355 seconds)
  done (took 1.791855223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242026323 seconds)
  done (took 1.773812796 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.694575895 seconds)
  done (took 3.228027886 seconds)
done (took 43.208962203 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080777872 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079991221 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080350498 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077817602 seconds)
  done (took 1.838953987 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078446607 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072664632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076421398 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072911582 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076583049 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072302045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073930448 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076730096 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071949583 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0726467 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07237537 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072142913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074353711 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074173629 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070979187 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07480392 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075644375 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071885668 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075228921 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071978338 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070041409 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074998341 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074860642 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071697347 seconds)
  done (took 3.309022421 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079592562 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072405111 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075179061 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072325143 seconds)
  done (took 1.845794379 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07971915 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094820387 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089764975 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077917066 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093150901 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086258231 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069183691 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06840602 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070023242 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077406302 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067698077 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096328729 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088141125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076753112 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079352945 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065452657 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067810584 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087458502 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077354629 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078009826 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069922246 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076790172 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067897912 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088584686 seconds)
  done (took 3.43405339 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078054244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105004108 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077552887 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08876153 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091181616 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064887121 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073974552 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090493011 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125861931 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065447235 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070052305 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065119421 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072537795 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064153824 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075868231 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106439153 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11056667 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068357217 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095931351 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064873409 seconds)
  done (took 3.205575288 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073382631 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070242863 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065910997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068220442 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076329318 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072465164 seconds)
  done (took 1.978407875 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069450962 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067267966 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066849989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067104897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071893521 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066519747 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065372176 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066786611 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066667179 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066657294 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065960519 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06513249 seconds)
  done (took 2.350892512 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200056763 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06804232 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068098788 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065305016 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069984552 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065844535 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079720276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067113618 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090548498 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065590343 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065875834 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067744272 seconds)
  done (took 2.523316806 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210106586 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075798808 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239859967 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139056842 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111026774 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115248328 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104437779 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113648244 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142330422 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100979142 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168299781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167660577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107649503 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13686252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08828854 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099654096 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155408269 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162692349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104751005 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167380448 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14609057 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125796671 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147091895 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10597414 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105434951 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122466591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070509714 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079420165 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170649907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133021489 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14459169 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110622972 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092792152 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176733787 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172325588 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142372812 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136559511 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083967701 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104499008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134064601 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199575277 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087809201 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160978379 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108168104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219689068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134951585 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121286372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121226442 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106028096 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089705466 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146676084 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185828737 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138151534 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088060327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114153531 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11421429 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1151063 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104042321 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183417645 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163101729 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127905091 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070325368 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100833386 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154827374 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134360812 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108693603 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126373647 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093777515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135462773 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154826395 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119970128 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144771915 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130354538 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088200817 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119566797 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14097447 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128039226 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160945328 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123603563 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072284528 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124371605 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101915225 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079729566 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144917839 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074207332 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176472543 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098070089 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107866888 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114040718 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108829437 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108142876 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160250207 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144960816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10231973 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064758665 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247532354 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121468821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147336751 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088303908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109699659 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118573136 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07789909 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138825135 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074681866 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123591425 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077493812 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128458749 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131339735 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076556194 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121800096 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104053283 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101003134 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13232934 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160500371 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087739889 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081650942 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169666786 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123286292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103086348 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14527284 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157407189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101230397 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102296588 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149844074 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179461681 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089055934 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164095322 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106855501 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08288162 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087319043 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123437147 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110875854 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123409242 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081322629 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118581573 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168543006 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073817957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095011284 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133269559 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078345272 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080489643 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105768224 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105088052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094469338 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099702178 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102905806 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136404318 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123095538 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104354943 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123207132 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097207412 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318437669 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08770365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101006947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104753467 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069546514 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137285227 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157563085 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078353693 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163634255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123763538 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106283237 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119093625 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083579957 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139875287 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079579603 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070006427 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145839474 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110583229 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111531574 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151815411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105979225 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126528885 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119414017 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134695028 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132012987 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131086055 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105635892 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087984584 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112251055 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125964219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072337464 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091464252 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079747201 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104046706 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096256984 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082303028 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14252304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123489769 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100645497 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111402502 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096234119 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147721837 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075851695 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127711912 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119703307 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095334737 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153297175 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152691328 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131234978 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098340558 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136792353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06931462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073157922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088521625 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122895188 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081672498 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082086618 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261646254 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150466328 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129946677 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138718805 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113036892 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11963735 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15527671 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070282381 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118066944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148624511 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121930069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103877613 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090406716 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098778388 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142728102 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108188393 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183140273 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117784941 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124425743 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153493877 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100098445 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078834392 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102841982 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136830284 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105204727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145017376 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09985952 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08844778 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109651923 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073915125 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099483689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127569312 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119575025 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135313717 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115093926 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132861543 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076532926 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116263437 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121235179 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122529168 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063558165 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120178185 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162259665 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093980143 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118186221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152741935 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078367811 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1255992 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175727276 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144230225 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084230669 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254459165 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120214817 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129101023 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121835554 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141917554 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107279086 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137744609 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109351384 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085788088 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087636323 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097084435 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104735906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094183707 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107800125 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113733799 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094923767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132778467 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105007392 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110418539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119544075 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097775476 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089787887 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096455624 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178025678 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119592961 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170516203 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099502446 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145540647 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163228497 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074399533 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078881325 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077074602 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139024759 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084165214 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129976184 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098798598 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106583545 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123434764 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143193745 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094843122 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068032997 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109359507 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134105716 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113167766 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097921467 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103926397 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163268762 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100384396 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07904586 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112743709 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105312134 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101828977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170990975 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061071652 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097474963 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075402178 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0796535 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127200682 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29610838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080772497 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10364513 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120546574 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113091984 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128906711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101306828 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100175696 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116275326 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149900254 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128510668 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089556059 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112299197 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146079153 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156637623 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105443355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095597696 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175274244 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154001306 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16058225 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088394903 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114614767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115108904 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108196145 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138144517 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08248366 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163883847 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081560725 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136803077 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10342453 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089605806 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129850974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09959121 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087696318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148175502 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117272097 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081809527 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076897661 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11763073 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119471499 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105823893 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074382336 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138850953 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072836202 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132234965 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159436556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079763765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107227935 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095781786 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078700371 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106101281 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101408747 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08709563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238642175 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176738158 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087600181 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150499156 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133497887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112001854 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136098419 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101829057 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641686718 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077354534 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153580427 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11702451 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174632789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100449153 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118805329 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109756442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123337328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145737376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104079864 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181048849 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131536851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116048321 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079159375 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102259995 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104254181 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088012946 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107161039 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113326542 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116194568 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093557112 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116040317 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124917501 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081112933 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095762134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156859499 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116522467 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143706861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139983963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08486072 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117609792 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138526067 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079775378 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121665494 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152421123 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10577261 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098070868 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080040804 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100736994 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157784131 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07186531 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159989715 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263662585 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110428379 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113877957 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11369418 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132398329 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108339224 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121915686 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093078669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110739725 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112905449 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081425134 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076751602 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105857546 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112154666 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098526899 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097106609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097918872 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151643275 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071123081 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099330578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103812533 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144810629 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174713006 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088193118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082179777 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119368981 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112533299 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113332419 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121448075 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079203743 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081182643 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081467332 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077233526 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109238644 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112671791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104174479 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110479133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16330221 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082588702 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23264618 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094900535 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104576335 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069066448 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077430119 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095965581 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098514821 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107457938 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101079962 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159670063 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094498491 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089545226 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092288418 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073385389 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08264505 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12917737 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109533577 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117321176 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097841345 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061142914 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107305751 seconds)
  done (took 58.779732693 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106402812 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082386758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095106775 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.142696345 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121952355 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20209879 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152075767 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188655679 seconds)
  done (took 2.753928976 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06908699 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095562829 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102086767 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083922269 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065849665 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067874755 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231063589 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080487792 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065976307 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089316676 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077549219 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067706224 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425288906 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065160564 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06627112 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060785075 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066537099 seconds)
  done (took 3.416680013 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384373564 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608850164 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383060228 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072565116 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.457853902 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090126719 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.146221248 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128946194 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072549894 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537428119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701254645 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125048808 seconds)
  done (took 18.358259383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076566789 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069019996 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082455878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08347571 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071860045 seconds)
  done (took 2.026717416 seconds)
done (took 107.392049212 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081320689 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.379489307 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052374262 seconds)
  done (took 2.103802177 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083585775 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085146917 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084592015 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082728296 seconds)
  done (took 1.986774216 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075381945 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075482922 seconds)
  done (took 1.795900895 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23278913 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167025251 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087062449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083222412 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078682515 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078909847 seconds)
  done (took 1.893107238 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073204352 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074758201 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071737381 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07618306 seconds)
  done (took 1.942432948 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077892278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05199652 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054171157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057425342 seconds)
  done (took 1.889401157 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088108195 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078522594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078022848 seconds)
  done (took 1.892201279 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103912311 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085325746 seconds)
  done (took 1.837047973 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083404378 seconds)
  done (took 1.732553356 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099279198 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104274525 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132765294 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111002333 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139508554 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109366346 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084642989 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085404873 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076297136 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086225198 seconds)
  done (took 2.677715692 seconds)
done (took 21.960366116 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079714491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362367971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359895608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089691652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672325513 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355636103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989330773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092250154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114226654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066763919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083872656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649139492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012066581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322353376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000855346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323684016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66284245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067392332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067061678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067355812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971741559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067499503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067149618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067338739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657238174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370898044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068134499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317733111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067154576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069544177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353574842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067728509 seconds)
  done (took 16.217559897 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071411171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120590195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07301065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084559844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069985571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068875241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070765018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06842969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121449865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067463675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084286765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066972273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070714457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068437392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08706199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067647406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068449503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067672215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067265522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067555277 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08605371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066989716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06744406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067700654 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067540487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079293642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067524864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066981308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067589795 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069717774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070401017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068195853 seconds)
  done (took 4.038965917 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1196319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126900717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073437115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105526318 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114136079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06910749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145994282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092791693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128703966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067606813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084108393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067314475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101757965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068631241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087950464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068222621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068847338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068326614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06744245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067698515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087248516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067183981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068302205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068327921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0678516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081350648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067876543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068315241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067795922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069992527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071128429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0681005 seconds)
  done (took 4.309861893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07399475 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074959511 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083198246 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084146649 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069070454 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071882027 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073277571 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068855665 seconds)
  done (took 2.262829545 seconds)
done (took 28.482482227 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080648614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06831753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07202949 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081800154 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072762174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077723871 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06710575 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074432814 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071643196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072932858 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074195653 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066541319 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070312871 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066375019 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073350858 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067180792 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078528894 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0715003 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078963294 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078312401 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069210751 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07280571 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074404707 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079038208 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078752563 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078487328 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077224453 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072272976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068604528 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070153328 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076368963 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083264454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068298641 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07850107 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067321778 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067084013 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071508415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06696731 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078472395 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076305171 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069621148 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075734719 seconds)
  done (took 4.723900708 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089630134 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091655656 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084167151 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061418326 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066671161 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064713343 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088604183 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05916557 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058540258 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087346942 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054815825 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059162104 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062780172 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053160119 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062125057 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055831679 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061765354 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055000621 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059605777 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059067475 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088382732 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053047194 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077218767 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062474139 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055047909 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06058245 seconds)
  done (took 3.401331703 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075687531 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086862463 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089620269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130672654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105329374 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078194355 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080160386 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095031004 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08801001 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06657987 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070952689 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092563204 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091929334 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073554293 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067346963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086678957 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083524288 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068439814 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.0733003 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095317694 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086691689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086042031 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098277109 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082717717 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066425933 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069574243 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070671286 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081321706 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071711992 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076194752 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071003047 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070588452 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068736292 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089945548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071058815 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068913834 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092358586 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077019746 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078319919 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067380021 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070522951 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067974026 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092935595 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132282383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066346963 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074017856 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075151803 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076449135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066915862 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086980482 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078258675 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066597958 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070344026 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066249013 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066852858 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08055064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068625162 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069286529 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076481487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069839442 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091775911 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071270693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082782807 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066379916 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075037301 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066436372 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067999933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066008004 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094470086 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067931279 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110889686 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067450633 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067463206 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075647142 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074571668 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073203717 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067111897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081989975 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077101249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070259715 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075935792 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070066893 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069312347 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090500702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069147543 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0682176 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06754437 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073231594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06946253 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067879642 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079760947 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.0667033 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069619824 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083652706 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066005583 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067599678 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072654388 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07193302 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065675141 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077459949 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071395771 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067517205 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076028855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066681505 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069857855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079579228 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072792124 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065651298 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071090375 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072625386 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067416724 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068288031 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069364994 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068643997 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075649859 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073298545 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07123876 seconds)
  done (took 10.604753964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165219563 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15681339 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070369871 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148337205 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075676158 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078518835 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149780084 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094615405 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0674116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067730491 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068347598 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109931533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105962499 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11530245 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07840809 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066763467 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084289342 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11446627 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154353312 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.1460175 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08486095 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076552384 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069686577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068096342 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069658715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077971744 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085221656 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076308481 seconds)
  done (took 4.426290248 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081998679 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10000253 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074281021 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091425738 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091175259 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067220368 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069423578 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069055494 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080843189 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077978386 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067210237 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072694198 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074332072 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07057249 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068058235 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074132251 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074086283 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069026923 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07082092 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073353009 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077391077 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091223847 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070786801 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066496491 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071971739 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066191491 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063552649 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083756862 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067286765 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094116652 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06539388 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07599456 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080989088 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067864764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067021915 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067098311 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067038377 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067024396 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068767461 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06580388 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0655154 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056706489 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065802552 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078835849 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073352324 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055364221 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072053015 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072069606 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072343315 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064904306 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06968024 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069361497 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069964784 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07424715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07193523 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072503996 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067937514 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073593445 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075624682 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066634482 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063780386 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065198172 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071358616 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064626603 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075812275 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071880711 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065434848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0667331 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068768654 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073410897 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066593896 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070143075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064815272 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068714178 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071512617 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068834965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067815466 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065533896 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066734258 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067297761 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05440751 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067125866 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052120597 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069617902 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065163219 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065434457 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067027386 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071693627 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079116441 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067947347 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072393781 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067535101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065759285 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070213866 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059507157 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070005537 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083267328 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082253396 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066995586 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064825368 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081745117 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071817255 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065949053 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055384017 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075003151 seconds)
  done (took 9.120810832 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090565162 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069884471 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08608386 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092840528 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086780276 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074862689 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076767464 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069071909 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082903259 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07377907 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076851275 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067647279 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077613948 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076794931 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069818235 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077454733 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071332661 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084175312 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082248337 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067608509 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075599356 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079958349 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08967152 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081868724 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079971041 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081043523 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089763941 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071871724 seconds)
  done (took 3.91024814 seconds)
done (took 37.843094263 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74938124 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.911924906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.741192279 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.101566269 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.919378532 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.853055464 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.817342857 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.73378399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.975911773 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.773614081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.944133135 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.887543366 seconds)
done (took 65.085297574 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.776217368 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.882360443 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007566407 seconds)
  done (took 5.566230316 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017665772 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.3016063 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.983500599 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.735205514 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.740218067 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.079178846 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.543349077 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.267918091 seconds)
  done (took 30.32783511 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.909130706 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.977684033 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.440562485 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.470926609 seconds)
  done (took 15.525820047 seconds)
done (took 62.974788389 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.74355185 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.785071794 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.74187678 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.719121037 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.795334858 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.75933202 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.122731678 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.945020621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.736332263 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.72845926 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.73829381 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.193189769 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.742514128 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.321067262 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.741732698 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.74179036 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.755059779 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.293708454 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896846073 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.745397154 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.760194485 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.810054403 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.737980875 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.747673183 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.738557831 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.736030244 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186272034 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.741290433 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.561274459 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.73724433 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.800626174 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.753638712 seconds)
  done (took 204.23335186 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.737793089 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.806498588 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.889028761 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.778741927 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.302848489 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.920474456 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.860616244 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.342632324 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.743536431 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.755565651 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.854819161 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.737795909 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.875942767 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.689737474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769420551 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.744073312 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.003031222 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.901576915 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.772800939 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913813358 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.754172421 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.67271144 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.643901238 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.857788828 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738080527 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.761976673 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.755109656 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.772677505 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.937781956 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.958920265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.749673706 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.744177576 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.947995362 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.613764632 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.746934628 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.752806962 seconds)
  done (took 168.488386891 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.118104261 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.7408003 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.741962534 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740445275 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.746759711 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.74226704 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861708569 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866271662 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.347666026 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.477788846 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794271386 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583893864 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.742230613 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809808271 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.753365408 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.742855435 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743645032 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743705201 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.756339039 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769715204 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743068417 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740156303 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866410987 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.753010002 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.772106577 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745916817 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74422451 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748174162 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.116441231 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739650593 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747873626 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.98898039 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.742618076 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742821038 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647450414 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.124081834 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834067948 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744058183 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747057951 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744539058 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.963166257 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.740302001 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743173857 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.742615868 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.745028823 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931692809 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.742861836 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867365986 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743367648 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.265646672 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.744063411 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744047898 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.639177286 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.468987851 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743310389 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.741426722 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744077393 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.745491922 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.741469527 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.742774291 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.749504884 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.392060205 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.817156157 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.744400974 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747053693 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748273039 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.743786078 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.793165339 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746802983 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.117916287 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.798944304 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.983092055 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865130964 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745251098 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812064833 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836569574 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.742877639 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.743083131 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743813607 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.74472161 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.825098593 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.743681139 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868353627 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751173762 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.744496151 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794925982 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812793427 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.742748452 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649646055 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.745407836 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.746427882 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.087428179 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814249283 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.744205594 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.746868271 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745651815 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.867843724 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866390908 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.544468338 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.747576589 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.416156772 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.74562842 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.879143493 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.744789637 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948111313 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.747073314 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828605753 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750334116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.749772245 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.745238537 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779412629 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.745084415 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.805054273 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.746786196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.119972067 seconds)
  done (took 399.929046899 seconds)
done (took 776.504138271 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.422866812 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.381362759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.48641193 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398153053 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373534155 seconds)
  done (took 13.746792621 seconds)
done (took 15.431762681 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.8348939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.838926357 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769309883 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838372088 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76774792 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.83792643 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817944718 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.769850503 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80306952 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.773172159 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806801059 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772405508 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759182195 seconds)
  done (took 25.074086754 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977004877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991306464 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820934581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991612331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794580741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.994487828 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914531614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904023156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907041382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765715205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76015035 seconds)
  done (took 22.509082431 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.986577423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986755811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829503484 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.996667529 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800374459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98572476 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91748155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90686396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905811918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765215987 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762390417 seconds)
  done (took 22.528907794 seconds)
done (took 71.796934124 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.756463991 seconds)
  done (took 3.441928953 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783205417 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.939353948 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763871721 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761451752 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.755919955 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.75979215 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.76213693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758977096 seconds)
  done (took 15.972514105 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.757673118 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.758449525 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.755337963 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.756726277 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.759785766 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.756841799 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.755104394 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.758651041 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.75815962 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.759457542 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752790908 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.758752523 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.75632781 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.754542848 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.757858838 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758474674 seconds)
  done (took 29.803584896 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.758389173 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.756098171 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.754928745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756170857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756584277 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.757184031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.755899125 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.755936779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.755179028 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.755647405 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.758711683 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.75703757 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.757965602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.756886646 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756138955 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.758265948 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.756211507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.757733284 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.761684633 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.758921652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758624209 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.759324765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.757823063 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.758282831 seconds)
  done (took 43.868519546 seconds)
done (took 94.772735445 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.615480213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.329081165 seconds)
  done (took 8.633089566 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.760432071 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.761121653 seconds)
  done (took 5.255526366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.763054191 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.761091069 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.760707052 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.761343437 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.762289481 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.761484548 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760491384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.761065314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.762342575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.762177866 seconds)
  done (took 19.307139834 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.76093454 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.762201761 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.75746495 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761476011 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.760077218 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.759574643 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.762464821 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.761406207 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.761608594 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.758113479 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.761687916 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758596166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761777561 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.758721491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.763154005 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.759276812 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.760596028 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.759744348 seconds)
  done (took 33.380083905 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.762281551 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.763268006 seconds)
  done (took 5.216457749 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759748247 seconds)
    (2/7) benchmarking "second"...
    done (took 1.760258631 seconds)
    (3/7) benchmarking "month"...
    done (took 1.760648739 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759939009 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.760164107 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759832434 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761062572 seconds)
  done (took 14.013993292 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.763459223 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.917157744 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.981147413 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.389613854 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762093289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.76584961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.708073616 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.76637089 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.770036753 seconds)
  done (took 19.516651392 seconds)
done (took 107.012815389 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.621380786 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.756813052 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.142878702 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.811456709 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.802742612 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.054879697 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.79700785 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.061562078 seconds)
done (took 42.741972985 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.775923523 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.309468243 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.355098662 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.628652455 seconds)
  done (took 12.985045027 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.743362779 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.292354832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.796338332 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.355965185 seconds)
  done (took 19.931876288 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.126553002 seconds)
    (2/2) benchmarking "read"...
    done (took 2.105604095 seconds)
  done (took 5.931919074 seconds)
done (took 47.319472883 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763359617 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.764676453 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.764978547 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.763030948 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.764575098 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.762400358 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761302294 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.76434629 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.76442684 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.763815954 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.760993525 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.763987767 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76178989 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761155452 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760560597 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765310046 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.761060611 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760827578 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.765701926 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.76195194 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761578226 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764757398 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.761240807 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.760510205 seconds)
  done (took 44.00190138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.764478996 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.76384082 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.765689071 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.766000124 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762598341 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.764825816 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.765447902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.764195717 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.764037176 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.764714303 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762345193 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.762550886 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76520968 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.764095287 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766984658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.763309469 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.764930426 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762969267 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766665369 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762471539 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.767005657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762613016 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.762684896 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765657035 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.763754119 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765063778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.766687706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.765201596 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766191977 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.764718499 seconds)
  done (took 54.632547751 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.771204488 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.776451639 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.766764597 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.766410847 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.76690232 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.767115478 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.768190248 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.766281857 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.767564936 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.76707358 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.767411881 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.768020066 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.767863012 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.767725887 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.767883475 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.76779674 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.770018779 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.768226742 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.76842253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.766412425 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.768710324 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.768118394 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.769671847 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.768270551 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.768145456 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76932234 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766638237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770255441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.767476268 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.768849145 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.768101605 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.76793555 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.768788803 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.768574422 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.769211898 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.769890976 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.774274676 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.777832729 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.768864357 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.769579756 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.768496955 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.769593871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.770336644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.768310713 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.768906001 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.76903359 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.769326127 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.768157947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.769591809 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76912138 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770077515 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768821689 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768839909 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.768417085 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.768973316 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.769431689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.768330762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.77058419 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.768201799 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769365546 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.769035081 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770965867 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768898787 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.769449045 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.769900957 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.769400653 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770089942 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771104305 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768561798 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.769533032 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.769461027 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770933333 seconds)
  done (took 129.071053076 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.771126906 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768319868 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766965846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766502579 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76702457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.768786007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770028416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769267439 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767933796 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.770418317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76933436 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768193919 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768225684 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770285714 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771130507 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.770144458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.771845117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766787274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.772046406 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.771128636 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77113399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770736887 seconds)
  done (took 40.628006476 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771710751 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771381991 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.770019408 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771954079 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768056414 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771167175 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773361881 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771423329 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772576971 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767310167 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768185979 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772611589 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.770492649 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770989163 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770187892 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769570581 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774347917 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769600765 seconds)
  done (took 33.577602987 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.768805471 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.770823482 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.771416707 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770078004 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.770986891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774292638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77024732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774210239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.77410678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.771082394 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.77339018 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773960798 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.774001111 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773091901 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7741598 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769895096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.774341327 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771701045 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774449848 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770962358 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772232654 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772389076 seconds)
  done (took 40.694149281 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772889668 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774370075 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.771467161 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.771722494 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771385849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773635273 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.774588488 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.771773042 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.774977189 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.774909479 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770919398 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.773667323 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772117025 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.771295883 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.772675218 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773292767 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774510937 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.773567755 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777079992 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772791521 seconds)
  done (took 37.167080369 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777200893 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776055148 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.774949179 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774403381 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776575541 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.776452455 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775467834 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.776841474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773141406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.77655994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774392394 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776626127 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775200981 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775037623 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775681759 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776015212 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777216791 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.773391633 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776193633 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775908571 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776606342 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775512934 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775446447 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.774801206 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.777421251 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.777315325 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774489349 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776859093 seconds)
  done (took 51.427736743 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777224871 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77509873 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773549324 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.77429743 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774733075 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.773061121 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.773396148 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.773236125 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775438616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773886382 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.7773781 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.778747615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777157021 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.777790346 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779745461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.775987302 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778916686 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.776129757 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773866769 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774718724 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.77800034 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777995096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.778315645 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773326014 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773930701 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.778492704 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774911735 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774519786 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780128735 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774014234 seconds)
  done (took 54.984605139 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795837155 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796661535 seconds)
  done (took 5.298201735 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.775570802 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777720051 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.776972447 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774775027 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774725063 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778274214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776750529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775683726 seconds)
  done (took 15.916857649 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.777444083 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.778172306 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.778350509 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779750087 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.778142016 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77714586 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782083272 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.776613622 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.780103167 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780163855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.785321023 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78785428 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780849158 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778548029 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.778943176 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778606497 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.778580788 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.780081595 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.780382014 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.778834981 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779363384 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779241647 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779999927 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.774825026 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.779590377 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.788651634 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.781288591 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.778482882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777923962 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.784120226 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777202585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.775882708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.780014881 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.780121309 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.780068541 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.782296083 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787355198 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778333199 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.784971842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778698272 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778719074 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777740044 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.78017403 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779994413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780593346 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.780052728 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.780044662 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.776214742 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.778070561 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.78211632 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.785484685 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780409582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.776339674 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784469499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780944528 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784176031 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.779429301 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.783689019 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.791032571 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.790541825 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792145814 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789568292 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781831444 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.780170167 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790750499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.806430063 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784364929 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.776178337 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.777967306 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.780139961 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787350263 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792936784 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.78955621 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.781341457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780968511 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780363105 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781181963 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781323128 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784842136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.782323423 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.7814935 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781261105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789527852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805504186 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779648046 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.780692427 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.781024261 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.782061056 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.782071078 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791218306 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.780908303 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782239157 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781286663 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780307571 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.784259469 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.782107002 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.782235009 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781650076 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.780299176 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.783659122 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78209835 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786280454 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.793280517 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783384534 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784483834 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.788286431 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780759726 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7817039 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788729305 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.782519177 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784434223 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.784655096 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.7878785 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.779175178 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786531235 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.79165113 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.782812973 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.783897574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.78306822 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783079326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794448683 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811757043 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782044156 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.783838064 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.787019736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.796116219 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784648739 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787752513 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.78392494 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779834713 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.781054041 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.785571961 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.784210889 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785721451 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785535467 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784081899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.780428279 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.784391449 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782921664 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.784992304 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784119427 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.782633819 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784058513 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.784846872 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.785185483 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786228986 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.789763581 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784088722 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786016972 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.787968445 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.78352269 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785447496 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785217677 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785573234 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.784586627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786118215 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785920128 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.784982561 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784674636 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.785192806 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785320903 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.787214175 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791101683 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.786122257 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.790377607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785648668 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.782986308 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.785045806 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.785434554 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.786748936 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.78616995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.78388861 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.789108509 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.795463032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.785856302 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.786542313 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.789780633 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786669095 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786421597 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78622017 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.789338852 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79683542 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.786206707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.791673769 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.785960052 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788038259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.786270073 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.787692041 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.786155941 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786124415 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.790628291 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.795011712 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799003792 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797108189 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.787834662 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.791723924 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.787723582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79130803 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.789413914 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.786905262 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.787895318 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789206198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787871 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788395026 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.789081857 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.788043618 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.787471248 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.787498329 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.78721547 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.7879549 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78979665 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.790475782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792503134 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.788079298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790312007 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791563061 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788898843 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.787152542 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.788150543 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786957508 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788067723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.789376742 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.792431232 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785295827 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788099568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789105287 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.788202357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786713927 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.787968567 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790004348 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.788730463 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79342612 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.788502128 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.788389317 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794526053 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787381537 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.787989665 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.791075132 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.789095559 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.785450475 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.792684925 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.798621578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.789721707 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788881213 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.790054263 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789725344 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789238164 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.794892801 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.78684545 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.790893511 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.790169779 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.791808187 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.786634807 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789725682 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.791050102 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791288551 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791540808 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789735083 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.789978611 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794489771 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.792395988 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791746525 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.790592819 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793374038 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.800710267 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.794347296 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.791455834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.791903161 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791832297 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795021995 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790546852 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792239927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790369045 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804520363 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.800553998 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79583998 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791328286 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.792213749 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794982751 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.792302385 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.795247384 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790766285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792926715 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.791640075 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791268082 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.788835598 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793143715 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.79207612 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792987051 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.792930876 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.796268814 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.792748591 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.79078725 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.792666722 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.791800899 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.792425823 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79222948 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.792792557 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794124705 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793471086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.792180786 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.79310749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796655529 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792209734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793512226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.79400958 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792731433 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.793138334 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.791040102 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.793171273 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794887611 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.802658792 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.796483947 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.80363831 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.793000806 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803671228 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.793784985 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796383205 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.804460951 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.789511982 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793350209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.794470642 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.79670978 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798023403 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.793464938 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.793804085 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.798829866 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794951246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.794182655 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.794736653 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795320577 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794669931 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.794690778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799236214 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.794725981 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798799513 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795894817 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792217164 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.795561954 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.792877931 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795154956 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798353005 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.794532979 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.794515108 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.796405237 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796043486 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.795882856 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.795415621 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.795272157 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.792824711 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.794192215 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800302255 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.795264644 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799558283 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.7949717 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803044378 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795373282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801538555 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.796483073 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796108365 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.796677888 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.795197893 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.797849883 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.795623324 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.79672399 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79641271 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.798831681 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.799479277 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.796884164 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.797394425 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.798100719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.797364294 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794550751 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807166758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824632263 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.798709338 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800583437 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.79289479 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.797993796 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803777985 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.798098521 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795788261 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.799645809 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809339293 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806429687 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.799464858 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.797846167 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797275345 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.79949495 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.796764532 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.796912614 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.798939032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.797718197 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.799008994 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.797761282 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800670285 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.797661797 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.798239481 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800167428 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799957538 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807608445 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.798304507 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799787391 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799156787 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.797370162 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.799432979 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798740062 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.799585076 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800547427 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798313862 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801021253 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806189594 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.806300113 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.801138847 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798894496 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.798189046 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.798157953 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.799422122 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7995658 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.79765158 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797940261 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.800553667 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.798959033 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798080021 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799176396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.798695369 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.79979725 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800246247 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802714583 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.808544302 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801112657 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796289688 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797500125 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7990158 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.79941241 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.800410978 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.806690404 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803730179 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.812247385 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.811393747 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.806857503 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.799335475 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804436681 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.810024393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.801014444 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.803197326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.801846142 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.802024617 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801581718 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.80503556 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801506214 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.806793765 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.800217563 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.80119867 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806407837 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.80124021 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800387351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801946655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804854575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.8008904 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.796767557 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.800551575 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801150488 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806101181 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.799527346 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801542787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803091087 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80067392 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.802446974 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807335711 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80047777 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.803396889 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798789454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.801947722 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800491974 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800818434 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798461757 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801279594 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.800827774 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.804890897 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.811124364 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.799359209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805236401 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.80273481 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.803325329 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803201434 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802205606 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.798709747 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.801702588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.80408689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802531984 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801230595 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.805668856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.802202251 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.803476483 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.8057563 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804400685 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805332445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.815980495 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811048974 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.80036874 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.803433774 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.802937159 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.807193207 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802439362 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.803549742 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803263981 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.805214144 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.802838217 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803565386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802691213 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.805603926 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818140405 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.801751665 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804637135 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803914141 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808453446 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.802279507 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801064199 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80443534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806839066 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.807586214 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.813864121 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.803516098 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809270038 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802412799 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.805078328 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.808705752 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.807803339 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.813948883 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.806626797 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804881952 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.804713756 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809687186 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.82205552 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804923184 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815076092 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835474066 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803710302 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.80669808 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.805534474 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805891191 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.804141375 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.805697786 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.806581614 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.806777127 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805585179 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.805379875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.807289671 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810055172 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.808249364 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805223745 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.805476983 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.80469316 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.80624222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.802901656 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.80662018 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.805704365 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.805625005 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.807377518 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.806792234 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.805364423 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817367908 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.814837924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.804762564 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806068608 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.803267671 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.809611526 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.811513582 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819685021 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.815048318 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80719908 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.806567766 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.807991277 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807514135 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.804300095 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807598014 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.807670282 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806305229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.803389337 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.820211555 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.818099641 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.809970346 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.809808493 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807943209 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.807329535 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809279343 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807977175 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808172153 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.808509322 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.80851931 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812658456 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.807556681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.808218032 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811313419 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817291272 seconds)
  done (took 1071.207672317 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80519332 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807623199 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804404619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806339292 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804776863 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805634461 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80499073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806190705 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805308569 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807312949 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806179126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805991534 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807744549 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806424217 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805917853 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806446015 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804497525 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.806098075 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805802613 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807788982 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806103703 seconds)
  done (took 39.663966226 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809511173 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.805116796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806669431 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809696365 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805537554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.809055788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805793305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809554476 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809615567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806710377 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.80885507 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810461373 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.804820965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806086292 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80664473 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809454404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809642427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806465252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.809224523 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806354775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810728755 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.80753552 seconds)
  done (took 41.513027187 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.810551163 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.809349227 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.81010788 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.806435331 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.810054594 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.808262094 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812744368 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.811915055 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.812762256 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.813905456 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.809670786 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813564657 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.81787666 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.815658633 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.809459214 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.808815614 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.952771474 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.807909052 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.807217362 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.80808824 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.803901712 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.812785611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.804931867 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.805884406 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.806280518 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.807846089 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.806858168 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808825273 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.806466662 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.808485564 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.813607665 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.806812019 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.807302259 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.808169336 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.807722346 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.808649988 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.813891542 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.810124689 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.806141079 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.809578181 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.819356507 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.83266365 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.808672101 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814115543 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.808800568 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.808524841 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.810545378 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.816948568 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.806281249 seconds)
  done (took 90.589577141 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.807366732 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.808963708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.805400667 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808120013 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.807811983 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811322331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.805768168 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.806424057 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.802361154 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.803767387 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.809806284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.796561067 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797371525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.801762271 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.800363773 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797436337 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798496801 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797631833 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.795582676 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.795164774 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.795896422 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79811063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.797392707 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.794711818 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796077459 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.793171945 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791711865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.799234192 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.79404067 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792971371 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.795513739 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.795656274 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795632634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.797949612 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.792964236 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.796077202 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.797108031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.793955034 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.796053502 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.79354941 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.794330424 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793878255 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.795280976 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.794749267 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793193094 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.793748816 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793451479 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.792299227 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.793130458 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.799022377 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.795719501 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795197655 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796388543 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.79266194 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795173419 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.79520225 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.792132746 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.792694624 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.795919791 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.79317061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.793671577 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795599105 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.793406156 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.795029312 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.795852692 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.79328528 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.794453449 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795093098 seconds)
  done (took 123.951410378 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795279787 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.795608328 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796677866 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797141008 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796498374 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.79435845 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79612917 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.797279475 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796462977 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795968604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797345364 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796743872 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.79562253 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.798493626 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799335343 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79715513 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.795814564 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797389561 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79653753 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798147383 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.795609122 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.796535177 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.79724526 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796606922 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798228982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.79952426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796493368 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796955893 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796479272 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796546721 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79690368 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.798042141 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.797639084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.797645677 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.797774395 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.797511791 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800320417 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797312411 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.796993092 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797855733 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79695586 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796594281 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801666782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.799378521 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797838025 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.799045376 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.797935193 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.800078301 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.797206134 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797384899 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79795217 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798062494 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797547853 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798629335 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798587547 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.797663136 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799225676 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798841492 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800140837 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799514318 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798144336 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.799232099 seconds)
  done (took 113.177384745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797662965 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798298403 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.796480783 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.795116894 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799142852 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797499756 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798992315 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.79945894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797222018 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.798143226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797625813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795833524 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802738949 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798137738 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793759872 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796014739 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794779869 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796435221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799200347 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792470833 seconds)
  done (took 37.672422822 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.794285312 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.796678421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.793213697 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793164043 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.795890096 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.793930176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.795912196 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795592486 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79944747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792554704 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792847995 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794855495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789594098 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79478867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790102491 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788416685 seconds)
  done (took 30.425952404 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.788681032 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.791498117 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.792706757 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.787769414 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.788417025 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.785030654 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.790713507 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.786733939 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.788553191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.789132746 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.789310576 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.790619448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.788285785 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.788102163 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.786077631 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.787241738 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.786993965 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.786994631 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.7902207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.796097646 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.786806945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.786256806 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.789732346 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792497291 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.789932336 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.785752173 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.785862056 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.786389119 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.785318281 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.790655527 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.787096803 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.788183673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.790726528 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.786761867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.788779961 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.787088612 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.789608533 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.79021208 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.791323096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.793244849 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790182886 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.787757128 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.791150287 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.790960753 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.788738748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.792263382 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.787558663 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.789787649 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.789791817 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.786345796 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.791291504 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.789899536 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.79322855 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.791258318 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.790790394 seconds)
  done (took 100.12602507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791106265 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.791588934 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.789938387 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.788523177 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.78884827 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.787436302 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791640446 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.786799448 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791988257 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787511648 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786685511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788836444 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785014922 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.791599792 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786717065 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789699157 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786356257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788518933 seconds)
  done (took 33.918389074 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790693781 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787817055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.790548016 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.788772526 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.788473506 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794418131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785817388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.791256155 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789314877 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785879198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787432071 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.79124817 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786537815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.789911879 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.785674737 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78426296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.788276839 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793197882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.785641947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78539619 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788920099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78861244 seconds)
  done (took 41.066704476 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.787448681 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.783042685 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.802325462 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.809020492 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.80952918 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.824895505 seconds)
  done (took 12.532795051 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782162605 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786454965 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784892137 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788742182 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784721643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783915047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784031462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783135954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78902522 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783322189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780902664 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785600288 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784589677 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783766809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787108415 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788089088 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785940345 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785045972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783961584 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784945233 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782322341 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784129259 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782672629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783715818 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785662486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783476887 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790929693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782989462 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784180138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786082418 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785365974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785699911 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781844809 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782412544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78778637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785995527 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782282587 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786895898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787282132 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782395158 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784750637 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790241712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78583896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787036612 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782154675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783161412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782906623 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781331666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783222371 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784768584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784433071 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781974035 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78514192 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784799447 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789784251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784470065 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784257597 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780398722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786215137 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783435487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783331347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784569706 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782987184 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781517869 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78548861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78302515 seconds)
  done (took 119.502759375 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78223137 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783197647 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783491625 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783532453 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786246511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782812687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782390349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781228913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782103343 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783358206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786820531 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784491891 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780882268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784393139 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782541561 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785633933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782803283 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780788065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781780729 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783000015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781436729 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783343576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78159349 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783735033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780841045 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784882378 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784607906 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781014205 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785349292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78154738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781973084 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779097157 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781405017 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780498667 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781838674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779365096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782049533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784728439 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778548598 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783392099 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781630604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782564051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780453926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780877866 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781004674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780493808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78038663 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780968893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779899532 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785747715 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78270413 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779731874 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779761547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781024314 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787068529 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780378481 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780464946 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784244487 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78006308 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783780241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785069059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77957708 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783055989 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785909808 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781155056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78275161 seconds)
  done (took 119.351088961 seconds)
done (took 2483.792199541 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.798711531 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.833646952 seconds)
  done (took 15.343789858 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.947552667 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.896930124 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781153169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.782025877 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.77707599 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.799651967 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.800009491 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.778132917 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.782730338 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.775766805 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.780763451 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.966614016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.774224782 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.777897874 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.779729585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.870229763 seconds)
  done (took 50.788704 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.784598812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.784570222 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.7961902 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.786338161 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.783837023 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.794064648 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.814736311 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.787504915 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.814556819 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.796492314 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.849986122 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.791768667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.780827745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.832488907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.794845612 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.797754824 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.879399063 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.855248813 seconds)
  done (took 34.235315501 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.859026311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.787952342 seconds)
  done (took 10.366706718 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.802969983 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.79825753 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.782699827 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.80055366 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.783077993 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.777699592 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.788036037 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.818682954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.800841832 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.806709596 seconds)
  done (took 69.674270516 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.787715046 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.784354103 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.78132166 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.785369117 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.773727461 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.781350678 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.779388183 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.778628516 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.471211295 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.816500829 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.787390452 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.791351492 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.780300942 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.782854754 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.778768428 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.803123409 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.910380767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.776575648 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.779529171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.784939031 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.78146522 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.83857621 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.795804809 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.782182889 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.810188105 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.470518735 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.791910928 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.791918235 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.91238954 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.778538226 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.782011299 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.779660898 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.782782703 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.170565746 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.084775182 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.779517587 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.789650905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.788049395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.779908148 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.89702952 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.782713036 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.7926822 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.697857777 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.073085173 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.888090211 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.823517822 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.164224978 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.784525979 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.78828924 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.812025166 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.783427057 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.784894194 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.794685349 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.293708942 seconds)
  done (took 127.880634869 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.779685787 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.057172708 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.933552845 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.778766691 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06430344 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984974475 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.778865608 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827368891 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.77594127 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012753847 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.941767329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.885010589 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777758035 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.775982671 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776560559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.774143309 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.943421083 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.851164356 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779592119 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.775277658 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809726094 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02408076 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.909468724 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.78102286 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.799837572 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990311505 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.903723498 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.888905171 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.055252526 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.777720798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844913393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.776988184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.782598036 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.77886317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936894978 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875396102 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866843514 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.781641385 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77787278 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.77754527 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.455011727 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97835595 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.876992197 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.923525254 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025347479 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983180135 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.568150125 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.777105411 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.513296145 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939682514 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012020769 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.014026221 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.905293702 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.783891767 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.286794142 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.78067157 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778049503 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.014209246 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006217361 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881918621 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7818212 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778949287 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777674535 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026026037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780755578 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.876911665 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782044063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.779123982 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875982672 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.883439758 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.013363293 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991939658 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.816097571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.116689879 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.261329127 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.029036377 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.848956339 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013337536 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.781346405 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.780220231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865262934 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.622662365 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.93890734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030422994 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038994903 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818230108 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.507293509 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.780520809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.009592731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006937175 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.088960219 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023235362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.933814139 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.98858665 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.780469067 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.779909935 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.03831848 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.920271951 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.784257009 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.143336322 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018465043 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.354325373 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.815442227 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092307794 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.916118686 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.783039223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.424416111 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.7832855 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.014385148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8273065 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.782081646 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.781602387 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00493478 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.864598665 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783655739 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.404982607 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.848401688 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.782633047 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022990969 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.785182641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048927173 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784496347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024225733 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.357267122 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821428471 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.016391421 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.025103712 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.788505715 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.050690974 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03272443 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.904210477 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.005698843 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.412727094 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.784180923 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078209788 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788820534 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.790600508 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.962256076 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.784277298 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965405867 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795319801 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126009404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812015442 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946716381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.786059211 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047099744 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.82513409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.841422572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.794438382 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915921623 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787608425 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.6738559 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940300675 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.789407872 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.785648353 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.479511664 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.788601168 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941875428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.019205785 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80914254 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858490948 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.455584255 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784262705 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874899138 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.812937898 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.126629176 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.787868609 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.943573993 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.783307811 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.312384105 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.785657179 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.028694789 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.967801588 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789792926 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.783788361 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.691122427 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.784291156 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.79295021 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94958127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.244878725 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784197142 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993832087 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789950667 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.916932614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.787400648 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.86491148 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.140128552 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.783790383 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.786987615 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.789683778 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.785687869 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.789804813 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.05822141 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.818389042 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.319478235 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.930075281 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070342446 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.106030325 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.037685484 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.833651762 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792643001 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.032865534 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.791820764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.853460128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.787785537 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810537976 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020036603 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79283248 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000309916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072086973 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733589226 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842510185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.786703875 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790935962 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.662727194 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.938242792 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882643768 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.787702931 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.785149172 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.905939998 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915164051 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002221327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.790648681 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.989656962 seconds)
  done (took 884.874614021 seconds)
done (took 1194.87483821 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.792921279 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787133453 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.770858887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79738987 seconds)
  done (took 28.876125776 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.797131507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.802364643 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.792881463 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.794879249 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.796393192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.791696621 seconds)
  done (took 12.497832588 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.830582329 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787736642 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.787010487 seconds)
  done (took 21.128864837 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.861524492 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.209761067 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.90199433 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241302708 seconds)
  done (took 9.945924636 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.799545022 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.796543135 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.79447843 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.798769047 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.795376068 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.804165657 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.794235226 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.805658298 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.801962357 seconds)
  done (took 17.922705071 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.21572419 seconds)
done (took 96.308912076 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.798603066 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.779665921 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.786458443 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.574624721 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.731302485 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.796295642 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.988627887 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.979681223 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.174963266 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.961351905 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.896804463 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.347848066 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147681371 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853061475 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.446213338 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.082014853 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.085631048 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.836307342 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927991171 seconds)
    (20/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.105623308 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.022534996 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.903464675 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.104404666 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.947033357 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.857639804 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.804108746 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.809581289 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.787284878 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958071312 seconds)
    (30/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.352862624 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.636855135 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.692850399 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.069535668 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150007912 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.742878043 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.03765801 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.926432098 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.908243463 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.886365318 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.955950264 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.990127878 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.188628034 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.950429541 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.484536192 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.324671594 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.794649903 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.269309424 seconds)
    (48/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.75375973 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.006088575 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.798171602 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.074441291 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.008335806 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.165135902 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.796265779 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.353245343 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.900792831 seconds)
    (57/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.128482731 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.928592674 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.792542312 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.802760457 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.820614433 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.863547537 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.809247376 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.967883769 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.831032743 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.907720141 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.09988897 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.956452894 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.901090271 seconds)
    (70/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.897159207 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.878766734 seconds)
    (72/309) benchmarking ("sort", Float32, false)...
    done (took 5.554070315 seconds)
    (73/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.421421236 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.714587039 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.093349842 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.812366538 seconds)
    (77/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.03883693 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.949862285 seconds)
    (79/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.380857219 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303499906 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906575357 seconds)
    (82/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.660662092 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.52531705 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.115306727 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.819630284 seconds)
    (86/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.982500929 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187728431 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.142736074 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.480009557 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.135532224 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.122879311 seconds)
    (92/309) benchmarking ("sort", Int8, false)...
    done (took 4.798445596 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.760796695 seconds)
    (94/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.920608202 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.791515794 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.451723153 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.793352467 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.837942021 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.143246744 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.152084292 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.325068925 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.104816154 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.818713882 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.450288216 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.148969974 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.4468675 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.05253512 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.985379432 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.058206566 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.803557216 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.692330145 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.185214695 seconds)
    (113/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.951999063 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.129234854 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.10709277 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.290523574 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.022593338 seconds)
    (118/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.171377139 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.018757467 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.897094401 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.032366435 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.831360379 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.914278781 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.883700319 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.877835263 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.391534795 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.243946727 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.824448019 seconds)
    (129/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.834056463 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.801108886 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.610019231 seconds)
    (132/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.943966865 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.109096144 seconds)
    (134/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.896152073 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.732517502 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.806734054 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 3.887053673 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.841601867 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.802391414 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.102305594 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.818736587 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.060037188 seconds)
    (143/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.052800787 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.835562024 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.03802846 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.074934428 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011954552 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.80569001 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.865330441 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.942816782 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.817412334 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915823516 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012594649 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.810552949 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.91684473 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.375868613 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918676331 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.061978265 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.844956442 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.920421336 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.064232954 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.514516439 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.820845726 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.854383736 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.255607138 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.805830679 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.994226284 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.229437015 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.010317367 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.839532057 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.496992882 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.30462049 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.930107588 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.655569132 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.929972263 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.892415728 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.813939812 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.823421454 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.998503562 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.114214355 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.828078114 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.831114865 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.096382107 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.824646378 seconds)
    (185/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.86570251 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.891499389 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201993408 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.851404366 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.246979282 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.009473062 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.118608531 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.19563896 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.908362379 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.852331563 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.197125131 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.823158227 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.119939071 seconds)
    (198/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.970006374 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.169769178 seconds)
    (200/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315925043 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.066433865 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.116134457 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.018472018 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.285740882 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.425317873 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.880518965 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.286834278 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.29344533 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.913008766 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.843831057 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.844664259 seconds)
    (212/309) benchmarking ("sort", Float64, false)...
    done (took 5.624778479 seconds)
    (213/309) benchmarking ("sort", BigInt, false)...
    done (took 6.825278965 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.225750734 seconds)
    (215/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.822111061 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.765210612 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170797098 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.630338473 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.028502448 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.809347116 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.05823981 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.188863457 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.896128898 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.822068129 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.89832021 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.606998141 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.82378029 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.922056165 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.905019066 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.823816983 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.863604478 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.141140718 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.868544582 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.01804319 seconds)
    (235/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.953318326 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.922167421 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.929526438 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.515056442 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.932017963 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.830927355 seconds)
    (241/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.986231465 seconds)
    (242/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005724228 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.889027261 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.823150767 seconds)
    (245/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.037113213 seconds)
    (246/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.969459628 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.395879989 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.509147758 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.904849614 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.077840446 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.905486463 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.82368623 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.247318179 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.98907354 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.135785392 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389706649 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.913185949 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.809291432 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.861980069 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.927059209 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.832784555 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.150662856 seconds)
    (263/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.078295253 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.894110074 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.33658742 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.858108287 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.933627704 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.184644284 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.491204661 seconds)
    (270/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.013680392 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.809244008 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.618754598 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.945961532 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.860514109 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.811236816 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.436657464 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.839450488 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.871824671 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.118116045 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.831795494 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.935124977 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.164612892 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.963490042 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.9085434 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.825271572 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.629225021 seconds)
    (287/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.853910307 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.970919173 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.852701797 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197411917 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.640212966 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.899342874 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.151619691 seconds)
    (294/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.957007856 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.858630565 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.01197999 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.042856173 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.218784025 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.883486887 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.162902624 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.160869759 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.462824525 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.851872354 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.851548689 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.854190443 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.844585175 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.982268887 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.914121174 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.735114238 seconds)
  done (took 1000.949037168 seconds)
done (took 1002.754700966 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.865605764 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852636096 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.834926823 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.85885031 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.950676074 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.86804675 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.847795324 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.840085094 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.885581356 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.886391253 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.833185646 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.868444942 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.840254083 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.836821973 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.840242777 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.852951992 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.142908154 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.865097401 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.85680949 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.848941017 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.855578023 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.838486768 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.888858296 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.865862427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.843668482 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.840623117 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.842698847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.858718763 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.947934407 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.84468681 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.842125664 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.848733466 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.141801504 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.86393703 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.836490238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.858748955 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.850200564 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.84815116 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.842078586 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.872005352 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.27855664 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.844800011 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.841300476 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.839767228 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840302423 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.842191505 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.843867221 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84908776 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855111515 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854700505 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278468844 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.860732912 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.84351082 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.843073701 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.850622035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.840801493 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.845319 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857255525 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.862374686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856298379 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.133102821 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873082582 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.842224378 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.855752739 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.848331549 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316416641 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.840515794 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.845897131 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.283862182 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.851647586 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.315965474 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.853776201 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.842008887 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.854547185 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.872450807 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.144998503 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.863665338 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.840611238 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.848342431 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.840697533 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.850351916 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855262535 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.845973321 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.841458872 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856025891 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.870859631 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.851971809 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.842368065 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.850053297 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.861999923 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.85214057 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.854375458 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.844534235 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.835916945 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.851887927 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.849303808 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.845822859 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.844410785 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.848580289 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.855191179 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.282343391 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863412183 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.83968954 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.840359837 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842157734 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.856538878 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280366657 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.847357266 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865430026 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.88945803 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.845752064 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.137628691 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.873149583 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85936024 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.852533116 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847770542 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.838749558 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.139790596 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31106559 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.86496634 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.844781465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.843946878 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860988495 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.845579646 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.841106199 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.148285659 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.871709249 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856991501 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.965329588 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.854991122 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.875696371 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.844053172 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.84866826 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874417149 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859291727 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.875658831 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.849438895 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860119954 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.859904033 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.84177668 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857047905 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.855712097 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.845581314 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.849985048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.837932827 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.875786349 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857166541 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857434381 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867063109 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.966867061 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.84234755 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.136960752 seconds)
done (took 289.636870185 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.910800204 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.832734777 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.941889343 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.84177071 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.923030158 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.926931244 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.84039595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.839807905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.839186258 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.213740708 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.838665293 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.841120941 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.833232317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.840125149 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.924741248 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.84186213 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.840046124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.177755954 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.84315524 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.913055261 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.833243745 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.839558553 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.840615487 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.216601502 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.841054602 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.83855106 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.914355212 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.843302124 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.178523289 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.836981429 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.834968475 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.181109024 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.934389618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.861904746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.854514062 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.849631077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.925801877 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.856409171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.925421893 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.926907961 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.943921382 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.874288434 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.839382366 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.833713995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.847562299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.845807392 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.84081999 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.870127258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.834438917 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.842280289 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.17920795 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.854985971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.851847421 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.840701387 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.842151176 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.86478702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.843713049 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.845835259 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.935269574 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.844422517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.90512218 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.215792644 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.217284666 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.844585862 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.837430797 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.840947936 seconds)
  done (took 182.447360291 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.910453396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918033563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.910073906 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.846889621 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.895187609 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.911105808 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.847378673 seconds)
  done (took 15.015118266 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.850754605 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.845657776 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893783924 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894846042 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.843978516 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.990600004 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846550791 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.855815645 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.844088371 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.89588273 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.845892583 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846733968 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.852428429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.836663285 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894223565 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.857894141 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.961287127 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.848100881 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.847945581 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.99601364 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852586329 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.853621039 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.90209984 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.857737411 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.845430777 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.852796384 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.435499415 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.847839811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844028724 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846867752 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845171605 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.888506086 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.844815183 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.843996407 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843813746 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.962456157 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.845054832 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843176048 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.846290431 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.839712808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.845817131 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.849556974 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846620151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845912684 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.849255784 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.870402223 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.846737614 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.848762214 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.84711333 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848740244 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.897849963 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.849217798 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.848898392 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.848004287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.904312493 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855760806 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.847844405 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.845472321 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.848607895 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845763205 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.998545637 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.898073522 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.848572842 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.896974392 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847687011 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.84912094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849531113 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847859176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944428312 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.845349424 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.898607386 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.846493352 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.008620352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.871626551 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852262707 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.85296869 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.852788635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849991389 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.843627936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.854894538 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.846462432 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.851539455 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.857521565 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848991391 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84783382 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.963848686 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.953258746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.847479709 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.86205516 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.85686178 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.847324136 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.896829124 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.84971732 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.845217416 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901393882 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.963375443 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.906133231 seconds)
  done (took 203.664776999 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.854878478 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860171329 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.850019667 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.870406258 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.850214522 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.850344912 seconds)
  done (took 12.918790896 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.849419904 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.848742855 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.851501935 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.851319888 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.851957426 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.851293594 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.852180041 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8530608 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.855217581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.850399806 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.847826443 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.8529763 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.850783942 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.850067386 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.85173748 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.850332796 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.853140599 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845025943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854394111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851357126 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.996444561 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.849257084 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852439757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.852742261 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857773824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.853241017 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.855771192 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.852503976 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853754866 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.862754198 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.855754707 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.852174358 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.851547598 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.856226905 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.858620106 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.852116518 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855407168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.851817452 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.848320769 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855236807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.85613128 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85208096 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.854574797 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.849788826 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.851393997 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.853435088 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.85754966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859821709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.853603457 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.853825242 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.854960447 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854723567 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.855592654 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.8553158 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.855710131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855338048 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.858303799 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.846994457 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855333803 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.855507348 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856246055 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.853155647 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858468989 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859021999 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861426566 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.856144234 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.853313962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.854949835 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859745122 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.854357927 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.857432212 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.855032912 seconds)
  done (took 136.39826787 seconds)
done (took 552.227877938 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.936560782 seconds)
  done (took 8.717244238 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.956311868 seconds)
  done (took 8.835417241 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.45426411 seconds)
  done (took 10.234519183 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.854734942 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.872761166 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.846915961 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.84720592 seconds)
  done (took 29.212002457 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.217636094 seconds)
  done (took 8.998277859 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.858447195 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.845118447 seconds)
  done (took 15.552686514 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.886462161 seconds)
  done (took 8.669661208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.958633794 seconds)
  done (took 8.746451249 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.871265481 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.852912786 seconds)
  done (took 15.520107054 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.830101092 seconds)
  done (took 8.612120153 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.537546239 seconds)
  done (took 11.324254837 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.850937954 seconds)
  done (took 8.647907472 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.859791669 seconds)
  done (took 8.642020896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.986855915 seconds)
  done (took 9.767665426 seconds)
done (took 163.261268152 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.846902315 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.844512342 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.845070405 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.846843043 seconds)
  done (took 29.166838531 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.886820396 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.886795694 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.887720742 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.898014157 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.890324185 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.887328972 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.879565763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.879835069 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.89758373 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.891689036 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.887727219 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.88905154 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.88773253 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.879214835 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.889028115 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.887766583 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.898174186 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.887852308 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.879063876 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.890599892 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.854539484 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.897144638 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.890110366 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.85311979 seconds)
  done (took 47.040855531 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05000201 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.925688605 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.007082288 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.908191199 seconds)
  done (took 9.674721476 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.906818388 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.907437704 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.921684787 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.956869674 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.981353063 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.915973843 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.879591588 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.876297642 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86243525 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.908130354 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.98328332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.901936469 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.99339493 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.856074655 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.039116331 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.855343469 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.853878297 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.906961217 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.958312912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.972205952 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.856242297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907464194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.91112713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.904480198 seconds)
  done (took 47.800022799 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.853322761 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.862321044 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.860566605 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.855787607 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.854634184 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.855707647 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.860982243 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.855833959 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.876388575 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.856321096 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.85638601 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.857668678 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.855125823 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.855776302 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853974166 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.867706988 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.868336709 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.855501765 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.857725067 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.8615281 seconds)
  done (took 38.966953733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.849900914 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.76101036 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.200479008 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.104274384 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.850485413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.851139969 seconds)
  done (took 31.403971289 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.866228655 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.859985658 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.854662518 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.909252442 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.992791329 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.864772544 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.858722553 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.86434161 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.898546296 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.91940523 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.875495666 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.881385417 seconds)
  done (took 24.432170142 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.850088213 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.851613841 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.8507081 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.86772362 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.866539439 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.863839428 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.864217489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.850410071 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.869769666 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.87302544 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.864126977 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.869438725 seconds)
  done (took 44.130258291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942857946 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.742512047 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.887818325 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539425088 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324692957 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065828264 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381100337 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189745287 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857984716 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127371714 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865508447 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960084725 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108540595 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855214506 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875183486 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.334373787 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149168518 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08845727 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88383514 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62522777 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903799316 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368769875 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.692210421 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914930452 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0664569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.986903108 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.115734369 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.819504877 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994366338 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893624442 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866206858 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857437765 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129052379 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237434904 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96177462 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866406502 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471621394 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.56704642 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.848617694 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.640351327 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.635188606 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975398459 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86461031 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855900387 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791793498 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329595264 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229562813 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.86347302 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.569285545 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856413161 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867217527 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944709453 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.860292576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674227486 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76720183 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133977043 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.856016117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862387029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42755281 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964941748 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408915666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832285865 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.050731142 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665150735 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252465308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.006153812 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.862648756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860728871 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792921317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.630834875 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909403464 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00395609 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.876990396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507705908 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164770059 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.92469699 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800994852 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.565210308 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.61349876 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.830849366 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08569509 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815509384 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793091328 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.719428069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793739802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129217536 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897288139 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.499830703 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899891431 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19067213 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87034422 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874529875 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867140655 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083527444 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.422970519 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85896581 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.648330388 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008848917 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882077466 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192620377 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794702557 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.862263799 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115574931 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.070808962 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.064731737 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371542233 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015537525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859160596 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.940670367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.750396025 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906550967 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.135214602 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919195533 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975993818 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918327746 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.826989216 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162628823 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887238257 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.025638868 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.894458959 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98600286 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192975148 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152840408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924990442 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858942999 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858941903 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.637499564 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410515028 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.128755853 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.861554528 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34236111 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906948281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.860060507 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796683995 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.482009452 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891665281 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.826546766 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084872841 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.784304236 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17108866 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796095153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004566283 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975416075 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.084438949 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.51147535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936482907 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118723745 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319184234 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.10261038 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90793076 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879921724 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978896011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88475124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.253235543 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150491307 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.865389373 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.864841788 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.651299352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858542185 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861792419 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.867307394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610591543 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139796018 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886428391 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865440769 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.751867639 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.876431354 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927753085 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867101778 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872630535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404409514 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571161354 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.869680254 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.481289821 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089770787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873290986 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.63972579 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974664586 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.945621592 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143872848 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923746764 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.797434038 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.574177223 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.555898226 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86261869 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798816947 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.863321809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871794408 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875269795 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.241773952 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143444916 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909995559 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.64605359 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.904984054 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874291737 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.867622903 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863848443 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402686796 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.984033048 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375950317 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908262876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001175876 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.877397942 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798665984 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.868203955 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868425989 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865015908 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.820697159 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918199976 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.650597372 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240292295 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122825243 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473311713 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877676788 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.663841612 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.923290013 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889728397 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677115211 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781431897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.899075961 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880114604 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.877689535 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.673050057 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.561938888 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434813835 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179575048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175982882 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315629362 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.331815613 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.168120937 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202318511 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101114114 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396910915 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923565427 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205545194 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81121091 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949483078 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.515125843 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217622631 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880659795 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093617774 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255516353 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.736812037 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890778662 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0787637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9034807 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.771238786 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828278988 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.072471791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008544296 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.615118124 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062706683 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198436307 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.526079581 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.982647013 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.865806112 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557902595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956658205 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577419386 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22965414 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433842993 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.797661715 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333778211 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873419726 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313871592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221109644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.170692987 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.987821621 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805978128 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879651759 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.877632817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867849993 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.864846757 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.729274422 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.123029498 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879965723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103918123 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.110907048 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167944556 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.775979586 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.873739681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868963811 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17148479 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.632968331 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037159988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.285610878 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.392429608 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873689853 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804736549 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804355246 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.562557065 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876828502 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845148932 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095447411 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.054843679 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780178233 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350192232 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11255433 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122113805 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.88479696 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144370727 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14529895 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567707125 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896424605 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.971456806 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.521472235 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.972623475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139591078 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106791335 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62510586 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09768342 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.908655754 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.689196768 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.870252966 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085866751 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.139842274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.758554447 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096880043 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.596808891 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.88484556 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188220325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929688095 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.78415912 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016049345 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.063880595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881479601 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955508747 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881745977 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.883012322 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882007069 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921601313 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780077277 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989432279 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.886678124 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962554055 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.994104595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400757538 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.880114173 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150917004 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238108938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205106656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932937781 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872385356 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872620384 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807121224 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009033447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317138353 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145233476 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002475997 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.173299073 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897590222 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54035428 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.215519362 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113936128 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147280911 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.768384236 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873658753 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902124206 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.141244609 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885249709 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.084882242 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103670503 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191654102 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347040275 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.095050126 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236439941 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148308303 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244148175 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874379436 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463131464 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.893272036 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562967463 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.917225943 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.776458029 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133129175 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886887506 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25948204 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896517287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.071217952 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.390068422 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.724455947 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16165126 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.866837076 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938201844 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152625951 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271991235 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187976564 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946292496 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888441162 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.580282053 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013103309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.737146893 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145599557 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876161491 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085735904 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.586408454 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887075165 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154010397 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183916673 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.872768024 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.737564212 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88681584 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.885814929 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100544137 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146007851 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12989381 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885310443 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884568794 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.692688001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151226296 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934628747 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810829315 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.880753295 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974777702 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125995685 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901379404 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.394141877 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.58672893 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175725913 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.79924613 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898378133 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349669664 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24173817 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200347778 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415059354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107128445 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.439259327 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.828890952 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177990534 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.883269835 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357937814 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182005121 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.879773711 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471335142 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915054693 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.147651656 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196934275 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.895597873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.64134315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.846647412 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100649325 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429264526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818333591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879271092 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.938161393 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879713317 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007940077 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89191382 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.756220528 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794484549 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.625663668 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372352536 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.884669439 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.866034139 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.57280055 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.46886342 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911409553 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022178729 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888290655 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.602483619 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.173965645 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13391063 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.464275936 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.885143875 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.883294139 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879905442 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809629837 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079292995 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.260609849 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185252666 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.328427307 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.914881225 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883448684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.096316695 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090187051 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.743577069 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008881586 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348002095 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917172153 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.650758971 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.560093658 seconds)
  done (took 1682.508547533 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882272984 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.938892452 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.900477083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.939742685 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921314136 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956171498 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.912710036 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.001721434 seconds)
  done (took 57.268847949 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.880055463 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.079308049 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.889367503 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.879626523 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.890685529 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.878398854 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.04882728 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.888594712 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.902442552 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.890007156 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.883795485 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.88008904 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.22036943 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903317743 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.88191375 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.889736178 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.888429098 seconds)
  done (took 74.630442506 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.881050548 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.08748009 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.919643702 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.89718495 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.807817917 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.888981562 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.887746671 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.889082524 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885979781 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.099309409 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.517338786 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895306274 seconds)
  done (took 90.473688507 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.890040078 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.888127237 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.88697422 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.887806348 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.888947954 seconds)
  done (took 11.262197096 seconds)
done (took 2190.56827981 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.129071591 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.108620973 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.118592058 seconds)
  done (took 6.043565821 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.031148493 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.079981027 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.197712133 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.218850994 seconds)
  done (took 10.348631601 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.178050414 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.267653652 seconds)
  done (took 6.262877933 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.290987938 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.897789208 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.280592996 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.883600757 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.885280193 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.883555287 seconds)
  done (took 22.475511101 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887729233 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.8899749 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.886134127 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.889582263 seconds)
  done (took 9.370498041 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.869234224 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.561651484 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.867481289 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.885337283 seconds)
  done (took 21.003130282 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.634468965 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.320181914 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.630311209 seconds)
  done (took 9.403671227 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.353629675 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.775153375 seconds)
  done (took 8.947666936 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.14692688 seconds)
  done (took 3.965715862 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.019765182 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.161844123 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.407636754 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.411614524 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.489669198 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.731956277 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.20272902 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.131739692 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.320114396 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.323587719 seconds)
  done (took 25.018060488 seconds)
done (took 138.253484536 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.264785051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.125104239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.089662824 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.231619542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.108029655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.087087338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.096181769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.216399407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.728560078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.72417363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.229848825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.107935556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.240966661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.122750306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.239903566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.125113684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.143657849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.278893462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.926511711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.167521809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.104146375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.858123214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.072681542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.8740551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158411241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0373247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.452455855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.129583647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.081707725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.461457945 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.037401559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.316111357 seconds)
  done (took 173.657130122 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.772415471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885746168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886693815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897914022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.137445992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892145882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.885244731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.890104542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.064693567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.040973121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916099906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.170974356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906499412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885048341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.891687103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885520877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.151350325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.842542912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.895994521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.898228021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.903102754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.022709503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905511138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.075495688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.160087089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905670914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887540261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908142009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.892538268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.895401293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.900780524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887924155 seconds)
  done (took 207.965049048 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.886259019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889451398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8865431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.88881276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.888552531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.888974519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89035138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888235998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.561818603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.556941034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.896756002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.893901728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.892470503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886908229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894259405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.889635575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.894561921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.893729538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892057211 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.897821861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89788363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.592735744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.896563767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.600120693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.894124488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.894877625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888324612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.896742513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.900853336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.90087058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.898091914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892852952 seconds)
  done (took 221.146075915 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.091828259 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.897191206 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.896875075 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.83708984 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898017038 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.896486208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.845999189 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.094749382 seconds)
  done (took 19.295549773 seconds)
done (took 623.893284585 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.359541918 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.206607365 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.066927029 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.922433056 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.186877073 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.947632497 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.91769282 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.981105435 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.636682876 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.981030683 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615164809 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.935706945 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.708005548 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.939710392 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.040874167 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.976106635 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.459594978 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.55121692 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.090141358 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.992973985 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.093650128 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.852877334 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.993321327 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.66159026 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.724388244 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.892917684 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.103184179 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.46767687 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.927919536 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.077467022 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.668471473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303470378 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.923973551 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.913541134 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.974779089 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.951689083 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.27397033 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.92360086 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.036011918 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.657359708 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.000919362 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.522903854 seconds)
  done (took 104.28684736 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.887345165 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.886559481 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.88524598 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.885979193 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.884951365 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.886358732 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.886554411 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.885229396 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.885411856 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.885432317 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.885455704 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.887791997 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.884531027 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.888071655 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.885094432 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.885708134 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.886400078 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.888879957 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.885782943 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.886306988 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.887312462 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.884658528 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.900696986 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.885955609 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.886666633 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.887439849 seconds)
  done (took 50.89113811 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.899618258 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.051796373 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.151656291 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.915261212 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.898664215 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.902234061 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.915794575 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.905639412 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.900227594 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.901771943 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.006431204 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.907260027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.918902084 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.156522712 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.913784507 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.900509467 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.900834681 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.900616719 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.056688417 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912579166 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.91978419 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.908080682 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.919249422 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.915265284 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.901037499 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.902916295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.904095118 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361469655 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.90993068 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.006673116 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.946996978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.920238813 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.342743006 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.179639632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.950985149 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.90889811 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.903012738 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009003345 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.910017374 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.903459202 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.919078477 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.907159861 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.156427435 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.383368707 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.915517516 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.904709461 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.367814432 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.018579646 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.943099976 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.913020149 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.160665786 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.916976904 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.904944995 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.905078401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.93975078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.914996886 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.903053848 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.24163441 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.91344757 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.921978687 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.910952333 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.903407626 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.063120921 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.912124638 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.05418531 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.914271434 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.909186424 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.904785079 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.156894384 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917009121 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.395004759 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.912658516 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.904426196 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.009052288 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.06109321 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398395653 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.914934653 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067066477 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.362627858 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.928571039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.913651183 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350693107 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.934953557 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.912736047 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.909100817 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.906233789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.905403355 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.951034986 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.922092372 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.324049167 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.396809416 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.258621578 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.933044275 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.919843328 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.906422728 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.246487622 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.914653429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.905486446 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.152712527 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.400508556 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.917379335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.915951844 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.380373409 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.920273449 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.924997162 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.915162163 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.163658384 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.91747044 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.953187359 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.907169306 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.913298768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.913264851 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.922053019 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.912761245 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.908343904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.366819486 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.029413004 seconds)
  done (took 236.169921555 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.899811986 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.901741972 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90008847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.910218838 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.90149688 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.904932036 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.899739566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905384698 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.906632701 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.899483772 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.902007109 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.902117157 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.902975545 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.905048288 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.384917593 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.911766545 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.515269275 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.904889532 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.90709727 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.905167561 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.591311521 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.917197602 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.908291055 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.907170772 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.905132756 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.909203066 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.908608642 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.951454402 seconds)
  done (took 169.007918781 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912511062 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.09208821 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.931379155 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949021811 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.922809961 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.909125337 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.93767812 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934107775 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.917550045 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.909891439 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.910242482 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.974221534 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.926944026 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.048083647 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.945506151 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.945231342 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.017782741 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.924454077 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.914229101 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.911823314 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94203996 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.907202066 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.974888421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.043519243 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.933267358 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.028488094 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.921276089 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.917347726 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.914647074 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.034285089 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.933846132 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.975358879 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.945902325 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.936867694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037825779 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.034698285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.023015882 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.943922293 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.920465115 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.910107874 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.912835641 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.901135483 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.029048594 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.936335918 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.914461816 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01739645 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.933289317 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.915523419 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.925663698 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.911599759 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.928256226 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.933616844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.978675613 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.050481386 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.952596093 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.940303079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.939476786 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.187282874 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.922802289 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.012978976 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.910419829 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032565242 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.936480364 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.900764547 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.915297296 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.920325544 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.944208334 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.946875809 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020177957 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.92304359 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.015597955 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.950797831 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.923254407 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.912680846 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.917229597 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029639261 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.037275307 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.95028563 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.953035157 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.947161509 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.910578487 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.913627464 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.903476037 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.930781157 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.918671748 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031965524 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.036782051 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.925943505 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.916359051 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.918367489 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.918193954 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940521919 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.039737746 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.954224329 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.012871591 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.98490075 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.993497091 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.934880844 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.92745032 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.920376854 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978733849 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.936009548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.926430905 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.236298064 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.988864404 seconds)
  done (took 207.489937434 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.397571158 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.970915939 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.973128915 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.239735913 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.343850284 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.818773075 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.965794027 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.967340166 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.988151484 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.165457547 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.040488538 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98509101 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.95329364 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.938195488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.96723436 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.987213778 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.977325422 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.295213546 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.099443302 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.141360472 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.948040987 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.282725922 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.279252378 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.366571595 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002383579 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.301065175 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.648638559 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.215761245 seconds)
  done (took 63.110867732 seconds)
done (took 832.780898921 seconds)
SAVING RESULT...
DONE!
