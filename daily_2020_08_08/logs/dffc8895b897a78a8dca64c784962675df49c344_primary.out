cset: moving following pidspec: 13815
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.540448563 seconds)
loading group "shootout"... done (took 1.218372305 seconds)
loading group "string"... done (took 0.40322158 seconds)
loading group "linalg"... done (took 7.482175412 seconds)
loading group "parallel"... done (took 0.141143685 seconds)
loading group "find"... done (took 1.328209508 seconds)
loading group "tuple"... done (took 1.851231057 seconds)
loading group "union"... done (took 11.929837141 seconds)
loading group "dates"... done (took 1.260256654 seconds)
loading group "micro"... done (took 0.189856629 seconds)
loading group "simd"... done (took 4.063005098 seconds)
loading group "io"... done (took 0.983162078 seconds)
loading group "random"... done (took 8.19945428 seconds)
loading group "problem"... done (took 1.6136899 seconds)
loading group "array"... done (took 18.345354556 seconds)
loading group "misc"... done (took 1.431573071 seconds)
loading group "scalar"... done (took 37.141518225 seconds)
loading group "sort"... done (took 2.950439049 seconds)
loading group "sparse"... done (took 11.080007883 seconds)
loading group "collection"... done (took 16.524846254 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481519719 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122617234 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126108699 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114088822 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144242879 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11644582 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120755669 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08283157 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.849645469 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137622733 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111048847 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421458552 seconds)
done (took 5.139439857 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.158841914 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082818047 seconds)
    (2/2) benchmarking "String"...
    done (took 0.073636722 seconds)
  done (took 1.265129757 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0607562 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126989025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062478297 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06243145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062723082 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061879906 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062345773 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062178349 seconds)
  done (took 1.60931408 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067203871 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063460276 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061515706 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064082572 seconds)
  done (took 1.367845192 seconds)
done (took 5.587751562 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.231793464 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098594255 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.28007063 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.382708718 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44438829 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.08702171 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070727758 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065598683 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125042438 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339367798 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098454069 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.173866505 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084877223 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.16743288 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.970031291 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.116611546 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081729458 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120049822 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090189785 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12793343 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.401178879 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075268148 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071057027 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066651957 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063684762 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.635389534 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661056597 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.121843011 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078207336 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097414275 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111694451 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.641439025 seconds)
  done (took 10.322482871 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088485476 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086452042 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063542228 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119382601 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090237578 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06582957 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070480234 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063305018 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087396104 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121014358 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087058917 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096396369 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062737403 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065673034 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072415284 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194501971 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076280695 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076897194 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064296344 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075987847 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103379218 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075048452 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075219641 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075040513 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125135514 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167015529 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093586477 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094495594 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063061497 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078031397 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110929213 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123559456 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062777605 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061975581 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116502511 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091536832 seconds)
  done (took 4.403412497 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.916391959 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085280006 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.096624043 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.593485067 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060804635 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144096141 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235210536 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068327697 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349058783 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139377765 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135393146 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139099391 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110045128 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065837294 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.205447064 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111517084 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.334513808 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063584587 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062868903 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06189262 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.064423808 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063661821 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059295737 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065758456 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088063116 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082461463 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.185129013 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.910376202 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.243146948 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064143451 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159272646 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079137477 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.355597462 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066589266 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080287088 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.388989289 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117046984 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062345599 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162398014 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112348956 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.059944105 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116781602 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074596272 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06531787 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065084136 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064459152 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067742643 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076878709 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098081083 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063339965 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06092926 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.157864997 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06140002 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062775593 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063894588 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145514312 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061483262 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13745816 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060439239 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064812749 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095438452 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06426457 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08649959 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096781451 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.32785334 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059768254 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.038834399 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062313136 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904518786 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074369256 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06223321 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067659904 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062229538 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06365272 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060271941 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063534955 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070523141 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065913479 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.062723299 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104221999 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061088676 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064104906 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.060933697 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065909204 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092551906 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062670725 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.44786498 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092064323 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061011533 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071730502 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09964742 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061698309 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067121243 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.061747579 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062978462 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061541422 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062429199 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068317595 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.200585033 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065871095 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109728952 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.033797297 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080370807 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.062575045 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060218395 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062596434 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067440564 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065715649 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065229663 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06326806 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065916187 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064205972 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061238289 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108668215 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.061907817 seconds)
  done (took 20.814535233 seconds)
done (took 37.565889525 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245014658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077819137 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079042292 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078899102 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078868084 seconds)
  done (took 1.763463013 seconds)
done (took 2.95933269 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101818734 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060172973 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095624193 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095005679 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062349579 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060199266 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093424173 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060198968 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092946808 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.094939288 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097234704 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096154825 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060174432 seconds)
  done (took 2.268989399 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065402674 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076392248 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078537103 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05853609 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06846435 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076625792 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058269897 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076592282 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082347574 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076983888 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077196993 seconds)
  done (took 1.982302848 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064143388 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07561537 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081117798 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058716641 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069487174 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077099627 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058169196 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076626098 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080666681 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077601347 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076868268 seconds)
  done (took 1.97465816 seconds)
done (took 7.405548418 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062888165 seconds)
  done (took 1.227271291 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.518607948 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.605348266 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064714638 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083565048 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.176747576 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.094947203 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.221047687 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068802676 seconds)
  done (took 8.171007074 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088300678 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067769107 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065217308 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06473325 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065491746 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06465055 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065134349 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06494519 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065814134 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06534944 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.064998946 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06550406 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065668634 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065891412 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065683238 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.065778344 seconds)
  done (took 2.338197943 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091388425 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091648241 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069662892 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070446596 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068146564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067475377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07063511 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069752277 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06684729 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067975484 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071083253 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068613144 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06759271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058898865 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069659871 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071132056 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065765752 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069069789 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069119725 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070557955 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.068981304 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058865991 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067251987 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068237549 seconds)
  done (took 2.964210255 seconds)
done (took 15.879728593 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107892352 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070902537 seconds)
  done (took 1.352655615 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065639254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066716831 seconds)
  done (took 1.318251023 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072697701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057017949 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.07898674 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068217493 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057507638 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057071423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076616661 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.057707619 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057263397 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057749584 seconds)
  done (took 1.827365963 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059891582 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066906634 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064009344 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066116096 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064244118 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.058589564 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.061799471 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059102972 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066664586 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058936809 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063949313 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079133426 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063616424 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080917555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063334035 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064032488 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066472746 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06300977 seconds)
  done (took 2.363994076 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057603436 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057928702 seconds)
  done (took 1.31270563 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061398624 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058271849 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061680914 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061558599 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058224035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057292358 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058325782 seconds)
  done (took 1.605098342 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405350708 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115726124 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33416186 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065921878 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075924554 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241321214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059902011 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065128515 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064269136 seconds)
  done (took 2.659312505 seconds)
done (took 13.636976337 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075188161 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078693734 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084404344 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412204462 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088887879 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063705894 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108936498 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176045368 seconds)
done (took 2.297925891 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207814027 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.321434276 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.904302712 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063397806 seconds)
  done (took 3.487639005 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314762663 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078661591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072953295 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.063158132 seconds)
  done (took 1.740489152 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060207861 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0664948 seconds)
  done (took 1.330523457 seconds)
done (took 7.975767609 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059676115 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084236619 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06033528 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060395819 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060509307 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.060310387 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060078372 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.06007879 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060314396 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059439581 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059879596 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060133263 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.059762476 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060170732 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060475683 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060200104 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060152333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06033098 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060314294 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060277274 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060445361 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060400884 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060215487 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060719518 seconds)
  done (took 2.700118655 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075906083 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061572558 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.062554005 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062669581 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063482852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062941769 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062833671 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061169239 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063000843 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.060816957 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062814028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064022478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062039035 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063188968 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061166076 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063409634 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064222432 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062411807 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062490218 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064909166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064009466 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06248476 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064894857 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063756727 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06333895 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063320092 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061100723 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061460085 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062700736 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063447022 seconds)
  done (took 3.111414154 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060520901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055851547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057286098 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064412835 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056319973 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056478272 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056827764 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055662771 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056087123 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057632276 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056734185 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056159753 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.056965976 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056482623 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057153664 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057703648 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060839471 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07445617 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057417575 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056880521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060839132 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057064684 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056845192 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057005123 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057625843 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056944082 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057408519 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057625317 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057101346 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058302381 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057201379 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060442404 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061652194 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057590953 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06629024 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061724907 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057455227 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060830083 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058463411 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056834116 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057111645 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056851343 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.05714433 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057543698 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065722692 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057334686 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058115279 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057553021 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057245895 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056976294 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057247211 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059183506 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06203435 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058850709 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056870725 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058497779 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056839277 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057821885 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057001228 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057064643 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056598553 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060331369 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059150795 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057989151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074639285 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05920515 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065749735 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056893918 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06041744 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059885742 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05763316 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072323718 seconds)
  done (took 5.459441917 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081899276 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083377548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062074516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061852038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058179475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058037335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065953639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057728989 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061880978 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077224042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058028944 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061842151 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062170347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061523326 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058196331 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062425889 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066536891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058318848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058031513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06116891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05793045 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065417607 seconds)
  done (took 2.628240987 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134211788 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062393131 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099433395 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072650397 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064805371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072472412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061830966 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061851234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062141598 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063692745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064142497 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063107611 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066213558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064352043 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063985121 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063590922 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063734451 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064059662 seconds)
  done (took 2.48856872 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073287437 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061796702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082574816 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061317404 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061772235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061214247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065560539 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066689483 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.060989012 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061776306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067632227 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06264048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062594273 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062750186 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062732253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062796966 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062203146 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06262123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067702442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066790628 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067183163 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067743068 seconds)
  done (took 2.653725202 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070674404 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060660474 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074797339 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063747407 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057927222 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057772761 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062904562 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061829775 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063155961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061229633 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062229245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057965437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063821778 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061932044 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064078773 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061924469 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061929212 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062262313 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061543561 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057559379 seconds)
  done (took 2.470805708 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081801854 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059699275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059275181 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077699359 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060210409 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059803895 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077803777 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059595807 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059599895 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080378743 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059959995 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060144981 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079092459 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078485835 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060613366 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079088799 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079142422 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079123762 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06057346 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060173498 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081761246 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060963559 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078814425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061071749 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060671042 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060851357 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060824164 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087426682 seconds)
  done (took 3.147471807 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059494326 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059449423 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060234863 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060710624 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060366468 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060330942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060604007 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062023645 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060320959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060503931 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060277111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060357102 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060194433 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060047031 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060484359 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060305747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059978184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060724125 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06029003 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060262053 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060071444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060579465 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059747277 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060495479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060322182 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060134346 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059874717 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059269934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059198735 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.05917022 seconds)
  done (took 3.033938718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069968657 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067474053 seconds)
  done (took 1.364980125 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058384555 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072188699 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056017391 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066473587 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064712496 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059676798 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065594703 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064940955 seconds)
  done (took 1.730830726 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064396128 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084429749 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059472628 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060132348 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063283764 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11480475 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073506239 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068607827 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073072403 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060284229 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059925836 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071280951 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059149038 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069913213 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06116966 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065929778 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064825245 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069051955 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069810516 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057390289 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069249634 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059963221 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057939229 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060263037 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059285418 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064385765 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07196823 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068974024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065716944 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056554877 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076036934 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058142891 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059259047 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06601023 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062951152 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058012546 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091663128 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057792854 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06306989 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056691521 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067610927 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074400115 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.068791229 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.072783671 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058695119 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.058950841 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056396116 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059144148 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059596875 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064706373 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056710825 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062659436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.055967474 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058407696 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066227674 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.05720111 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063017125 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064692966 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067638423 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06528759 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.063822822 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.069379391 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.063740605 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.065869839 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.05783455 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076220484 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060249278 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068393781 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070897782 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059279113 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070974217 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057879267 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056406336 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057782145 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088343571 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060116125 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059277575 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057844845 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057833049 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059908136 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066409471 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06415458 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06379005 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062093143 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072076405 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065906445 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057828213 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065559734 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074557309 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0602531 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057808026 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072371444 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.05937859 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0565559 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073516204 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06547961 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059445336 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058236792 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059763796 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070081597 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059045466 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056707543 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064331356 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059017594 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060398694 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062064209 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06303586 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.05682812 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065300306 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061221884 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057538795 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054375115 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.058774508 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056856052 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054447695 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063528972 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055645399 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068715238 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.060611937 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.067436797 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.067660939 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064797433 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068645413 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055439378 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054157525 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.070822488 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.195961947 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059795347 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07442235 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057354736 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06647828 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057431222 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.0596975 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.065892174 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056715335 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059957203 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057308392 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063437691 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058846472 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059077974 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.059964219 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064504837 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068451115 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.05871736 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064369524 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.05859338 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071623974 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065445904 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061180467 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061922193 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058054689 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067920698 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.062410048 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065193185 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056564476 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058097646 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057489793 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066494902 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065113016 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059090626 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065879987 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061118497 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058814061 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058433547 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059441535 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06090733 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062800636 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05947061 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06510805 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065875626 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071660601 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069674825 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065805963 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057190864 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057652881 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060589197 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057345448 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060166623 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064356633 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070038885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067581545 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074625645 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056997769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064801295 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058640921 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071655163 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067883892 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057869448 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062523322 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0557396 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058647727 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064536614 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067068575 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069583632 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069528124 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060656276 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060507046 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05669531 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069660607 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057264556 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063850339 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.064754684 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062117394 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056860758 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058990391 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064489863 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060312631 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05718415 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070223611 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06406768 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056608087 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.068984602 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056912591 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066039234 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056718657 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059029099 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061652516 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060269607 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064421086 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070088485 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055586985 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057137783 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070021489 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060110555 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058612793 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.062694621 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.06955404 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060414321 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063026082 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065482314 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066245823 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060562506 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064141741 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058501538 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065810334 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060632649 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067585731 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057089025 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07274857 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055584667 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069705876 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057219446 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066610536 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056435712 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06312692 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.056518595 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.070034525 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057108715 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056440211 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.065801123 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054016445 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.062820836 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055019979 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059260587 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061031442 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064975022 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058832659 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.203445856 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061766904 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066898529 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062532263 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066684494 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.06695807 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062363086 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058473593 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065248247 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068335692 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065623583 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060380929 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060348689 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.05924148 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06686045 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06100991 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060475783 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065649846 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061971083 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06306898 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059949285 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060523743 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060834367 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065758262 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066634433 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07440168 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065486416 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064339055 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066595155 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058421017 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072437838 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057945773 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0646099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057085812 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065538318 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06666451 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058446729 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076462022 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059963696 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065454824 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06995894 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065197475 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060359272 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074820259 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062324651 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065231366 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064539753 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061806308 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063536497 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060502893 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064758208 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06676934 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068024702 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059229064 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063701591 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065283003 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059870902 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067741126 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059569455 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064470232 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059366269 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056070587 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060640511 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.066875596 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.060682115 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06125563 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057226612 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055672827 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057156616 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.064792377 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060308691 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064096596 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070974604 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.055990425 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058252952 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.05643285 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06183065 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.072906976 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065417158 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062816082 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060461912 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.055905443 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.058765021 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059016645 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.056883241 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060944088 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056113672 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056795529 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066036766 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058969405 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060093074 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057256832 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.05820087 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.064562427 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062397117 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057316188 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062094162 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056331595 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060685433 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057038286 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059726703 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061526815 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056813899 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060146795 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065936176 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.070846797 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062090463 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06324032 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057363567 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06288267 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069482346 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06459863 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057533692 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.063478096 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.054973256 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07140806 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.063265298 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.061997515 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.063428568 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.056424525 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.069913374 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.058857594 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064003501 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069681241 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056721028 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.062648195 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.054820171 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068773274 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.058545764 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05509671 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.062150823 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061329504 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.202146532 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069276441 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059890254 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066557276 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065437464 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062099671 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060921071 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.0607988 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066089002 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073465375 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05950833 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063782669 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064960128 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064824646 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061962337 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069808312 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06547108 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060024248 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060227569 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060501936 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059149982 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069204874 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058969565 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062031743 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061519976 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057862633 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063530838 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071822329 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065068281 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064936633 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.056865534 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056279529 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074682801 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060966244 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061496243 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.063963675 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.064970562 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068261992 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065087872 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072089023 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058249462 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.061944712 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067918098 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058003289 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057525944 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059681302 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059055788 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.064923098 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066100275 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.062617006 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05917465 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.062826662 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068375191 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058344271 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062224322 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063930693 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05916283 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06719611 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065068568 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065089303 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059994833 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058073364 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060440221 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064886499 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.062608593 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064119182 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057953692 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064930775 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069577254 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.062723727 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060817805 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056879289 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060898398 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064396804 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.0628102 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056646768 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060520073 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059531197 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065411564 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.064954867 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060308158 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056967275 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071835041 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064229095 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.064547986 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059571238 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059158949 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057276759 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056680753 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06701661 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056934245 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.058922928 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060889464 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058959576 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072449864 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063845384 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070630199 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057952845 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060258116 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057058115 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065179519 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060315739 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057041753 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065667681 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056187567 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069953603 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.066901607 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06490973 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056303231 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060595171 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063369674 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069211015 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064812761 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.063400886 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060012282 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064380239 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.057945115 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.065241349 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.055511246 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.054706283 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064310445 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063000192 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066508008 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.055492075 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064243236 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.057789095 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062283635 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06268774 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057672187 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057325435 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057864892 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.205075015 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063356942 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068060717 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063116812 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074728961 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06064747 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069031734 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066319754 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068353721 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070780199 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070744953 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065849588 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059919542 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065089992 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066152079 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061586527 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062177507 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062531829 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07906621 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060632917 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060560215 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072592123 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067086017 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058542316 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066574821 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06207151 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067061343 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059623258 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067842323 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063528025 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059366205 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061832914 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062302958 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057231682 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058162921 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058197752 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067393325 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062198726 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058713577 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076349737 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060503983 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065362462 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06832352 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06414659 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060179028 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057276013 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059571335 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068720177 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071440484 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060060352 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063906118 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.058679143 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065976247 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057180572 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065547887 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065054971 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064844837 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057872133 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058704289 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070969123 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071869024 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061752853 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066463321 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065873194 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060145554 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078697413 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065230659 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059665187 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067342018 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059725354 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056310516 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056511003 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060633117 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070672336 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058598605 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061798558 seconds)
  done (took 39.346758689 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095723601 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05888317 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057045547 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057455173 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069832552 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059452788 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058104715 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059378219 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059483809 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061353376 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058059505 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05847034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070534374 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073296854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069936311 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06307063 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058384551 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059426244 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058121271 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05927321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069511675 seconds)
  done (took 2.679548192 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065636476 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072513553 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068794321 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073812089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065282171 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062137899 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069037096 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062051017 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069737676 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067029687 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069649754 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062332325 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067243311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066954463 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067123538 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062192103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069902612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065390698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061984903 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070184016 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062071775 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069086074 seconds)
  done (took 2.790347402 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059164302 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057847842 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064105546 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058292444 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057808476 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061984092 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057469332 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060829722 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061213558 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061016138 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065242204 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058462767 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057396734 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062182568 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057244 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059032549 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10096195 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058777426 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.05758631 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056325745 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063378805 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064557175 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056376756 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057444618 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060863259 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061753918 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057579617 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061285641 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058380235 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061310088 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058763488 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057413963 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065089957 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063351606 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.059603076 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.059880804 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.05868795 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057789882 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.056661277 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056394697 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06345387 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059372808 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058245288 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059827906 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065513626 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057729853 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057574493 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065949868 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057360082 seconds)
  done (took 4.298293099 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069865766 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105925094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064008409 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087426539 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072476649 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065596174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063630043 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088289478 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059170221 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060598927 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073473685 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071841734 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060410943 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062264859 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064114909 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060109878 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060878752 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060420292 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064852128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061304678 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065017767 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065272968 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072482308 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072990251 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062705598 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061016341 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061341512 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063335197 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072573998 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065897257 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063631023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064494142 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072950403 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06620385 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061326501 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060948382 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073814479 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062145316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061506709 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058795347 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059851479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062018254 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063925825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072262511 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060899157 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064788045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060444749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058012626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071033377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060083146 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064905717 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072508691 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061412966 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060629511 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061893167 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072404175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060473559 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058941771 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060819474 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0709054 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059073156 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062091315 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072815884 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059696905 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064884939 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07401731 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065877961 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063228915 seconds)
  done (took 5.94400281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068103278 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.08761268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070052173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070359521 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069203861 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070170393 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070667973 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.06948526 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068962039 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068673646 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067898607 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105879994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063251892 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073843807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067874426 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068294499 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069169536 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069482032 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069666895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069526794 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069630704 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070651162 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069462335 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070320504 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072471534 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064799005 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069481267 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069421089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070283569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0693586 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07280994 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069488127 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069865292 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07008355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072942907 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069032809 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059324352 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069559925 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069282906 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069751822 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064991487 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070012666 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069756635 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065104208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06970934 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069135617 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070353298 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073124457 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078864874 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07048881 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069871037 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070415659 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069306126 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069768251 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070327131 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078782747 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070606531 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070764696 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069963959 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07015667 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070342898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076893734 seconds)
  done (took 5.746757885 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07351299 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065771068 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077162807 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059943827 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057146143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067454965 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057914341 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05812851 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066706804 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066358721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068679157 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067517147 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069024066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067037309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066621117 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069278019 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066530819 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066960924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065113175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068023996 seconds)
  done (took 2.681945629 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.06873341 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074555047 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063751755 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06866449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063505594 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068105212 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062838956 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063988779 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064652148 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064460878 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071512392 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070056429 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064606801 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068311669 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069819803 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068170082 seconds)
  done (took 2.419312596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064092342 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065886756 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065620396 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060027619 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063580132 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059090056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059461821 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058072471 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058521346 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072258899 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059529478 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070660874 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059674808 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058299581 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059036782 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064747713 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058704524 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059557765 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059543939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065326889 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066362883 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060694032 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063029106 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059552388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064974613 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066409761 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061220886 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062741337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059795175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059767382 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064989562 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066355143 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059080945 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060214022 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058407608 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05970246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059543112 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060215388 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06535444 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059790425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056714851 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062560445 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058564152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059996365 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058624502 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060483706 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058807892 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06513964 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060156341 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064765356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059589104 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061885695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060482868 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066950562 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0624603 seconds)
  done (took 4.740746719 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07187896 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062629919 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057060201 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058361834 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063045062 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063846913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064009823 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063693852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064089196 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058098656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063867221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062924612 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064003151 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063370699 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064064414 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063378582 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058154256 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063619046 seconds)
  done (took 2.487787681 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067965094 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0624331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067935048 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063297096 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062773174 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062397006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058648431 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058635665 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058566979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062773433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06288195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062438046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058262495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062760255 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062847039 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062920622 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06514745 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058679998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06275325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05843854 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06221887 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058841971 seconds)
  done (took 2.712510717 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08338639 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078694414 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.11970627 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075448534 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083745642 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068050916 seconds)
  done (took 1.858353372 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085742261 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099033716 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061538003 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062097411 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073594137 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06690628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06659189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067025795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073843122 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071677526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066774241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073743579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074088908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069007513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073796985 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076972489 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066920092 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066857818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063180837 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076855915 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066285007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071874517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065807488 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065628258 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083193147 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067140136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075226194 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070383169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068162084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073608757 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07698005 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066519314 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07425652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071731506 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063168636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073966287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067064561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075744334 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072029739 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067570761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061482516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072270001 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072057927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06733127 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075162454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065518332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067569254 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065748358 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065710473 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078108295 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072437745 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067629352 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072695437 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075644809 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075430014 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077858752 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070492934 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067693023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072204397 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070468284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067632418 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07230012 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067919211 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07026592 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075021446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067480792 seconds)
  done (took 6.042938182 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09286883 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062340395 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066872798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07227547 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069743408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070979195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067518761 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067061423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06675041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064016926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101526639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067055049 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069205112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069298222 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067386531 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067287433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06719323 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069320341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064082832 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079575886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066953904 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069231931 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069212416 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06862413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07006731 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074985921 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065239899 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065343371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066332771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066908032 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069021191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067069526 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069349547 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063737863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069171023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067179893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066838995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068823267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066664001 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073882405 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068070261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075391768 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065937971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06523032 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069874436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065048646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065448211 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061849891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06510398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061725087 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070064853 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069829568 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070012508 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067476654 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065528051 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065467237 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065174475 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065187279 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066807803 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077492839 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069045907 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066987783 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078619068 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065489715 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065583952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067463788 seconds)
  done (took 5.921165653 seconds)
done (took 121.665118295 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202102544 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.178972022 seconds)
  done (took 1.71757239 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068100289 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.090899429 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.06978513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127958011 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065764261 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099311214 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098719231 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069939036 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065312601 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065403477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065370176 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068021048 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130382348 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065607758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065497293 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068199073 seconds)
  done (took 2.638821619 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098278659 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173918251 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102755589 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063385122 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097988251 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070415538 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064298213 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075895363 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068825784 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068744158 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072760337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070997221 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067972342 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07140578 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069089048 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073104285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067758914 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0725634 seconds)
  done (took 2.806635542 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088059542 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.080258307 seconds)
  done (took 1.527006843 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.147610261 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100531617 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138194523 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.311395707 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130436239 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.270055539 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125589045 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123390742 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.105891987 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120077728 seconds)
  done (took 2.928870835 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095397453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159377424 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290005719 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115123619 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070949601 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.081771957 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.113688929 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076188965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074763885 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074083086 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.073926644 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073329476 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091206273 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070820831 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072399816 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.070781022 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.094906981 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069638744 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070057516 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070113457 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.093793092 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064329577 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07083817 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069753163 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072284253 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072071439 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065281593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.063744512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070179512 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.069850776 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073034592 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.078109947 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072249799 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.097712466 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067841732 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098312329 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069134454 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068048667 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070067969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068137799 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071553184 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071725741 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072136975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07122164 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064990678 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069211805 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065274899 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064010807 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074430016 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.064780932 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073596882 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072721825 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097350778 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06517534 seconds)
  done (took 5.763091612 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103517146 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100867929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065064008 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107199924 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098220859 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064646511 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099457959 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093203243 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100654858 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064222852 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063119067 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063671384 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071751083 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074470242 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108920218 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102143801 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066030057 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064028988 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101395852 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101629511 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063321183 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095057225 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09114356 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10038922 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062501455 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064822391 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062889243 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063621696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.06985297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071182256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063271021 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071823695 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076532796 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070904646 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062481392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063195501 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063191545 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071417268 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071887631 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072430133 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070914364 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062122989 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063211877 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063113486 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063809037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062285901 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070432345 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071791826 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070834509 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063188965 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063465111 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062746067 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063300099 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07115857 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070135711 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.071758853 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071751253 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062862456 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063113404 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064725616 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072190627 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072247046 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071750759 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063958098 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072301068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062696093 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072831345 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075966574 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062815594 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063442777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063044777 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.062794854 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063231751 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070040838 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07008216 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063315193 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063247164 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062561878 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076314923 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070606844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063095842 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069830475 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062230921 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062882547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063856457 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065299374 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072034758 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07383843 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065261375 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064141094 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064462099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06476102 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063644431 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.0721545 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073090961 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073104373 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071701121 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064403797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071702695 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070839022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064129628 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070483774 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063470463 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.062787744 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062580209 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069594783 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068213125 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.069953834 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.061472714 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.061041483 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068502751 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.206146671 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064694692 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073133128 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076042712 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074500038 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065198684 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078706798 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064185597 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07281946 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063555755 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073045459 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064125954 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070993486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063169229 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063039729 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063308962 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.071277936 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063907113 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063414802 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065601699 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065156439 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072914794 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077245561 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065863118 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073026286 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073202201 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065900213 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0729498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065346271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073813138 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065217739 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065420858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064098974 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075571162 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065278225 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06460287 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064795082 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075231283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065169291 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073920171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071885451 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064584012 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078973352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074999372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072392458 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075664934 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064430861 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064455231 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064780756 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064669157 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071875776 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07326964 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065509714 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064837757 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.071932364 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075024404 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064410405 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072559607 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072476834 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0729293 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065295691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064992478 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075668037 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075451526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073109724 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073174868 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07379642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064895318 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072341465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072911118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064771993 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078020558 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06512306 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077139668 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073163029 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071279233 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07213319 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072494692 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0728281 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073222957 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07465971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062638587 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062710602 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070751326 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.062761479 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063023829 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07068997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063489682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06364262 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075142323 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06332667 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072685525 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06249913 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071212544 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062243123 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06327682 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07504743 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063172261 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063306029 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069542025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062496268 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.068843199 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071050262 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0689168 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.061772354 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062215664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069913273 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.069844135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.061656143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.061806721 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062328846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072693215 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068185765 seconds)
  done (took 17.207495502 seconds)
done (took 35.961266291 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.200455745 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155897368 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185004532 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110400307 seconds)
  done (took 2.110979421 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094381057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092316427 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074487262 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060004451 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080047727 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060089469 seconds)
  done (took 1.861990548 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273829996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192933806 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170256743 seconds)
  done (took 2.035165711 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206247314 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190887638 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447510559 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281782399 seconds)
  done (took 2.62107135 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127012733 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076750144 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059204061 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070360147 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109135206 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.140680495 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085891082 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110243332 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070333763 seconds)
  done (took 2.305944502 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128423954 seconds)
done (took 12.49505221 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182603218 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.187800492 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.25154581 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.233928512 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091569389 seconds)
    (6/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.18931977 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131979845 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063089997 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06910697 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070351862 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100887172 seconds)
    (12/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071599247 seconds)
    (13/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.240268998 seconds)
    (14/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.401140505 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073983739 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.155007605 seconds)
    (17/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.139886526 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.235370795 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071127011 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114946067 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069874418 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.168636706 seconds)
    (23/309) benchmarking ("sort", BigInt, false)...
    done (took 0.233274885 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.173461945 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.169578524 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08825366 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091245784 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137684329 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067889309 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190347837 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115030265 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113829277 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06228506 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133021777 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157855383 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070030682 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089137882 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077036913 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13500625 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201554454 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059398594 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174551699 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067150304 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113943911 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068394899 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.073790134 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.14576012 seconds)
    (48/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199337182 seconds)
    (49/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196521719 seconds)
    (50/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.129481782 seconds)
    (51/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133403787 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.061379994 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063837503 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061120217 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071764876 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07886728 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072349077 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.059299832 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059445475 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.068759684 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070081723 seconds)
    (62/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068294271 seconds)
    (63/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068296773 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.19186752 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060307615 seconds)
    (66/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.059797652 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185305691 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.060363478 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063360477 seconds)
    (70/309) benchmarking ("sort", Float32, false)...
    done (took 0.124625003 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.120837066 seconds)
    (72/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.063349687 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.177686581 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111628745 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.070867815 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069632747 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071965337 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125583333 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064428938 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067430393 seconds)
    (81/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.059289989 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067595797 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107404715 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084433117 seconds)
    (85/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.05925785 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.14567719 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.083769684 seconds)
    (88/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.066712662 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.15590398 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067275223 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066020928 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.060432316 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149045365 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.061244943 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081779491 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059428703 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063443489 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068767312 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07317231 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08370055 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092024537 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.120756568 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058442127 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.064662915 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068460722 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059320517 seconds)
    (107/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.074161665 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069230667 seconds)
    (109/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.059653175 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.066644698 seconds)
    (111/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.152493305 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.061677421 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072156283 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.068899225 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.067076343 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.189831839 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.160616392 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.078917411 seconds)
    (119/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059212463 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.057877105 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.059718499 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064886641 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.170424611 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06931605 seconds)
    (125/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.147137027 seconds)
    (126/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.064779062 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134714157 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.155949226 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201890964 seconds)
    (130/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07064536 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.068900507 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058386332 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068740047 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.150904626 seconds)
    (135/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.130809079 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.076987807 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.145221875 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 0.156725217 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.06653016 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065654872 seconds)
    (141/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.058883755 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.191534068 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.058326581 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.065117602 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067094209 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.057929153 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111347213 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.059203435 seconds)
    (149/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.058428204 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058348126 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.057817862 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.110983111 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.123367123 seconds)
    (154/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.12633562 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.072400852 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.160048999 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.078461878 seconds)
    (158/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.067845062 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.057790913 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07675452 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.063051048 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.083607876 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111489435 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.057954962 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.16956871 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133623243 seconds)
    (167/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059308222 seconds)
    (168/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.058362624 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058464453 seconds)
    (170/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.115048263 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.147751518 seconds)
    (172/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128461953 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.062295326 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065558461 seconds)
    (175/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.072243567 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.059384041 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058994965 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.128882996 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070096094 seconds)
    (180/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.058473357 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099251403 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057937728 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.058819772 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204033639 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071406915 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.058398933 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.059631444 seconds)
    (188/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.321455539 seconds)
    (189/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062844963 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063605656 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062696517 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062776348 seconds)
    (193/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063424353 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063208096 seconds)
    (195/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063473492 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072437956 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06392803 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062703336 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062963953 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064104037 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.13728154 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070758601 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088729353 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062253157 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157186406 seconds)
    (206/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.07273244 seconds)
    (207/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061962355 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201044522 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068455454 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064346556 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060802283 seconds)
    (212/309) benchmarking ("sort", Float64, false)...
    done (took 0.127865167 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061471991 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06135896 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060700571 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061014612 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061157874 seconds)
    (218/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063248864 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084008911 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071631566 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072006685 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068243846 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.061900275 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068641361 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.060756271 seconds)
    (226/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060289502 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13349286 seconds)
    (228/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061397095 seconds)
    (229/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.075033353 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060270387 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.130603339 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085462879 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068751126 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085722618 seconds)
    (235/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.059800547 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060490463 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.061346971 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210788342 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072719298 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061567355 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.060789959 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150221127 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061851053 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083624523 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06003406 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060262416 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.067431184 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060749384 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062920399 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16392546 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062589847 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061969234 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061355103 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.060541192 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076936212 seconds)
    (256/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.061390956 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.059833468 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08385396 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.059831477 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061450943 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061513611 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060661382 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087354337 seconds)
    (264/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069298229 seconds)
    (265/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.06070319 seconds)
    (266/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061770949 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062054855 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068987856 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122594107 seconds)
    (270/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.062007104 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106969469 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.126569843 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118772217 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.160917802 seconds)
    (275/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088382784 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067687243 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060418502 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062090608 seconds)
    (279/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.060361472 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070726763 seconds)
    (281/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061264732 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06133926 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060644055 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060372186 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060074127 seconds)
    (286/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067152333 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069363985 seconds)
    (288/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.071942218 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.083730783 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.061081336 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.060455071 seconds)
    (292/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059921256 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.062613676 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.061691712 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.061353642 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071345477 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.06868161 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068566323 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068551176 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.067592188 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061307102 seconds)
    (302/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.061534286 seconds)
    (303/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065044887 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061341502 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139017379 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085880584 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.059826674 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059991173 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111705778 seconds)
  done (took 30.559648104 seconds)
done (took 31.97676535 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084720776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087138711 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070716477 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.082712639 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077913909 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093419656 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071093737 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075840659 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078392294 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.076477765 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075573118 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068595411 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071463754 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071067951 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069252074 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084339223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076051988 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069504929 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.06994129 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061195145 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069882905 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061498839 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060678082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067727224 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07230684 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068421597 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07061574 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070034854 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061265253 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061677656 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065917357 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069501815 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063400344 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074136405 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069996731 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069321332 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070730449 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073349275 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060700279 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061437517 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070855909 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06161153 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069082685 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067620469 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.065981196 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067858275 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069859974 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073351502 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083380084 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065164361 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071162332 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071723515 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072388225 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068225574 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066370432 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069473004 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067592686 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083253244 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069710863 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066475685 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072941449 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072115488 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068997039 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071121063 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07111517 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073279845 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075870018 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069049082 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073135516 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069763048 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062445873 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071028585 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067383601 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06257712 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073699647 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075196579 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061905834 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0668011 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070858196 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071065728 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06237248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06669069 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062237418 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066977855 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065211217 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067482547 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066090533 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068635097 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060368101 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069618239 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068454887 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068987671 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060349594 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074041926 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060949172 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067362763 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061284302 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061173403 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060532443 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066163633 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06098453 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064536745 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069456735 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060178191 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065442276 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074080002 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060658375 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.067879578 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061751606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06233933 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073711107 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073034178 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062871078 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067111028 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061886893 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068396004 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0620499 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062595285 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062068571 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062604602 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066957143 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06243356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066839419 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067890508 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075799018 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062624555 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067233718 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066888318 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062972422 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069344096 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062780122 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062535969 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062169716 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076387378 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066654192 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062653226 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068038703 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066661594 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070856882 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061651087 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071148586 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068232141 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.203451707 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067943331 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060917667 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072714371 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064999333 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064665389 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060471801 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061181424 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060412997 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061061379 seconds)
done (took 12.147185711 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061463735 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089712214 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07016552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077988014 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073428277 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061890104 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065927244 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079571409 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06506383 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080896376 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082014952 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080994327 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088037796 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060519079 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061624759 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062801261 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060721452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068318348 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077423501 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.081959765 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090023382 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061129514 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07027612 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076327935 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071599503 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077560998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062319751 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06221142 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064084722 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079064458 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084147279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060877222 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062208807 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078165055 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077470163 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069556165 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061922747 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066260823 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063681507 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063200002 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064668046 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078203252 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067454901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069237144 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064090631 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06402111 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063875248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067516353 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076404963 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067415614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071006445 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074795962 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063803224 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061622678 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060296707 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066155696 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061495237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062457437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061624005 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061806908 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061471227 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063387071 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062384188 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062172714 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064579676 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064453648 seconds)
  done (took 6.087291197 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079264016 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088831593 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07755593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077911402 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061202422 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061714177 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062101921 seconds)
  done (took 2.08679809 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062176933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074422138 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07823447 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077472224 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071014582 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079520433 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061999993 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090888296 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060807196 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073759166 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106934795 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078718226 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065217046 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073210531 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06166061 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069937707 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06191027 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069456888 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070345161 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078088872 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067742763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089843975 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075329577 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062287948 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082099619 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06662574 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061230133 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063418279 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062968815 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06289779 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062910003 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099935963 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06639832 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07569653 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063177689 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061747699 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067883482 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065143071 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065273785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.06818108 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067606914 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063449518 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062159506 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064779608 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066349399 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067698818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062447328 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064741262 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064427683 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075673567 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062352697 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068352413 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066735209 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06750075 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067913537 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06637887 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069632491 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064385349 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074105615 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069500496 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063054511 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07088734 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070474364 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067725449 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073685038 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066034166 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066451355 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067768804 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062725054 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063661434 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063014196 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070513851 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061444118 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064021701 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065005663 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063515048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065993385 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077836248 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077953441 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074073116 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063205484 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063257957 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066333081 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077785416 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066978408 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062836325 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.0651028 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06081121 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.065876177 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064486226 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068964313 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063441228 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070056833 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06432938 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065158637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070657994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061302021 seconds)
  done (took 8.228358044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064101959 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063000952 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064023001 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062761616 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062418833 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.062917311 seconds)
  done (took 1.991742722 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085739165 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06305982 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075743596 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063136 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096298824 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070036689 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.07014448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071483616 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075117712 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074368491 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070201207 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07273093 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069950214 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064449903 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069836145 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063742771 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069755921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06663777 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073847258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064711808 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075292972 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064446006 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064376777 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073620369 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066844861 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063567535 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.062805574 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073896359 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074515914 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074038607 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064594575 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066597672 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070218713 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070963073 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070013425 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06990474 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062709346 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068573015 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066562679 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067472014 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074383871 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066308249 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066811619 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069888903 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073153081 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07054412 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.06805064 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066838412 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069405641 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0685607 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068065325 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063625311 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065410603 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068085209 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070023197 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071049912 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068210942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070003757 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064470855 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06960336 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062819434 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065584979 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070778279 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065264436 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066637808 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068104431 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069940852 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064569999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064859247 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062685319 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068185186 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062615408 seconds)
  done (took 6.542491574 seconds)
done (took 26.497450733 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.979754481 seconds)
  done (took 2.538736993 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.560861914 seconds)
  done (took 2.158985076 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.659465552 seconds)
  done (took 8.256834976 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.285516671 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.33561147 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703726933 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127679634 seconds)
  done (took 3.073022777 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708092584 seconds)
  done (took 2.315149019 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227626705 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215315124 seconds)
  done (took 2.055140418 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343291992 seconds)
  done (took 1.940289876 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102249288 seconds)
  done (took 2.697136443 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.228979413 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153111342 seconds)
  done (took 1.9954783 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443398208 seconds)
  done (took 2.049803948 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.452304573 seconds)
  done (took 6.062560792 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231497761 seconds)
  done (took 1.87814278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230692629 seconds)
  done (took 1.838442377 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.704356213 seconds)
  done (took 3.304267001 seconds)
done (took 43.770203565 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07740258 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079672058 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079443927 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075658219 seconds)
  done (took 1.889167397 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069699103 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.064987937 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069129813 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069091737 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066809769 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.067964208 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068231152 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.064859157 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066267265 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065286829 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063602754 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065320679 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068050594 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065080795 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067610357 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069106432 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.064926719 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.064940162 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067737116 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065062848 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067949623 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.064849131 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063609185 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064441615 seconds)
  done (took 3.196724364 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074737695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067664034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.069819784 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066485335 seconds)
  done (took 1.888475663 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072775419 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081257979 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082822502 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087529596 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071888375 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071646112 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.07949712 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080465072 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060465115 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083261851 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063326799 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061668208 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.061798015 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.081472491 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079425847 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058522046 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060107697 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072384737 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07091459 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073426337 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063069728 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06062356 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071592642 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071560362 seconds)
  done (took 3.327656509 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077119838 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.060820111 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075449085 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087019128 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089353125 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06112759 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075379682 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088794784 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135161252 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.060558534 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066349824 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.060733535 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100937023 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061051776 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076764445 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105709866 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109387201 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064283395 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09320787 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061063625 seconds)
  done (took 3.228024188 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073488682 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065718844 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067017871 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06238159 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073070026 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068746944 seconds)
  done (took 2.039112822 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065062138 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063120138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.062682095 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062035108 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.066861858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062357288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061052168 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062808567 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063105157 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06238048 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06244027 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06125771 seconds)
  done (took 2.368836176 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157736916 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064356447 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065416278 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063490796 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066706242 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061688704 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076287474 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063665573 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079632521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061619983 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.061675531 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.063675101 seconds)
  done (took 2.503983614 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09794321 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126021669 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091964894 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068287938 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165301991 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089776744 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085724653 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.117903081 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088966014 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065395119 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088675837 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130752688 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091193009 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09424019 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078047791 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120838798 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105694249 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083507398 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109247454 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077941271 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06681367 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128610591 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066528092 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089402472 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097744235 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094659011 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105594003 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128244895 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080300598 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085591218 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078608411 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0702475 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100453623 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080039113 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09295145 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089353224 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094099079 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081148558 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08279066 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115039281 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149045109 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095755212 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095934861 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128944827 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074243096 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.103351816 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077253597 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095085343 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099914195 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089296168 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071441564 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087318331 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102245305 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09785732 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077450287 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077666539 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112810215 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094337992 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092437814 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075995406 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102485734 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083081964 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10267725 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258656173 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135220207 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097335869 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131553236 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118980661 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091472692 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085276779 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089023174 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072001496 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107390168 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09440425 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132133058 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106710753 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096304992 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092933315 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079040379 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103751227 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110031579 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089988894 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089784409 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14159322 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104262168 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086293381 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08940873 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.136687258 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067624044 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142503997 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085172372 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115808424 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09305531 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133718049 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087665283 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.079522941 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101522176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099681513 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085399749 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098831719 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080338388 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109160851 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088728332 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096869901 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077759707 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086575493 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083100742 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092790825 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071387177 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099829218 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111687507 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109400287 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071135909 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103988685 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082805567 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073371846 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0893254 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134491569 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079417936 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071722285 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14569602 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089369973 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112400917 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105911466 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079161989 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259784354 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132317784 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088845341 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085703569 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073193796 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149260622 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072690721 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114968099 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077943668 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098797524 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101421724 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127391234 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13377496 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091835415 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075105667 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088347435 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.10261873 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084018155 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082544438 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07383994 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104888107 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121018782 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.09576286 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076768246 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088696285 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.065677073 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109981664 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072369069 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080693893 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091824315 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.084299279 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086216636 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138009581 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.080920122 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10439305 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094217898 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064296929 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087911696 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14857244 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079811347 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107088453 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112426203 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080196994 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064757149 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092421814 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.069489397 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104820539 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.088901397 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102753552 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074875564 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103236188 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065758627 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071589838 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125224378 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0982926 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085937971 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128729974 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101371122 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085505301 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100097589 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093320086 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091932594 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098427609 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.253951608 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103538503 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070858243 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125858599 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08884262 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074689221 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083691865 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076365227 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074779071 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09674495 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111121105 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086096813 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097573916 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099518665 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087618285 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.105955441 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08561469 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075695506 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127641496 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073281736 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071645677 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084327869 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102462175 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085644414 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.129916608 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076094766 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131677429 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089229206 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077901709 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111585575 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065724715 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066654984 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.077835173 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088494589 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111995249 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075611918 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07459445 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114360893 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127961941 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094217386 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099408494 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065205046 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087244723 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131441639 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.110519879 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078364406 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106460583 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081254707 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125476157 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092628438 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116013459 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1022311 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107083523 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088231761 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077731614 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070489105 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084199522 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106973032 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082760479 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078455383 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065043109 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070836178 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088900902 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087254135 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10889213 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083657846 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13004197 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068948006 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096850091 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251976569 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104145253 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086663018 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092655791 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.088968299 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088370028 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088280622 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089092751 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070580607 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122456017 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099834477 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075961914 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08591585 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091489284 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102653201 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105218314 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10538576 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089509698 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103749089 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118977473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095802632 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079263416 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081307977 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090169223 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081571556 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077776038 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100493617 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109247115 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094844617 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105518134 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09116781 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.089366251 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103655404 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090005496 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085274591 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114348046 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148434552 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098772215 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100400306 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082386314 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103174793 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102171772 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109119088 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110340399 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105478384 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067157006 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071881582 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067141 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103082709 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075640562 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113664545 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073017937 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102988245 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093441407 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076762773 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063579175 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097904574 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089843056 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078841448 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119368103 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109705055 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070144383 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087227227 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103013559 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079924138 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120152487 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097994027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096975798 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068257662 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086758202 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219020588 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106476267 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098626977 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.074634107 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073769293 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067260179 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104164686 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082000431 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10789366 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086725559 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098251454 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115871594 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127347667 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083699715 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093122413 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113879236 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110387191 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.078810879 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108793719 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131239594 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116113587 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078071181 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081248708 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102739148 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102880328 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098153189 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072630764 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076121494 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105975555 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110051168 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064906371 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082403603 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067550543 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.08080834 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108924697 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091756993 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078880945 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113571434 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07186827 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103711081 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091949849 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119302088 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119082788 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140217276 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093201183 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081911537 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073901674 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120698624 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067917086 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113479976 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108739352 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084451547 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.065288289 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0806232 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092303156 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.623416437 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105428524 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072664744 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131475558 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083259787 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111648782 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081609635 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113555532 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085827285 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098153383 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087382011 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274036998 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080038855 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106630631 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.17089126 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1084515 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106066694 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072714157 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084978575 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071451658 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075532099 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.077979267 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085111918 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108363361 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083495208 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104786356 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.07897921 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106640545 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089754904 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087945848 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.098408947 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080130792 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137195432 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088004489 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121278489 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104820487 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075387482 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071370281 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083394921 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097639259 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079148277 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091039218 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075197858 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.072778873 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147631508 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099074171 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08165202 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099158867 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.087644153 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083908609 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088893825 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113582585 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107138427 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069684241 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084687173 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100031578 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076205918 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.071864855 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09335026 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066163091 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085930905 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095148548 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092565487 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08655847 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099423391 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075004781 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083861468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106327694 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08256842 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.073993753 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073369003 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073355225 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.072982823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099712179 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10437561 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110749899 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105603913 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087120864 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090100902 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.07499677 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.36581219 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077406498 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094833004 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102130681 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072350668 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127191448 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085695476 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085758676 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093595306 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097634567 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147422028 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07107295 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105592725 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090325896 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106322257 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083576588 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103508089 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092020971 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088990483 seconds)
  done (took 48.85362574 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091060497 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145607807 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151359097 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077123566 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091040183 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114804736 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20418911 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187124372 seconds)
  done (took 2.80003991 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06423455 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.076655349 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.0981737 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.077939082 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061618102 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063427472 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198591389 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076220211 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061362177 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098026266 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071317042 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063445159 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.406253087 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.060516214 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06189725 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06975064 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062616698 seconds)
  done (took 3.385607703 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.358434292 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601026777 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338069146 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070516053 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.92509876 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086736741 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.157816477 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134601273 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075647089 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528801509 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371058081 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126178375 seconds)
  done (took 18.50654439 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072918542 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06976987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073067126 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073217163 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069294609 seconds)
  done (took 2.084759513 seconds)
done (took 97.690322375 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077946987 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164672246 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064750677 seconds)
  done (took 1.992416494 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080964434 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076828994 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076506067 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074702749 seconds)
  done (took 2.046822919 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070319993 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.070969031 seconds)
  done (took 1.868154178 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239425001 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157858561 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088195573 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080190672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077048876 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076373928 seconds)
  done (took 1.975945451 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069494787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06684691 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067711028 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.067896029 seconds)
  done (took 1.999939371 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065367598 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062734845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064264757 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067074821 seconds)
  done (took 1.987680658 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080556016 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078987023 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07336295 seconds)
  done (took 1.963690222 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092343237 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091316758 seconds)
  done (took 1.914572578 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077898028 seconds)
  done (took 1.807417029 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086530295 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093364366 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.148715315 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107096214 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145821686 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130636375 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073108545 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074289336 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069218132 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067655931 seconds)
  done (took 2.728617906 seconds)
done (took 22.574671163 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075468882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.357329442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.354688127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080978907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.664948116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.351334391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.959942973 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085900875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093529928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063428196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.07909846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.642154117 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954437225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320187921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.936446076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317593781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646053266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.062885948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.061944871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063585441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948230307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062281773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063259893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063011179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675592347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367080472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064500368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32394243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063283076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065659361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.350807011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064720033 seconds)
  done (took 15.9869252 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068323366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114694269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067409028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078196151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065404032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064420375 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066171707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063567479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103326708 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063608795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079429749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062400747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067404716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064922705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.082811888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.063845564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.064913616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064206343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063408396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067277059 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.080710813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063375364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064454941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06394387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064277567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076831178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065075905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063318148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063630942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066195013 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067244469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065587741 seconds)
  done (took 3.981475716 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11793819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122879244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070088803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102624812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114248305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067096973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142932949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088762855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110115191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064170446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079209667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062946358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097256606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065574325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083479755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064484166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065376772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064646452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063733001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064579017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082071252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063313061 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064627757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064322522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064666965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07833281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064818521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063796097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063905856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066067933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06791104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065095058 seconds)
  done (took 4.271526065 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066988557 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069300181 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077700021 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078190872 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063900904 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065025767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.065799947 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062354546 seconds)
  done (took 2.298946561 seconds)
done (took 28.290247961 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075990932 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064056215 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066498956 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081711985 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.06836147 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065943314 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060091916 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.068925542 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066306287 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066662649 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.067305418 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.061508258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065808775 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061611797 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068494076 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063409688 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068412686 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.065876446 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.066920762 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.0674959 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064223571 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06719051 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.069386501 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.066449942 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066458423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.066618874 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071009691 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067265003 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062901229 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.064836761 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064135646 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072330765 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068791319 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068792144 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06194681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.061851957 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066230676 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.063947486 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068139714 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071099662 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063755618 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.070984626 seconds)
  done (took 4.523463065 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.081814586 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084764459 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077176849 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075723737 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093311486 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076481692 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.080971528 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072879627 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.071703706 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.079692918 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.067763619 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075200601 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072320126 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.066617565 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.071189272 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.068525216 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.073737684 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068679079 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.071995152 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072230215 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081052512 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06687819 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074608373 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.073574044 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.068500021 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074208001 seconds)
  done (took 3.697519099 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070379996 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079524619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086193635 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141700333 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106293559 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074745197 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075249025 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088790423 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091195268 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.062769383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066622154 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087078014 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086720295 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.068991505 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10202142 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.078614715 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078183375 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065396334 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069385075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090704542 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.0824794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07907798 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.087847795 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.077962827 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.061544386 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06497819 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068226237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076033837 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069254508 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073644769 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06683002 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.065918625 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063111672 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073445002 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06678888 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0620171 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085764249 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074067437 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075430551 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103472937 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07139284 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.063692355 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089641334 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121876941 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.061931414 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066077049 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.065710323 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.073812945 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063319095 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090224654 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076158388 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062412243 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.062884769 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063290138 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063337444 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0771132 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.063972232 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06411904 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073083973 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068225208 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083502437 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067212678 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080685388 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062603398 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072252151 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063243729 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063418727 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.060994815 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092358565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068760645 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108991443 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063021396 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061049699 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07363055 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072256382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068388208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06213792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079269198 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073025222 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.065897092 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073341559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065197121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065154944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092839129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062548335 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061760669 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.060943254 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065271533 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065040896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.062778437 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075451349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.061845477 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.064912656 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076238828 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062319211 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.062892529 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065417745 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064445231 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061673156 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074377264 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.065996225 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063555072 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073946295 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063163497 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065199632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.0755647 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.068961312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061831993 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.063818258 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065185488 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063746074 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065849831 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065116621 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064424982 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.068950995 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069513256 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.067289171 seconds)
  done (took 10.267854853 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158236146 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.145615926 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.064285175 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.13949798 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070297877 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067893269 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.13962625 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082005478 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063129485 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.063491832 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.062303948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091253322 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.086951508 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097224151 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067373861 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063502264 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086514346 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094629823 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.142324119 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138004793 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086092144 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.06980418 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065313319 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064188101 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064762902 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071266662 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078243822 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072913688 seconds)
  done (took 4.282326929 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074381387 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.086787552 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.066690022 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.07397471 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081656449 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06350684 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.064586104 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064761634 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077154337 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.071915006 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063179655 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.067046655 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066551627 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065267345 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.063672343 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.068917451 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069415159 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.061985755 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.066933478 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068222156 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.072707763 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087562406 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.066608172 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.062663459 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.064931373 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.062630913 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0716626 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075142319 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.062803287 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.077956525 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06056736 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067095168 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.076327503 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.063403521 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062358776 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063142518 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.062899775 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.062819272 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063097627 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06191818 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.061693962 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067204337 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.061512786 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070796903 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076270276 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069793932 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065032572 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06531471 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.065445112 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060356851 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.065513182 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.065805355 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06494664 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07001873 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066079437 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065386881 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066185209 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087630823 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.068528173 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062195275 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062342969 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.061657356 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065133861 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072552976 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078714337 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.064969164 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06172236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.062548452 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.067969431 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075914457 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06214422 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067257243 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060495511 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063539952 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065118594 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065211301 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.063531347 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.061549029 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062426983 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.062839002 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063284715 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.062624502 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062763183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.064729507 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.060841727 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061447493 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.062776921 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064342689 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07146882 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.061785381 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066372317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.063758619 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.061709171 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.064925761 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068052697 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065214507 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.075376033 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.073553072 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063236103 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061073194 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.075489679 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065339928 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062251168 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.068615323 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.066667899 seconds)
  done (took 8.815906727 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086749196 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.064640962 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.078409004 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.085116413 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.072351038 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.067983178 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073930834 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.063946503 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078440171 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062202351 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071267015 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.061841116 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073850656 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072490691 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06422743 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073165342 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065055686 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079204436 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.07717451 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.061437554 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071971511 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.074771306 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.074673439 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076693987 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076081611 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077564103 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074338443 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.065654222 seconds)
  done (took 3.823627314 seconds)
done (took 37.150073391 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.842786809 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.092806172 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.824481227 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.058728592 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.064759172 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.847560577 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.934425524 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.822028988 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.940400679 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.873181618 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.143472152 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.315581517 seconds)
done (took 66.574814712 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.84374709 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.984037252 seconds)
    (2/2) benchmarking "String"...
    done (took 2.08438531 seconds)
  done (took 5.827474582 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.084466728 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.778559787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.106484033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.821816743 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.825140388 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.348770726 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.625240041 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.296523878 seconds)
  done (took 31.566255191 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.979436659 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.050633703 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.497917559 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.539529365 seconds)
  done (took 15.87021193 seconds)
done (took 65.041068065 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.843280733 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.821123205 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.826753409 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.853634737 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.820555708 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.819785198 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.824695866 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.82203455 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.859492829 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.875377406 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.820450548 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.836689676 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.824337541 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.876253571 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.318304457 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.872194671 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.833509727 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.821310891 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.82322623 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.874578103 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.825270252 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.822771554 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.292621016 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.979095591 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.424725509 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.964044451 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.189501034 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191157522 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.824137611 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.976727142 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.889156115 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.041914978 seconds)
  done (took 205.443850251 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.823745361 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.66072065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.751350874 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.862576479 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.090914829 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.000485613 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.92750914 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.162690038 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.825007593 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.837308472 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.008927512 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.821285438 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.011426656 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.767771216 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.862802242 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.851631487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.991527347 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.01527185 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.860172817 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.979407718 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.845588873 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.940174101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.906696733 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.993120097 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.865723341 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.919772608 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.846522478 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.835710234 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.010202771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.971527701 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.858641493 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.820484987 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.005189276 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.692293414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.826273256 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.836646008 seconds)
  done (took 171.050292311 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.01301314 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.8348402 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.822966912 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.883587475 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.95017539 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.824622113 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.505552417 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.833429071 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.239005333 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828285116 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.825623076 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.823776319 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.826022295 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.837952808 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.918617995 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.824162364 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.843714486 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.827723603 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.848606704 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.825330027 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.824556246 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.826694456 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.824054193 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823800422 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.824371997 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.824506669 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.270714592 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.073745075 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.824729824 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.827723566 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.512244327 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.835894962 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.922765498 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.826027135 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.920066957 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.881577246 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.950360991 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.825394409 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.04364597 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.90075968 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.827626565 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.824454726 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.894639941 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.839977838 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.824961306 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.832405356 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.830885129 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.894001859 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.077643446 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.825407911 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.94679415 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.307032367 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.823301614 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.827887623 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.824146758 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418418028 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.828987125 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.824959608 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.833568002 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.834477055 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825833465 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.827497967 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.214362221 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.895266812 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.943293683 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.825323209 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.222532352 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.827406743 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.088078753 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.947261798 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.826160085 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826705184 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.828872725 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.829407028 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.826959038 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.829486789 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.829634094 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.949887322 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.833196628 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.951386339 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908358012 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.944163268 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.826003408 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.83720308 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.656382046 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.898895921 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.864245608 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.659666591 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.827653184 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.204757593 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.590313967 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.825891999 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.830637648 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.841468319 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.828289798 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.829651729 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.828432215 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.906756226 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.82894667 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.949794889 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542259122 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.10809063 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.82764654 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.828217686 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.82732274 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.829542376 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.832257813 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.910158683 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.948428376 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828431829 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.894397193 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.834323086 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.827000752 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.919465344 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.82478055 seconds)
  done (took 406.427340219 seconds)
done (took 786.759954353 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.409038354 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.385810273 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.476459909 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.402564493 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.378676307 seconds)
  done (took 13.816541576 seconds)
done (took 15.583506578 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.843796288 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.837225986 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.888499246 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.917259025 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.847517223 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.848890394 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.911835149 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.851016652 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.878147711 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.884479027 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.9142157 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.910999492 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.856177799 seconds)
  done (took 26.156587044 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.837629497 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.986026558 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.064355749 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.871770588 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.839433979 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.062785951 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.897607173 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.979687117 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.98009573 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.061843686 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.067078027 seconds)
  done (took 23.417760225 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.841527589 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.991055848 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.068856076 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.876685858 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.839860664 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.064435689 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.901325094 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.980242409 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.983278238 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.067217469 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.079089975 seconds)
  done (took 23.470728065 seconds)
done (took 74.810091698 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.835807744 seconds)
  done (took 3.600608668 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.857514769 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.999627439 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.830351593 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.831932891 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.83378804 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.835586601 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.83604541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.836016069 seconds)
  done (took 16.625237336 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836922719 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.835405849 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.830246787 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.833034796 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.832428325 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.832089564 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.835853213 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.83572107 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.830576794 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.834843839 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834581217 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.834403236 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.834866091 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.83485934 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.835092285 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.837098196 seconds)
  done (took 31.119394149 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.83643558 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.832252404 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.832604312 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.833133128 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.834933866 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.830453207 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.836702116 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.834111555 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.833404101 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.835236207 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.835132595 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83563813 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.834680891 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.835756878 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.837028308 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.836859372 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.83158949 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.829344502 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.838809132 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83481873 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.836163577 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.833534564 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.832805806 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.834680238 seconds)
  done (took 45.787544218 seconds)
done (took 98.911602987 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.610151499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.568836192 seconds)
  done (took 9.946026302 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.838915705 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.83552222 seconds)
  done (took 5.449165489 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.834916903 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.837057641 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.835243393 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.837125393 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.836950771 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.83401271 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.838131684 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.837130506 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.838508278 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.838324674 seconds)
  done (took 20.135310444 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.836138825 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.838851959 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.829956877 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.838367002 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.83648711 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.835409713 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.836362707 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.833192162 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.837416127 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.830993893 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.838867041 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.834983593 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.833894014 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.834285694 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.836852432 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.836336225 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.839684929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.831500589 seconds)
  done (took 34.806512319 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.838242618 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.834978818 seconds)
  done (took 5.442352361 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.835672032 seconds)
    (2/7) benchmarking "second"...
    done (took 1.839894691 seconds)
    (3/7) benchmarking "month"...
    done (took 1.836639918 seconds)
    (4/7) benchmarking "year"...
    done (took 1.838093204 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.835434308 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.835775399 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.833089514 seconds)
  done (took 14.627216691 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.840019042 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.00316269 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.068747657 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.666685842 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.839486981 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.841208282 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.215058746 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.840639059 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.841902907 seconds)
  done (took 20.92839176 seconds)
done (took 113.104167304 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.645573975 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.838579022 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.113888439 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.900278638 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.872413643 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.133602505 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.855476915 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.481396273 seconds)
done (took 42.616770331 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.849079164 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.839588099 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.059331368 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.871012465 seconds)
  done (took 22.54129757 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.840600297 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.272838174 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.86501029 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.738434819 seconds)
  done (took 22.497909559 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.220246944 seconds)
    (2/2) benchmarking "read"...
    done (took 2.187363309 seconds)
  done (took 6.187453271 seconds)
done (took 59.85069283 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842167062 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.840568488 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.84193561 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.837366192 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.843302654 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.841745098 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.839504521 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.84248979 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.840648869 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.841401894 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.842950255 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.838633372 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.842399821 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840947952 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837415823 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843076324 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841866749 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.840398356 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843182962 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.840079737 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84537813 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841639429 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.841323036 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.839298305 seconds)
  done (took 45.965736534 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.841211683 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.843408247 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.84228602 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.8428491 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.836938627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.842651136 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.841489454 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.84082898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.842903063 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.842029739 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844472995 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.844303776 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.844126951 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.845699177 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842504986 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.844856092 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.843779518 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846322164 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839851114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.843732827 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.842125673 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843360791 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.841915623 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841335613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.844322843 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84625235 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.844816191 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.843806352 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844955631 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.843547301 seconds)
  done (took 57.067459185 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.843310888 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.84364621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.843309465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.846701521 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.845537718 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.846139757 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.845131666 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.845578626 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.841532684 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.843525687 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.843743549 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.843041672 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.841411259 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.845059025 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.842519494 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.84495623 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.84542222 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.843929763 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.843452815 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.846590604 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846270675 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.845744806 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.842717621 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.850976201 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.853061688 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.845326821 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.848413244 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.851498216 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.85065475 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.846920643 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.851372026 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.845197271 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.848619003 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.850099864 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.847511665 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.85096222 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.850673372 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.847202503 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.848535753 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8509671 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.850521064 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.850153923 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.848903971 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.849022217 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.839151671 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.842442252 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.841225746 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.841887647 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.841059875 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.841595914 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.841906469 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.843715652 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.839897753 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.842254742 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.840599516 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.843844483 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.84303326 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.843485623 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.838547381 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.843801836 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.841828297 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.842225077 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.844503862 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.840693449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.842662073 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.840857407 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.840886398 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.842570606 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.842115638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.842537224 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.841502853 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.8412749 seconds)
  done (took 134.606786342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.841551503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841103862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842189061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842109666 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842148497 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848763692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.842335444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842332155 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841814216 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.843592601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840251387 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846798052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845019619 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842150652 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843180258 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.839209946 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846243616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8467452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.843569027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840390034 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846629953 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.842740619 seconds)
  done (took 42.32695318 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843550278 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84174092 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.843951767 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.844571197 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84447644 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.844106881 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845420664 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840824415 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847060868 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845590687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846201178 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844370336 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842694058 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84534946 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84080012 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849638075 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841388468 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844155194 seconds)
  done (took 34.96982145 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.845048774 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.841851788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.842716233 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842795838 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.844569353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.845633546 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844754382 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.847756243 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.844545948 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.842240497 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.845389815 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838285282 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.844893666 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84420455 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845388133 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.844713309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.844058794 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843525946 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84786345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843547422 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.844914077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.842256825 seconds)
  done (took 42.344768538 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844808189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84451164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.844215324 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846625892 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846593872 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.847124888 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.843261246 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.847974851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.846693047 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.845461035 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844512167 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847725398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.84709559 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849659658 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.850648041 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848083585 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850006815 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844528165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851259569 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.844933248 seconds)
  done (took 38.710884055 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849603033 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845332533 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845050762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846992466 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843999329 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843926441 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848816061 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.849910317 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845808824 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849059092 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84661056 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850877539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849582513 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844229277 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848929461 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847582729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847874275 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.848664959 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847027595 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849780154 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845960593 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.848927915 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844785872 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849719433 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847397169 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850704506 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844649025 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.84684319 seconds)
  done (took 53.509025501 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848312259 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847011158 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.849206935 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.850326708 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.850337111 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.847013671 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.850432023 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.849217281 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849169931 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849791598 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.850968297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.846702033 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847782626 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.848301896 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848752558 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.848879784 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853219153 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.847747946 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853098013 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847639345 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.851730438 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851513046 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.853919174 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852818087 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851265366 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.84878901 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853439179 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.852333393 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85189141 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849501126 seconds)
  done (took 57.284732993 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.87582119 seconds)
    (2/2) benchmarking "in"...
    done (took 1.870317448 seconds)
  done (took 5.527730595 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.851345946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856062024 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.849916976 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850780841 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.847441792 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.849146886 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.854375925 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853654501 seconds)
  done (took 16.593460414 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.85213185 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85327595 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.848681553 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.853218508 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.852179353 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860063793 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.854522239 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.852583307 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.855447936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.852673816 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.85759808 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.858771972 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.86059889 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.855527557 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855466803 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.855302714 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852873424 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85448914 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.856119992 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.854059426 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854809817 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.853424621 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.854187079 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.850735682 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.85029839 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.851483423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.862478855 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.856671632 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853178878 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.855919169 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.859189777 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.85324043 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.852539456 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.852927751 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.851092091 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.852495713 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.861306636 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.853097194 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.850451657 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.850360522 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.85386306 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857095563 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.85736347 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.859857633 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.857481264 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.852410803 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.853289939 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.85413731 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.8554836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.855860377 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.861382677 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.849241576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.854721893 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.852976694 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.853616575 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.85283113 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.853496317 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.859835424 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860944071 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.86125307 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.858346961 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.872391628 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.862237824 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.855108222 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.858599222 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863778995 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.880667277 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.856706243 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.855003493 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.85665154 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861934994 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.854845013 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.859290969 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.85975322 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.869225569 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.866123495 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.85740321 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.85818375 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.854110009 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.85409794 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858943146 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.857850842 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.857611409 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859617984 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864390227 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.881915795 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.857020253 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.854741929 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.858048723 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.858691798 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.860898272 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.859687835 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.855516709 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.856886745 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.855689414 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.860948926 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.858311111 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.857595142 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.857143039 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.86663819 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.856598629 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.858811205 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861895655 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.866779318 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.859636452 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.860048585 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861725063 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.860204027 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.864026746 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.85985351 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.856142775 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.859584401 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.856182729 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.861528995 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.858730577 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.864428064 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.870936387 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866448159 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.860572682 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.862842698 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.863612982 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.862829578 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.867420765 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.889163975 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.862309484 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.865625122 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.863047548 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.87220744 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.866644099 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.859943306 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.863197786 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860512026 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.859514018 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.859831103 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.860520855 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859324994 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.862692909 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.862271359 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.862996391 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.860142195 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.863454933 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.865775534 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.860509775 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.864898106 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.865144289 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.864011494 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.868123564 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.867659726 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.861970607 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.863064439 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.86195054 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.86485959 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.862662474 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.861498083 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.86457912 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.865721695 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.862415592 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.866877115 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.86321169 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.863610598 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.863884092 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.863342961 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.868334415 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.857486966 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.864018686 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.862948973 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860562881 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.866280654 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864478984 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.865276443 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.866335627 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865561543 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.868625969 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.863232909 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.864490025 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.860039855 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.86505389 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.86266133 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.869587144 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.873385716 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.869810155 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.871766361 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.86638774 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.872153437 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.863847779 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.865115662 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.863723971 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.863089988 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.864186203 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.863579756 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.864821736 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.870752219 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883890143 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.878267601 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865257387 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.86323999 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.873351492 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.870319323 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.873644907 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.866117731 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863396216 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.868609241 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.869544658 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.86753279 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.869278493 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.870821568 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.86437365 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.867677579 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.866032441 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.866069108 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.864091215 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.864766512 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.868419525 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.868442238 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.866860069 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.867363694 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.867406229 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.863642712 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.878389086 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87205153 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.864538181 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.864812737 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864461404 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.866381387 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.868756222 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.869592908 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.869899978 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.867955337 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.868530588 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.874822171 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.87342074 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.867053291 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.869236806 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.869503086 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.871162538 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.867436158 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.873889005 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.87707193 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.869419635 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.869695023 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.873062459 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.866935058 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.871207411 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.867252497 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871191652 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.865095946 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.871692439 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.869612996 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.867124933 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.878097506 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.873533284 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.872232436 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.868321941 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.874410664 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.867918469 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.869844933 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.867995556 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872379373 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.880203205 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.878458596 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.874365994 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.878065186 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.872481348 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.870417064 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.875156003 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.867605093 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88338363 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.883666914 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.871090145 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.867975796 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.870666145 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.87270891 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.870458563 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.871567312 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.878221072 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.873119112 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.87211393 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.873717285 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.871386708 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.869040883 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878277508 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872562858 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.875302924 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872754235 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.870279588 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.870347606 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.872291091 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.87347978 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.87085821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.875038845 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.8747455 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.869725347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.87264561 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.867889214 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.881801865 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.870689995 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.870135643 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.880856533 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872313039 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.872610482 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.873987694 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.870959846 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.869648606 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.871599144 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.870538133 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.872800997 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.86958533 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.872676779 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.883894023 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.876064257 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.880583253 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.876565182 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.88263585 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.872795065 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.872470041 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.87205906 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.876629214 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.883065733 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.874835252 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.869262595 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.880479054 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.874666606 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.874271811 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.875559701 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.872092211 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.870894151 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.873935795 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.876108708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.879276319 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.875220132 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.873176586 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.871628819 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.875427858 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.8716534 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.877610544 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.876037085 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.870924226 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.876542116 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.872378256 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.873988279 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.873097158 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.874369915 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.876589213 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.873925683 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.873834403 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.88399661 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.874737227 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.876319217 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878127747 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.87776194 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.882502836 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.876428261 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.873952937 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.876831981 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.874363261 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.877988868 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.872672956 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.875118205 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.873805955 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.87438169 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.875038966 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.885991767 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.881139244 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.879092876 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.879260046 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.874608547 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.872734731 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885276667 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.899580195 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.874956566 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.877047634 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.878751582 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.882864884 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.878774253 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882078808 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878918869 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.883568438 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.878636019 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.875396765 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.879966271 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.890367537 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875942959 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.87560628 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.876556548 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.879887547 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.875819125 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.876242606 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.876771801 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881591457 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.876228796 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.887345299 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.875584675 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879516554 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.876976752 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.874489481 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.875869165 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.87707945 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.876517053 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.880356248 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.875952424 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.879787728 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.877895052 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.880076225 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.877750629 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879875918 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.887864069 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877225913 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.878617346 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.88070431 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.877674661 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.878446172 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877471191 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.877461654 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.879875195 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.879704804 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.87363065 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87853083 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.884316163 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881630681 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.878374603 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.878508482 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.880957411 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.878864133 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.877523394 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.88105795 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.885668499 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883943628 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.887128555 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.887132283 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.879056504 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88079779 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886320518 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.887715194 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.877397916 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.878088096 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.878234505 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.880099305 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.879742877 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.878636469 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877774515 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.882265142 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.882279306 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.880018758 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.878636979 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.878238534 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.879241242 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.881469275 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.883065262 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.884620867 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.878618758 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.881533934 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.878049436 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.881001889 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.881329838 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.883406583 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.879545527 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.882106219 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.881390563 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.880866099 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.885076326 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.879080818 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.881269917 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.881605579 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.88115608 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.882386112 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.881339671 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.882751993 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.881316571 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.88240778 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.891398121 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.882623086 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.883375036 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.879669563 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.886735017 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.880635664 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.883529881 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881465547 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.88413793 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.888275968 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.881424075 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.883277404 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.883940369 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.881825752 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.890623145 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.882480305 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.886505058 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.882248061 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.880284799 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.882948538 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.886823747 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.893044566 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.886780991 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.884033788 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.889677051 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.886552484 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.884662801 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.88244464 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.883996358 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.885037929 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.883512936 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.885308431 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883370822 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.877975951 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.876676158 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.875195496 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.879382709 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.880402402 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.876722983 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.872923929 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.879976614 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.883997773 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.885371665 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.877088529 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.87771481 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.874364389 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.88146676 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.888448334 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.875695542 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.880727189 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.875858508 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.876026542 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.879975413 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.885234563 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885901265 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.878720121 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.879140087 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.882606319 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.893896599 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.882536773 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886574725 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.911025677 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.880306797 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.87880974 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876095599 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.87991489 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.874865442 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.878256439 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.876648883 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.884553176 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.882058844 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.878301004 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.886233739 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.877904453 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.876186785 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.878375372 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.881939915 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.881309399 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.875078879 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.885378342 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.877112192 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.876951576 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.879843086 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.878950589 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.877587093 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.875982503 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.877606009 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.879967925 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.874792565 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.877887342 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.890065811 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.878487148 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.877366136 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890691076 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.892063951 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.878298991 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.880995547 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.878317444 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.883984206 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.884036355 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.88165312 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880762766 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.892316826 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.882665924 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.888280458 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.876860216 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.880316961 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881968336 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.877454318 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882620797 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.89004579 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.893033742 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.880748421 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.878975031 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.88374967 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.876125748 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.886815815 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.888407917 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883900674 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.88054722 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879284109 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.879813719 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.877943474 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.880300911 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.883054338 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.887681759 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.879015307 seconds)
  done (took 1117.547421453 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.881668011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883838718 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.882935195 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.880426929 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879753463 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883308159 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881531063 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879494339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.882772931 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.879075836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.883573854 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880536653 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878818943 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.880495203 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882196339 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882302814 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880175746 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.879748885 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.88109183 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882783653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.878578198 seconds)
  done (took 41.314231347 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.881026193 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.880704066 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.882678645 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.882201665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.880645747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.880215822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.880439058 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880867013 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882482627 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883013161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.883615383 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881931548 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.883171446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.883971215 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880720366 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880681912 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.883069654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8810282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.882372042 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.880608969 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8852057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.884804418 seconds)
  done (took 43.216491466 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.88348753 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.881360082 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.884782453 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.880448767 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.882939318 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.883359254 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.882633038 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.884131918 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.883111578 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.884199965 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.890970517 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.892598535 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.887044968 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.885851463 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.884275213 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.883707077 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.033023521 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.881075822 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.882893862 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.881358951 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.88352756 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.889311672 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.881840608 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.882427803 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.8861935 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.884718749 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.880265789 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.88171657 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.885618058 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.88414747 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.887266758 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.882483581 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.885617466 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.886510801 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.882997065 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.883281136 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.887230247 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.884328205 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.883680808 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.884617311 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895351946 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.906175236 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.886328556 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.884104148 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.895444892 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.883163756 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.884835675 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.890418721 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.89587877 seconds)
  done (took 94.358653164 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885505412 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.88335501 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.884168853 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883747505 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.883515273 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.883752467 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.88621759 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.886690193 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.882904021 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.882825097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.883616915 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.884904481 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884792126 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.88693031 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.881261562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885560842 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.885497145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.883206574 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.88493178 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.888333307 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.883377011 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.884855365 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.885044433 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.88398345 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.886363587 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884784043 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887702655 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.885146215 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.884718786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.885682271 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.888390589 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.883846991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.887941188 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.886912529 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887297575 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.885920317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.886965199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.885437179 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.890098933 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.884746066 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.888417086 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.884845528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.888422458 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.887877624 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887576309 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.883939458 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885339723 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.888830215 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.888775851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.885425587 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.886426963 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.885777898 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.887104724 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.887257409 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.889220123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.889119036 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885865312 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.889076604 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.888681218 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.885638364 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.888977386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.888249701 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.886552293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.886783465 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.88598904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.890240344 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.888850436 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885931979 seconds)
  done (took 130.070815333 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888331818 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.892263801 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887122354 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889512302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887982892 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.887705659 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889596595 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.887402619 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.887878257 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.887591539 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.887354684 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887534969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.886403945 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.888530519 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.889890403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889648547 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.88921044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.889979788 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.890366466 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887957248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.889631 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887617576 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.889100373 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.890083581 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.889720549 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.8895614 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.88985994 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889924253 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890051705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.888597925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891611565 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.891444053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.889787283 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.890215917 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.891429578 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.891677081 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.889082942 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890033892 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.890397319 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.892975272 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.889249597 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888983791 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.889872436 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.892413969 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.889339204 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.893129714 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889587501 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.889946661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.890998345 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.893404477 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.889917591 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888867627 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891306192 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.890055751 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.891266505 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.888977246 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890059646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.890879597 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893702876 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.891986035 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89164577 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.890123131 seconds)
  done (took 118.992608403 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.892401351 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.891060756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.896373705 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.890904192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.893143633 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.894477179 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.893541603 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.893743438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.892114632 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.891707992 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891883003 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893849369 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.893458665 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891311032 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.893235066 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894735454 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.891403474 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.895403752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895076867 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.894340007 seconds)
  done (took 39.686429991 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.893267685 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.894640078 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.891502955 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.892651332 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.894334998 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892117166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.891269672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891500326 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.893347568 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893102544 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.892509649 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.892092308 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893269359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.892339225 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.893930301 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.891148234 seconds)
  done (took 32.10448297 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.895000349 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.895327942 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.894284698 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.892911558 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.893821461 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.889346074 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.891201765 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.893014754 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.893545057 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.893445974 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.893820422 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.892898026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.89561205 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.896905839 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.895931236 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.89657594 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.897567132 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.892378365 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.894495093 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.896532883 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.893781914 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.891466834 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.900920162 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.89650097 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.89216203 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.899180266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.896004395 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.895233355 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.895575073 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.897070417 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.893184905 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.894699788 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.895258157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.896577993 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.898462392 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.89579012 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.897059308 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.896692719 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.896236707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.894616193 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.895793653 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.899312559 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.898229964 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.894765859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.895808112 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.89625184 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.893721759 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.897653629 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.89894682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.897037155 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.894844846 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.897889006 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.893756302 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.898202088 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.895915058 seconds)
  done (took 106.074882639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895238182 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895066101 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.895522278 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896805285 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.896108447 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.899543872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.894867573 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.896557984 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.898633299 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.898808747 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.899250335 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.89647638 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.898549349 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.897128822 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.896206632 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896642025 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.901693041 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.897188189 seconds)
  done (took 35.978424788 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.898558832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.899101657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.89443266 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.897061745 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.896551396 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.895656977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.898389448 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.901165947 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.89755057 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.901454247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898326824 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.898913541 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.898646035 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.898712298 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.897461446 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.898674206 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.899052609 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897359903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.898079588 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.89905247 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.896075743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.89881296 seconds)
  done (took 43.586995711 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.897188158 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.895556856 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.912953175 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.919560883 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.918780906 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.93636787 seconds)
  done (took 13.305373443 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896986211 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898352827 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.897241488 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89827016 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896881043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898950534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89648723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896166006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897826358 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897786309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898600571 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896748831 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897180065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89976032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897809354 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898787564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897465391 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90065005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900732432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898266953 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899938617 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899722608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89800852 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899009977 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898179689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897836426 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900211763 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902262894 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896604681 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901138278 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902219154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899037662 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90109787 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901977007 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900148753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901658256 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903757744 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898962586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900248673 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903079646 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901182677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899584528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901325798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902473067 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899686984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901488893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903809214 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901112896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901269983 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900875254 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905318448 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900539205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900695264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90214597 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902244052 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901092819 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900421785 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899307009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902909195 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900314027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898098985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901421578 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901916091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901377984 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904594951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901046004 seconds)
  done (took 127.234238761 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900180736 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.901224237 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902545915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904074182 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900235743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901818622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904052677 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905101316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903193305 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90342587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903363715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902196837 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903251878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901961844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902720802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903115267 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907264808 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904602628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901081362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905231496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908851015 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905192682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906681985 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903795705 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903447693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90539297 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902738328 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904029569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.9039255 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905595496 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905682776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906136201 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907195973 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.903182449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905726861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905807022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904867249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905157485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906309547 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907933234 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906461402 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90499228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9058835 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906619116 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90797821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907032077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908600584 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904565441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905206073 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907037274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903590648 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907936186 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901709961 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906572692 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902603008 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905683055 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905987127 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908506506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905560039 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902545855 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907642658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904941053 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906491088 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90739102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90354441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905148609 seconds)
  done (took 127.553152117 seconds)
done (took 2601.709609671 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.933866245 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.015728231 seconds)
  done (took 15.781619916 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.071965867 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.023279971 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.909221006 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.929150439 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.907887264 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.933932836 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.932039547 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.909503656 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.912644454 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.91068898 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.906528057 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.093410709 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.917838412 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.911056246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.908406335 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.005884723 seconds)
  done (took 53.02467137 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.917172676 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.914403923 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.927296367 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.915277688 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.919077884 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.926329435 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.947182635 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.920987167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.948358982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.92651103 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.986801549 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.928244586 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.911327621 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.965629391 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.925287543 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.928738654 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.016539818 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.992872703 seconds)
  done (took 36.754931129 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.995965394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.92117357 seconds)
  done (took 10.765200292 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.919387742 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.924417142 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.92123936 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.916108372 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.923102627 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.937885106 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.932722677 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.921433625 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.933957134 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.929797211 seconds)
  done (took 71.102485199 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.914523899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.914202666 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.916137021 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.911707336 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.908654917 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.912061875 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.908644519 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.910324233 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.595477833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.947602139 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.92060542 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.922401287 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.910542851 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.914029393 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.909997308 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.938798526 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.053365239 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.908724608 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.907115619 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.918078621 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.919065801 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.970662878 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.934490814 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.920370172 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.951363287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.602337667 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.928661671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.92505331 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.028704238 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.91718359 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.917774217 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.128263715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.925579342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.38291124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.189115139 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.921682139 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.926772074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.927344737 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.916660526 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.03520835 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.921069399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.923618036 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.914543455 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.161062866 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.016307303 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.964973884 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.257348078 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.918735207 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.918337763 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.952230259 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.92077435 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.919213116 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.935439186 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.440395521 seconds)
  done (took 135.518831868 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.914059994 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.256192186 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.07868209 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.915067893 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194850935 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116935969 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.914608222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956850692 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.913035466 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.134440691 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.162260973 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.014989029 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911807067 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.910446124 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.900722206 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.901890065 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.057774215 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.974099452 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.903544319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.90503658 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.932516516 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149048968 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028971931 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907130168 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.930772654 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.114429445 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.024418687 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.007622006 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.703520165 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.902477807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.965835405 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.901942542 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.906706831 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899028951 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.056026074 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.994287402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983770099 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.907438125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.901100574 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.90071901 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.559631187 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099987992 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.994977576 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.03331943 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.153119233 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101782836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.679560011 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.900190512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.629072457 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.061915416 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.12644041 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.129344833 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.020593251 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.900706263 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.162374184 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.899059911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89818866 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.14741334 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121786081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.997672374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.904025728 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.896958099 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.898543558 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.136926686 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.900315742 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.9915636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902837874 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.897423442 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.99536088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.000235377 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.130025592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109368022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.929870952 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.23902934 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.399004099 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.147524107 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.965236048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.148664655 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.902814723 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.897360994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976857345 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.743154811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.151661009 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.143164313 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.144377341 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933494649 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.616230057 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.900150027 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.125828029 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.119890982 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.169537248 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.145905218 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.131870707 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.229897554 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.898753935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.900902125 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.119187155 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022715199 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.903444096 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.248568933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131341253 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.456684619 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.926594968 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.206466713 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03215726 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.9019789 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.529531595 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.901365906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.129009665 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.939041766 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.900745118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.900500004 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.116527031 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.886793927 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.90491879 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.777728109 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.961524312 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.902688123 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.132900122 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.903538169 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168123458 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.904156569 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136304344 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.090978088 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.930937668 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.072635786 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.1481968 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.902853386 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147087241 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.144333628 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016064678 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170541296 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.79061637 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.905002669 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.189515844 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.901519887 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.901086648 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.07084671 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.903683875 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.043780452 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.901699362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193511209 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92125038 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134094094 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.90152438 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.156274774 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.932623435 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953657502 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.901750907 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026859826 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.903913224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.732165831 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.05671966 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905388627 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.901839092 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.448542628 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.903326545 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055900276 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.128891912 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923592732 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.974591588 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.565821003 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.903115667 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983953311 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.923355287 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.304423316 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.901238976 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.153791063 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.904370459 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.90325219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.90327519 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.140637455 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.139022556 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.907911117 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.903970579 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.810290009 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.905588298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.904734532 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.086027271 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.250195226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.902909153 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10492085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.904892345 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027418648 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.90721951 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.975031024 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.235268487 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.904479218 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.903995328 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.906416801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.906389006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.904666686 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.111468711 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.929299954 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.437480337 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040170405 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.180427655 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.214010858 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.146022442 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.944704102 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.907053075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.155989182 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.909234038 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.964832013 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.905071212 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.925812973 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139164203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912663844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.165781498 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.176424155 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.923797525 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95288297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.908514497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905500699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.904229602 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.051322414 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992775096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.908201587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.907113109 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020412125 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025429714 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.116278965 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.908111328 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.971803291 seconds)
  done (took 911.427622348 seconds)
done (took 1236.210937899 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.905004758 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.906709376 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.90891063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.905868752 seconds)
  done (took 29.464100843 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.91190211 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.91010413 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.908914999 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.909802593 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.909149915 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.907438102 seconds)
  done (took 13.29736103 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.984597458 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.908156643 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.908624744 seconds)
  done (took 21.638277816 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.983708038 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.31754469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.050511403 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.351258328 seconds)
  done (took 10.54229395 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.912963878 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.911732319 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.911826674 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.910134054 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.913154039 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.912731111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.911193501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.911384739 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.913541676 seconds)
  done (took 19.052290913 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.574457048 seconds)
done (took 100.40997281 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.109095863 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.021634339 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.9284546 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.223463864 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.994754188 seconds)
    (6/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.672236648 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.2144597 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.022677983 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.049311473 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.943727276 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.713709468 seconds)
    (12/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.323702884 seconds)
    (13/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.253226715 seconds)
    (14/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.037721874 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.928345389 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.135792844 seconds)
    (17/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.441179796 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.158504104 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.088728487 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.887900142 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.954699126 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.918346688 seconds)
    (23/309) benchmarking ("sort", BigInt, false)...
    done (took 8.650739148 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.010437692 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.06917365 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.898496421 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.829791592 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.928236046 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.01872885 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.092453221 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.925807354 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.751555666 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.020703653 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.129871523 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.044674582 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.100402187 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.965332688 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.68526249 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.960454112 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.069767431 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.143560196 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.136962471 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.068633866 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.957240655 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.954055843 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.348380573 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.143398128 seconds)
    (48/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252482241 seconds)
    (49/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.338099921 seconds)
    (50/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.006354063 seconds)
    (51/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.201678984 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.603879338 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.002377615 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.316144926 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.181014945 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.415161125 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.607938592 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.193610462 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.081815935 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.950851004 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.947725328 seconds)
    (62/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.535001694 seconds)
    (63/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.104501062 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.211039387 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.012560723 seconds)
    (66/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.293454828 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.306652591 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.213185835 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.990580875 seconds)
    (70/309) benchmarking ("sort", Float32, false)...
    done (took 5.654443776 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.027113724 seconds)
    (72/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.051576684 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.808113823 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.678247981 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.683448934 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.948088029 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.071454619 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.961670235 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.022379071 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.93345118 seconds)
    (81/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.52818168 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.598248169 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.150583545 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.562730997 seconds)
    (85/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.132257133 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.026890503 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.699249408 seconds)
    (88/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.020212764 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.920516816 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.001028197 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.001705909 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.118960597 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.189308835 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.009334811 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.814453436 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.195216748 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.007663578 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.923664744 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.214416662 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.090372081 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.918513289 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.953824543 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.068799526 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.943872225 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924908205 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.16493814 seconds)
    (107/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.554992078 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.920860215 seconds)
    (109/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.805001301 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.946226959 seconds)
    (111/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.379076535 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.986856078 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.320234566 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.229619887 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.945293322 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263914276 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.927695366 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.921423808 seconds)
    (119/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.941640137 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.017707954 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.923412199 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.790090964 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310794334 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.953322345 seconds)
    (125/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.383670556 seconds)
    (126/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.926152167 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.927118434 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.077122338 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.413335579 seconds)
    (130/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.097138693 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.175160127 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.254504194 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.176551111 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.926056716 seconds)
    (135/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.013703679 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.263796509 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.104603797 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 4.813654256 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.943509655 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.183874557 seconds)
    (141/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.401684038 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.912690564 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.989369311 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.009727796 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.614113239 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.136459875 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.070350091 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.118565777 seconds)
    (149/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.699527938 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.257585994 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.962659705 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.935125212 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.933088345 seconds)
    (154/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.012320695 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.498453793 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.942092161 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.842590657 seconds)
    (158/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.962840113 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.062153709 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.926218388 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.954011009 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.716768606 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.081171251 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.253720852 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.109906493 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.932382293 seconds)
    (167/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.210639186 seconds)
    (168/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.320169768 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.243606739 seconds)
    (170/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.427768605 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.116549355 seconds)
    (172/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.418032796 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.987189911 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.159411666 seconds)
    (175/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.840516001 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.357642869 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.005004194 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.03184204 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.921184884 seconds)
    (180/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.128905207 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.056644361 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.029592052 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.081799957 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.931002734 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.780858231 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.252816239 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.93525073 seconds)
    (188/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.088568428 seconds)
    (189/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.636844864 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.199925096 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.934455315 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.201873634 seconds)
    (193/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.041851198 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.324732263 seconds)
    (195/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.133731508 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.936226415 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.166128619 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.006702836 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.27571948 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.244306566 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.217032547 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.986493168 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.860274647 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.243655312 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.031487409 seconds)
    (206/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.055278603 seconds)
    (207/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.185640515 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.243673453 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.158276292 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.063838964 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133117797 seconds)
    (212/309) benchmarking ("sort", Float64, false)...
    done (took 5.703492878 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.165329255 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.230491651 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.928897127 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.324900266 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.323233217 seconds)
    (218/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.849072505 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.176265376 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.609553464 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.241446281 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.015505249 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.920263686 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.677252675 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.268182986 seconds)
    (226/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.120821798 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.918832508 seconds)
    (228/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.027869525 seconds)
    (229/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.43902985 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.041951791 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.057642296 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.932040971 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.939897051 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.59109051 seconds)
    (235/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.018941846 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.102431022 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917925247 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.927675189 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.932178906 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.751473296 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.428502164 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.184681618 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.025254117 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.838870877 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.420145913 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.236580047 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.944860634 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.063554875 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.930377369 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.361752227 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.923901461 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.180696364 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.927374387 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 4.200694505 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.767300213 seconds)
    (256/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.707374343 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.188569269 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.936999516 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.041220226 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.074561683 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.899873131 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.349380313 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.931841234 seconds)
    (264/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.025342197 seconds)
    (265/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.61895809 seconds)
    (266/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.925129254 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.304009541 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.257823826 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.065989551 seconds)
    (270/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.060421209 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.059278426 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.92818683 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.054243701 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.930031735 seconds)
    (275/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.969467119 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.944944295 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.242809475 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.934072156 seconds)
    (279/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.413570979 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.710368967 seconds)
    (281/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.071213721 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.978358177 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.183748834 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.176658259 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.112291978 seconds)
    (286/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.933816641 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.951192503 seconds)
    (288/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.418957851 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.305477754 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.680178102 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.430215436 seconds)
    (292/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.034910443 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.514700334 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.192346736 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.929240726 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.946881392 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.947483292 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.950088967 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.950511418 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.958373781 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.99929071 seconds)
    (302/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.315715483 seconds)
    (303/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.078429071 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.331687973 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.925435214 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.548157012 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.083048275 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.140956231 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.929152939 seconds)
  done (took 1030.677609057 seconds)
done (took 1032.607084471 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.956272547 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951115632 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.931120334 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.955917264 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.046962422 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.976781422 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.946261561 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.937770095 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.983960332 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.983344099 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.930662234 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.974867588 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.934848018 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.934538362 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.933458076 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.949245558 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.240252993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.962189757 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.951819735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.94634933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.950404574 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.931241931 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.984576007 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.97548626 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.938343945 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.939548151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.936177353 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.9553048 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.048400206 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.937062426 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.939702982 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.946301513 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.240927372 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.959630025 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.933932336 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.955079581 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.94787817 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.94742072 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.939506507 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.967459404 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.38464938 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.938020025 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.936616017 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.936150477 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.935377855 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.940238637 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.934806773 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.944415544 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949996415 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951595856 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.38044805 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.955010319 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.938322531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.934902726 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.948750678 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.937437644 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.93967357 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951466681 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.954531373 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94848688 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.229862379 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.966787501 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.936795914 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.95134532 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.941612065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.413547324 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.934567694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.939311114 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.382326467 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.943662731 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.410508036 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.946061016 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.935675559 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.946304373 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.966435753 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.235280249 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.95614649 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.931318142 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.939789575 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.932925803 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.94138722 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.946023012 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.934830825 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.930387889 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.949025898 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.976380726 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.941582451 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.929208042 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.941231509 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.947171699 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.939598589 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.940388147 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.931772258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.92603711 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.940185407 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.932914299 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.92955923 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.930291251 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.932234273 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.941763224 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.37403304 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947785703 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.924897749 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.924765972 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.927619248 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.942407481 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.374035344 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.932499552 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.951667661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.978052211 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.928979143 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.219671583 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.958301887 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.944283923 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.940240707 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.931494857 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.927436619 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.218818941 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.399818333 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.948265587 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.928413245 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.92662594 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94546591 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.929265261 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.926594665 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.236385987 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.957071567 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.946019788 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.051775278 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.942811341 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.962833615 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.925079655 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.931615852 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.972379549 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945394041 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.962799006 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.929195341 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943107615 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.944509422 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.924299337 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.942804252 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.938719209 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.924040003 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.934859824 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.923086489 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.973952876 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938425793 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938355153 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.944696258 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.044931932 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.926355605 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.213001097 seconds)
done (took 303.656350924 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.996848598 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.919722433 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.031712125 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.916266182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.002763904 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.981771981 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.912571401 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.913375603 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.913467701 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.418735782 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.910245015 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.917712522 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.91168722 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.907682856 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.976310372 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.906601008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.909082243 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.355316687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.907239435 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.986138942 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.906749481 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.906473137 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.907421812 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.408447196 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.905610605 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.906503849 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.982224421 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.902760195 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.348045814 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.901691775 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.899973907 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.354379937 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.976640701 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.923971467 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.906846823 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.901156873 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.984978644 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.907334123 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.963771315 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.96233071 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.014424005 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929383269 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.897671637 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.895190267 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.89681761 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.897218899 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.896064436 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.929225016 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.895415341 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.903934028 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.343214254 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.902650199 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.905861643 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.898988133 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.897548566 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.925883837 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.897512076 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.898508463 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.976604208 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.899020412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.964342737 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.395849539 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.40906731 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.897304064 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.896989067 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.896846505 seconds)
  done (took 187.562786979 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.962855021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.972886144 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.963209507 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.901090803 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.948840869 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.966263853 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.902091554 seconds)
  done (took 15.444555902 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.905975419 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.899658714 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948013791 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.94764101 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.89845115 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.079755991 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.911359479 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.905470217 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.927198039 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.899294892 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.564864366 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.949459129 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.90751324 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.900178201 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.912204072 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.957282609 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.902923305 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.900308592 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.017405321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.049491669 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906310729 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.908462731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.928827376 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.913250975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.900773587 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.901123435 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.900638475 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.908776136 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904696545 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.9022053 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902856038 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.953956326 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.901829883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.902083902 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901326018 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.902863234 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.900466942 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901801994 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.90174839 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.902294169 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.902794455 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.902855167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.902706773 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.902941607 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.902928796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.925416129 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.9027478 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.901423462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.901934533 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.901775666 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928819316 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90280622 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.901593213 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.907660609 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.944487132 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907884785 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.900810029 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.903239103 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901455573 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.901328702 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902515516 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.051766862 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.952085392 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901985514 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.952313946 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.056884077 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.901981084 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.902880872 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.904660118 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.992267682 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.906403729 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.953367588 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.902414763 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.01793385 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.904468459 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.081643953 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.927281499 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906835676 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.907623777 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.904377787 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.911320694 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.904795588 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.906336026 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.910184667 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.90965715 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902713183 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.903626928 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.905714847 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.911411367 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.904457619 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.952611141 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.90695447 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.902745978 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.044487695 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.905495315 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.019459973 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.931154065 seconds)
  done (took 209.174462101 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.911059972 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.910354652 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.904749468 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.919902406 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.903873924 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.904085114 seconds)
  done (took 13.286890887 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.905775173 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.908419741 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.903744265 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.90389576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.904957536 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.904378449 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.903509697 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.906301394 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.909792965 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.903516022 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.906565954 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.906634595 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.905183445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.905376379 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.905612261 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.904332267 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.904562857 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.90412242 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.903325329 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904723129 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.111740452 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.904734872 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.90500466 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.909071566 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.909024889 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.902790685 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.917161014 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.90582505 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.90319631 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.913119706 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.907889499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904548437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.908792959 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.911859943 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.90965935 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.90792593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908469585 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.906451433 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905571717 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.905972971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906475103 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.906198266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.905947608 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.90495847 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.907024461 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.91256571 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.911196034 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.918021588 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.90774339 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.90717099 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.907399221 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.905005432 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.905634157 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.90712559 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.912717948 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912678562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.911697641 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907220941 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.904204312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.909622379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.910668188 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.906842343 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907268488 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.911974793 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.914488039 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.908757359 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.910558893 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912847105 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907548164 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.907858469 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.908960857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.907488006 seconds)
  done (took 140.384584696 seconds)
done (took 567.718306433 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.838475613 seconds)
  done (took 9.67523418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.938529945 seconds)
  done (took 8.780577786 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.639442401 seconds)
  done (took 10.474470211 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.908957153 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.966182875 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.897991089 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.898848122 seconds)
  done (took 29.517760582 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.274754311 seconds)
  done (took 9.098129599 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.902917699 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.90413128 seconds)
  done (took 15.705701462 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.984604565 seconds)
  done (took 8.803291212 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.988647374 seconds)
  done (took 8.817826027 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.898825711 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.888707078 seconds)
  done (took 15.621564006 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.879542442 seconds)
  done (took 8.689605856 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.306452302 seconds)
  done (took 10.204723841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.894593664 seconds)
  done (took 8.753074618 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912531223 seconds)
  done (took 8.719584774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.942216048 seconds)
  done (took 8.744797807 seconds)
done (took 163.443303774 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.875895998 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.861198665 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.862121102 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.861688744 seconds)
  done (took 29.258799265 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.901396344 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.902228048 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.909989784 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.902433929 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.892364903 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.891608983 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.902706162 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.900451823 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893412138 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.8988421 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.901512907 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.898841428 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.902638951 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.909301982 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.910302125 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.89796843 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.900989472 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.903390783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.894011733 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.911063847 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.898380257 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.902555564 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.868373875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.866684651 seconds)
  done (took 47.360120892 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.057477448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.938995689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.019340165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.920543586 seconds)
  done (took 9.732153748 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.86737748 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.931570157 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.920580596 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.915974526 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.917356406 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.970295991 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.920722075 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.021473492 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.996435862 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.993849675 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.874063144 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.88846505 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.893087382 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.915143247 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.97197279 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.86625978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.868515494 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.983510179 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.935295482 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.048529385 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.8679181 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.921205941 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.919429272 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.920458888 seconds)
  done (took 48.126520816 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.864097968 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.871678414 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.8714415 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.864204747 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.868192912 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.861648592 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.869743412 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864386446 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.883294827 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.864474346 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.858135737 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.859691588 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.866181406 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.860680049 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.859019888 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.872889192 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.872597898 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.857677161 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.863348825 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.865614416 seconds)
  done (took 39.115045307 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.856361389 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.702403392 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202548436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.109096671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.858259858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.856975053 seconds)
  done (took 31.374173835 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.870453568 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.863244874 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.859549967 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.915160999 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998390677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.865301971 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.858449593 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.86941453 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.905135714 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92181805 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.878929129 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.887819973 seconds)
  done (took 24.485733588 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.85875186 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.85664541 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853972812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.86775407 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.867548984 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.859518787 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.861281543 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.850512513 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.861030815 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.865802382 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.856893072 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861516079 seconds)
  done (took 44.114593535 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554531341 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919151364 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846622944 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.798116404 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300499911 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398145226 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.738030842 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.589096031 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.316743169 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.772937844 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052104371 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.847846492 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932138165 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.850185056 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12089258 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.287838307 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049185846 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093235917 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.630805638 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.884340232 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.052358151 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066161442 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.138341415 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849343057 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850266956 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.855360121 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.514523508 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.647447836 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885507523 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.29907378 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099083215 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.798713756 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905149294 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.852648107 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.86159463 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852469519 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854980903 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120912226 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.855698693 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098682749 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923654052 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099469742 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855552739 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271826176 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.553884971 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.225457899 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971427788 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851510054 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85381451 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851441269 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777068098 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933372543 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.85336046 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855421134 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.550925506 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852957649 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925574166 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.852763575 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055024904 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.657475203 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541433993 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.8513 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854488449 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426117241 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982241402 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.966295791 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609898519 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238617422 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274612007 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.949200661 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.854429878 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853914905 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.113549836 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823288755 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.657416364 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891052787 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989209502 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.867000285 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493742578 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146446024 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.359903507 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.417112127 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771128109 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125099392 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.681612998 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.846248746 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068595065 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.682930755 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779142901 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067383006 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883854861 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857326909 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.116758784 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605298382 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964472948 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.866619922 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350058671 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870625814 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858340099 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855759026 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068553462 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37405042 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889698481 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976135649 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86778229 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938485347 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779847594 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.864894129 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.857841287 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.759174383 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861394878 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854889635 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.900338981 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.665102582 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902685361 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.809385399 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858262608 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997403275 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895800763 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.803250827 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110135993 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.163275233 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.53636667 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881418301 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.987470653 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.300428463 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08931964 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859269304 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071598461 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389435961 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.335106408 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909155787 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14949883 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917458074 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150989808 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289781877 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931538772 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677205475 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.658962869 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.074166611 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872129016 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.857807777 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859821053 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864005946 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792329044 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.506708436 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.301270051 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.028675281 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071349869 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.327647834 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.846787637 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857409318 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162601458 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994113458 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.864374029 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519260611 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.400995565 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.710610326 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.884220627 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.124747986 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.170019036 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.827995055 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872264297 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935419822 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87463521 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.873448261 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.292456723 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227443617 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.859566719 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.86047109 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.8094207 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858557576 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.860954897 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392945369 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.826914611 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859765219 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.870173837 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.739291188 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933033825 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863113861 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.862275428 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400763731 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365872745 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.864186755 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.529516226 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.866417254 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050511243 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139285494 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.301926011 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995088993 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.559962144 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.33868949 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97853002 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.559790004 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787614739 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860441311 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.799818168 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863066814 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860541576 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865693831 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.049090572 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140269968 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16598322 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.336071899 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927316157 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063337641 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.61063055 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816012565 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.864178678 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866752129 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.864077353 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862168918 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.375931247 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.15887677 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014116329 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891842466 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.86643305 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991104481 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.874724442 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.789347277 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.862542582 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865177061 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418861801 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896381236 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.815862668 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.248154842 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.788755265 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988113512 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908301417 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.873675768 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869993936 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.611839509 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.91591142 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788722467 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443361255 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904349289 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.668271301 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352600489 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.448725624 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165870686 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186267231 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.201417899 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.934691147 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077610642 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.946539588 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921050276 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957095741 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801861467 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.788287701 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.527619787 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201517999 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131500297 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871575264 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080058338 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641462022 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093605715 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892724761 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.670769175 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179532216 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84286296 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880264265 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.316896631 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975343207 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946825779 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867021097 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.813871755 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201418017 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902607819 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.56594753 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877888255 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.217444428 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415489512 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.939068954 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.309388464 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086972143 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865933111 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222184377 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.185730601 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.906814152 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872027783 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.863629521 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.084167852 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453651319 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.726383512 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869881464 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.143886029 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170941203 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.776619221 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.868579058 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.148890475 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131186508 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870115288 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.29913369 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237876064 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.968632833 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926375831 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096771731 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.680847516 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183979978 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.433231982 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.361436027 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870412766 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795650629 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.570347064 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.072047617 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870522332 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835786404 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079530773 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101016703 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555225522 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08822064 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112398075 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.880921268 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144081035 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94562482 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.966621676 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.267905531 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.315047306 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.114669696 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095600466 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412181083 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085104711 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319762831 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.08868072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871498905 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077098458 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087734828 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.085320963 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.325463106 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048792321 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.581075188 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.876419986 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.079454035 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171226229 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934928862 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.318937934 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.052077122 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.956517584 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877723607 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935409402 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877142349 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87940195 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.314051873 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.405951119 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.883075155 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950161082 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.020053375 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.386085687 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.872092744 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.878426158 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147717616 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231447299 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212818039 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858422526 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870771263 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877194014 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001198452 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.800411576 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876929374 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144470544 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.87845921 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407306704 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025167345 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888450674 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.271634494 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266573022 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668806063 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.840502757 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879303184 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090848777 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176733743 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.173440856 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991065071 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144702733 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210315102 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.905551826 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.320663603 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122616993 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877369539 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.753119433 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877054334 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003499024 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.069564899 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152234947 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.384843218 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624744769 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140734207 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.742614027 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877269676 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.677226477 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145965181 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.148787048 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928172301 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938268969 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879355836 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449582917 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.599434499 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006081828 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.740172882 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799892996 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.880854908 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.203863499 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.116194855 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.585663264 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879329233 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156678005 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181471006 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150581329 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.928436343 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.757131708 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093341581 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878939905 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.889799979 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125860037 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098819292 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12295506 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880074479 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87785635 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.683019418 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802863444 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.875051501 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92894419 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103450273 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895318349 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.391799928 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.577217101 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155780022 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922822955 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880404541 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152127822 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.410243898 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442391999 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881137072 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092877742 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.906174959 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172273985 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.880105498 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435525987 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18551933 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.878650934 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.537191164 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.127961779 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147611822 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80828501 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885057698 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093459804 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.731511225 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878196155 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891493396 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42891978 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114655275 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.615203174 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435988254 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.879110831 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.882031955 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432500803 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914707372 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438706264 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908965879 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896491003 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396704513 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.571513931 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.163426634 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124258091 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.529464164 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.503127002 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.880131148 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.879559167 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880736139 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798214472 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229038486 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.064315932 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161380013 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909288171 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444701356 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917694662 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.331717509 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00303383 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151412671 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92095077 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402339512 seconds)
  done (took 1663.524597658 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895793103 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.914754647 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.925169499 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.891306706 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.903020154 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895110782 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957777051 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913177308 seconds)
  done (took 57.106965099 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.886164445 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.897723073 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.88877167 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.885954201 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897437927 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.892471513 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.04397705 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.895435569 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.885982534 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.888634191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.885302909 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.883103633 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164708563 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903860537 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.902823604 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.888478318 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.886123844 seconds)
  done (took 74.400195661 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.887636703 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.131384534 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.948129338 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.888430014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.834425897 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.896140095 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.854506172 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.933289326 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.890527195 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.118316553 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.186479599 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.910836797 seconds)
  done (took 90.296538105 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.891414204 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.88704947 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.887866868 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.88736343 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.887054178 seconds)
  done (took 11.261557107 seconds)
done (took 2172.026998821 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.116350832 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.945296491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.984950175 seconds)
  done (took 5.745699595 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.03326208 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.081193521 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.193826048 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.953215219 seconds)
  done (took 10.084312072 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.191193188 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.269974623 seconds)
  done (took 6.277298 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.24954294 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.895360522 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.307213536 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.888772939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.886987799 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.887339699 seconds)
  done (took 22.485774664 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.889509068 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.889882647 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.887808136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.888545902 seconds)
  done (took 9.373489701 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.887675566 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.601502338 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.888467386 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.897493861 seconds)
  done (took 21.092206897 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.03929224 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.005677752 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.085497692 seconds)
  done (took 7.950646916 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.028766546 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.722857985 seconds)
  done (took 6.567660454 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.04152707 seconds)
  done (took 3.859036231 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.916061058 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.157265498 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.397531956 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.802582716 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.574170181 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.01447228 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.258100429 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.14629297 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.298013903 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35141231 seconds)
  done (took 25.73311125 seconds)
done (took 134.556798666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.399647362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.918105963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.094095609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.266470488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.124261055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.093903424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101458205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.267732948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.944100628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.922259742 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.255688298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.116608936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.050487035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.918294021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.052593015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.919077508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.118352669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.282042498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.953584772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.170154195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.105959865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.919019391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120814487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.928435701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.204694641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.043340962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.45435156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.920090072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.085274113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.462802904 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.042954031 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.310112802 seconds)
  done (took 169.388072399 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893223857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.890542226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.89162881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892099287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.465674886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890947752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.891803995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888638073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.3736968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.362678319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.892117418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.455404702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.89178737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890557343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.892201455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.89203571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.538842651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.892285939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890831373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.892171343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890360912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.291089753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.892011943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.30636247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.528773463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.893339338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.891883181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891044916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893401659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89233762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.893466917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.89288614 seconds)
  done (took 210.552668186 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893283179 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892301754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894709651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892290698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.89424804 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892318994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893006425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892319607 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.762478256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.746938103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.898481408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.899888225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.897415834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893718668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.900920925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893935177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.900151235 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.898133522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897726453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902938179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89690086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.578888407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.89220487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.600763466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.899441985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903214848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.896892491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.89321079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893319834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.892928676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.894099347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896967716 seconds)
  done (took 221.604150036 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.134396732 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.898863902 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.898733144 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.889659414 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898830921 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.897684152 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.871552424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.143777448 seconds)
  done (took 19.460722655 seconds)
done (took 622.84164523 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.267176303 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.108058402 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.074504238 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92077299 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.177191688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.965569503 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.91766887 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.984447062 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.764394066 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.994915498 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.580858694 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.941610094 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.674481984 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.946955235 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.04471828 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.976252967 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.506058475 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.611821152 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.063732412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.989188891 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.100340457 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.869967858 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.998848903 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.792379381 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.598949959 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916748853 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.972563853 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.512171543 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93241955 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079462068 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.613054202 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.23044836 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.932409784 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.915410963 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.969800476 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.948916124 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.160320102 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.931568691 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.040690721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.664200323 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.990278209 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.663472221 seconds)
  done (took 104.171243588 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.912176627 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.905385037 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.904794521 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.904749078 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.914904133 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.905438146 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.908677221 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.905251061 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.905461592 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.906338399 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.908253486 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.912376634 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.904238018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.916024274 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.904235539 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.908771103 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.9070228 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.913397342 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.90433112 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.905337334 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.9076205 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.903942935 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.902921167 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.906850845 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.904392758 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.907587101 seconds)
  done (took 51.43676378 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.900479372 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.055235424 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.146269764 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.921722223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.900266005 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.903882604 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.919194378 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.903358114 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.904065256 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.904489663 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995695278 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.903583738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919318546 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.147710644 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.917195728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902294158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.903707581 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.902799896 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.064439637 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913787477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.920157626 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.90587662 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.919020388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.912975351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.904349361 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.900020123 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.905406962 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.374501325 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.906604304 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.996161316 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.973263725 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.922844908 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.314991562 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.156686419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.956021058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.910691776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.904008769 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999839148 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.90786639 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.902188046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.920374727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.904411624 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.153398106 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.421037327 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.913889072 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.90340372 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.386893271 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.006846626 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.941199153 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.914219774 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.153667864 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.918177825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.904861636 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.903125179 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.938429451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915847006 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.904402002 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.263339286 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.91434516 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.919759382 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.903596879 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.906330656 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07106332 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.908962119 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.059650256 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.909825904 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.90967077 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.904969164 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152966589 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919447325 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.439196648 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.916676823 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.903215017 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.996883262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.061163567 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.408643667 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.913685121 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072615337 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.327851642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.925447537 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.908337511 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.366875046 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.929260178 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.909462731 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.905532885 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.906649472 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.903062968 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.94736112 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.920620955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.345596058 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.427447479 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.275804035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.927398803 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.911522145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.905016077 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.260681339 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.909282674 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.904013502 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.142751732 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.446007024 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.917178429 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.91046231 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413553296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.917182818 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.923758837 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.911405059 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.15779491 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.919653912 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.948126325 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.905032315 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.913838082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.907429539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.922151055 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.910263012 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.903912442 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.405437982 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.012328628 seconds)
  done (took 236.321715533 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.904539747 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.901750077 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.902823622 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.901167605 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.903170536 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.906416956 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.902900997 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.903019135 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.904352896 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.903206505 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.903194778 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.90507225 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.904884127 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.913611336 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.946639282 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.905484276 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.50729118 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.905393259 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.905260412 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.902332887 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.548753347 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.907984045 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906774433 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.903647502 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906062421 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.907114956 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.912150413 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.944085569 seconds)
  done (took 168.504527735 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.905237809 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.020597379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.922316384 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.936284252 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.910970131 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.907977529 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.007059595 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.921447962 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.908356475 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.906355057 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.908653972 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.967850903 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.917995511 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005843665 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.934868935 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.010283685 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.009490391 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.911862161 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.909011613 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.908177273 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.937410147 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.918974622 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.972632955 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.036373187 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.932231136 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.023711257 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.930424908 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.91203075 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.913462893 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.023999598 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.927303009 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.971378867 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.943797218 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.926481702 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027062001 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.028001837 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014652185 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.015404105 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.917989607 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.911506867 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.912510432 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.911253144 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.029713137 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.931292817 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.915246443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.030068471 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.929200501 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.913952666 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.913002872 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.91216388 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.92640269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.926741562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.97610051 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.043318747 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.947723635 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.933619778 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.01451279 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.03465302 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913148352 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.012397208 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.918045047 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028288271 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.931394139 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.915531592 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.914905879 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.918151331 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.944141685 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.017473805 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.018115102 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.918811681 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.009971358 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.948349475 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.91867036 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.913825633 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.912872636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029469756 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.030230989 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.947173432 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947041197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.940570321 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.92182428 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.91398732 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.914696035 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.931176599 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.916250966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031544113 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.031144251 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.917406128 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.914452288 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.914197077 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915352807 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.939135268 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.03320321 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.950781069 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.019138872 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.98275787 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.991079625 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.928172871 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.926869381 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.916602583 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.976656808 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.928907696 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.926754279 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.203271212 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976870748 seconds)
  done (took 207.225047681 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.326367676 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.958416512 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.969574856 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.237384552 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.282574555 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.83474991 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.961505228 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.960509993 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.99311436 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.183269608 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.02256097 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.977836514 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.946725391 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.933450216 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.961941597 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.996021887 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.964506483 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.297470654 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.167206055 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.444142896 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.952206934 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.233927922 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.282429215 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.564878444 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.012317893 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.377807829 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.582768172 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.124665055 seconds)
  done (took 64.39901365 seconds)
done (took 833.884231302 seconds)
SAVING RESULT...
DONE!
