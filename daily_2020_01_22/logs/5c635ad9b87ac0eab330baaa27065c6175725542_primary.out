cset: moving following pidspec: 7279
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.390448245 seconds)
loading group "string"... done (took 0.574123605 seconds)
loading group "linalg"... done (took 7.258508751 seconds)
loading group "parallel"... done (took 0.161202084 seconds)
loading group "find"... done (took 1.146557794 seconds)
loading group "tuple"... done (took 1.760262699 seconds)
loading group "dates"... done (took 1.231559339 seconds)
loading group "micro"... done (took 0.218503473 seconds)
loading group "io"... done (took 1.018100969 seconds)
loading group "scalar"... done (took 37.653316229 seconds)
loading group "sparse"... done (took 11.879079172 seconds)
loading group "broadcast"... done (took 0.949827119 seconds)
loading group "union"... done (took 12.187400808 seconds)
loading group "simd"... done (took 4.499707094 seconds)
loading group "random"... done (took 9.072674136 seconds)
loading group "problem"... done (took 1.827320447 seconds)
loading group "array"... done (took 20.874974319 seconds)
loading group "misc"... done (took 1.683818723 seconds)
loading group "sort"... done (took 3.337258742 seconds)
loading group "collection"... done (took 17.381851948 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52463201 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126722038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119922647 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121174114 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149615517 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11439503 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127195611 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087173874 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.833931949 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150494055 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119357414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43250573 seconds)
done (took 5.212997385 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176770512 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084472495 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083676699 seconds)
  done (took 1.296231242 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066580767 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123861923 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067982099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068112408 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068612776 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067283049 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067492845 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067875094 seconds)
  done (took 1.666554125 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074205884 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06989789 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067216792 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069422885 seconds)
  done (took 1.411788005 seconds)
done (took 5.757393559 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789077165 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204425009 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189131257 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41689991 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13159176 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160682561 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641267196 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330314239 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194547889 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081856595 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110763681 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.332008851 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11032428 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645840914 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077961061 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092006494 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.1400096 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43638281 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068800829 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083233908 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090062892 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129764245 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08989955 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0759182 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146422969 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069368394 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138219494 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081800936 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068362484 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215894374 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174042276 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664051574 seconds)
  done (took 10.349062899 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098010559 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097230827 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070269285 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124081302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099618972 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071180495 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072146967 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068849461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088698644 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12898802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090304594 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10250042 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067121453 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070220163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086541444 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207007325 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083617324 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082669106 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07165724 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076713395 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106071092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079686148 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078330627 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07838739 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130199135 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.1839851 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098675963 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098436692 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068921614 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081128548 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115477654 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127272728 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069958738 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068011933 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12592714 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096568341 seconds)
  done (took 4.633465624 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007929577 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144697996 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091485151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136418764 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06673626 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110784316 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06695426 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082447289 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211446415 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.458342331 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.597688818 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112401503 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105911608 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069514418 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072273167 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068457461 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.514444093 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097436174 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10950716 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084361052 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072280259 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070617024 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37864578 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070016153 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066285596 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069820953 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059108215 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112836498 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126813342 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069718613 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.950677682 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12752076 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067611313 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101696054 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162182162 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093081734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274503764 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069935951 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06656532 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154769397 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071912609 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067714222 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086395012 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105525868 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114443283 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066394465 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068607546 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16703403 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066852869 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065963779 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080473944 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.642287506 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154051527 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080265472 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065420379 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256256187 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090011123 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070367543 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06594841 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17579948 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135656963 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069647962 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069230113 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069678951 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070576545 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374674571 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069777896 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.873079286 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071913126 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078635939 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070607855 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071324242 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065709419 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074726334 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074347661 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089182306 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068059994 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076585258 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067353868 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06739157 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068409598 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084983488 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.384633461 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067993685 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069671845 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066793558 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090352402 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097873616 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067733899 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066781724 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100804966 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065726839 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069784925 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06784342 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108472526 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067646574 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.186233425 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071453731 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113744819 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069351098 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083504895 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069265997 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098280027 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073917356 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099372041 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081376766 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069649038 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.422413078 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066386085 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067048671 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069549763 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066048447 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070004862 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068476945 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080540434 seconds)
  done (took 21.312694016 seconds)
done (took 38.432460998 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237869591 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079018378 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075574835 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07822297 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075968248 seconds)
  done (took 1.766703893 seconds)
done (took 2.968711744 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124808426 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102230847 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065504359 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098874219 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065847141 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103643266 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103010403 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083731689 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10203322 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06606787 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099210564 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06623413 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065592778 seconds)
  done (took 2.364853715 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084769203 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08543247 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071333869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084238264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065000833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084586909 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082829089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090907511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08313332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074435684 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065326064 seconds)
  done (took 2.064789549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083871972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085114299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071508172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08316455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064925096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083697789 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082963703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087919862 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083348827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075982296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064771423 seconds)
  done (took 2.057380944 seconds)
done (took 7.673871075 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079235625 seconds)
  done (took 1.260288 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597504933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.137423613 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082918755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113410211 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191214616 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120661911 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275294711 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088519899 seconds)
  done (took 8.971542758 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102968758 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074067882 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074178747 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074018671 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069947931 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070280666 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0733206 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072588561 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06991176 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070675985 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073008962 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071263562 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069228206 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070403136 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07262355 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070339391 seconds)
  done (took 2.435170856 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094001907 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092503582 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075793484 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076537198 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073286996 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073087605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075681813 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075560738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072406266 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073408196 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07615255 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075275081 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073157621 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066191657 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075274454 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076246111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071867413 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075375508 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075207705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076197568 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075981498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06549987 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073125786 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075220831 seconds)
  done (took 3.104404581 seconds)
done (took 16.962355036 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116389916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07314547 seconds)
  done (took 1.370184271 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08274245 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084504294 seconds)
  done (took 1.363274677 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084801566 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066880524 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092525083 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080018922 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067105045 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067273839 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089812698 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06758585 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066615142 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066936112 seconds)
  done (took 1.943565375 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06942368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079304961 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071623911 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082738978 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075129848 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065254825 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07350808 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0690611 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078915683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064229981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073006308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084591048 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072921166 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085977242 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073195001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0708641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072377811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06926868 seconds)
  done (took 2.53058762 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066924893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068267062 seconds)
  done (took 1.334464735 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069279238 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065017556 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068558158 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06752715 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064771673 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064007552 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064678319 seconds)
  done (took 1.65899654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378964457 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114946627 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313039538 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072273741 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083643203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260706277 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067266575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072385192 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072437866 seconds)
  done (took 2.674737333 seconds)
done (took 14.079400688 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081455055 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088137915 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098195034 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.378739117 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093113375 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067672943 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114883625 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192408087 seconds)
done (took 2.324481864 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214567676 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635303893 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406659161 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206815004 seconds)
  done (took 2.449142093 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347227447 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089743626 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060943432 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068407845 seconds)
  done (took 1.787938435 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068038696 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070777737 seconds)
  done (took 1.346906946 seconds)
done (took 7.008425991 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06802489 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08575513 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067339074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064888033 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067538465 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065210683 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06495752 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067295113 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067726756 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067624997 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06999208 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067306023 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067453373 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06746693 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064887333 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06492723 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067259666 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064657579 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064619778 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064986234 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064908846 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067253254 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065273093 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064788499 seconds)
  done (took 2.854765025 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085984441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067846005 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072821639 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072582427 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07081758 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073157253 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072354438 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067638104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07206216 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069804385 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070553706 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070619874 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069313934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070743855 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069597977 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070707487 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072377192 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067071825 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06940352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070849477 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072379699 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067113145 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070599866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07304118 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070479284 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071907862 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069844327 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067824494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072425087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070684231 seconds)
  done (took 3.349154379 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071454554 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065190565 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065117751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072106298 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06471314 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065885175 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064650974 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065369925 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065971981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064646171 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066347499 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06450617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065127023 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066161324 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065495114 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06849657 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08035561 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065015875 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064607562 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065643101 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068289771 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065014397 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065056065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064628668 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065312757 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064775221 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065938615 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065167567 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066099295 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064527274 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068295918 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068411278 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06426649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072274016 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068461709 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.1741761 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068688026 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063931528 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065370806 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064252816 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064346126 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064446687 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064576461 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071122298 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065109719 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066140125 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065485751 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065992225 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065901579 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068000742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0643441 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064988774 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066723827 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066013916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068933224 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064714839 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065927408 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064085847 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065807457 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064786929 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064405013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064657166 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067908653 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065483425 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080600213 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071974182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064789285 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066541878 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065951565 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067643319 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066627494 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078881813 seconds)
  done (took 6.128364234 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091811587 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088562738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066720379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066613627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063569846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065313964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07088785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065459181 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067088913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08383281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065761425 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066395145 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066298461 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068583794 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065513808 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066965684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074088966 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062980583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065106998 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068674868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065434497 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071278081 seconds)
  done (took 2.762828634 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156273391 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072383851 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107275899 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077578373 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071172847 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076631922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071252785 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071471982 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071631296 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068753671 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068824892 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071050908 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071286859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068831735 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068691093 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068626997 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071568815 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068776654 seconds)
  done (took 2.622957334 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077808828 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068294819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088247566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067180224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066792958 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070055277 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072143038 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075140834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069748624 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067265634 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075526478 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069828286 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069437853 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067454638 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070217444 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06717921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069676629 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067118076 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075123091 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071519023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071582724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075595117 seconds)
  done (took 2.792982087 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080711774 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069295189 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082517523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069863613 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062831747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06618017 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071336853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067373023 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071981157 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068858698 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066635868 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065232505 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069577681 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067094608 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069876938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066943944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069818211 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066954721 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068895794 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063048072 seconds)
  done (took 2.605164787 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087972161 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06884756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069020911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077172029 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069864823 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069187886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076490521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069386968 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069113455 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09010552 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069586099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069109849 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077641665 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074456486 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069206568 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076778868 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076555879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076371555 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069172353 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069250025 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089603413 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069207452 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076421112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069147395 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069237382 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069042383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069352956 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075840713 seconds)
  done (took 3.284155485 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067497529 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067072773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064474318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064980974 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064463365 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064761846 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064608273 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064791007 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067319394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064913397 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067542198 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067809197 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067058428 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067124138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067344119 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067526533 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066989224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064404144 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064715188 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064574146 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067476614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067366611 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067276058 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064304488 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06444629 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06717688 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064752198 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064667638 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067241983 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064727091 seconds)
  done (took 3.203742375 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076544705 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074307845 seconds)
  done (took 1.375871963 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064658944 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0813808 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064380354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0714359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071042483 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067813097 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074987113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070719431 seconds)
  done (took 1.787385367 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083169706 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078963731 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069610818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080624093 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078520883 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08482466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135857898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068232137 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074777927 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065734726 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081431321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066573473 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073856166 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067424892 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073912499 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074063423 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065218828 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073745096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069740565 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065788725 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06895376 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076406472 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070607333 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062815021 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06905624 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090573092 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079404571 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067205041 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071074569 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074957088 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073489333 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062075083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067738415 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068063728 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065917376 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078000781 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082683504 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07073801 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076003594 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068398483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077740675 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062844457 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072873435 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074638379 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078143766 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068432211 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06867118 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062853554 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065350772 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070044647 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063007436 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069999415 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062347501 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074892999 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071941075 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079038644 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066683024 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069324824 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070400299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071365017 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074403597 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069733601 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07030276 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067911565 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077601209 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072543776 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077084363 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062767761 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062076447 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065962622 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077941234 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091069065 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074421454 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068756306 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068528661 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065473959 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07123472 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068721215 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073559839 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074294441 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06833498 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073294277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07530618 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068273518 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070547637 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075547539 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066542165 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071196054 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06611424 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084286257 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066776661 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065740805 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06573973 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077846962 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07067175 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067403721 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065402627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07453227 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061180195 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067200685 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06797462 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067775213 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076951942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070933766 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071491495 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075666448 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074233633 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067037137 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069272029 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063861003 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067523592 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065872941 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074016876 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061056961 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069733324 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.191860218 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070260456 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076713945 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067053994 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068550626 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075483397 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073572048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066592358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065091928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070699719 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06801135 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070651169 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076545261 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06656668 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062289362 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062202134 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071907513 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06751653 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071606512 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072541064 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071943392 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061982728 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066135862 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072226967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076624977 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068944961 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069839323 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074643867 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069564383 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067527744 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074592885 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070959012 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067719587 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073295182 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069338067 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063031247 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071299351 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070281392 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06641879 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071831195 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071191232 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069764973 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068919242 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066733104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075349284 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068516368 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066961855 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067960008 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067230372 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078107567 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069886124 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062232546 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065211992 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076337995 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065519413 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067104207 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067326668 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069894891 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06928029 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065587607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067527438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070216473 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078392826 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072080568 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069693734 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073511429 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079863116 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067071288 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07010812 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066854574 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069190245 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068569947 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0764595 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073606773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072375698 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070662349 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0646548 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073249879 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07524107 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067231208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065763778 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066993604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071812679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074331521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072444645 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068748994 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066657055 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069318465 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071208283 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070653908 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067640331 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066962517 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074306301 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066197128 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074780729 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068874393 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078751675 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071819462 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06231764 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070691149 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066029938 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074064746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062520522 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065249291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067036854 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067592718 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066128209 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069287647 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06103432 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073698889 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074283264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067828057 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066178431 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06646911 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073613987 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068404574 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070662114 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070722404 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072710831 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.205305498 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068342535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071555527 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078937035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068416038 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062058189 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074295899 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067309056 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06671734 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06758919 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066474876 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071656197 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075968222 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075198221 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062042436 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071328669 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066422558 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066763581 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063663351 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072663761 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071669088 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068487769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075121873 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06903571 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068354325 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072257258 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067921362 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069134106 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06979204 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071076552 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069213451 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069454061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067617574 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071085645 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067289505 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066582685 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069903957 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068394089 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069000086 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07327523 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067949215 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068161952 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071033734 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06808155 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068259956 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068102991 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066737439 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071011908 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0686985 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067606685 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070341235 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062657313 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075542084 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066947852 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075419643 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0686646 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064201825 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074282051 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071057845 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073012012 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068938874 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06822487 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068763196 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066926144 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070286668 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074687479 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065580608 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078054801 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075013711 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068955732 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070517509 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068061669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069427153 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067066628 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069196095 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068169763 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068667766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067353548 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073113493 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071927099 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067989107 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069652 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069666333 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068687328 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069245632 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062370058 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067255196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06784042 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068606258 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078056528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069179209 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068238697 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067110067 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069410464 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067235119 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064443664 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076550044 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07654575 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069003895 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075172441 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067297122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069035959 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078885363 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062078799 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066276151 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065030581 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065780496 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074678948 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06832552 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076018223 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067154569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066481985 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06434788 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067139268 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06525752 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061432022 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064369035 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070142075 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066184578 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066119691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066568776 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06913292 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.198820515 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078448905 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0685952 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069501594 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068254288 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064850596 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067481258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067707798 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07195638 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068982767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066652053 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066129749 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068232362 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069581135 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070392923 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070287685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069377387 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076020552 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06827631 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071721885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071184958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063472564 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070821909 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06933018 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067417621 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067432345 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071700885 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071583055 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069025589 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077397612 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067582832 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068557717 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068328671 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066274663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067151693 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067853763 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06770196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068229821 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068771432 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076342932 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06636472 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070737326 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068039706 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067946106 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074326841 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068995287 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071422968 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074531044 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067965782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070064253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07632328 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071791377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072291021 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068757285 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070903788 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074419594 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067422468 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075090212 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068502682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069092619 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06988725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066061079 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067994325 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067632708 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067187883 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074525973 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068559545 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06748402 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06782633 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065354943 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068923336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071093984 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075849608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070348522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07100018 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062988535 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065293367 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068593649 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066418539 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069824995 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07050384 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073517775 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070024104 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068630695 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066881116 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076960735 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074174722 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071734746 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06612828 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072153473 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068831341 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070341485 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069259535 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068453673 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069618916 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071762532 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070104228 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067345419 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075311894 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072156204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069159409 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069163518 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068687858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068243582 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063149656 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068270596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069499452 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072924756 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069960846 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068019036 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078292065 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065092557 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067535158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069797517 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065921233 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071325282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061801188 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068218343 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067752405 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067551684 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061808522 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066530013 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.1949553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071249959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068250707 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063368181 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078670921 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078085956 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071817999 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067573084 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067274084 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063589693 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063351423 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067151306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069696198 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069917303 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078741301 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066762269 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067442325 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063209375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068055628 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071277369 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071431563 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065449098 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0635442 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066991892 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071047992 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073964064 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066818115 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067809096 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071584149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07034585 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066789276 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07123817 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065113893 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071846168 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080784027 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068412337 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06873683 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074317714 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075394588 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068203929 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063639519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069240959 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070519857 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069656003 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068927432 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068701708 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083105533 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071138084 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06780872 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066808868 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07049634 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067631472 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075772364 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069225721 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068581516 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072816733 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069805418 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076425805 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070578237 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075410433 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07141448 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07064375 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066712304 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067931638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065817988 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06748106 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068912509 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0683681 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072413696 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075892588 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06703592 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078501723 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076808699 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069326821 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065210819 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06762276 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06726936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063338515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068752938 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06595361 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066626012 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066156116 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067043255 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069247017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073161595 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068429086 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06830217 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067926411 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062190357 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070534361 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070184446 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068959583 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065118382 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067985539 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068822638 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072681399 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071574882 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066203353 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070144738 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069650835 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068818364 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063120956 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074104208 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066693453 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069787804 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067053958 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067946818 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068031415 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070992336 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072030403 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068725735 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069552855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070878636 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069049532 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064343511 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064303008 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072107785 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064920554 seconds)
  done (took 43.432112166 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104054892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065701505 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064186115 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063799022 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075204994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064818238 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063569352 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064634327 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06468922 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06665827 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063808748 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063748962 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072433938 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079049721 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075498205 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068591982 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063543301 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064562451 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063590728 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064429638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072189908 seconds)
  done (took 2.795282446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075254031 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079569731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07740764 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084095863 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07291371 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072274118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077113775 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072762937 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08046807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074067574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080187639 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072088681 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074279017 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074155167 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075018238 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07207102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079940985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07300082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07202532 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076937076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072397355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076935043 seconds)
  done (took 2.970432617 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069251662 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068023694 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069511601 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063419714 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067339072 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06324654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071113333 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06590924 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070947644 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067233338 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067059124 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066907529 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069698037 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062645934 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068105954 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065841394 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110798831 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071087539 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067712275 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068623438 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063019952 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069566874 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063346722 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063576579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067233127 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071398202 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068643044 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066201388 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068268505 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067188669 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067784134 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06553023 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069932695 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068454097 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066842115 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067019635 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067301557 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068343905 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063534113 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066236917 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068214478 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063809273 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068284819 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069580787 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065776579 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065334429 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069514897 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067724314 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063012659 seconds)
  done (took 4.644066234 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081765874 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111339962 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068700952 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090999937 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083692642 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074878861 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071751044 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09191854 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064726843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065963562 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084064569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080811738 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067307463 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072114731 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074300948 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067080677 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068167609 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066304033 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071453479 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067280171 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070837542 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073881354 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081409776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079735129 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071159154 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066011023 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06667041 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071535719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079527328 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071830285 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071675082 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072467914 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081963021 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072622813 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066459002 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06951872 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083201474 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067422036 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069804579 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065471901 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069761236 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07172821 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074119749 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083632374 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067222798 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072071398 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067076703 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064729567 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079423401 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070002998 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07519275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081478772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071515402 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067441515 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071695915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08211124 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067101201 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065837964 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070486787 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079044856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065444199 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071409228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080953782 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069659709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074767626 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080838983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072184034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070972113 seconds)
  done (took 6.464612934 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078357435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096648296 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086193102 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085184794 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077262721 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077915604 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078004178 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077160636 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077032636 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082326396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077875999 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118831758 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073232156 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079687505 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077426951 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077897477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077640473 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078248211 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077621499 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07690978 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077073196 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08435201 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077478854 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08470416 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081774307 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072582442 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077171337 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077136523 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085038269 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077079406 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089499386 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077085481 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077434734 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085115108 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081549104 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077137668 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067058724 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076668667 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07703054 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076726763 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072292181 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084798111 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076957349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072794884 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076942316 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076797589 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08460065 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080719957 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079587327 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082311386 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077000308 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084344591 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07721267 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077791056 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0845343 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087984852 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084580195 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085041174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077321119 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084851454 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085304219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087900158 seconds)
  done (took 6.321422234 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084691191 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075488342 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08355596 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063351438 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065891787 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074061365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06557795 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066376385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07546762 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075536825 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077808029 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073442278 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076594148 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077908443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072784373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07596096 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072887832 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073375819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075534161 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073771231 seconds)
  done (took 2.807743949 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075561176 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084833504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068020695 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073266843 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07067565 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073204632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070126401 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070979142 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068619719 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071046664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077575968 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077890369 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068117619 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072995259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077175642 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073329347 seconds)
  done (took 2.494408237 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08537232 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075105487 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082393376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06844249 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068972968 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064344188 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06713384 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063146957 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063989369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07993022 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067808156 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077939207 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067700274 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066296571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064168772 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072868578 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063784488 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064454725 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067102688 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08014366 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07143413 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066067464 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070990185 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067416309 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069723659 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071821233 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066812317 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06736148 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064351542 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067309325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070644188 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070963968 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064311791 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065232482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066157989 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064889389 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067019822 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068780013 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072833402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067556544 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065357863 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069280449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067787506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068796361 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064140745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068416961 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06379834 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06997961 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064725901 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069970577 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067334604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069903177 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067896202 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074648001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070555225 seconds)
  done (took 5.118725699 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081374814 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070584011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062513488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066168802 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071007468 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069918653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070846675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068901446 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069275295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065973627 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068832753 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07031483 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06918551 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071145942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06949881 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071356636 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06305345 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068336392 seconds)
  done (took 2.582491026 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073170793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067329275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074654902 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06740372 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067478215 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069639563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063591402 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066134986 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066155589 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067400917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06723627 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070116028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065611231 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069548923 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067263528 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067396358 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069792474 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066011263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067227314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063718035 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069871012 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065897004 seconds)
  done (took 2.821015216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095123982 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08395768 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142501676 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080182671 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086265991 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072797063 seconds)
  done (took 1.889081608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092936899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102524697 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067962007 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070759723 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077632234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071590854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071902667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072038837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080309112 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077370259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07167221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080624612 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07974179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07923588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077062258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077909549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072165503 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071283909 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067771954 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085769681 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072282824 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079912726 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071810322 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071841649 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072181035 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079413058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080260067 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078116283 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071936989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080196205 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077639068 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071965045 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080132211 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077517165 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071270763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080496926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071997459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086060689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077410299 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079385586 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070940637 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078526785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080492278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076404035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080568843 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072540309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076743443 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072049136 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07211324 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087713825 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078314742 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079653975 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079978412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080576126 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080273657 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087917775 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077593671 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079531848 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078066675 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077301744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080140019 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077579969 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079447013 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077847337 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077580337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079547141 seconds)
  done (took 6.451360372 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105720087 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068589725 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072047425 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077717903 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079826038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07175116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0718568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071949782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071856275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068461261 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110802279 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071919793 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079372491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079672509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071842259 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0716899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071571367 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079494503 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069347492 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087841462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071653228 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079346694 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079260755 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079312737 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077656119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077819746 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072085357 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071815416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071742138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072538134 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076431799 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072536991 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079764805 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068593631 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079372129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071829395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071865617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076583363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071836321 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077345031 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079927168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085554008 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071814382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071420717 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077722534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071844055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071968763 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069064349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072010925 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068279019 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077572268 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077084334 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077471337 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079749777 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071695722 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071857277 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07210142 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072082385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072168429 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07765984 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079739483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072191671 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087662464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072205881 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071718251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07953311 seconds)
  done (took 6.35427132 seconds)
done (took 131.119967295 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189628976 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165876865 seconds)
  done (took 1.67583632 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070462873 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100095749 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078421315 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129684494 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068318736 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101990702 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101411659 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079588068 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068234522 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068215573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067888127 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070615549 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132989727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068607818 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068224827 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070433807 seconds)
  done (took 2.68283879 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1017724 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164305963 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103796588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06710353 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101425596 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075528366 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066484074 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077304495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072859467 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067224159 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075212179 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072414199 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067142079 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072091162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072315106 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075054688 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066500256 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074565172 seconds)
  done (took 2.818892897 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103224207 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093661644 seconds)
  done (took 1.543581508 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164102547 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137917685 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208665155 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356640222 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.172162209 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151658617 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150066776 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147157441 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122617521 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142383635 seconds)
  done (took 3.096062624 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102171036 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156837703 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270238362 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119828924 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074489039 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095886432 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121545632 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080802499 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082566721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082541434 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082229912 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078422426 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101678704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075195068 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07561529 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07814353 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10531243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074791576 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077072277 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077831403 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102259134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067678723 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075813682 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074615962 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079347934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079284646 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067524141 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067102029 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077579199 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076173874 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078510628 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094498736 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079642203 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108464847 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073221735 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109966793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078858725 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07522279 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076778025 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075098337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079612242 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080106145 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075085783 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078062897 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067420128 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078432825 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06804379 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068324712 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079183897 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068800125 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079094494 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077881961 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108501409 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068822733 seconds)
  done (took 6.073465932 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105445483 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107629866 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073362143 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11474781 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105036617 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074072769 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104940809 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097371751 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106325811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072680205 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070317471 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073088106 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0844548 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085058218 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117020265 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109405558 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075941903 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072999163 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108072249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107077622 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070243513 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099162411 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092763711 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104890157 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068929696 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071837252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069476373 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071831303 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078552647 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080028893 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071683406 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082957264 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087074791 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080383947 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069213285 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069919483 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07035985 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081775883 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080880941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080724952 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079404274 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069678119 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069886598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071343621 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071854849 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07008846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080874151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084080618 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080628025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071504329 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072160773 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070354513 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071459487 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082093445 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08003017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08245026 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081848617 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070027334 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070093129 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074812745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082194496 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081186038 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081415241 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071499191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081157851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070376743 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082236778 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086284047 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07047136 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072392123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070285141 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07456626 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071554764 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079918804 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079722345 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071467417 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07104402 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070179437 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081918335 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080262448 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06990678 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078863834 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06920139 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071119649 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071402546 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071345296 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079308491 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08130508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07135714 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069593893 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07115461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069912345 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069187585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078018158 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080455028 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079779086 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078944306 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070423132 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079765229 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079131599 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071008889 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079888532 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068995039 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070996884 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200816864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08132642 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080421834 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081696605 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071662376 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070604692 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080314599 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082896019 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07106769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080858584 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082925822 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081290986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070441083 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083420123 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070590298 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081243142 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071515259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081334504 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071079774 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081123783 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070613268 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070614068 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070246171 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081759378 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074713945 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06989241 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072260068 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071743844 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081087813 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083830328 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071924581 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080352865 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079685372 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071741683 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080672981 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07110043 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081304474 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071613245 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071423863 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069150646 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083772841 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070206157 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07042122 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071108379 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082281088 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069933853 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081827658 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079501959 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069574867 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082933849 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081531126 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07848129 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081862572 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071605549 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070082673 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070508373 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070667952 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079383713 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080955263 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072815405 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069549681 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079135511 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080865982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06855988 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080803499 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079758244 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079962807 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069839115 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071211639 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081543337 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0820261 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079858743 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080005956 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080025762 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070282662 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07904036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080373318 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069860538 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085871421 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070107992 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084644213 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081010275 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078707505 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080803391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082353872 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082268795 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082285996 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084828511 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070761823 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069739748 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08089784 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069904232 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071086763 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079629601 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070294155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070250286 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083537874 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070274956 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079767527 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068411541 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079504021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067759585 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071089508 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084124166 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06903937 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202698003 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081357826 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072656847 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080633049 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083203887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080541072 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070765781 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071771404 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082003772 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081069425 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070282607 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070939771 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07261547 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080675057 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079580095 seconds)
  done (took 19.056433349 seconds)
done (took 38.29778853 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212503813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154780151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175485583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120718671 seconds)
  done (took 2.107120255 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119035281 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10296653 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094159891 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066617307 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100956946 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066873065 seconds)
  done (took 1.933487469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317525973 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214159993 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190714474 seconds)
  done (took 2.098863933 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203620569 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191162691 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420642471 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265914854 seconds)
  done (took 2.575062792 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146884831 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090813929 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068822557 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085447492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135781493 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163144124 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102560781 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127695251 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080537953 seconds)
  done (took 2.438269103 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151441935 seconds)
done (took 12.685557664 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.259756202 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221380401 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104339124 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128120714 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.126928538 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081045212 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 0.132296553 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084608267 seconds)
    (9/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.180250863 seconds)
    (10/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.239055757 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.222151537 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079683643 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075981542 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075899315 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.155927139 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203378124 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18703731 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137538709 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053033355 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106220664 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074757602 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.164754779 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067255561 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128721727 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.156588853 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.166007718 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092153824 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074314761 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21034499 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161544971 seconds)
    (31/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112830308 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067763494 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073959602 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200072005 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095159128 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103145751 seconds)
    (37/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217644005 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092056941 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.193443406 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080961415 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067605205 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112093256 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.106439507 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093576769 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075542397 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069034677 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087566242 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074752846 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075692246 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.219090197 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075587282 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069198174 seconds)
    (53/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.152880113 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.224373625 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101820264 seconds)
    (56/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103614731 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078858574 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091374098 seconds)
    (59/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065273502 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.186990405 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07773667 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078353512 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.147339144 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052324996 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080998347 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077781593 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070413771 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073973125 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115439713 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096223384 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158222698 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094365684 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067134694 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091258537 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0963551 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154835389 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052173635 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194468789 seconds)
    (79/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110684904 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18537518 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.067835757 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10289232 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.336886766 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.120864673 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093193493 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075045601 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068635178 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053280975 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062753198 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067540682 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077719203 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07071688 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07726199 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067233138 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052379653 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075569176 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091349105 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111588004 seconds)
    (99/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063966742 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.209949567 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.16679282 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141727732 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156905401 seconds)
    (104/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.316443455 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148885468 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079064021 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082415426 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074581238 seconds)
    (109/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077811234 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054057059 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111038506 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139365242 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067080972 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090752718 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077455247 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147397778 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065629654 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158635994 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091782535 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072265311 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079404323 seconds)
    (122/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053002021 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.138820107 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075578908 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140879526 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075601957 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179335272 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074230519 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.16357674 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075229687 seconds)
    (131/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.16223806 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072624561 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073686508 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077643935 seconds)
    (135/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082112379 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069557433 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182519058 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052241251 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074064707 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074736067 seconds)
    (141/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073925031 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070533885 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052354154 seconds)
    (144/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071936525 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155124512 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052386621 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070497076 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157607161 seconds)
    (149/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070715677 seconds)
    (150/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121270567 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078200225 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066812723 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074499545 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099504193 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07011479 seconds)
    (156/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067430193 seconds)
    (157/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113443962 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093927244 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09539265 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111432729 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089927024 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052222403 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066866096 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075210314 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067489143 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149882036 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150883635 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.188958799 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052425113 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075202595 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052259056 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05290192 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068723837 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078466571 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074950217 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074853385 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098228224 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114228457 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072704513 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073470557 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052225542 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052211131 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063340114 seconds)
    (184/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067982704 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05454641 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08941448 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067664387 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061789373 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11863324 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180022151 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052462288 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053801766 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073524101 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066444164 seconds)
    (195/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052335126 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.217458734 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083704235 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078129004 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081939259 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053393189 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166482528 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069454516 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072043238 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132801351 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06801912 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052993843 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078343478 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054033279 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098366819 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067421962 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066476696 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093449507 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17439587 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 0.13559715 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090380094 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175182493 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092813005 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068307669 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076835258 seconds)
    (220/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11735782 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076271808 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07479603 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053901422 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054578781 seconds)
    (225/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092240972 seconds)
    (226/309) benchmarking ("sort", Int8, false)...
    done (took 0.14283398 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052181272 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052548932 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132560344 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067306411 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072834132 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074679272 seconds)
    (233/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054099508 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0714994 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052809799 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052982689 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115566575 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052043512 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052770094 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065938024 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054317154 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053859616 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055047202 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053048882 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06794619 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053567171 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053938166 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052090511 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142048439 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073100766 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053372078 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070240041 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053898462 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066774523 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067494599 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067994902 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053352333 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075070016 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052336175 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066999344 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06334947 seconds)
    (262/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053524408 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053682877 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083160332 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066642814 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073339276 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088374645 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052280658 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073872027 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067291194 seconds)
    (271/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069202744 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184188495 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075147226 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094144692 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069750193 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090609481 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053955914 seconds)
    (278/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053015511 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067769088 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055141714 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142409926 seconds)
    (282/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075567826 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110722066 seconds)
    (284/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07349084 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075137922 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089507014 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065769155 seconds)
    (288/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074793863 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080388524 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065667412 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186242377 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093252138 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074743106 seconds)
    (294/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063205693 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068418407 seconds)
    (296/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082345473 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142558793 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075357591 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067766971 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053371379 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073647521 seconds)
    (302/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072446458 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066448381 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072132896 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067977096 seconds)
    (306/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063347547 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18190435 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065565463 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05330565 seconds)
  done (took 31.498093769 seconds)
done (took 32.89363389 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089315921 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094750255 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077071453 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094801576 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082760244 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078015834 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074700266 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080278914 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081432643 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083302216 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080115043 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055758295 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076864955 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075868439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076048396 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093050096 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080312791 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074522025 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074556121 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065838442 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075382598 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066746991 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068370683 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055202023 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080472873 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073499753 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073793344 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07539895 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06673022 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067225183 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070379696 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074988978 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066325646 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079612526 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073469894 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075067117 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076023764 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07785638 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069059973 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066949767 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075935061 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066828787 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074391462 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074829463 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073434919 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072871054 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074572888 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079103514 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092317353 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069065039 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076281369 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077879003 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077472336 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074458842 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071264062 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074534779 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072870332 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092787748 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075352294 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068850478 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075665878 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075789221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07299836 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074708251 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07456913 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076752441 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077262387 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072928499 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076186856 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073102469 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066793516 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074572767 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070708281 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067220855 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077783199 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079591446 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065619443 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073402001 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074450776 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.0727854 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066052285 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068752531 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068720773 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073570809 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068864298 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056183483 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071258529 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073588732 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06574065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075426886 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074069384 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074202765 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069135962 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077084029 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066196187 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072392918 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066974635 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067336865 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068913819 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071293855 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066727522 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068866124 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076754133 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068671232 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073235719 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080668995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066912691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073621545 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065598376 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06565633 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081242957 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076664189 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067145194 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069210566 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065543323 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074654185 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065979699 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066815956 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066643101 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067403119 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073094005 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066250089 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067582162 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073888789 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079405095 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066271827 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069656529 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068091887 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065828744 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072255514 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066272861 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201701967 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069178877 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063888631 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069559716 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067595508 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074751501 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069940233 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07465696 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068366555 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07615116 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072109185 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07258332 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072596999 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066204198 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060070963 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068889936 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068978738 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068721317 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067916834 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068681371 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06710103 seconds)
done (took 12.690749868 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069822769 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14170425 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097895795 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097244163 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087050555 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067772204 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076951138 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101208805 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069256373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102733645 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089737404 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087299373 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11575075 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06633079 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06736543 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071896075 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069123843 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083255278 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.1008534 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087874528 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117160096 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066638235 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094307873 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090756322 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090038496 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105428262 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070062719 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071400542 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070719247 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09472625 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09006322 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070898345 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067977173 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100230494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095471703 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085585469 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068140965 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085451267 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067963167 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067050737 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068841435 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101327438 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082502595 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082458102 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071985905 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077510389 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068468317 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0856886 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09193379 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080704606 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087556587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103535189 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070188719 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085409962 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066433395 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088129515 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078916502 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069677752 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067871919 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075356666 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068020849 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070970935 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082129897 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082630407 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071842453 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086717496 seconds)
  done (took 6.931485363 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084812011 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093267158 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085579678 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085680613 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067103554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068199753 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068042572 seconds)
  done (took 2.038570827 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068784378 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08913943 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091447972 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091418372 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082704808 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089882262 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076930596 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06809189 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089679728 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069430836 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089523016 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102533855 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071587793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075464183 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092363682 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068224687 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09212424 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067935796 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071544132 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092573912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070548262 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097397127 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071699549 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068276217 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082219126 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068708181 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116084038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072753846 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070612839 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071063962 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066599802 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109722884 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082040461 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076129396 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068382379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083461533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082835923 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06658056 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085592386 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076779605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082223842 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06908526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068917434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066256738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07266573 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079334302 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068830013 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068431619 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071082747 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088199762 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069032403 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081792161 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070830078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074074242 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06955386 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074537717 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078834358 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069384815 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088376916 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069454654 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08496701 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08440573 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082093266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084981273 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070076045 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081661883 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082028022 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070307463 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069847461 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0721541 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084813719 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066221935 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06977961 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078674726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070451517 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091973342 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09171854 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070249675 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081574044 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068665058 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068435692 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068369992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091596288 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074276086 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068084082 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07230683 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071518913 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066310487 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067548535 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072405821 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066766164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069651698 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071163807 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071389751 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071184259 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085050063 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070721397 seconds)
  done (took 8.964413222 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070704236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068949323 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070960701 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069437589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069119381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069568707 seconds)
  done (took 1.921931766 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095406152 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0698279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082219309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07290988 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106758827 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087868158 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088462329 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079534543 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085194788 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080148637 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087920432 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089379347 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093060851 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073668798 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088685542 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073244191 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088599441 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076114579 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080141573 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074084137 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088455636 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073659605 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074108376 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082974249 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077314273 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073276556 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079435995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080504645 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079434438 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079813858 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073714081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077108108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071854219 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07978926 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088472749 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072243374 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073679228 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07808581 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073300477 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077292092 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088782422 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074092641 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076412788 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078069894 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.0801154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071777377 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078334613 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080884726 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087718569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077856299 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07798101 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072690395 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076806383 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078405248 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071989762 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079693389 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07780444 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088429067 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074234407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071715296 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069839712 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076962666 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079007209 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078247218 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080671976 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078372355 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072119811 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074090121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074620599 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072705 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07816325 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070101014 seconds)
  done (took 7.177527914 seconds)
done (took 28.502069877 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539646959 seconds)
  done (took 2.00793195 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617552339 seconds)
  done (took 2.110813719 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.436238283 seconds)
  done (took 7.926077601 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404587254 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.529184129 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731663838 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133763687 seconds)
  done (took 3.326523983 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.714508772 seconds)
  done (took 2.21404178 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217830404 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.205401511 seconds)
  done (took 1.933163698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378599837 seconds)
  done (took 1.870165648 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133419621 seconds)
  done (took 2.625667015 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261542113 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177410464 seconds)
  done (took 1.936643547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.476242361 seconds)
  done (took 1.971180649 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844889452 seconds)
  done (took 6.342146342 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213517971 seconds)
  done (took 1.752275561 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23921265 seconds)
  done (took 1.734616709 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.695890807 seconds)
  done (took 3.194848349 seconds)
done (took 42.445692519 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083053735 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083634249 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082652857 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080028164 seconds)
  done (took 1.812733147 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079102767 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074847574 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078468495 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074695052 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078911985 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074326848 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076174571 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077527487 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074612486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074965524 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074418078 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075227709 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076952007 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07602196 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072940361 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077239399 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078363176 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074886503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077615779 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074260344 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072215842 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076681557 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077078263 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073624984 seconds)
  done (took 3.324544563 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080267395 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074522728 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07630583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073741081 seconds)
  done (took 1.812749969 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080696817 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094519071 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09369564 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079896626 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094510337 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088869119 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071215347 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071353813 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072663866 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079448752 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069615519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098878817 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090901035 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08008453 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082532185 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06802963 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070404269 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089563149 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080114036 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080292244 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072144048 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079844797 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070295101 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090875433 seconds)
  done (took 3.453524081 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088456051 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107241944 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083037714 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091437296 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092806978 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066981236 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089353512 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092752778 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129643984 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067972673 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072554397 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067421856 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075247446 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067007318 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083025251 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109987975 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11352151 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071244688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099129607 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06747286 seconds)
  done (took 3.249696161 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075194879 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070831472 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06823437 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071035395 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078818165 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074435127 seconds)
  done (took 1.95373039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070699234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069099599 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070016304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06966627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073650258 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069180038 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067932117 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069638082 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069606148 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069396499 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068885019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067860574 seconds)
  done (took 2.34440615 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205587251 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069634461 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072648528 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06775538 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072450035 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068623482 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083424728 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070268625 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094629295 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068564247 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068972491 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070843322 seconds)
  done (took 2.52474225 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211097115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078058068 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242513516 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154078062 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11314629 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117707219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115342153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115304703 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14498484 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103108103 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170876702 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170279668 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110638738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140669921 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091410087 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103389852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15742832 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166944149 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108628614 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170626082 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149101627 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129503259 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154570843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104453048 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108728599 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12494911 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073811395 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082724638 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174034946 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136277308 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147551709 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114086622 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094796012 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179828734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175807405 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143582646 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150444122 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086292013 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108483166 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139890702 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202872098 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09037844 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16376039 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251263687 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084568909 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136518481 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121527107 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121766893 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107039738 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093543116 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147988176 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18672174 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140345501 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089903485 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126520453 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11617899 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116299011 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115862134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185983102 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164332373 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131144925 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073135722 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111134182 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155734885 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135179518 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110097077 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128325432 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0938542 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138362033 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157820332 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123366817 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147068848 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119281761 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091531627 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120129724 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142399812 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130244015 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164826231 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127086436 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075071879 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126556226 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104461095 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083085674 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148284007 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077299804 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178272555 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101369706 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110734072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128303964 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110554048 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111556429 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16282977 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14644253 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103666407 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.209842518 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108717536 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124168642 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149490071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0897038 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110117488 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120517549 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080051195 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140948735 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077671801 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125636514 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079478542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127003564 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135233394 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078676785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125109286 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10575805 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10289977 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135619959 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163017548 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0910512 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084312124 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172374822 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124660755 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105968143 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149430253 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158214765 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103937731 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103020821 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15231855 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182290822 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091770925 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1656398 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109193572 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086033823 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090209616 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126177131 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11457119 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126128062 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08407937 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12095511 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172080527 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077145274 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097967086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136995336 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080852479 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083084792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107927223 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107234925 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098034013 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102339511 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10567757 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138520063 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125734396 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107475365 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124542297 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24553081 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176426567 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090790276 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10356816 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107794346 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072668706 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138325268 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160285291 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081459128 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16779518 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125473765 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119289145 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120849177 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085193104 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142824296 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081460749 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072286306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146810551 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111704046 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112540774 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153175227 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118774339 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128680722 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121353107 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135343993 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134568337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132197886 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107870693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08976422 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113584931 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129447897 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075467825 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092949128 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082180504 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106805202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098158594 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085747429 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144865133 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127187487 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112272159 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11388676 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099301387 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150710922 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078765114 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13167918 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120883632 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097723701 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155046797 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155189432 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13433316 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101314641 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139834633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071924607 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075465004 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092970986 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122638116 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229469005 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086998601 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119069617 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150133057 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13188635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140495404 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126509863 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123965503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157905247 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072501199 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120751375 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150198388 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124006895 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107514903 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092246494 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100998986 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145583777 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109532852 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185872331 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117770562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125321025 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154854818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103312182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081485562 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104504738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139456113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106101679 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146335837 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101967657 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090315482 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110721636 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076635984 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101137689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128922469 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121314547 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136735198 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118355397 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13593767 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079771953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118402975 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123927073 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124554686 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06610983 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121545935 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163863073 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096302935 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119282779 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155597055 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080610326 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136749079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177223967 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292955494 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089034277 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111916678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122929402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130971407 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12254843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144132084 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109948345 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139054913 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112023543 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086859296 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090396757 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1006084 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10695626 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097080425 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109333567 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115312017 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097437446 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134678666 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1061063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112405056 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118466941 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100427022 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092661249 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099557176 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17929512 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120859987 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17347471 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10203938 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15070927 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166556388 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07668422 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081119485 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079877959 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142184148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08633881 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133161916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109434492 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120010898 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126664843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146094694 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098145592 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07065788 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110877277 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136112895 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127444711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100997497 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106315808 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165890111 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10344728 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083242514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11534117 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117868421 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104791843 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174129177 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062621966 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106366421 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076715813 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226938569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132436568 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155857103 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083145939 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106209126 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121174608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115157431 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131082557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102721081 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111018111 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128787664 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153719699 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131440222 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091935484 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114176587 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130456487 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159305391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106933615 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09805268 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176155384 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155374714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162608653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089676293 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11549349 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115651183 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110066206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14073929 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08512482 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165373221 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084259044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139210057 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105525464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091268016 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131775473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110713975 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090242069 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151504775 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120234895 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084958028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079607161 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120916453 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1227452 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108626212 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077188658 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140747802 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074979329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134230169 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162625736 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082674185 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106763804 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096918009 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080634922 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25551246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105730621 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09043671 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101816536 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177046709 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088723076 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152984454 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136523239 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115036848 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138489871 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104633383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642274242 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079978242 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155155469 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118752918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177450414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101946176 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119127836 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112031514 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124952605 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14709743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106549867 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181722603 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136170493 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117761352 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081637734 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103389509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106600368 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089417331 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109101957 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115031802 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11717268 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094967399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117942991 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126915382 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083967929 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098011626 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159334721 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1194401 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147029667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14374524 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088214008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119987259 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141712036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081862764 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122951183 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154784001 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108131757 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101321498 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082507305 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102597323 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159662295 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073923988 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157294296 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119159643 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108954486 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111743119 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110833487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129006862 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105991011 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12020814 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091680739 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107306439 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112688124 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081501285 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077118943 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104701001 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110223598 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094913135 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093180059 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095147214 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145563193 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072020157 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096278229 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112243863 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137357589 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165165692 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086787645 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082238701 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113462996 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110723312 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10960596 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117531867 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077382526 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08066518 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079038321 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077821282 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107346449 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110171844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111155305 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10614688 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156426288 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081805374 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225830086 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092607151 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10403381 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069631684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076744376 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093367347 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095457849 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104537415 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107150344 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151486072 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093987298 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088295623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088822071 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073461611 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081861213 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124607623 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104930471 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114388175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.358138141 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066171491 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113432587 seconds)
  done (took 59.922702932 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113621518 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086528491 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099195621 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148612232 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126317566 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207925787 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158358814 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193930917 seconds)
  done (took 2.776478659 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073276905 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099954593 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10807643 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088162121 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069957339 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072198262 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238803581 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084783304 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069575681 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102622326 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082830657 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072210606 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436508463 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069675546 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070809308 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064284476 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069949966 seconds)
  done (took 3.507588358 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39809217 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616351831 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356852003 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075663188 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.450473288 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086954492 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.125185693 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130582341 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075641613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524756447 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.407699767 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126172618 seconds)
  done (took 18.020729057 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078307764 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071698174 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086300635 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086070001 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074516917 seconds)
  done (took 2.035932165 seconds)
done (took 108.295712631 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083040368 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.611214357 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054715526 seconds)
  done (took 2.335130776 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085584711 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0876354 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086701931 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085308933 seconds)
  done (took 1.994822614 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077088364 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078020216 seconds)
  done (took 1.799158244 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236549868 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165091475 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098191382 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084531982 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081539996 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082100146 seconds)
  done (took 1.897655956 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074155223 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077701365 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074187661 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078707604 seconds)
  done (took 1.951253472 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079032317 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053691789 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056813691 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059673084 seconds)
  done (took 1.893862154 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088358461 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081119335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080791634 seconds)
  done (took 1.894890243 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10356214 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088260795 seconds)
  done (took 1.836082184 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083753999 seconds)
  done (took 1.731558939 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097264358 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103267722 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133887925 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112958818 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142151384 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11207895 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087241739 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087785326 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078246561 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088493665 seconds)
  done (took 2.688955988 seconds)
done (took 22.247537193 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081118929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.457251456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361801433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091916221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67103068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357815245 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970815854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094494024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117404486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070041222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086760659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649524635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.965189849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413335249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947593225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318481933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652147099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070699673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069107701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069603179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955465862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069368226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070041083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070086869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651020217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373785893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070219412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315602617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06985303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071597278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356364593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070397166 seconds)
  done (took 16.289456508 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072480452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121498469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075235761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086079893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072316647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071748174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073395379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070802276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122705121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069692956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087046178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069211977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073042124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085657846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08955929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06974692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070466504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070227811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069592215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070502703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088641487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069172772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07004778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069873837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069663123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08210527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070006221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069735764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070523513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072061055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072884755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070362091 seconds)
  done (took 4.123785429 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117799679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126152252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075569124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105219909 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113927105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071521745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14477044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09565658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129142893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069143875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087177085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06951288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104348146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070765553 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090074863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070148968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071158155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070387276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069630838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070504879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089656672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069468409 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069876875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070369415 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070552898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083442831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070543919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070683455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070481535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072235749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073462728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070926516 seconds)
  done (took 4.361619362 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075491418 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076490172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084604105 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087414745 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070617155 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073756293 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074481571 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071380885 seconds)
  done (took 2.275487994 seconds)
done (took 28.701761444 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082030483 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070870869 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074455263 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084026853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075007686 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08030537 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069586621 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077985174 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074487159 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07520809 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076966751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069621709 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073333358 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069230415 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075647845 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069349244 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080977096 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07403163 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080639063 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081003133 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071923248 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074890518 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076939578 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081006885 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081346061 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081029254 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079550457 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075343912 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071507555 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072802169 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079479011 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086031952 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070621485 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081709334 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069549541 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069477429 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073839332 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069178255 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081836269 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078240728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072009816 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078552365 seconds)
  done (took 4.827676553 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089974719 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094512913 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086489954 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06321336 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068473728 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067366118 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091183827 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061461411 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060762112 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090172524 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057333583 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061546465 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064734649 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055227812 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062089888 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058285461 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06370916 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056868203 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061618377 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061209211 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093285568 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056125235 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079667152 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065067152 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057594216 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063227277 seconds)
  done (took 3.462482351 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076351596 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087128457 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092411518 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133229167 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107750647 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080786814 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080349883 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096874295 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091099671 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069074401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073034222 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094476054 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09257843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075819988 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070396437 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088574288 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085474125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070864242 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075092465 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096401574 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088497483 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087718194 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098471488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085180089 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068213014 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071385391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072995434 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083081633 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074208882 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078090398 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07302789 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073240841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.081959511 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080775389 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073274684 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070705788 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093672731 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079149765 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08097773 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069288895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077399508 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069879943 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093810465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126725139 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06846725 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074963744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073189834 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079002303 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069232457 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089188122 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080123224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06879984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071777114 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067994337 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068998111 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082258747 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070657852 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070331443 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078504041 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075829351 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093287955 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074001222 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084773664 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068876888 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077559176 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067924219 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070049271 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068413952 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097510677 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07051286 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112636728 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070219276 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070423173 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077896442 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077402269 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075857358 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069844869 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085167806 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080088602 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072814324 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07805283 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072339678 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072731325 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093952821 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071331799 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070890754 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070027767 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075499279 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072203429 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071540905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082407359 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068211775 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072557376 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086171746 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069357596 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070557528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07478443 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073841588 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069286472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080479677 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075190668 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072494051 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078969368 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069269523 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072183597 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082318514 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07609919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068615897 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073707242 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075180273 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070536973 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070724982 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071776755 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070644137 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077503546 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075655554 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073607746 seconds)
  done (took 10.867880333 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167986064 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159073026 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072130371 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152135863 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078739524 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081223923 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153734087 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096472735 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069622755 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07042462 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070647199 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112689805 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107959641 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120268798 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080417461 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069057087 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086727439 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116855073 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156299335 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149547199 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087041019 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079182325 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071398115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071122328 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072286685 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080242306 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086979033 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07813914 seconds)
  done (took 4.50024169 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081780141 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106462852 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07648748 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092177577 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092726124 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069421363 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071673634 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071281426 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083132524 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080404884 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069754691 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074755787 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076168708 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07310578 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070456952 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076254421 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076430055 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071016222 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07305177 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074764509 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080025058 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093746031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072991933 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068890926 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074232804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068750359 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065059279 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086064899 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069758885 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096988773 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067425774 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074414643 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084184828 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070677753 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071889446 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069805789 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06951718 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069157679 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071641965 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068081036 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068477905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059288803 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068495296 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08082485 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076361252 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057763067 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073883088 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074683922 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074828576 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066774691 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073027158 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072438377 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072160748 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077452044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074089457 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074578198 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070557775 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076222824 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079090504 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068905967 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066460439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067691277 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074353823 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067745023 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078094795 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074509144 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067684088 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069146008 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071535454 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0759794 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069591289 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073948552 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066946969 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071425486 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073602845 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07093689 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070720164 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067891785 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069192831 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069909591 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056778689 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069946841 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055052911 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072288035 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067892248 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067911837 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069213282 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074482199 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082076186 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070636358 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075578476 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070591909 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069010513 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072843754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062048144 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072634374 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084667262 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084661167 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069272555 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067531717 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082844587 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074337714 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068270128 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057462602 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075623743 seconds)
  done (took 9.379607819 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092447449 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071585433 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086458894 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093334242 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088965789 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076744556 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079174867 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0710998 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085043335 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076367959 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078284593 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069445939 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079786905 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078783216 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071871968 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079701576 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073797064 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086384054 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084145923 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069600038 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077989243 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08215801 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09196594 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083757326 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083156051 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083700929 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092438246 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079508497 seconds)
  done (took 3.972462274 seconds)
done (took 38.664537486 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.751239861 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.999589001 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.745712485 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.156807558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.821829839 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.956160297 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.83934616 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735959502 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.938929302 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.769593688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.937602447 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.926292194 seconds)
done (took 65.253872226 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.759664961 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.877661513 seconds)
    (2/2) benchmarking "String"...
    done (took 1.968058649 seconds)
  done (took 5.517419479 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.941774412 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.316621797 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.989881193 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.736856279 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.743134023 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.079029 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.539793789 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248323652 seconds)
  done (took 30.324520546 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.870879324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.960916999 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.42391959 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.454813403 seconds)
  done (took 15.437637259 seconds)
done (took 62.733725973 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.7358375 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.763625777 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.7347837 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.721142156 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.795143082 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.741881659 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.94506509 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.798361943 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.731140148 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.72284987 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.735749842 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.16131 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.741990903 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.910529947 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.733946012 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.73445585 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.741338888 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.242064877 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.88968247 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.748302893 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754948125 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.743658767 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.736488519 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.733913954 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.751932695 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.731761488 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.097746727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.747558071 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.526881253 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.740118393 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.77888243 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.093050666 seconds)
  done (took 202.436943712 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738149774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.547037635 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.620824068 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.776380526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.184456945 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.922141388 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.858697333 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.221342926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.742193452 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.755364123 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.943459647 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.739324462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.986974914 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.685852218 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.764909313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.743147506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.906736432 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.99155137 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.770853747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.91952695 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.763564607 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.741630139 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.678378859 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.865828486 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766099777 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.850873219 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.765011864 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.749596469 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.926369846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.877787175 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.764778773 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.749220567 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.933467949 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.610407066 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.765125605 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.74059041 seconds)
  done (took 168.038266617 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.111871237 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740595813 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.74085969 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738020448 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.748430826 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.740955054 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.864746074 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864466754 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.332160215 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.550747025 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795537873 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541060686 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.744226662 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80583567 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.751939426 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.739899587 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.756399857 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769705165 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743666139 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741531255 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862062258 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.75309348 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.780156814 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748721411 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743398954 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747386304 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.115800856 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.738925839 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73994526 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746244464 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.983323211 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.739906514 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738246348 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.58634327 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.503431766 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827506199 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741261658 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745641774 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.741247113 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.959496077 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74041338 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738915474 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.743622199 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88200552 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.739950323 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860716115 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737774257 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218044504 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738987651 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740562612 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741640043 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.349852976 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.331677041 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743881181 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.740440619 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.743733562 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.740733788 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.738652216 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.746375304 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.394609809 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.811858352 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.743037278 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.744955422 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74511636 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.743814782 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.863101808 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739765029 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.783808576 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.798108674 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.97764979 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.857658414 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741649218 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.740727597 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806948469 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.833066878 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.743538621 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.740072695 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741529017 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740360555 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.821720591 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.741365391 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.863920229 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748243028 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.742547481 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794207504 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810648056 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.741917169 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.584214814 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.742533648 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.742597535 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.99613823 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.74234246 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807985479 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.744927441 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.741643581 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743814173 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.866757393 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863803911 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.448962819 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.743918406 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.456065733 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.915993213 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.942406792 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.745593158 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.96065373 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.744059105 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835793769 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74707606 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.745236025 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.744527613 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776785688 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.745456715 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.802671811 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.742748493 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.120625002 seconds)
  done (took 398.310610764 seconds)
done (took 772.629580384 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.434898515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.383993386 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.515092951 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413880846 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.391950547 seconds)
  done (took 13.815250846 seconds)
done (took 15.492273412 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.834672493 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840553644 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767787237 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.840026685 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765061647 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.839307154 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819392431 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.77115413 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.801214859 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.77150217 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806170118 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772485735 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757001776 seconds)
  done (took 25.064615572 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972300153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976498155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.821668958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.970881418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794056121 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.972162759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.905520464 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.893789673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.891456282 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759446773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.755815739 seconds)
  done (took 22.391813958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981719098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.984889709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822683355 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.974081071 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794616797 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98399981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90801578 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896033153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895672389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759816697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75630205 seconds)
  done (took 22.435981613 seconds)
done (took 71.568123859 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.750725097 seconds)
  done (took 3.428316499 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782206952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.934388997 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763872624 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.755116372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.751932509 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.753912904 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.75612714 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.750964351 seconds)
  done (took 15.927950524 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.750974701 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.751963813 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.752987381 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75212695 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.750692872 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750427088 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.753212054 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.753225082 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.749444052 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.748637112 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.753382837 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.749626411 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750093872 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.749194886 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.75273004 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.749824653 seconds)
  done (took 29.701689715 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.75046793 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.749175749 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.747660782 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.751509102 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.748329664 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.749779276 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.753441981 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.749562928 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.749538171 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.749037195 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.753024807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.748137924 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.751616614 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.749670315 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.750285102 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.750968882 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.750551504 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.749924719 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.755649398 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.751327134 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.751468966 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.748666056 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752584681 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.752870044 seconds)
  done (took 43.698840561 seconds)
done (took 94.434428065 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.686870302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.148358407 seconds)
  done (took 8.514721578 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.755149405 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.754709809 seconds)
  done (took 5.231533069 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.754467637 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.75379255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.753119623 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.753927528 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.753856789 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.755812249 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.754094965 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.753560925 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.754151515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754712516 seconds)
  done (took 19.223382343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.758704638 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.752472459 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.752114317 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.754107327 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.753338591 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.751351733 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.755804023 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75379199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.754683597 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.751370278 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.753772243 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754368835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.753218023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.751739209 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.754611768 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.752416768 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.753227397 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.753688673 seconds)
  done (took 33.247055245 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.754699821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.754787695 seconds)
  done (took 5.192611126 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.752570576 seconds)
    (2/7) benchmarking "second"...
    done (took 1.757089762 seconds)
    (3/7) benchmarking "month"...
    done (took 1.752377015 seconds)
    (4/7) benchmarking "year"...
    done (took 1.752761246 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.752504754 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.751108097 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.751654172 seconds)
  done (took 13.953509346 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.755748354 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918845121 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.991638559 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.408765904 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.760819739 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.760738557 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.669415535 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.759780001 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.75934167 seconds)
  done (took 19.470555665 seconds)
done (took 106.513720071 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.577320487 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.750388344 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.051863313 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.880606543 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.767644793 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.092090355 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.757753257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.065940658 seconds)
done (took 42.629341645 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.825103751 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.284320115 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.322828004 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.151723898 seconds)
  done (took 12.443709504 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.740376822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.284295107 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.797264273 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.328817573 seconds)
  done (took 19.855669212 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.122086929 seconds)
    (2/2) benchmarking "read"...
    done (took 2.103574541 seconds)
  done (took 5.916550093 seconds)
done (took 46.72620435 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756914622 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75423929 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.75704867 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.753670141 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.756928837 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.752680225 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.753819937 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.756971118 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755826324 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.757102896 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.760679315 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.757064025 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757288253 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.757733038 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75419739 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755936194 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756937343 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.755203607 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754398337 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.754264917 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755914844 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76379618 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.753139391 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.754390901 seconds)
  done (took 43.830860438 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.758411599 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.754604521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.759569109 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.757249892 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.755697534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.757863213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.75690525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.754726692 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.759058651 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.757297876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755062355 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.75575901 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.75810918 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.756796421 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757751497 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757259143 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.757320353 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755332028 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756916634 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.759012863 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.758383656 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755527284 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.754648343 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758557826 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.755275882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759286546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.757790525 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.755782259 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75859139 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.755326324 seconds)
  done (took 54.396089299 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.763815122 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.765718271 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.758377908 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.75946391 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.759147888 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.76052671 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.758222253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.759775772 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.759148322 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.759864369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.759997627 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763101571 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.760974841 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.760384067 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.760841811 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.760734382 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.763047621 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.759682182 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.75984703 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.759440433 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.760472252 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.760070883 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.761528269 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.759905394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.761559203 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76091524 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.760094015 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.762014326 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.763809943 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.759873489 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.760335315 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.759792303 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.761227846 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.760708448 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.760735085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.760282287 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.765419591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.768978872 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.75996741 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.760952106 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.760648479 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.761846464 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76093261 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.761796358 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.760819731 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.76145077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.760042574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.761351036 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.76114269 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.760624902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.760889318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.761308382 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.760343038 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.761279205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.760884707 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.761661353 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.762288329 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.762276682 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.761393896 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.762009628 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.761904187 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.761679476 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.761800149 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.762329459 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.762494787 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.763035094 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.762071579 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.763191043 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.763426869 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.762068846 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.763452431 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.763044145 seconds)
  done (took 128.508467189 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.763799323 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.761456091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.759991658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760831982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760208767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.761599588 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.761400285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764571649 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759799932 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.762786116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762968187 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761777804 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760852234 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7625906 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763837553 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.760946182 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.764448437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760294011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.763067751 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764823392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764517611 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.761839684 seconds)
  done (took 40.459572416 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764652655 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764695643 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.761229435 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.764061451 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.762346652 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764643317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.765466078 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.76389304 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766062846 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762321838 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761397726 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765312255 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763353264 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762439104 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76300347 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.762265936 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764492406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762549978 seconds)
  done (took 33.436378222 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.763085535 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.762809158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.765973707 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.762439011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766487017 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765722854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763877077 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767420797 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.766519126 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.763622153 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.766228188 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766996286 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.76786191 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76356368 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765928893 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.764194752 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.765703211 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762889561 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765925289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763654189 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763677319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767382696 seconds)
  done (took 40.525852347 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765148563 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766696909 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763601564 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.764430718 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.763528604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766498934 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.767197166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.764033858 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.766945933 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.766636321 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763398616 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.76696836 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.763449848 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764675901 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.763791731 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767334403 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.767123649 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764660865 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76706276 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.762975079 seconds)
  done (took 37.001600392 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768344869 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768083584 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768643976 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768456067 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768938354 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769038762 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76828742 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.768250151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768486337 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769047691 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768104726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769898583 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768001278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767937187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768460008 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768292076 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769611748 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76954927 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768808509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769627875 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770407594 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769030464 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769471771 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.7689276 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769543009 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768487179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769694444 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.769011969 seconds)
  done (took 51.223793278 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770341239 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768414051 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.7666112 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.765329669 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.76715946 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.766238591 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.767614783 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.766511941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769510604 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767012541 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.769613242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.768689115 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770999376 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.769178565 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769657223 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.76960813 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772509419 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.767552904 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768785326 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766894804 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.769940911 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770142061 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.76949488 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767306742 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767227676 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.770766827 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766924343 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767811689 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77041091 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767557516 seconds)
  done (took 54.755997631 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.787863908 seconds)
    (2/2) benchmarking "in"...
    done (took 1.788578131 seconds)
  done (took 5.274478863 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.767333191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771183587 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.770394389 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767898026 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767910293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77032087 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770607884 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768842699 seconds)
  done (took 15.853588678 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.771959626 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.77278091 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.770509351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.770157395 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.771717805 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774181163 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777499066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.774591664 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.775410898 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.773627601 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.779500683 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.782689387 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.775580269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774732206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.774446854 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775664339 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.771688192 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.772105059 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.773570884 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771697356 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773936641 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775838718 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776573754 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.769886401 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.775992279 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.784477641 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.780031937 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.772185872 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774191251 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778761631 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.775305161 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.769820399 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.772649249 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.772536918 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.772092724 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.774716045 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782425232 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775085542 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.779855787 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772753232 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773889788 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.770942171 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776651194 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776346077 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777053711 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.774264039 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.774778475 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.770830491 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.774876363 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.77860697 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.778684475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77630344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.771486589 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778008403 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.778682984 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783300228 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.775315986 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.780692714 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.785057061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.785680536 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.788290421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.784622019 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777631008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.776960063 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78680416 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800960587 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781927549 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.77273726 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.772821277 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.774923124 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783125265 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791642428 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.788531016 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.775645879 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779651632 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.775386583 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778814935 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774868438 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783962307 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.780959852 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.777265673 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777195463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787221566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800164176 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777839834 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.777285442 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.776714809 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.77611265 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.778790878 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787218947 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.778653584 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.777401023 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.777426095 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.777961555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.780070776 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.777044484 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779377343 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780077839 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.773011558 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.77815218 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777215684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782037171 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.787930281 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77747093 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77811712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.784244596 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.776365022 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778052498 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.787420149 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.777393345 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778427463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.779683845 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.785910095 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.775200407 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782042559 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.787949113 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.777490533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.78175619 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.777898665 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.778229154 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788484696 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806848874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.77841386 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.778639782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785913646 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.791027675 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779055078 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.784583962 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.77931512 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.774517909 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.774849125 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.781755108 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.777643308 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.782290641 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778161532 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782286712 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.777416651 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.777477995 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.779164774 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.783307654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782425031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.780665009 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.783701924 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783003255 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.780804025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783158775 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.787122744 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784623395 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.783366779 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.783333163 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.776539469 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780194134 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.782284254 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.779611923 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.781719522 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78028108 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.781304349 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.779608742 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780158643 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.77833632 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781309285 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.783405826 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786376468 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.780076033 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788146049 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.781678299 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.777304511 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.781221572 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.781034515 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.781793332 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782229321 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781002136 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.784589651 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.788408721 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.782027493 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.780513854 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78599403 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782209319 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780794963 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781238212 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.785615821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792555447 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.781374095 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.788550917 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.781526756 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7823659 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.782473527 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.783977353 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.781981303 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780142475 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.786067714 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.789104254 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796187498 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793789899 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.783394677 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.784597252 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.784842857 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.78548364 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.788583823 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.781488546 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.781732731 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781915297 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783644449 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783211931 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.786821196 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.781850033 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.783281174 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.781545584 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.782546441 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.783731478 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782962045 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.786645186 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785782813 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.778897367 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782708604 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783681085 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.784199712 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.779911269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.784398772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.783438721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.782661641 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.783420691 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.791288502 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.779240976 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786161513 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787023582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.788373713 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.782797467 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.783710374 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788126736 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.784510828 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792171184 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.788153964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.786544511 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791419646 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.786625122 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784621024 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.789002251 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.785356636 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.781859883 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.789498151 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.791026828 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.784848578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.784345967 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.785192729 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786375223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78416754 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.792619714 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.783696529 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.785778489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.785658439 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.789273183 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.781567122 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.787855677 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790712948 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.787310774 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789796878 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78555452 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.784816017 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789127442 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.786096214 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.784785374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.785354912 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788966865 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.792292468 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.792535461 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.787656917 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789356343 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.788489534 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.788024909 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.7880376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.785749454 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.785936899 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799519458 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.794345272 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792949234 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791137537 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.786220477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792101856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.789727171 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.791700392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787117785 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788945846 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.786641379 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.786379847 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.783129566 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789068515 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.786234153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789697383 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.790377853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.789733844 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.786783075 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.788118691 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.787455182 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.78808976 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.78676443 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.788592046 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.786985352 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.793955094 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790153272 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789822167 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.789303075 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.794912378 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791892124 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.7930528 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.789196985 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.790082038 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.78974537 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.789232453 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.789116037 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.793027674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.794724184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.791375464 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.799952955 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.790212329 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800504104 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.789571351 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.792020725 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.796351718 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.78511116 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.788414005 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.793038554 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.78785407 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796792048 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.78985642 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.790708301 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.793922049 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788734151 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.78906714 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.787599875 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.789271809 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78819529 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.789905348 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797799744 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.793285294 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.794892814 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7933895 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.787722143 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.789768326 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.78859295 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.790910399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797329915 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.789947782 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.793505043 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.791756101 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792015054 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.78943359 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.790409165 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.790403427 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.787522604 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.790230275 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797769486 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.792321754 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795407855 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.790044286 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.799048699 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790229728 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798841972 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.792407426 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.793420164 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.792216354 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.790266974 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.794375252 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.792706133 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.793862355 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.791678742 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.793057027 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79323806 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.790605073 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.795141252 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.793310702 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.792581015 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.793278212 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80201627 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814240237 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.79420942 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79399735 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.787999306 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.794559986 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.795760151 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.792366514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.791917911 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.795890108 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804349718 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798972192 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.793062334 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.791546779 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794703313 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793562457 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.791506082 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.790308503 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.791780331 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.791059843 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.794541519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.792086308 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798479413 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.791799748 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.794632659 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79516989 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.794550338 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.803049008 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.793734099 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.795949824 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793275506 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793355859 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.794341308 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.795213783 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.79266876 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79415709 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792632303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796914458 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801525421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.8007929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.798405176 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.794745311 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.793573479 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796519765 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.794665414 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793606248 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.794625545 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795540379 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.796700394 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.793595401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.795760335 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.793513651 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.792615699 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796002857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794027967 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798425637 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.80404255 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795810681 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.790337617 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.795505016 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794261259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795225945 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.795750468 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.802640015 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799549111 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.80744332 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.805265586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.798160257 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.796488055 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799260439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.804868022 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.795526256 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.797827379 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.79517036 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.797299844 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.796394214 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.799653832 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795502306 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.802213025 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.798912317 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.795789119 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803013338 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.799994489 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795559357 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.798086571 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.80098631 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.797187031 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.79289629 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.797336727 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798300669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804674283 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800292352 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796113279 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800647768 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.796977665 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.799025328 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.799999774 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794324574 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.798922763 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.792444944 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.797541923 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796378331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796020878 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.792193639 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.800300479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.797500937 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.800405193 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.804934349 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.792206004 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802657048 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.798410643 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.799406748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798547189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79620538 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.794078699 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795183003 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.798699673 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796708232 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.79967061 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.800840879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.800137639 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.798795106 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.797161203 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797907239 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802177742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.809333392 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.807521144 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.79437114 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.799301728 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.799845976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.802464672 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800289634 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.797501977 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799644289 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.802017986 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.797820713 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797763177 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.79793565 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803112629 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814682948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.798857348 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799548649 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.800973465 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804501985 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.797996279 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.795552422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.800009263 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.803262505 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.806299538 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.806689326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.79915426 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805651819 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801303466 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.800864069 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.804648863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.803347861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.809918645 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.802451466 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800361258 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.80159235 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80493587 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.817034763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799738909 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811957424 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829824511 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.80389284 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.802958856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.800793562 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800491697 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.799366697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.803367744 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.800287179 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.79960427 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79906753 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.799861782 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.801689043 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808802916 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.804575616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801335579 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.801259734 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.802992436 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805666179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.795942235 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.800256946 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.800426778 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.800551151 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80065914 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.805865118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.802509231 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816098558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.814134689 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.801212641 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.802618519 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.797839423 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807347914 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.805824179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813897411 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.808791594 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.803079503 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.802363122 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.805440714 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801921273 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.798544044 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.805143387 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.803919649 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802650364 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.798648075 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.816237355 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811602535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.808636036 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.804820854 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802428981 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.803252469 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805725565 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801937678 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803142405 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.806031129 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804753315 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807035027 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.80178653 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.801452479 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.808089568 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.808358905 seconds)
  done (took 1068.599448771 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799764617 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800995403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.799659811 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79995437 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799465875 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800412395 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800103154 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.799539157 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.799876432 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.800624552 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.799013357 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800641937 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.800581777 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800388878 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799424647 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80056176 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801076633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799828387 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.800283354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800656941 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800253287 seconds)
  done (took 39.53206416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.80330924 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.800669428 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800290042 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804122329 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801031929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.804549991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802222854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803612016 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804002248 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799660731 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804134833 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804978642 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.802186078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.802381014 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801862567 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803505555 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80504869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800857143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.805184143 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805603113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804970573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.803448666 seconds)
  done (took 41.397740227 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.805572387 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.807500854 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.807174434 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.80202199 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.805367809 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.801952324 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.807382034 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.806136745 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.805597926 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.808525391 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.8071829 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.808000215 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.815102443 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.809576227 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.8084849 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.80555087 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949306647 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.805534812 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.805715721 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.806977474 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.803291228 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.812340594 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.802737454 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.803096176 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.806457067 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.806976913 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.805935435 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.805250034 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.807720382 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.809378713 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.810621776 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.806760307 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.808532715 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.809650528 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.80986207 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.808822824 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.810161809 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807921303 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.802931567 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.807189762 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.821071016 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.828936778 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.808862487 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.815180614 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.808282672 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.808475182 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811792237 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.815871572 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.804427225 seconds)
  done (took 90.479429549 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.807458046 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.809105801 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.805872171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808713632 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.807881404 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.807891243 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.807628161 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.80843492 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.805096803 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.804796025 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.807331667 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805157454 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.805414981 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.808321666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.807724058 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.804454057 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.804870318 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805467304 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.805753089 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80488272 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.804994418 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.808164735 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.808063215 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.805872176 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808944417 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805393433 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806174236 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.808146038 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.80572756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.809288708 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.808905988 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808830608 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.809698715 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.806447733 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.805301122 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.808939383 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.808789556 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.806641872 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808774015 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.80632488 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.80859248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810174102 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.810085787 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.809345965 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.808728857 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.807065741 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807600707 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.80823201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.807925168 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.809572772 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.809756203 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.806891848 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810797069 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807000095 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810583609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.809674025 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.806954386 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.807549095 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.81001597 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808156539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.807926396 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81060342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.808663292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.809956805 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.810559578 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.806153821 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.807699703 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810569736 seconds)
  done (took 124.664275613 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810344834 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.812253483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811423468 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811167915 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811501181 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.811111106 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.811907098 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812291767 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.810602212 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813291371 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811254084 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811496808 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.812453249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811433088 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.812485032 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813160899 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.812605511 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812045229 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812798464 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812895507 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.811974371 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.811652095 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.813767225 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.812006462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812531448 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813927938 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81380475 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.812978528 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813118481 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.812181372 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813762379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.814772079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.813375442 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.815481437 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.81425425 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.814047697 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813260203 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817607778 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.812795873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.813338627 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.813126164 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814777123 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814856219 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.815222203 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814697202 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813970429 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814753645 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.814521298 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.814560749 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814675401 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.814786454 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815232958 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813639871 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814300389 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.814483699 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.813436307 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813436886 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814953647 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814438949 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815912641 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816140677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.814177533 seconds)
  done (took 114.168193936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8121475 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81377455 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.812528504 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81066668 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81418294 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811022145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813567173 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.81484803 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813433412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.813625208 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813731608 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811094304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812398241 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819090358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812079627 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813086948 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81219961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.812539009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816256587 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812749055 seconds)
  done (took 38.005142988 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.811575525 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.814764989 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.812892454 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812674033 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.815464469 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812939317 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.815791188 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815136748 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814836679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816648126 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.816172145 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816330442 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81340161 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812044348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.815704268 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.813223211 seconds)
  done (took 30.770767855 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.812953109 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.815816126 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.816943616 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.816580017 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.813833448 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.812839383 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.815378956 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.813512738 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.812904464 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.815615661 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.816727289 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.816338519 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.816883294 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.817752378 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.814650623 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.817386109 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.81481866 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.814190669 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.815734847 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.816902522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.814871813 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.813881203 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.816581107 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.815918543 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.815162417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.814901669 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.814042372 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.814659627 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.813990019 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.817482191 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.814545099 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.815427014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.815687076 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.815297487 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.817467241 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.815509097 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.818100486 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.816160017 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.818534611 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.818635915 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.817935466 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.815308999 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.817864789 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.817575995 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.815582588 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.818435784 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.816099236 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.816558653 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.815164948 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.815748454 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.817863668 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.817997649 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.819400386 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.818604229 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.818708393 seconds)
  done (took 101.62712486 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818610024 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.819047156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.815704561 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.8179755 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819555764 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.815415703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.818799203 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818480549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81566418 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.81811753 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818176473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.818238669 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817442657 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818732077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.816691423 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819816479 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.816124955 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.816787324 seconds)
  done (took 34.464685553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.81731379 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.818133352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.819490129 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816939936 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.817535296 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819929031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817476752 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.819043603 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81899515 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.818255143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820490913 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.819481241 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820115869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.820876342 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81782636 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821318088 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.819476239 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820410704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.817495114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818089721 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82088985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823690247 seconds)
  done (took 41.771913952 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.822382987 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.82168113 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.838448528 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.847369732 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.844868704 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.859366488 seconds)
  done (took 12.780076923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81767109 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820380544 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821331643 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821087219 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820846341 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818562736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818126556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821842999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819667712 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819412294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819614562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820410457 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821958839 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821247418 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821757507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821312868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819620079 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818513124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820543036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820913159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819523458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822454292 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818745521 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819346582 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821857869 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819697132 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821263065 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819223425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81924004 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825857353 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820599842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819581316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822195945 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819535131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821962502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823292367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820658306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822831437 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821975472 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820073558 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822457626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822783412 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823696685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819610747 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82267293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820396283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821685178 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820804925 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820274847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823729176 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823833901 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82022356 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823452584 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82397672 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824128791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82351328 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821533907 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8215988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8238982 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821284026 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821069574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824465191 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821136282 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821071989 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823884568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821395626 seconds)
  done (took 121.951911511 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821694521 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822012624 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821755135 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822074874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821503931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821258545 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82213207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821104601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822203265 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821524064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82472052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821218563 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82198948 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821004478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822674655 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822541452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82259235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823479854 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821990847 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825941725 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821140161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822952026 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82266121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821553065 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823110295 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825846767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82380446 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822875628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824006434 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822158768 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823246857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822617878 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823288599 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822863965 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823802299 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823928594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82447839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823969865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823660279 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830086112 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8231081 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826679606 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824010794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823854479 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82456675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827219945 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824270029 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824234637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824244977 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824703257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82676367 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826031209 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825202683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824867075 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82417294 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824165999 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82825122 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82434888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82395074 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828288593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824404612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828332114 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82682526 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824511878 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824199713 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825232491 seconds)
  done (took 122.126391212 seconds)
done (took 2489.291045865 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.84238746 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.84609504 seconds)
  done (took 15.441448182 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.990689486 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.941408526 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.82763401 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.866255247 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.827615578 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.839451613 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.84362635 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.82813215 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.82695264 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.829161786 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.828321924 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.016617411 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.840430751 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.828146568 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82836345 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.921787918 seconds)
  done (took 51.643856598 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831707272 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.833546636 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.843144741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.835732908 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.831358839 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8441691 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.867868992 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.836298355 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.867415648 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.844617643 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.903603867 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.842950931 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.831374164 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.880450499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846062009 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.847398898 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.925432145 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.908460346 seconds)
  done (took 35.176149727 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.910246254 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.831066293 seconds)
  done (took 10.503328313 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.837236402 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.886780107 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.904177123 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.837214816 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.852102546 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.831295655 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.858299385 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.856439857 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.838616325 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.836731435 seconds)
  done (took 70.296822383 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.839795573 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.83593053 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.836107619 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.833975532 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.826766283 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.829252866 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.832560295 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.82949896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.492901587 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.869803699 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.840873039 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.840067501 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.833465334 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.835175703 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.829381262 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.858504513 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.957718134 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.83007381 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.828944388 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.839383238 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.834595224 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.907759053 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.849039348 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.834584512 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.86583118 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.500698001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.843754367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.841308021 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.954695905 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.831188923 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.834139961 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.835448513 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.837654442 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.213741618 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.116133889 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.833329238 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.84899199 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.844267443 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.8301607 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.963385751 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.83734398 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.840649573 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.775198848 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.09452507 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.953595432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884493673 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19225957 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851362153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.836730296 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.866590381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.839830416 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.836246213 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.850869552 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.353128059 seconds)
  done (took 130.716951337 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.831041076 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.100992237 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987348478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.83212545 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119522536 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039358129 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.831999052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881298126 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.831465266 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062069243 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.051470087 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941459199 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833206122 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.830439336 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829393722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829807115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.992954945 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.906622314 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832526187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.82890911 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86419308 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077284369 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.959464365 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.832773871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.853833534 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049262298 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957733842 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.942845148 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.297713674 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.831066314 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898361565 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.833224179 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.828881758 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.831025811 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992576754 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931465147 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921190155 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.832566709 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831468429 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83242319 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505809963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030413721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930417673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.975518752 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083841219 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04023923 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.620914287 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.830699601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.575229651 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995934789 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.068111221 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.06491997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956679963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.83516819 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.104472424 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.831442521 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.831117216 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06887781 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076943938 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937568669 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834672414 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.83290426 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831235742 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079839812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833682481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.929702995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836221674 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.831856787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930424694 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937217382 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084251968 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050590322 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869114705 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.135959369 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.303713873 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08355734 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.902451753 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066498947 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.836549385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831764113 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919991452 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.680130646 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036594193 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085127761 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089401497 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872513776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.560156447 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.834609802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.06490507 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.060928122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089952868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075540591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.989106938 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.159701135 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.836012495 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.835070152 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.073451873 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97407573 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836845581 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.197331095 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070900629 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.408557802 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868644096 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150935086 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970690383 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.836439484 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.47929988 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835974473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062557471 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.877891927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.835424954 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835668826 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056871158 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.816597476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837458457 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.57235999 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.899405475 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838268243 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07047235 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.838109805 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100946785 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838547241 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076190565 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.210832665 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87081971 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.009256734 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.07830253 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.839830624 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095569675 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083611892 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955557952 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110636534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.76173385 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838005493 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12832117 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839381539 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.835577956 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.010840402 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836822042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058356507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.839903959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125609348 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864659351 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996093514 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842490064 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097061768 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875084014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889579097 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839117941 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970089747 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839558825 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.715856007 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992209127 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838519331 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838269097 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.388770015 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.839344233 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99713276 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.071833121 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863963754 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915504646 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509655036 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838125178 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926951938 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866508123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.188799478 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.838939242 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.055085043 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.843221338 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.373255825 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.838729333 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.081731313 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.073318535 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838193982 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837418171 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.746613193 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.838516794 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838984043 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000565212 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.676217828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837835992 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043602737 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841608682 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971044941 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844618766 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.911953485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196227148 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836897631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.838188813 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.840679567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.838402469 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839950407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049684047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870902225 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.379505416 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981453643 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115510014 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.158742665 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.092452357 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888394741 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839532254 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088139638 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843050015 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.904211954 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.843878348 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863478862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077572852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84289275 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053722468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121857979 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.772551224 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891679379 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.84232648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838711208 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.756555361 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.995857855 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935369883 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846459217 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.840676264 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958042259 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.966765754 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.054866068 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.841928665 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.067939131 seconds)
  done (took 896.302169388 seconds)
done (took 1211.831940135 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.840342752 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838053386 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.828766772 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841504758 seconds)
  done (took 29.115848204 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.847624256 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.847972947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.847747564 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.848162207 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.848288235 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.847736393 seconds)
  done (took 12.858704573 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.909147889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.839194866 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841716969 seconds)
  done (took 21.360684174 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.915465759 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.228924147 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.965619966 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.277219277 seconds)
  done (took 10.157170614 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.847461235 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.847225296 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.846757696 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.847718418 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.848514331 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.84855879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.845721523 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.84773714 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.847744283 seconds)
  done (took 18.399946959 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.23991138 seconds)
done (took 97.901135388 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.383566204 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.292620903 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.032474723 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.241287119 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.510609235 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.853084097 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 5.735962797 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.979555248 seconds)
    (9/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.074337056 seconds)
    (10/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.840933462 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.837542606 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.000544538 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.869979896 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.871617971 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.989036814 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.228778395 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.91402587 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.927304175 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.897938719 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.532244657 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.998803118 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.342595364 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.940678126 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.839089971 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.471977402 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.086920712 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.099550819 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.236325418 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.837320684 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.820907989 seconds)
    (31/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.139669052 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.151546316 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94990285 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.846831139 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.979646353 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.061163266 seconds)
    (37/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.327043319 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.190966207 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.838559728 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.920312902 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.302276403 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.860175171 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.447085874 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.776650314 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.962737061 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.022517136 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.178408083 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.182406874 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.874766207 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.317181954 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.930713981 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.903382861 seconds)
    (53/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.981456566 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.155228119 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.366967348 seconds)
    (56/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204059411 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.937425148 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.855331576 seconds)
    (59/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.213946869 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.075156301 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.230980146 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.851200375 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.285430673 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.155867578 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.55082645 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.858387264 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.906111838 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173255768 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.924790433 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.900022497 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.089537131 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.651467767 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147420167 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.171700024 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.848298372 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.208732821 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.95298017 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.776720136 seconds)
    (79/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.018589977 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.190287343 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.585105955 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.993427042 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 6.850194327 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.390043913 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.925005765 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.084036889 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.851529845 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.137194126 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.023966589 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195145485 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.832384239 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.837849906 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.621115523 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.100855874 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.209627746 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.877145932 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.862927317 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.837537041 seconds)
    (99/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.250146492 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.841064357 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.111342034 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.85196816 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.031857699 seconds)
    (104/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.877788613 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851361706 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.926379357 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.416566774 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.080270773 seconds)
    (109/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.967947649 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.813909197 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.76302063 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.886075431 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.229041408 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.801135366 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.936696038 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.849506876 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.968864408 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.943924639 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.838591077 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.878390147 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.931579347 seconds)
    (122/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.987137733 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.301665586 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.870477458 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.850444045 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.848639084 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.390657512 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.116973428 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.384706545 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.971196217 seconds)
    (131/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.31732382 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.075637946 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.101640902 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.864767252 seconds)
    (135/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.983974328 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.956734783 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.02608891 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.204160484 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.962002474 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.871816524 seconds)
    (141/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.953289743 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.839214115 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.094557516 seconds)
    (144/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.40447086 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.071345346 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.914878874 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.920624764 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122313809 seconds)
    (149/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.928722325 seconds)
    (150/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.856886234 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.857113368 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.165981193 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.88910925 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.987576549 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.922833161 seconds)
    (156/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.856547493 seconds)
    (157/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.450117859 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.967167255 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.95993036 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.061881544 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.823582152 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.17390946 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.103840394 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.879245192 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129988337 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.857863557 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.967412627 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.021148285 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.936746215 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.857626006 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.441234471 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047744025 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.980414993 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.935677904 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.099348832 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.858472397 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.920408999 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.863786222 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883742449 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.872851497 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.205556591 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444168419 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115074393 seconds)
    (184/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.008441928 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.838522633 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.13166181 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.854630226 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.48448168 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.841918513 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.856355217 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.042830309 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.176130601 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.875023249 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.069952626 seconds)
    (195/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.012871458 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.521853636 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.699281512 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.885404067 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.540146062 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.037318464 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.048777337 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.946316601 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.93072772 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.967432935 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.230371907 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.16862692 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.857089049 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.939335395 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.946866921 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.167810614 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.922612487 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.862771517 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.968440699 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 5.608241062 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.82856984 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.96793741 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.560424987 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.89852236 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.918379323 seconds)
    (220/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.084978445 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.864930128 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.109834272 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.927726315 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.85428836 seconds)
    (225/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.2650266 seconds)
    (226/309) benchmarking ("sort", Int8, false)...
    done (took 4.824358856 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.97665466 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.457082813 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.976871467 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.247221443 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.880911236 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.884004262 seconds)
    (233/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333775138 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.992975106 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.942680426 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.186984204 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.973354581 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.09185475 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.484050335 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.899375147 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24773952 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.197173239 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.164735647 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.137213395 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.910929849 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.768011976 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.398179965 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.04705436 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.843726482 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.942236106 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.867669231 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.014006481 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.321139435 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.187715279 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852485165 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.921551624 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.298199854 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.878717131 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.958263723 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.159358826 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.122061443 seconds)
    (262/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.35421967 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.403040864 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.718194036 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.948722936 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.880865347 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.795988611 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.164929973 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.882434949 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.468391823 seconds)
    (271/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.929476948 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.847738075 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.212463371 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.669456652 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.852373997 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.19540573 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.188482753 seconds)
    (278/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.110075345 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.844313896 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.967775412 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.070863403 seconds)
    (282/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.850770815 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.828354998 seconds)
    (284/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.064066553 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.91919007 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.852976092 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.920305453 seconds)
    (288/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.863107166 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.353600801 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.970161469 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.840959585 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.207481882 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.591199985 seconds)
    (294/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.323198245 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.842606464 seconds)
    (296/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.835569127 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.865461478 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.851381046 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.85860299 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.7633174 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.943042929 seconds)
    (302/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.854615793 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023717465 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.861958429 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.834798177 seconds)
    (306/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.170962278 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.838255796 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.91175475 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.305907644 seconds)
  done (took 1004.299826121 seconds)
done (took 1006.3436656 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.889678251 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859359772 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.837810929 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.856407361 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.953710124 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.876133278 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.845283579 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.837497675 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.881099252 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.882801041 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.838524462 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.872724327 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.846236541 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838744906 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.830988332 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.85228721 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152577449 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.871052192 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.855587192 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.838516491 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.853385431 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.83579728 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.879602352 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.870234922 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.833635575 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.830999881 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.838169247 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.854322073 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.946650136 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.835468476 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.829439742 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.843723435 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.145993544 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.857001119 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.823677647 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.851020546 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.843252198 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.834195083 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.829821987 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.865919303 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.242282215 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.873104016 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.830997113 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.824162778 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.824124097 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.826139754 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.830906566 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.828131316 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842631071 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.843374522 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.231798409 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.886965894 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.832830087 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.823583378 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.834251944 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.829849912 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.826989017 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846455054 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.850017868 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845713103 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.131762851 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.860864338 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.824873555 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.847022274 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.837232288 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.269320497 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.861179079 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.827616314 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.237050469 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.871864358 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.269148546 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.881023494 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.825137821 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.845871553 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.863001396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.142394639 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.851679959 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.824170324 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.838967515 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.831230298 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.8340775 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845199884 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.830773125 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.825984339 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846157499 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.866493426 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.834465745 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.832479073 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.833124524 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.851212594 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.839973164 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.843607223 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.828745372 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.820661585 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.834474608 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.829094423 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.835432177 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.836056476 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.830643019 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.836597777 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.238035307 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893077827 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.823223616 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.823723634 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.825855791 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.846742725 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.237604859 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.876531972 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.848247227 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.873441439 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.830279909 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.134494418 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.868734941 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84970424 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.835212982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.82980696 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.821330195 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.134102158 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.267400657 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.892494802 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.828039139 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.832480965 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849920296 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.828478689 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.823944103 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.597241547 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.862107301 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84779583 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.954214615 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.837938798 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.866350325 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.832155738 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831533972 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.86889408 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851166235 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.865844958 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.831277583 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84948991 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.850960034 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.823969537 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.84571905 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.838400961 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.830158332 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.833153727 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.821791411 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.86991578 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847794983 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847740182 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.849462928 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.956150879 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.825632961 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.136820593 seconds)
done (took 288.712082703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.90124998 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.828311033 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.928513824 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.824889113 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.911060471 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.916419533 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.823157081 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.822419228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.822002077 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.200232685 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.82366287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.823467326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.820046488 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.82346141 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.911474878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.825688157 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.822871019 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.164339554 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.827034965 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.901422976 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.824790802 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.824259463 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.826081231 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.203367937 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.824958549 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.830341891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901686754 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.82650638 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.168798969 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.829175343 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.827029786 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.168385833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.921879866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.845529145 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.837288198 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.833572119 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.912889251 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.831773331 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.911801492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.91200698 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.930806898 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.867699249 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.830408633 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.824106693 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.831569982 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.829041651 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.824484608 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.853641116 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.824806453 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.825956495 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.163247392 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.833872383 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.831376237 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.821369363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.823224191 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.847806618 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.819389366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.824269701 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.917029706 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.82331326 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.889141267 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.198650753 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.196931525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.822947509 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.822913336 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.819974619 seconds)
  done (took 181.436879219 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.890729842 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.898797918 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.893012471 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.830096954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.87550111 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.89442659 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.83037058 seconds)
  done (took 14.863154901 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.831229677 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.823158662 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874806032 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.874871162 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.82346555 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.975151002 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822994272 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.836423363 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.820467015 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.878466214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.824644399 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82328159 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.830103779 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.825238656 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.874426857 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.837508463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.94193086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.827943172 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.824043907 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.977037989 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820859692 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.829489802 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.880688014 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.838012214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.824572452 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.833003727 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.410502337 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824001006 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.82085028 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.824648062 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820629243 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.868556071 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.824112872 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.820164878 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821553551 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942109388 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.824747943 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821088535 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.824499304 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.827154234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.824783603 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.826259383 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.826306395 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.823878641 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.826224755 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.853343758 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.826562951 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.826221541 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.826661447 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.826594808 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.879272282 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.82591468 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.823981858 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.822905201 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.884311747 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832648042 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.827501041 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.823451389 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.826839853 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82388442 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.98070167 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.877101979 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.82652107 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878177637 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826986976 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.82754051 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.826579108 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.826379173 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924926615 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.827018479 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.885663917 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.824862393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.988618265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.853871082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82850083 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.833027873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.831982679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.828120609 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.823771795 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.837423715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.825096293 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.832510413 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.836397361 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825533801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824958191 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.942931444 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.93837534 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.825597001 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.843460322 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.837677945 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.824973583 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.883156775 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.828001561 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.82601068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885661289 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.947151755 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.886786885 seconds)
  done (took 201.630776265 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.836034588 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.839228619 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.832523523 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.847625532 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.830880956 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.831382792 seconds)
  done (took 12.773752194 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.834253855 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.829969841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.829257451 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.829830328 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.8292088 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.830957073 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.829881149 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834686868 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.834083662 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.828673717 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.831506164 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.831119681 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.832223467 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.83004356 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.830726765 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.829790948 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.831054706 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.826430089 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.830364481 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830418262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.991988826 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.829255275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.829736953 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.834044716 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.835674042 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.829744686 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841963934 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.829646574 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.831067614 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.842566995 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.835460195 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.833373125 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.83403811 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.840203564 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.835528797 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.835321946 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834928565 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.833345039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.828681007 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.83245165 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.833054177 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832341558 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.831590632 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.832907363 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.836667113 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.83974049 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.837411327 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.842371615 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.832138231 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.832851644 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.833724941 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.831802808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.833193785 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.833222266 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.837462375 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841148952 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.836939758 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.832569176 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.832736231 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.836409842 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.832158625 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.834226221 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.836538497 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.836792248 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.829983447 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.833337499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.836332816 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.836815264 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833460766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.832358081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.83412617 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.829726632 seconds)
  done (took 134.918794228 seconds)
done (took 547.395383728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.987849001 seconds)
  done (took 8.747900492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.070998323 seconds)
  done (took 8.916842268 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.370810121 seconds)
  done (took 10.178712902 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.895800135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894411839 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886184375 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.876276108 seconds)
  done (took 29.384216311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.967743308 seconds)
  done (took 8.774117232 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.897816657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.872963255 seconds)
  done (took 15.610488956 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.938341802 seconds)
  done (took 8.745387905 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.957494557 seconds)
  done (took 8.790505565 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.895656806 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.908451484 seconds)
  done (took 15.624637473 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.862589052 seconds)
  done (took 8.66632399 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.466654279 seconds)
  done (took 11.362829203 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.889052808 seconds)
  done (took 8.793935658 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.951962097 seconds)
  done (took 8.751303895 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.967434482 seconds)
  done (took 8.763205794 seconds)
done (took 162.870592356 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.864987964 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.858948031 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.858297289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.855729007 seconds)
  done (took 29.232238345 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.892160764 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.891971999 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.893222649 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.899905243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.893187272 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.889712642 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.88157503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.881769759 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.898311406 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.889798914 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.889393093 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.888861102 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.887612354 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.877207963 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.887719808 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.88831045 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.896183849 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.886767684 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.87916042 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.884714422 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.84993387 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.893168535 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.886079765 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.850423302 seconds)
  done (took 47.042916198 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.04960487 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.920918727 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.003017633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.902655644 seconds)
  done (took 9.650081576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.894768861 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.896600628 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.909140604 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.949485876 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.968177253 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.904091095 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.868037892 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.862194854 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.848595472 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.896188415 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.967060641 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.884714049 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.978927441 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.838267978 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.027182064 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.835013632 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.836008089 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.888553211 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.93994475 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.954884978 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.833947935 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.884308911 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.888513685 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.880503542 seconds)
  done (took 47.407073226 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.831640764 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838585698 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.836708084 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830753475 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831143872 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.831664936 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.834731356 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.828398825 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.8508076 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.829531943 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.829287336 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.82708581 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.826552047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.827704019 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.82679624 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.839760169 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.840810852 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.827054906 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.830213064 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.833780602 seconds)
  done (took 38.415326953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.824687738 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.679719552 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.177133337 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.081351983 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.824951137 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.825351377 seconds)
  done (took 31.170001047 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.846105176 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.837598016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.83189546 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89139639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.973566868 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.840038162 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.832128242 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.845041188 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881359082 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.89731338 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.855003149 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.86213864 seconds)
  done (took 24.148781925 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.827574517 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.828087672 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.827305697 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.844382906 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.84313719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.840269643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.839426683 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.825655081 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.848392708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.851193963 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.839563007 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.84371709 seconds)
  done (took 43.819706431 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911734034 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71386164 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.866711086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545928844 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294922923 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028561312 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352627821 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17084873 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.81836237 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088600452 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781191468 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060586074 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.071504073 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817246903 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909352138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.329605682 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11771244 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051286748 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845723426 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535830973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988982551 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.461744717 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.628318654 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995209814 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078753456 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.001706708 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.127786721 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833233925 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002237981 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906082986 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876141747 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866901671 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140263317 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248798259 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964788497 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876802416 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523328332 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.59005423 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.907665066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.593906319 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.794925811 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.003134148 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879169266 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870994324 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805766964 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467493206 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211508707 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.876266068 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.581905386 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870975188 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88207362 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958602652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.874863664 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.688104653 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830276282 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.152638101 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.867427902 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875971171 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438144101 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938464294 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.575386767 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.804240735 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.06686669 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613160866 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34186202 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.017403315 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.869642929 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869465747 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800284158 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.601570464 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992964278 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012255243 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.887884097 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516606651 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176354255 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.908659359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.950931401 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159339576 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.731667531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.803403087 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096454607 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825745171 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802815146 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.734600209 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802373899 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141207717 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906337877 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.512105666 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912248787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203551948 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879478227 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88472161 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876289161 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092422435 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.757161191 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86887774 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.616188011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164345132 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890492538 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20536038 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803761673 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.872646836 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124466013 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.080080903 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.058678513 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.50808916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029886676 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869252866 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.956789233 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.746775677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00969524 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.147066549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93009758 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949855977 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009384561 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.836079791 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188734624 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905718091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.050975852 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.859742028 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14695049 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.228917017 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171306119 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942186896 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887751273 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.87801969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617458842 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511803185 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.150531828 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.889708273 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333252622 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006994719 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.884380318 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818494104 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.483135495 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900231257 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.000325317 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10827615 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.76943511 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276395544 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819198463 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029956238 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999076495 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.108076179 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.540356588 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.96888832 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141216867 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336611794 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.196531175 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0100281 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903824687 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974486878 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907498431 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.269400397 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252126366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889373731 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.889398605 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625643125 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.966167441 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889472211 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.894838275 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690401738 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176940811 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917291108 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893161281 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.779242719 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.904388413 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956238375 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89604067 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900644765 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.435183432 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661908222 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.902480952 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.489717294 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116797238 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901377935 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.62039249 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078145972 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.973331023 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170906371 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953339824 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.825260537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.601808094 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.584176667 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89213255 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827463196 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892124377 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901422887 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902349693 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.27530664 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176633848 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938962496 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.664115229 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.011467804 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905558511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.899857207 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895848638 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.419112019 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003946877 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.473971226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021234868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034904536 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.911481133 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831178822 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901575103 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902948976 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897633821 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.854603017 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950946843 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.629167099 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356400425 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158236493 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596740796 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918597371 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.650883842 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.03257514 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.922544215 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.671896452 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943600752 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.013440729 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982439342 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.916536917 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.650479645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.688732987 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47256437 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221535709 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223827909 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351958278 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.357815396 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.287503062 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244804739 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140155197 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4346858 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965961909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249368654 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849424515 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989366085 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.559442251 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264151027 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92148548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133240825 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299169937 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.723373201 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068564193 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116859959 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940633222 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.769951392 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946872343 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.11820888 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049233427 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.719910838 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126642823 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239692589 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.647062696 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.018529934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.908129219 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618672555 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9909638 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.61698162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268196653 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.506972485 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885847241 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400031108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.9098672 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352184922 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266306358 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314856294 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.992060236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841985283 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918247341 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917725424 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.914022381 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.881743953 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.76663554 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.160122512 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91779326 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142850412 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269827365 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17141202 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.812562163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.91435998 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908208431 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211082594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.650858584 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155662928 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.319614128 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.493705671 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920533824 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843275562 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843332672 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.600956064 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91609675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88253563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136423956 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.098659651 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866168039 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359489243 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231243689 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16379255 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.922485503 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187063933 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184392894 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646090137 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937713796 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.008967956 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65464117 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.035212572 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177872 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145081181 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710986238 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140969468 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.965348273 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.733676783 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911228881 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124783856 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.179102062 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893389563 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162766612 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.633105323 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.9247753 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294837182 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968956759 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883974029 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.083395407 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.106433949 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923417462 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995432803 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919996229 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.921640173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921797733 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959101991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891654343 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04611759 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.924369672 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997736687 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985025247 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.496268403 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.92207529 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19938376 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275854651 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243776551 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974301787 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911835015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911902245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844925087 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048088599 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357610456 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18543372 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041212716 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.213315739 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936810672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.654851231 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263872125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237060917 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186452035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.807010698 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912793299 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024984836 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.179567548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923285422 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.123754019 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14688105 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233770434 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384948577 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.126096424 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362202695 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186724484 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.287161972 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914474389 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501268052 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.920017392 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.689142862 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.955332825 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892066785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197956017 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923777485 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295027509 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936073343 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.111040903 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430166748 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739809712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27888647 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.912211606 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976977542 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195525462 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306998324 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227666052 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985594663 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924881403 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.627748803 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051051646 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.787813748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185611377 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915752977 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125937416 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.624439968 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924768382 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196873775 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225075431 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.912487371 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.750613535 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926175432 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.925932558 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138867465 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188119885 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169403853 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927046594 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923479127 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732687615 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196204281 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976167777 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850088865 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.919413973 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014151919 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163589112 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935484855 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.603485321 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62613838 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215261304 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.837312188 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938272479 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37454211 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369027014 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249207768 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.441180419 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152598168 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476588746 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.803214713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299249233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.922560658 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378172263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305406636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.920110219 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.483193408 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038101069 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.193551141 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237898846 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.93400617 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748218984 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.963507494 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140888966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586272876 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860814254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917826398 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.983230995 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917822433 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046970278 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92895396 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.776358335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818766348 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.74752436 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413378815 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.923888832 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.911121606 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.691267282 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.55811816 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039706974 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061487479 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925691427 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.638161212 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.211411109 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172041391 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.489894838 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.004649457 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.922185943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918958772 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847182108 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118290451 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.301539129 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222086805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.340232034 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.038809243 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922833757 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.135038635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130859488 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.902373635 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078654338 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37552798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039697303 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.696152663 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.599020006 seconds)
  done (took 1701.866282699 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962212534 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.935617664 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.941411484 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.978020306 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958790298 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976551073 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.993967028 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976490358 seconds)
  done (took 57.575144377 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.921491944 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.137426801 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931453309 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.923054674 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.948518187 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.922207996 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.113141216 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.935381531 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.947107604 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.933155906 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.923650703 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.936152686 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.260096181 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.94996199 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.923218508 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.93328539 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.932191056 seconds)
  done (took 75.431441839 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.923351428 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.103109422 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.961455091 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946542005 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.887969348 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.921948098 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.999895202 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.94355303 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.925140772 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.159450588 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.267173903 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.981687108 seconds)
  done (took 90.875033217 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.938802301 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.929897014 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.930580976 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.930209174 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.929943912 seconds)
  done (took 11.520139041 seconds)
done (took 2209.960581081 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.175136243 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157233928 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.16109422 seconds)
  done (took 6.171316331 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.073045831 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.122583787 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.241107476 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.262422184 seconds)
  done (took 10.556362194 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.216752271 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.297302915 seconds)
  done (took 6.366908812 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.294228357 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.954100507 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.332511607 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.922224067 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924783559 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.922354293 seconds)
  done (took 22.628516815 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.92586051 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.928838861 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.926374075 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.928522071 seconds)
  done (took 9.564081123 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.914316385 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.685075473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.915229427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.927742481 seconds)
  done (took 21.296175048 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.673910213 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.325100864 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.669456703 seconds)
  done (took 9.521919491 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.494576244 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.772385703 seconds)
  done (took 9.120619362 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.183322633 seconds)
  done (took 4.037702956 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.954532724 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195717623 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.456155035 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.475051707 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.544919191 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.773445196 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.234517311 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.164162748 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.37773346 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.396400842 seconds)
  done (took 25.427230647 seconds)
done (took 140.298992836 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.295587747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.301705802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.123330838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.267297321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.160958054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.124666763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.136871489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.250083337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.770136244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.768177535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.316084234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.153229329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.088537214 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.289486249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.093492904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.162050087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.14768306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.315883578 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.964852431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.162136283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.145751579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.903895791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.16603199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.9196472 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.164448681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.081291596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.510642879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.169574298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.174121546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.491838292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074591543 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.316977452 seconds)
  done (took 172.868054795 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.92840045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935706041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.940935758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928771041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.33825942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.944893037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.928270319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928663842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.275563278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.263386785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.955225529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.365298861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957558005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928787154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962414445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929525362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.481196553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.958488489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957822992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95899017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.960533145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.188356398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.955393572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.234919579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.444814769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953885749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929895154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953992998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.95519752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.954564988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958747824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930258501 seconds)
  done (took 211.155173612 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.929593005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933952453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936392089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930581704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.940650117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.944773567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931416749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931023291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.537444778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.579072657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950655683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.936123609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.945294781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929686906 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950517365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931207674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.953309944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.955307018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.953569617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949184469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949983246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.594106056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.948344865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.550212908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.933412816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.93557625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93232929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939500757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.94178369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94432535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.949058286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932007097 seconds)
  done (took 222.487914002 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.133576994 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.935806763 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.936360683 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.864260199 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.936535698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.936103757 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.878919008 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.126134765 seconds)
  done (took 19.629181261 seconds)
done (took 628.004007292 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399875468 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.253410163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.113536322 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.961308579 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.196769011 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.996839481 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.956584754 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.025105358 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.689083444 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.028716227 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648295175 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.982030996 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.739539091 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985201119 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.079580334 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.018576187 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.506936116 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.595881672 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.141833787 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.019221543 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.13099292 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.893593875 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.040966926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.714162745 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.760293607 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.947737169 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.131171347 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.506252007 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.968110801 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.123084523 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.724336166 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.371346821 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.974722598 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.957297827 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.014236735 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.992540241 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.316093517 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.972648761 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.08015163 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.695217531 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.015890176 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.570374553 seconds)
  done (took 106.101606459 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.933353479 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.93217717 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.932239701 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.93277423 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.933698469 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.931984364 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.932940358 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.931925202 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93297668 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.93269078 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.932540568 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.933827415 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.932455415 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.934183871 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.931874858 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.932426111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.933365212 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.934581563 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.932593658 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.93177892 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.932731354 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.932536473 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.939857551 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.932809865 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.93329353 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.934425032 seconds)
  done (took 52.134698124 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.939989432 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.09141497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.20491492 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964084144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.941755769 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.945837153 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.961232294 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.945976562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.944385774 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.944594327 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.036072665 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.947859154 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961914705 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.20480832 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.961153842 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.94087589 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.942238343 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.943446133 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.098491825 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961458921 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962943786 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.946863149 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963085979 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.95843228 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945716805 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945145251 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.94841077 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.415636963 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.954759522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.037184467 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.988450064 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.968653154 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.373581538 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217479905 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.001144382 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.950828482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.942148686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.040092042 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.950947198 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944270324 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.962714222 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949998459 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.204657544 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.445023368 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.960551788 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.942885701 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.42641904 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.049388342 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.986705977 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95484456 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.208041641 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.964115971 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94361031 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.945418594 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.982030677 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955255863 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.945062294 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.266273783 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.958681489 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.964480235 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.949549815 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.946554728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106379076 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.954910697 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.094397004 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95635839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.953012913 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.946510238 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.207664908 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965654586 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.449306516 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.962438035 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944167432 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.037993467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.099605657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.45574528 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959834033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.109853627 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.383662416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.972204183 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.954703503 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.405225233 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.975992674 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.955487543 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.946547853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.947075469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.945651749 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.989732377 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.963728906 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.376313581 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.455192706 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.285852945 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.974496662 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962977166 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947436445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.266368863 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.95472851 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.945801795 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.202640818 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.460883124 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.963919987 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.955785524 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.439433622 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.965590376 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.967080461 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.95731453 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.211817323 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.965567914 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.989430526 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.945994157 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.9550458 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.951544974 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.967666681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.956106005 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946664326 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.42752806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.060795286 seconds)
  done (took 241.222894616 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.943082542 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.966322133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.943483824 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.969850249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.943061551 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.948448071 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.941258918 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.94201073 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.948237226 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.941923242 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942260167 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.942280817 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94550239 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.942217565 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.564271196 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.951137251 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.600890028 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.944608626 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.94233767 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.95167657 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.636008117 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.952008157 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.944192994 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.944126745 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.946106657 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.943327571 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.952904332 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.071533657 seconds)
  done (took 170.478857318 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949567141 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.132254563 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.969156446 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.990886381 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.957855988 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.946487943 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.976098529 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.974024814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.957126934 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94651773 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947546574 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.012839166 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.959575996 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.092885825 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.983861607 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.983101073 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057029387 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.956569514 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.947828599 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.947473408 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.980842456 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.951181565 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.013020897 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.079336946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.969260941 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068717755 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.962906102 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951221178 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.952240895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070639038 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.968052789 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.010576756 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.980546996 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.970645319 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.074066906 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071073333 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055710134 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.979937345 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.956677862 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948096171 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.947791965 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.943821541 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069436395 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.971863369 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.953590868 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.064350696 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.972238292 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.95144121 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.959441276 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.948544221 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.966000416 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.971838881 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.021292865 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086136118 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.985175927 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.975681491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.977457962 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.252695704 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.961236365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053601934 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.950646911 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067773485 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.972181871 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.945278061 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.951039351 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.956011231 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.979227541 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983568924 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.062607707 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960825152 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.054849417 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.985696512 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.957701352 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.951025023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953389753 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.072675226 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074814162 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.986847548 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.992042387 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.986769838 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.95501044 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.954918315 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.947308932 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.972551407 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.955502761 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.070251633 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.07388588 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.959883209 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953638816 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.953594227 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.953974124 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.980225299 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.081055599 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.991157412 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.055312006 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.02284629 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.029912386 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.966957919 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.965098357 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956522013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.019917963 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967813505 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.96444696 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.300266184 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.027262756 seconds)
  done (took 211.538886328 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.409436726 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.005416018 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.013777523 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.280240137 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.381310782 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.855848727 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.003031227 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.002887398 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.028947696 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.190427134 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.078674311 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.020773593 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.994217774 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.979434295 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.003778518 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.025148079 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.010886296 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.324147453 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.129735337 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.130470285 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.988148328 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.28055301 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.328377305 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.431095243 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040465301 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.34832396 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.672389921 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.144278485 seconds)
  done (took 63.987120087 seconds)
done (took 847.323438094 seconds)
SAVING RESULT...
DONE!
