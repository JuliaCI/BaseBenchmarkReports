cset: moving following pidspec: 13374
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.574639985 seconds)
loading group "shootout"... done (took 1.17036101 seconds)
loading group "string"... done (took 0.422104107 seconds)
loading group "linalg"... done (took 7.823565702 seconds)
loading group "parallel"... done (took 0.150762109 seconds)
loading group "find"... done (took 1.380785991 seconds)
loading group "tuple"... done (took 1.918306718 seconds)
loading group "union"... done (took 12.512722591 seconds)
loading group "dates"... done (took 1.296739855 seconds)
loading group "micro"... done (took 0.246106746 seconds)
loading group "simd"... done (took 4.310945444 seconds)
loading group "io"... done (took 0.997749678 seconds)
loading group "random"... done (took 8.742483922 seconds)
loading group "problem"... done (took 1.490147977 seconds)
loading group "array"... done (took 19.0346672 seconds)
loading group "misc"... done (took 1.589866191 seconds)
loading group "scalar"... done (took 39.462335604 seconds)
loading group "sort"... done (took 2.976786251 seconds)
loading group "sparse"... done (took 11.678572922 seconds)
loading group "collection"... done (took 16.999005985 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534933988 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12716869 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135819176 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121252773 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156651146 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118638337 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125814227 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084794443 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.889093717 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152040717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114908043 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.448546379 seconds)
done (took 5.46148759 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170681188 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085635058 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079546791 seconds)
  done (took 1.29686325 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066027631 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128062199 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067286811 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067722295 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067453415 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066849027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067146334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066728695 seconds)
  done (took 1.664587409 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071863164 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072036394 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066344665 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068795553 seconds)
  done (took 1.412857621 seconds)
done (took 5.762375181 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.244410533 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.110803746 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.306550562 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.323263825 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.417282044 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092433044 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074311989 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071899493 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130497116 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321409495 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115710443 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.194088509 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100577369 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.18438161 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.016792005 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.129688607 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086635373 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125439344 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093000702 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131474906 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.368473745 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077454185 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.084296642 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.071881723 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068414543 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.65326943 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665958279 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139112456 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082616325 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.080238136 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.119760865 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643415255 seconds)
  done (took 10.490269997 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099457954 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098581898 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069775582 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125591398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097071197 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070063267 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075463772 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068059576 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09013063 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128657716 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088731331 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105242402 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065655205 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069085983 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084864639 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197975074 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079458112 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08083649 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06748858 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077661309 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106247737 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077042069 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077663938 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078949577 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128279637 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168538761 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095556347 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099468566 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065868138 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079643459 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114364337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124795437 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065706597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069545209 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124645175 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096270658 seconds)
  done (took 4.596921646 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.121779162 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092763444 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.108858385 seconds)
    (3/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066806536 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.619468596 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150593608 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237977019 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07373597 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.490939059 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092519352 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.156977548 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123285673 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143580924 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123441479 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070649022 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.271481361 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123460777 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.286270381 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.0693512 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067560512 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066461096 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076432157 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069110943 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064889404 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077219953 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092724399 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.089552348 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.181841438 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.989397762 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.301613518 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069083852 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166781703 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08548269 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.366107252 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076261391 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.091570353 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.404393659 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.126389272 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06779214 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164013041 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.132531577 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066132138 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118639767 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.0794643 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070466308 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072510832 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09392208 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069380263 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079819585 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079497832 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102552871 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068171867 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066517688 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170758775 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064951477 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066815436 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068409107 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150769677 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066106258 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14941995 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065349066 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069418681 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096987782 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074707996 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088698919 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113590548 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.33061973 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.040793084 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067152478 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.224512792 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077747975 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066555081 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.083958192 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067128855 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069310787 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067927743 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.076961791 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071334549 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069961635 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.110831572 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068498267 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071147489 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067139894 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06522083 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072385915 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098491031 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06687464 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.46758966 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098105367 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066113014 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.079295275 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106554637 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066393154 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074573955 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069162775 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073613656 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066554994 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068770855 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073669863 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093555323 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070774411 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113114913 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.169438832 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070772444 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067867084 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073510184 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071297164 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070028646 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065659095 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066933027 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070312542 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068909071 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066001503 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.119713755 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067627739 seconds)
  done (took 22.23624292 seconds)
done (took 39.579729617 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244617178 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082840047 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083403259 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084031851 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083530554 seconds)
  done (took 1.808967108 seconds)
done (took 3.031290825 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109813917 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.068316967 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.104387465 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.103843099 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064903938 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064757678 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.101681977 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064999326 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.101631679 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.104239355 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.106281916 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.104865197 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.067979897 seconds)
  done (took 2.3948245 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069087513 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080822272 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083849007 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063059265 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073176019 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081859752 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063380503 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081167408 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088458815 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082427981 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081819738 seconds)
  done (took 2.065324461 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069370179 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081139474 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084022551 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062775479 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073645512 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081794326 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062749913 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081080682 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086590032 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08261782 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082020372 seconds)
  done (took 2.056109237 seconds)
done (took 7.725483249 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075489872 seconds)
  done (took 1.267665852 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541993175 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.506874693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.077565976 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099711791 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196138772 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108466684 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.233911776 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082457743 seconds)
  done (took 8.222883141 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10733556 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069828133 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069832927 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070729841 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070756967 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070895237 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069999232 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070144274 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069127834 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070305452 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069840598 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071348989 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070091236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070904364 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069494211 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070084216 seconds)
  done (took 2.44728368 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096431022 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096368367 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073661502 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075752818 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073292088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07279621 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075482452 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074526719 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072589718 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073468254 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076102799 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075070721 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07408113 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065076735 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074765209 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077230853 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071756691 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074490261 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075553722 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076313253 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075634005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064406082 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073818138 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074148993 seconds)
  done (took 3.130859739 seconds)
done (took 16.278085932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113243853 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077627818 seconds)
  done (took 1.389713789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076479805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079378502 seconds)
  done (took 1.370447141 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075012605 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062313287 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083273938 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073325653 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063144238 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06286219 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081658239 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063688369 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06259148 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062846876 seconds)
  done (took 1.906683531 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063556704 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071360024 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069445634 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078829121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.069472199 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064246916 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067645073 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06453844 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072247547 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063632264 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068194936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083339083 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067500873 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084859986 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067650475 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067900217 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070439685 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067699908 seconds)
  done (took 2.48066665 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061387954 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063501604 seconds)
  done (took 1.351759169 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065831542 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063518056 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066354716 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066147509 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063937755 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0631401 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063359089 seconds)
  done (took 1.668433267 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.367025162 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125187581 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334582356 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071105515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080716289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262660942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064758008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070383271 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070470241 seconds)
  done (took 2.709451773 seconds)
done (took 14.104443329 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079374895 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086510245 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098054976 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410515623 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093228597 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068353941 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113838265 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178665919 seconds)
done (took 2.363500729 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208102854 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.319604613 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.877915528 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.068109561 seconds)
  done (took 3.488249774 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334477827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086460322 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07841703 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068432766 seconds)
  done (took 1.80942668 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066275754 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071297258 seconds)
  done (took 1.371940278 seconds)
done (took 8.115738672 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090193124 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06496105 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064766459 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064472755 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065323687 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064605756 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065320357 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065000135 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06523864 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064856461 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065072494 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065027251 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064357022 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06547762 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065045448 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064846681 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065194643 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065238786 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065225236 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065099031 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064770601 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065190429 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065036439 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06470604 seconds)
  done (took 2.844533431 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080113876 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066114208 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068304254 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069201821 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06900456 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068693921 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069347065 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066974805 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068785458 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066731743 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069333148 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069184039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066788716 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069482835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067261225 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069174173 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069131622 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067547018 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06686568 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068914371 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068922391 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068217963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068881677 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069159582 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069314758 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069149095 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067207671 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067706588 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068858335 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070172787 seconds)
  done (took 3.30909368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064029803 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061277404 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062280533 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070474849 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061480319 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.062016453 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062518685 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061231293 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062302686 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.063019973 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062035912 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.061626557 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062327831 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.061106862 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061513116 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062485073 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066310001 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079350939 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061829961 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061301304 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065221592 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.061712882 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061299714 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061207777 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.062309514 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061839089 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064522233 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06210475 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.061837446 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062448762 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.061541397 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065491685 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066574725 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.061636777 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070876295 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065894585 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.061356358 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06543831 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.063072321 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061062474 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061401638 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06149892 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.061507132 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061583153 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070801513 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.061551216 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062447836 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.062220458 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061499966 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.061180501 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061044623 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.063218873 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06699055 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062919977 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.061012812 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062420268 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061104267 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061957203 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.061556256 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060829785 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061243175 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065010437 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.063130124 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061894447 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079453233 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.063626838 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069838085 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061182929 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062222099 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064698695 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061840972 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076941389 seconds)
  done (took 5.823928578 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085366556 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086196948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06483342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066010668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062754556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061738236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07027424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062499665 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066495412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081137688 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062354709 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066640314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066455629 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066491011 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061960562 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06701393 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07094152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062541652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06209502 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066693937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062843858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070100277 seconds)
  done (took 2.750061032 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147524026 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068522084 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106800885 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073004506 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071352389 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073160441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067826531 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067677872 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068102518 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068743113 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069038149 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067825828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070483833 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06867111 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068661699 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068765511 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068098407 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06862273 seconds)
  done (took 2.61281175 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077017603 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066274571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08656186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067264146 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067413345 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067212694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071652533 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072367095 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066938647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067767158 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072441981 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067418217 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066924206 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067415645 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067219283 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067586846 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067357356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0675319 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072298357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071684898 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07153195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072475206 seconds)
  done (took 2.794367215 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077695408 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066864478 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083043369 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068611768 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062200077 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062386671 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068452329 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066384461 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068280243 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067053576 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066930933 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062285046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069592541 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067023837 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069191789 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06672947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066451825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066959073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066700476 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062110338 seconds)
  done (took 2.606746995 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080707081 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074037588 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064927734 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071431623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064966339 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066194338 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071013317 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064821717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065164351 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085786641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065797133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065361045 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071770015 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069411346 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065437679 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071483144 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071827568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074129858 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065423587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065119959 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08600185 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065461992 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071554869 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065140961 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065245103 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065640872 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065143099 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069346325 seconds)
  done (took 3.200965399 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064250401 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064771514 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064940131 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065042378 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06509867 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064782253 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064694819 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065036208 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064801065 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064819051 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064625602 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064950008 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064935514 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064492212 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064528322 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064570541 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065392467 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065417251 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064800312 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064964798 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064292111 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064524414 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064491088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065084244 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065328826 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064298909 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065394316 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065267234 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064289772 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064826625 seconds)
  done (took 3.203162326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073697225 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071712309 seconds)
  done (took 1.401776165 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06247005 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078118867 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059832474 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071324713 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068913408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064094973 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069891009 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069830276 seconds)
  done (took 1.79484845 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.074449322 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.097727687 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062648321 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063260685 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07362909 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121455658 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08389513 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072990888 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07558397 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06524041 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.063967998 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082603315 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063569447 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074262271 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065255363 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070911706 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069276684 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077774776 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074902237 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062154026 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074166749 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06469834 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062376845 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065203003 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063913217 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069260308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077487828 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074470766 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071106896 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061271877 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080113956 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062177421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064458046 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071141929 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074873662 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.062616575 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097202605 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.063285812 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.069009479 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062409802 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074495533 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081259381 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075592892 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079985939 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063979771 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064683912 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06182958 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.064839757 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065537041 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070944758 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062666525 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069010801 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061625279 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.064364563 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071967904 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063176009 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.069260506 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071231137 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073804376 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071819 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069992598 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076401941 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070965799 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.07158475 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063651041 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079610203 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.064296822 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073820051 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075759151 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063297588 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076345474 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062733901 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06133156 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061917965 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093578707 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064131971 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.063573199 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.062402438 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061980074 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.064599842 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071667725 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.069596952 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068057598 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065980558 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07662957 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070583627 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.061951443 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070608595 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079849892 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064803637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062639657 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077409908 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065414516 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062311831 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082949348 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070936181 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.064521031 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063179582 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06544865 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077750996 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063732008 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06084233 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069486302 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.063817392 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07243998 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.067346021 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068611492 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.061675159 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071223857 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.067745605 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.063711729 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060384394 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065282636 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.062579872 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060826932 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070058049 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.061488212 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074163842 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065370624 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072195148 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073242869 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070464383 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075248978 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060981304 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060166718 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076804771 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06978514 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062727586 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076838984 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061274434 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070647952 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060949968 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063123311 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069552346 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06058713 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063652988 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061061433 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066708243 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.194922253 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064977618 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067547253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070699206 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074073809 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06480486 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070913465 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063693569 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077040888 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071250136 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067037303 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067040361 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.063304948 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07322451 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068451605 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071687209 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062180735 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.063042715 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063121743 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072103065 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071216609 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06448332 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072252487 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06645596 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.063336472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063100471 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.063706575 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065422525 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066194061 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063415383 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06968621 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071297786 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076608756 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072709306 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070606955 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061661361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062221758 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064665181 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062396302 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066835415 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071084604 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076537756 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074250198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082023753 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062797578 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071444847 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06449163 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079311479 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074290728 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.063622543 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067491281 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061262752 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064846984 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070864267 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073898424 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075732438 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076461746 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066943597 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067084537 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062421737 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076058497 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.062733806 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070105699 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070630698 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068329747 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.063122691 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064432297 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071094184 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06662512 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062633728 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076173856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069758448 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062771644 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075675139 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.062751453 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.07337409 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062193083 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065078051 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066733927 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065053089 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070544864 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076581462 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061330933 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063058194 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077109806 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.064629422 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064377003 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069547612 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075560143 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066143563 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06957826 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071882425 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071268558 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066361693 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071152639 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063671929 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.071393382 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065849947 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073298958 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.062789787 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078780462 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061663159 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.078423454 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062722469 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.072365499 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063746479 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070742261 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.063637445 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.078073683 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.064019915 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.063435369 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073922882 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061278649 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071666773 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061807441 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066652832 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067939826 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.071198299 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064351932 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070235035 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063499386 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069688895 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065382166 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068796416 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069634512 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065752215 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061054075 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068005522 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072147989 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068447016 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061559592 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063141044 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062174386 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06972986 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062356442 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062875297 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068278753 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065378512 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066660282 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06314864 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064389403 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063485634 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068876546 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.207023709 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078765348 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071554387 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070356254 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07155476 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062721115 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077829686 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.063396331 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069890066 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061603787 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070556322 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071075844 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062713597 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080672264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065447169 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069990934 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075615876 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069836388 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065775526 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080573638 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.066452231 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070033604 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069655756 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066431844 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068974867 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064316688 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069213198 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071549676 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073402923 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06357933 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068712051 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070595321 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064534602 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.072396218 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064629692 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069792919 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065288101 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061235746 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067004829 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073747781 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067216814 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067115904 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063431515 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061404403 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062983248 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070394174 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06644136 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070402328 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076505183 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061067389 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.063442097 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062278968 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065261347 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079365134 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071140963 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070003968 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067593487 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062269179 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064712865 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.065061555 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.062695416 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065917593 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060852148 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061119562 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070650121 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.06467158 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066518717 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063252068 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063815803 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070680326 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.068210902 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063305194 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068213128 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.06255314 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066728627 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062082443 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065164028 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066813939 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062112566 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065325181 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071980077 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077573518 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068835842 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069913542 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063649593 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069885823 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077044537 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071381346 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064208834 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071679105 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06204706 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079352176 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071188485 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070022022 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071780712 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063570338 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078489813 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066786535 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072038447 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077264493 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063949581 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.070653781 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063003858 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076981673 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069640743 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062439796 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07049677 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069572114 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067843971 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074201287 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.06304486 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070451312 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068890356 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065331355 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.064176118 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063656829 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069695525 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077187205 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.063096409 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067516537 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06942893 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06882997 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065407181 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073156147 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069086346 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062754341 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063321749 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064200754 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062510079 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072823522 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062280468 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065947599 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065545878 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061152299 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06716968 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074811109 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069562638 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069710681 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061549563 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060466425 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077227358 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064547587 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065256511 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068392969 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.212600853 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075631317 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072435244 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079757161 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063894731 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068651169 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07467275 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.064264993 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.062294871 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065493965 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064354503 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071154175 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072336188 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069004086 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065440712 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068906425 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074672174 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.064585749 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067659002 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06848218 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.063207686 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071494185 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070378088 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070320352 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064195543 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062426248 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065192517 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070810092 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068674631 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071117695 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063985892 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.071483894 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.076095083 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068664649 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065644026 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062451053 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066088396 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070493845 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067922209 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062024671 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066616226 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065584226 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070682289 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071237876 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067356385 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062442004 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078654581 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069725447 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070982541 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.064472843 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.064408753 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063419116 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061845361 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072372737 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06212089 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.064728647 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067171858 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064656078 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.079915471 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070909202 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077145185 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064367339 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067397617 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062617159 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072105909 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066967034 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.062536468 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072137186 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062454717 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076618354 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.074732192 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069476132 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062683005 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066925405 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070043422 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075723237 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071893458 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070696444 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066472113 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071846731 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.065079664 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072964145 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0625056 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061112678 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072466166 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07021211 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074193589 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062884826 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.07227864 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.064891295 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069724634 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07016785 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064715792 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0647812 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064853115 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071592419 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066870426 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071259785 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067387387 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077391844 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063800689 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072724726 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070404696 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072262737 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074708657 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07485184 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072965995 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063123235 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069466139 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070450962 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06377515 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066597008 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.066683938 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083075909 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065169288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064759229 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076282478 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070122012 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062547735 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070694004 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066643197 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.073144557 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.063247716 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070584496 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066043183 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062892631 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066155075 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066331205 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060374486 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061737282 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061654906 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071385999 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066452296 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062304758 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078919253 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063327134 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068240818 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069928179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067533496 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063891454 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06070913 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063181554 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.214019701 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078060369 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067603138 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070912557 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06507703 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07192423 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062223885 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070719314 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070402198 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070334104 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062268349 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06329957 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075782316 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07683612 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06684585 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072245766 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07106483 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064503768 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083522574 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07033522 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064339725 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.073026158 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06534892 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062012652 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061979192 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064733235 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073971242 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062793595 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.066240223 seconds)
  done (took 42.609946059 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098155618 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062893566 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061008431 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061153673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070769816 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062622341 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061283467 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062351636 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063660993 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065722478 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063024336 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062972588 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069809021 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07767796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072959296 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067436071 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063061747 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06370417 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062722124 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063140831 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068989956 seconds)
  done (took 2.769650198 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068445243 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075913781 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072765369 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077702325 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069933144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066177147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074225842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067360587 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076124017 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073144703 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075648282 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067711374 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073262588 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072900421 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072837054 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068252312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076405154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071793502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067684885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075800468 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06841503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075837394 seconds)
  done (took 2.936341046 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062617588 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062045185 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070503459 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061953134 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.062260602 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06677797 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.061819404 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065939946 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065833348 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.066171638 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070569167 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.063114772 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.062313104 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066965167 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.061997097 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.063516003 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107878951 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.063235992 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063335758 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.062151047 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065840398 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07078345 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061857627 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061817877 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065506374 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065724258 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.062123632 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.064982438 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062784746 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065956558 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063368167 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062205143 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07013133 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069529499 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06605427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066198317 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.064043232 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066801111 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062299709 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062992349 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069831833 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.06365048 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.062425203 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064004815 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070236532 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.0623702 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.061692795 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070379555 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061947286 seconds)
  done (took 4.570382516 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073156897 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10922519 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067615498 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092290573 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076324179 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069442488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068084039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093395165 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063742869 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064965204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078044539 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077992792 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065829816 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067255093 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070338855 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066296015 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066688357 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065172531 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069363276 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065302292 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069757537 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069858862 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076648845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076688887 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067243634 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064912715 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06546572 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068165752 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077024791 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069469022 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068124834 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068235094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076798251 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068514524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065205178 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065693976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077588613 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066079754 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066002779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064297122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066070864 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06790298 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069713003 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077662946 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064408127 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070043075 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065714265 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063308417 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077080056 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065933784 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070298882 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078663851 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06704339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06630276 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067915452 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076831579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066278328 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064602167 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06641343 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077037898 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06405483 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067166987 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077575935 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065234653 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069216397 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077578892 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070316151 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06675727 seconds)
  done (took 6.30364365 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071831994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093834373 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080142263 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081173107 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074339062 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074215167 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074322833 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074159553 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074616056 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078058898 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074173626 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115364342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069745753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075839924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073988398 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074165315 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07402714 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074362548 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073847318 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074002587 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073772131 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079838158 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073861472 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080673839 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076850723 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069918401 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073865642 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073858732 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080261968 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073800787 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076629619 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073486176 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073490415 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080150883 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076822666 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074342864 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063511088 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073632153 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074045201 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073811993 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069367204 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0804879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07354079 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069419774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07478077 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073418943 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080280312 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077404601 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075849838 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077635701 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074347271 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080845186 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073851688 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074070492 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080695833 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082751473 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080131741 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080291294 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07403539 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080075191 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080594024 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082943354 seconds)
  done (took 6.13507554 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076831946 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06956 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080886008 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063611524 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061198725 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071067023 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062399779 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062739645 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070554886 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071227584 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072690689 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072248898 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075332338 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073257223 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072882607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075476357 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072828721 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072750195 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070632754 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072170644 seconds)
  done (took 2.800356582 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075147869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080539881 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067672542 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072712164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068282967 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072230762 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067145909 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067989425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068832096 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068396158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074166084 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073836439 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068709804 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072922797 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0735851 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072534146 seconds)
  done (took 2.514184317 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081426937 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069187889 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075454348 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064324144 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067501871 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063303331 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063638681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061910676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062715553 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07700022 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063507359 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075055238 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06338485 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062905195 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063414711 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068921476 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062594946 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063802489 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063778988 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076630236 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070563826 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065186863 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067812013 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064138252 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069076848 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070958735 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065476371 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067367774 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063935391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063971986 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069370609 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070254752 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063063133 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064019131 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063549305 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063797096 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063477736 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064062413 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069571593 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063554762 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062456548 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069107775 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063829579 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064709998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062729992 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064510973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063088991 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069757451 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064141983 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069323401 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06401834 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066660476 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064218585 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071182243 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066696388 seconds)
  done (took 5.028334758 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077655962 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066494903 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062091898 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062298868 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067421925 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086547432 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067575698 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068427083 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068726537 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062114414 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068815603 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067550815 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068745623 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067800822 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068509925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068210932 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062114033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068111396 seconds)
  done (took 2.61355716 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071479673 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066281617 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070517494 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066478153 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067424974 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067023083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062988311 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062916361 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062698909 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067208965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067034462 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066698499 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062570858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066806134 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067153583 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067158927 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06697337 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062989771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067358381 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062615352 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067095251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062506429 seconds)
  done (took 2.828455097 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093710087 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085066582 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141916293 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081099339 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089144585 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07283362 seconds)
  done (took 1.940952473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091269008 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096847323 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065886512 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065985958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071620907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069921632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069314754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074549954 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073844389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071804241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07346576 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073715857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075758084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071780061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072831014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071348694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071625609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067412038 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080363093 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071818998 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075516676 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071552577 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070946533 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071465006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078749475 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075821161 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075936544 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070912336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075564218 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074170743 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07119141 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075726342 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076243372 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068160386 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075813158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071823737 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081179526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07352136 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07807695 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068218297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073471162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075333799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074799397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075153425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071231164 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075001804 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071713853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070955997 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085279621 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073501585 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077643796 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073124524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075676494 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075183028 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08202588 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076145117 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076220534 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07286289 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075901339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077983694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073511555 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077122724 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075683589 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073280434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077217095 seconds)
  done (took 6.2980624 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102195596 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066638235 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070420037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075007309 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076754089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069964268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070776362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071045527 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071179441 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068178283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106611334 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071612729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077603868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07760748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072435313 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071935958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071144511 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078182285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068482993 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082077807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071378582 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078000383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077320186 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077738804 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076322354 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073453625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071202333 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070918019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070822222 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07153005 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075200136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069628972 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075557142 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066282111 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075890728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069879322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070053635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073465798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071197886 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073673096 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077441893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080845437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071673592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07121861 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076268041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071236377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071460607 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068128299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071087085 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068221959 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075989769 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075970803 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075881087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077736466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071374498 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071667238 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071132943 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070925068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071276763 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073209615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077196235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070958575 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082005595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070866614 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071010598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077379173 seconds)
  done (took 6.292658691 seconds)
done (took 129.219849638 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210331845 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183984419 seconds)
  done (took 1.760143658 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073192709 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102723 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081695137 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134918934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069892798 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104971638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102815723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08115204 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071379849 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071258194 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072070023 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075039198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137679856 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069665073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071405073 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072749522 seconds)
  done (took 2.780435648 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103097007 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.213758939 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109738417 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069336475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105015287 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077133025 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072581712 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084492109 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076809792 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071781706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078120962 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075722748 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071790232 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075449724 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076043876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077014691 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071031806 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0770663 seconds)
  done (took 2.97551373 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100063686 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093392164 seconds)
  done (took 1.58917276 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17078512 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132399004 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200809436 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.334799648 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150236959 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.414259898 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138798397 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.13625206 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111760406 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.131268228 seconds)
  done (took 3.308189904 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102756199 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197072861 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296699895 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122958567 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076588647 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10841627 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123749044 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082727262 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081799973 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081605382 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081389906 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078668091 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102398645 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077397628 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076828454 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078007217 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10463455 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075489121 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077000844 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076988837 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105186873 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070281108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077281592 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075165887 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079110584 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079113259 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071971458 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070489676 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076750564 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07701123 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08035618 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106385764 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07977957 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104910664 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075672895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106277604 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078719042 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074780944 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07637533 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074502072 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077658339 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0783182 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079898367 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077769517 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071268104 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077775009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071310221 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07061107 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080859771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072001768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080840331 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079650502 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105042971 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071971485 seconds)
  done (took 6.253592232 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106786529 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10597166 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070493608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114168167 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105679533 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071460655 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107186222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101186641 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109236697 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071748353 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06966951 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071519844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080238958 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083026051 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115494952 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107137687 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071789349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070575776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109541003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108987233 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070436913 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102946843 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100032443 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109176052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069569043 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071473898 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069553635 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071106232 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076899764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078285923 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070429764 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079474129 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086755955 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075631241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06768268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067929578 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068424444 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078613094 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0788509 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079194612 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077795043 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068931517 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069625177 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070825628 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070394891 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069563926 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07755385 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079014249 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077673368 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069442686 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071036053 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070011138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07076101 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078689693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07672792 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079653614 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078952155 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069771818 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069618369 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071611878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07993018 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079927802 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07935391 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070936357 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082211832 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069627004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081446191 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08315651 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070183166 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070939637 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069346684 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069764903 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07052066 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077173282 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077261741 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070936011 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07001431 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069706757 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079215294 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077192031 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069945421 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076338663 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068751905 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069825209 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071006165 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070696798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076758817 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078585963 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06972842 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069222375 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069686961 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069212492 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068723278 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076338703 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077676441 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0782248 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077536405 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070540203 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078191779 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077234419 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070730404 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077709759 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069591997 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070726709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069936548 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076903611 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075786584 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076965008 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067731881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068330232 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075639531 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077768972 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069284689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075186422 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077562919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075751475 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068098801 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079171023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069673855 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078197214 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066910488 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210678519 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069528145 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077380489 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069281649 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069639201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070947611 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078772191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071840021 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070307529 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071038764 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070166004 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077999147 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082027799 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071237567 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075492006 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075115939 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070483876 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075572374 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068919085 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077183232 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068821362 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069475286 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067625494 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077988702 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068522566 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06960947 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070284471 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079758492 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068515058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077819389 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075082944 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06797988 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078895453 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07734986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074744466 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077431119 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069372366 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068151103 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067781059 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068191127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075025127 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077360913 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070459987 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070172817 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077279971 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080760961 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069465769 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077350395 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076750741 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076264416 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068657689 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070164263 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080626056 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07732061 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075405834 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077190092 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077373482 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068478112 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075706482 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075897989 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06802978 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081655862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068065116 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080206542 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077594607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076521312 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078934754 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079387147 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080305524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080779099 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080882152 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069150896 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06967472 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077916419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070007109 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069934147 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077320555 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071011004 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070957337 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083504621 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068650863 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079517778 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069705785 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078980338 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069447961 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071246722 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083147742 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070858084 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071736244 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080845106 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070460407 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077005019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080228068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075387439 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069310038 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07102427 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078856733 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077103679 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068071025 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06775297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069421818 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074952974 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074821948 seconds)
  done (took 18.572785383 seconds)
done (took 38.645329784 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21147851 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162439518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187885819 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118484567 seconds)
  done (took 2.176228445 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106869009 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09960044 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086498516 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064294764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09318922 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064719576 seconds)
  done (took 1.950784395 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305070255 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207687887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185136491 seconds)
  done (took 2.129263201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210589323 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.203113961 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467127397 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290973488 seconds)
  done (took 2.699091215 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139172187 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082474662 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063552188 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081070993 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124343463 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149807906 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092604545 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117142019 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074900583 seconds)
  done (took 2.416094442 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146881807 seconds)
done (took 12.966216574 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.207201479 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.265221415 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101979602 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.1141455 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073750115 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070173631 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197727484 seconds)
    (8/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074014602 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104437751 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07717005 seconds)
    (11/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.201514539 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.19823826 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174402634 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07688062 seconds)
    (15/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179176302 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076097722 seconds)
    (17/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.175497601 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105117263 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079352641 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076214233 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.180294472 seconds)
    (22/309) benchmarking ("sort", Float32, false)...
    done (took 0.13441289 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075958964 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068748574 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076306168 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123745744 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161065395 seconds)
    (28/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075808978 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197266547 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188646191 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08542 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066943801 seconds)
    (33/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129875804 seconds)
    (34/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.171844176 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104366386 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.145717333 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098544344 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073225679 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07320116 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172322529 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064385845 seconds)
    (42/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.232379099 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16198964 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069787221 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164920171 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078976641 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.087779011 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.148393043 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076336236 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.17295355 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07648178 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145255955 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.066232706 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074121125 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073295163 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064693873 seconds)
    (57/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073997761 seconds)
    (58/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.185435512 seconds)
    (59/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137133331 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064457834 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065119572 seconds)
    (62/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.092542475 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071894102 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113446755 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187426466 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123310573 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1564044 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12866574 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.20300475 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07516031 seconds)
    (71/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.18923812 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088628282 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065961477 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076756683 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090296019 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194060219 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164277104 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089646474 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06395832 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097979103 seconds)
    (81/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.199194276 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.200502 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064857972 seconds)
    (84/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191428892 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064105454 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188597165 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.200021571 seconds)
    (88/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136981128 seconds)
    (89/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071330875 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.215715883 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162487331 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075633172 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066005459 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128015437 seconds)
    (95/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139617294 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073987346 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072709172 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09193814 seconds)
    (99/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.06452029 seconds)
    (100/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064251771 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06502516 seconds)
    (102/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066145074 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07638935 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066718832 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071877443 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066419473 seconds)
    (107/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.077175547 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064182363 seconds)
    (109/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066385894 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065430017 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065043359 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064430903 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117645025 seconds)
    (114/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.073692076 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138597918 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072736212 seconds)
    (117/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074354307 seconds)
    (118/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065658546 seconds)
    (119/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.135321772 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06411156 seconds)
    (121/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072068607 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066466042 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074258823 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065175799 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072028571 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066172728 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074714147 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10427727 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07368883 seconds)
    (130/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.137642165 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.137225446 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167365733 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.181059223 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12060556 seconds)
    (135/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082293589 seconds)
    (136/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246351788 seconds)
    (137/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065890038 seconds)
    (138/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065721606 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064361229 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074130446 seconds)
    (141/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.16665869 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128892789 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076513676 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.109199317 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074561594 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066350014 seconds)
    (147/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139787403 seconds)
    (148/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.140655012 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075536595 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080562715 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066801383 seconds)
    (152/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197327545 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066642403 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074972519 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068871112 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088862791 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074428358 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198414854 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074104027 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094190529 seconds)
    (161/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075950511 seconds)
    (162/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068187691 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145923643 seconds)
    (164/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200264519 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065873691 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065466447 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.132937036 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067881374 seconds)
    (169/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067178517 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072601904 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186802602 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07374976 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156691672 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140475205 seconds)
    (175/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073058308 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090512586 seconds)
    (177/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077039914 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16503526 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066442469 seconds)
    (180/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.064591292 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.205994136 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093018718 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077246747 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065198731 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073197789 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091217546 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067654299 seconds)
    (188/309) benchmarking ("sort", Int8, false)...
    done (took 0.178033985 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093331039 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064970978 seconds)
    (191/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069324262 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06556226 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066887243 seconds)
    (194/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065560854 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088914273 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064578515 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065404479 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128650451 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063478968 seconds)
    (200/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064529619 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071113962 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064661048 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068121005 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063701863 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066047021 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071356836 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175776791 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08694709 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065425688 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109737869 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06358021 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064527779 seconds)
    (213/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.066858274 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073056313 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.285802386 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066759418 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13374812 seconds)
    (218/309) benchmarking ("sort", Float64, false)...
    done (took 0.133531033 seconds)
    (219/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069498571 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175121699 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134084597 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065442431 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121072466 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07576587 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074961492 seconds)
    (226/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065735378 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136454003 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133421413 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065917322 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079622254 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073602321 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065241487 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074069487 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123035257 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095281357 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07140557 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093831337 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109036699 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064337445 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079525007 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088516826 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065273817 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065491636 seconds)
    (244/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066513563 seconds)
    (245/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073894956 seconds)
    (246/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.080382608 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065796348 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074421799 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066607729 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064389013 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072252959 seconds)
    (252/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068462935 seconds)
    (253/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066307024 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066433299 seconds)
    (255/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.067052795 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140445026 seconds)
    (257/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065812383 seconds)
    (258/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140920513 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064700031 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080045919 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066189814 seconds)
    (262/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066457718 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064892682 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065211039 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065296611 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069618302 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073432085 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068353183 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093319823 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0682433 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067458634 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066781115 seconds)
    (273/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06827835 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066272425 seconds)
    (275/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068217401 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089027018 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077947663 seconds)
    (278/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068419987 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067442765 seconds)
    (280/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095939315 seconds)
    (281/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068003107 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14644296 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164528632 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072049505 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085925609 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065349021 seconds)
    (287/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066068823 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.06593296 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135517816 seconds)
    (290/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066875919 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07378328 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086556891 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067193382 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066310897 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069074937 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09276542 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073428899 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066107257 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06647404 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067206052 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065927288 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066101456 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066721077 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065913004 seconds)
    (305/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071119251 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069912873 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.067774946 seconds)
    (308/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090043126 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068149904 seconds)
  done (took 32.863868104 seconds)
done (took 34.315919827 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086753983 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096760652 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074032788 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094163976 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082323409 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094569564 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074407202 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079429738 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082565335 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080931634 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080541316 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073300202 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075234462 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076012946 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07441621 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098390032 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081460567 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074949826 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075410968 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066965025 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075848423 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067664013 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066616577 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073784134 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078388189 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074195058 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076900793 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075785152 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067184672 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06740709 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071645465 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075576404 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067284537 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079137507 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076660339 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075781553 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077388229 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079825629 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067247646 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067273616 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077802706 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066970939 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075240901 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07352799 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072002138 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073858624 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075260056 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079341615 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098505615 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072193132 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077538379 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078203981 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078768369 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072725029 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072102508 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075057233 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073330905 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098834874 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075243121 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072042556 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076788488 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076451864 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074102524 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074864557 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075514696 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077554342 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07922133 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073327289 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077476255 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074162167 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066715717 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074825058 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074498226 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067104176 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078509875 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079652053 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065839865 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071009018 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074992191 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075437201 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066946009 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071407118 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066404045 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071535643 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071203683 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073005005 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07176461 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074206734 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066262222 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075945047 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07451307 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074646756 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06625844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079739774 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067014076 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073046669 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066814948 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067005543 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066114558 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072197082 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066721609 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071303606 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075708105 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066209288 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071566322 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080406586 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067067857 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074228681 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066990373 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066563192 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078150764 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077108642 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067392145 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071762766 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066684899 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072360142 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066876368 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066815436 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066495846 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066793159 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071584004 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066671337 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070879514 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07238814 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079459004 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06665213 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071297014 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071382874 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067057767 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073492616 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067649632 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067194757 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066402729 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080883947 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070762713 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066689312 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072236386 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070824727 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074763942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065793958 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074734106 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072479631 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070883589 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07271622 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065331452 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0770733 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070751153 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069771738 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065230955 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065941708 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064816053 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065614482 seconds)
done (took 12.77406527 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070709946 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115136442 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.089694999 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091572 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080889003 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066599658 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072382355 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.087150918 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067788436 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.092833957 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086110478 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085654097 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105593598 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065655325 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066362072 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069060982 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069056265 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077639803 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094088124 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091124752 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.103385082 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066363731 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.083980877 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087030764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.081305031 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.086369329 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067209693 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068902909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070628443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090359151 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093305338 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071038559 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068574781 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089888438 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085135367 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081277817 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068826159 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075616841 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068668375 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067939594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069580042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08722739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075178802 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075029072 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069179467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07550002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06927421 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082193845 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08722699 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075135439 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082253494 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090616917 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070862137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082897756 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067037738 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081994851 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07545994 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06868227 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068780263 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073632525 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06881327 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070549215 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077232788 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076091116 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07180161 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084267493 seconds)
  done (took 6.708670282 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083780364 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093072398 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083952284 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085325837 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067461747 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068171824 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068479464 seconds)
  done (took 2.10876722 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067357841 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09018973 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093668265 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093449102 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085193427 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092770637 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067998231 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10204346 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06763272 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09026196 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.120965301 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094159334 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06970759 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077687489 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066451746 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.081003198 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06685398 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074869786 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082911564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090547468 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070237958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092460001 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079074433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066292923 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.099950179 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078601206 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066218132 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067731435 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069236765 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069380675 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069541662 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110795009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080711438 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08216498 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069820172 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.068179085 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081900065 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071265962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079059376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079421969 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080952328 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070002585 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066713353 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069475562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072325054 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079195158 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067069375 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069195959 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069253039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089352531 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066845703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080786467 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072775562 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073688447 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074127272 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072978822 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077962955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069448987 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09042853 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.076222419 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069541125 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086867798 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085413518 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080906779 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085840284 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.073828316 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081254403 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081009729 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069470531 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.070001436 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069830543 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085545432 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.068991422 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.07076143 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071352401 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070314074 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079276479 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094777347 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094592596 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082147012 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069011226 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070158226 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078975623 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094387236 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072762963 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069567755 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071393092 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067018064 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072249859 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069398021 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073422882 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068927637 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.076276159 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070491774 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072163884 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085435275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067592477 seconds)
  done (took 9.079490401 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068775983 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069267139 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071203244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069553693 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069362093 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069510224 seconds)
  done (took 2.011149741 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089020922 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068572144 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081982016 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069405489 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10867982 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083514823 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083292597 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078219695 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081309243 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080980965 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083412409 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086686993 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087363941 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070855059 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083562009 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069949204 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08366406 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073311409 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080920684 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071502203 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082006894 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070754202 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07167672 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088429581 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071396289 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070478262 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07790926 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080549691 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080097272 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077953808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070628831 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072518157 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076879185 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078022662 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085996321 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076555004 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068983935 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075086282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071272326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071938749 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085964762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071495721 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071495129 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075263337 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078104028 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076579156 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074444843 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07716462 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083590387 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075306095 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074494617 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069788923 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072314168 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075533004 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077044133 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078059881 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074861145 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083294486 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071870411 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076823303 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069310717 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071266456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074863049 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07126244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075825166 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074806732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076677866 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071016436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071618419 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069012925 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075493863 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069465109 seconds)
  done (took 7.088073007 seconds)
done (took 28.581581637 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.526040812 seconds)
  done (took 2.067213423 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615343474 seconds)
  done (took 2.192003143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.549721005 seconds)
  done (took 8.121348157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416797022 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480078107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753822416 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132676627 seconds)
  done (took 3.386478637 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70095193 seconds)
  done (took 2.286697167 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228188453 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219736409 seconds)
  done (took 2.038895034 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.344976671 seconds)
  done (took 1.918058368 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081797813 seconds)
  done (took 2.65201354 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251331362 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159631131 seconds)
  done (took 1.99203584 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447174264 seconds)
  done (took 2.01827619 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.369313909 seconds)
  done (took 5.949979115 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232784922 seconds)
  done (took 1.851920239 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231570612 seconds)
  done (took 1.816006858 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.730485048 seconds)
  done (took 3.309478215 seconds)
done (took 43.187567747 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082502227 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085700445 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08467307 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080855683 seconds)
  done (took 1.88970982 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07540101 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.071498241 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.077276129 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.07650687 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074064721 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075268072 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074635691 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069999912 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072919086 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.072780318 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071386783 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.072702747 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.075653652 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.07263103 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07600301 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.077183719 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.072155206 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.072493803 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075686821 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.072704729 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07566163 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.072225627 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.070273205 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071630209 seconds)
  done (took 3.350314128 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078224794 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072211675 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075371873 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071440346 seconds)
  done (took 1.884838306 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076476294 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085482167 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087856757 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091996343 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075814677 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076803609 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.085407074 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.089364194 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067419178 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.09188343 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.070360026 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.069076227 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.068583215 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.088538055 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.087726105 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065025706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066834802 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077085455 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075949145 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078454545 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068412299 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065554075 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075776362 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076599864 seconds)
  done (took 3.448880334 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084073017 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065799028 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08326455 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091858953 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092648672 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065522765 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083405435 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092111682 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137384959 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066366623 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071650872 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066345043 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103618309 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065470775 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082383262 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107635387 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112231396 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071471194 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100022969 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067708083 seconds)
  done (took 3.303162397 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082890097 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072149233 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071951763 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067024294 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078447579 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075453117 seconds)
  done (took 2.045159171 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068009181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067610296 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067409735 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072032841 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073615443 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068901991 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067575531 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069152702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069893911 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068925817 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069387067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068361243 seconds)
  done (took 2.421627942 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15833872 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069215419 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070416752 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065830252 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07174668 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066472017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082053013 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068577554 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085036223 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066716555 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067284682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07085961 seconds)
  done (took 2.536732568 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109494797 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185279715 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102587736 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073649929 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216919095 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099058798 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090268601 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.129280279 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096174899 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070779558 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109665284 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139255093 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108066948 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13012635 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094105157 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148821244 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153533469 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102108614 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121098569 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087709888 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.073950901 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155420642 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073202381 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101036346 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135221594 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.108055833 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120326314 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137381684 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095420397 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093557563 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097370614 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074750745 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160996397 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087345643 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.113130043 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122491513 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134778116 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08877686 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088185549 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168035957 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153785435 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127794001 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127457254 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138783646 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079456491 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111737643 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085998674 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108455958 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144945699 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101322306 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076200458 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10643869 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.110483813 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134803374 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.245717663 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087439547 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167441155 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.125732678 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119445034 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083077281 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109510328 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104053572 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111022631 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163937109 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144673055 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104282214 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137559207 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121956909 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099922971 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102476024 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114220727 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086318744 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118335726 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121929446 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142874512 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121422757 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123462302 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11348999 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082395932 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113494501 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131272776 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096526727 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115585167 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155758523 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11307031 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091780334 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109717791 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142231798 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072365967 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159766369 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093938524 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122016133 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101307522 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143190742 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103740274 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085631785 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107286844 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141373709 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102571294 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129531689 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098504116 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116531552 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096570941 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1274237 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081250157 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100809841 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103434516 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097737009 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073834218 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102641752 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30607644 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118308746 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076790282 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11388042 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099096449 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079124605 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122528562 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147386368 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086227966 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079561007 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15478398 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.100633997 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.119625036 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110961305 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096302245 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13525397 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145475415 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096932734 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090083409 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075829746 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18511818 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076716805 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144422348 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086083387 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125331563 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107991934 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136031865 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143998053 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099614046 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080213576 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106688168 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.115661751 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105392409 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116157744 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077061112 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109099011 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150101031 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105868716 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090670569 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096967338 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070670696 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12179825 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078006926 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097774169 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096580356 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095749522 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.093974965 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147939698 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.097299151 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112224527 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098421101 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.070090127 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094531542 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153309069 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083065071 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.10903338 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128671261 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096649429 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068771737 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1196209 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073876853 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301129469 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114824978 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109595539 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080296828 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128046521 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071423715 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075403172 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12948745 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105218133 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102764255 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137076479 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106979259 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113331307 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.109661506 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.105184542 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10086155 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107494067 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.110175953 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118118308 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085814197 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150526138 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097835378 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078645646 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087786751 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080085693 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078699877 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127198379 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156968948 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116239598 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104369557 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107735538 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11685792 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109282621 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091722787 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080405661 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136433774 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07736012 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074923023 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11573657 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115215622 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091073652 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140105304 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081182387 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137493038 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123858185 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095212884 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125746014 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071260577 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071773492 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082399249 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11539427 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120240158 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081165993 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082510908 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140977139 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139049008 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118718585 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102692567 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06936843 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108678269 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140568928 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.114713235 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079690443 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26620061 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086785348 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131113532 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097781594 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167283788 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10632287 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114275566 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092030813 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.081141009 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074861639 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098810658 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130583169 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094368918 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082536994 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069863564 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077115411 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123092888 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095518043 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120804011 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109025287 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140161536 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077581268 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106159922 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116447742 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112626297 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113575118 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112250393 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.099541408 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095301223 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110446454 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122764183 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075034518 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156836137 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13261327 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083942288 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101988592 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097142567 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111478547 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111040029 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116043603 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110346098 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12932362 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12671457 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103448473 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091203806 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098501167 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096783364 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.095620798 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082203362 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104952031 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12083643 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103949456 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110885764 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095919004 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.093162639 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111064051 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111958774 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090719002 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.11582758 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156032709 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101067131 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148329362 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10083808 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104254201 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102380536 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111640025 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.125262467 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143492216 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070821117 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07497045 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070897873 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124652752 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078988371 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114349662 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076650242 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106300938 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120492724 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088717231 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067831876 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099796122 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0888018 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.092291033 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140278861 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.107314907 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072051696 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10091716 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104840032 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093651675 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144791093 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.0960617 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098254468 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07181244 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112605736 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073586822 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10864497 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128037647 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078891886 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.080546362 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069636885 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105501153 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095951862 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109065493 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085361475 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09945332 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116184054 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123973926 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098198983 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11081806 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130154376 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109750011 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.090997041 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143817041 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127668617 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.13379874 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077614452 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.085854289 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100844457 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100176513 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096599682 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074952813 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077045149 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135246093 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114223531 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067707703 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365566452 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085907264 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.09286673 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120383557 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120111719 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086595777 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135407164 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078991006 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111221508 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098293979 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12878555 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124825534 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156215836 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099966895 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092144765 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080560364 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155628862 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084322047 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135292409 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123664244 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105560003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071640617 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099076989 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126566176 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.638528753 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109618491 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077008752 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137734329 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108400296 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163127515 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095657673 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121444697 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11144032 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104517126 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096001251 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130966536 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096836012 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11097047 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.178713363 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120815211 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10789896 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075693888 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087082776 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075492302 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.091071473 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083291234 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102183844 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10918311 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104272531 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105928579 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089291835 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107871497 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117039828 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114221174 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105313484 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091302305 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139979796 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106296957 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288703541 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128979791 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080379628 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076934858 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.109173083 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138056704 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098509806 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095850658 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081377229 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095829752 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160169143 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14470158 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105833993 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104962203 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093978301 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101429909 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113795213 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118357047 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111131075 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086409762 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102822038 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10446577 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079804401 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076100819 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098900709 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071299862 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091006972 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129148713 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109529248 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09257635 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104304572 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080186253 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111287016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148911049 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108065978 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08039212 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080070454 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081028861 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.087849243 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10401511 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110703946 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1144594 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149548075 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105472452 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097125305 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.083121862 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.225195277 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090423428 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098508334 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.111319931 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076791236 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131973383 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091140053 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090494445 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097467645 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104608688 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156769926 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086672925 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109912743 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113407702 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116577846 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103000079 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106854855 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096364531 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09266936 seconds)
  done (took 55.08355442 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103807844 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.140582468 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150495459 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081664315 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094970129 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120422088 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198293596 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188868804 seconds)
  done (took 2.861424127 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069530013 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094949426 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100637322 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082360536 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06600469 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067438456 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227651706 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080339967 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06650561 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092157953 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07635374 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06786117 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421803061 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066199325 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067522063 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074688846 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066511029 seconds)
  done (took 3.529152783 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378575444 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616671764 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364198956 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07759328 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.743850103 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091786737 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.254023371 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141019459 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080673221 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.503506854 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368169545 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126993007 seconds)
  done (took 18.496698464 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081905905 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078403398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089389743 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090687338 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079879885 seconds)
  done (took 2.164483871 seconds)
done (took 104.633026506 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081162419 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.192703978 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067069244 seconds)
  done (took 2.030827161 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.089319309 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088410347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089926922 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.087167202 seconds)
  done (took 2.105661375 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073881217 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076275115 seconds)
  done (took 1.898078084 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231292239 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174229466 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096620582 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084560363 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080582049 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080937584 seconds)
  done (took 2.004911575 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072878369 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071433768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074850803 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077544008 seconds)
  done (took 2.04374191 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066864118 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066211527 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068258844 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071326338 seconds)
  done (took 2.021669743 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083946652 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083731309 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078885252 seconds)
  done (took 1.996424527 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100893708 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091970677 seconds)
  done (took 1.940694068 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080731556 seconds)
  done (took 1.832207419 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092143679 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09880985 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128545671 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111710991 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138860044 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115613476 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081768101 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086121088 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076717023 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084017822 seconds)
  done (took 2.763482891 seconds)
done (took 22.972479438 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078032946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373164537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360871019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08961697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669491612 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355840602 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986305056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093485702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108317414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068402232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085691438 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648885872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977151579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32971101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968135764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3285345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656129717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070996623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070488342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070275867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97055184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07050127 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071423515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071583466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650052915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37446622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069287375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322927154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0680895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072163936 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357514077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069775432 seconds)
  done (took 16.280974873 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070088293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119850461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075369787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087088751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073224817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071339879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071325852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068386849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120516285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071093779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087920817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068425407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075519273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072555155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092425729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072483105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074165098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07241524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071530318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070461426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087663254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068791629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069538605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069401183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069324686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082163293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069978779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068944163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070225824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074078938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076031639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070350926 seconds)
  done (took 4.226035691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115985169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127880097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07698334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108881373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119320188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072977397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149845891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0943641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120422594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07230329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087577031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068552175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103046974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071367979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090997364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07104076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073414005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069320909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068658803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069927047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088868135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068578748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069493808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069656543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070172098 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083577592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06984027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069383435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068991328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072928297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074373757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070443553 seconds)
  done (took 4.475447 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069784617 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072176543 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079807125 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082343967 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069796539 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0710666 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072464375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069379637 seconds)
  done (took 2.35543293 seconds)
done (took 29.098708467 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077372318 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067178489 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07085397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086699248 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073963438 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078023466 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064849997 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074595548 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075890274 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073913409 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07532669 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069377942 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072404443 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067440545 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074125888 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068584975 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082148064 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072951443 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081847079 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081617623 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071990145 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075123225 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076821177 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082271076 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082191068 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081827076 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079389218 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074445556 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070001312 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072634079 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.072719891 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080873909 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083838474 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08421773 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069198789 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069035949 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073962488 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071278292 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083302685 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078474469 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071500723 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079195185 seconds)
  done (took 4.907762574 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082814872 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087228375 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08331397 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081482604 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099595052 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084397701 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088412636 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079948924 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079748136 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088069344 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075415217 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082450499 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080400564 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073893744 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077796404 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074415094 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078492879 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073180465 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076915943 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077651526 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08608709 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072460954 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088418009 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081875709 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077473693 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082832914 seconds)
  done (took 3.892166309 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072179825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084479111 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091316567 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14491237 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113980136 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087224555 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083502208 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096735116 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099486992 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069726215 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075058802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094730308 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095650646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076486089 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.115088896 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087081497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082771524 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071990822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077040924 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099686856 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090974572 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087571917 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097120247 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086859664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069221165 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072447316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074853123 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084762888 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072298145 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080893742 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073011295 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073661023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071466941 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079580748 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072139303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069198093 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090249529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081492754 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083648625 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108455907 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079528135 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071393781 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095634288 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130006237 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068960703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073220783 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073072827 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081517716 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069139687 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097595532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081744328 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06947533 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070433824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068904378 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068790582 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072320159 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071967942 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071659064 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079940191 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076353726 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089094609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074931256 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088289214 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06771309 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078458031 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066456118 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069016189 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066329452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095730513 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070702321 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114443414 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070509101 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068137845 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080590734 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079932746 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075913873 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069502376 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088127452 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08001786 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073432157 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078264859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072539624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072935849 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101520328 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070003235 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07212563 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068175941 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072711172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071882726 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068393332 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079434761 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066671323 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070406404 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086538868 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067542753 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068476176 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073114943 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072215793 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069095862 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081263691 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073573579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070808183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08064097 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070918558 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073428327 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083711411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076579381 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068166074 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072452827 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072439526 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07128207 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.0713098 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073500506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071813072 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076722256 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075880951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075733009 seconds)
  done (took 11.098125685 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164404839 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15623231 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071447201 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148820551 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07788314 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080689193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149087224 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098007611 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072127487 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071884815 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070900977 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112380806 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107762229 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122015906 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083167059 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070809333 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097351447 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117860644 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157999276 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150045076 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095031673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079600067 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073811063 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073275892 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072632028 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080960873 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092358298 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080173779 seconds)
  done (took 4.726260801 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078026336 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103711964 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072685952 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090995492 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087930194 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068792514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070270504 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070750493 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085470477 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077400789 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06939896 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074432702 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072051239 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071865404 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069271595 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075375724 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075925441 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068179332 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073303563 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073884575 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079046663 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093100629 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074020384 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068320782 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070908622 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068541121 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076409594 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080202748 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068949811 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105503954 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068477058 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075627846 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085380211 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071614985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070448639 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071641131 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069395003 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069454698 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071050553 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069897656 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069839169 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074695568 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069720887 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078949578 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084185831 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07779368 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073444685 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073551671 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073933426 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068789986 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073756535 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073612886 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073635027 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078756985 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074642987 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074019552 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07199116 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098370681 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077323403 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070568244 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070121785 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069783842 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073431731 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080683796 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086362397 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073157548 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069398131 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071366394 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083658772 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08439727 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070035373 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07548028 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068585758 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071653134 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073288418 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.0730866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071900621 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0700611 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07069038 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071211851 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071759898 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070381106 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069252944 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070902453 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067272204 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070037719 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069303374 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070260051 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076990414 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067765081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072326122 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070288802 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067388397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070987061 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073424216 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072640009 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081563211 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081833423 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071346273 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069497732 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084811002 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076783601 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070342173 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076625363 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075375883 seconds)
  done (took 9.664765665 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091723808 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068739558 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084804425 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092247998 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079304857 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073359968 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078264374 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068352755 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084175737 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073140071 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076105123 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067770762 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079378003 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078060541 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069233345 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079385994 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071505785 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085978965 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083073477 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067162443 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076875495 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080855386 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080829216 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083185398 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083413868 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084401133 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08067373 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078434907 seconds)
  done (took 4.034417612 seconds)
done (took 40.086362743 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.860585751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.030295672 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.843222799 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.066263697 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.893034737 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.080091721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.964829273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.859175752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.872779491 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.886544723 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.186490929 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.324735961 seconds)
done (took 66.770784724 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.874195812 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.994618044 seconds)
    (2/2) benchmarking "String"...
    done (took 2.085156431 seconds)
  done (took 5.854203475 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.044742487 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.508543681 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.108873968 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.841982265 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.849232274 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.271590498 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.616073751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.30907697 seconds)
  done (took 31.277998582 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.002226711 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.062999295 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.564678309 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.571022347 seconds)
  done (took 16.01951203 seconds)
done (took 64.936239492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.874869578 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.853107941 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.844199563 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.872415918 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.83909361 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.841210856 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.842175216 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.842323831 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.900353595 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.871609596 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.840034898 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.856529347 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.842429377 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.880471636 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.519866498 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.904760035 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.850270221 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.842850706 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.851844855 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.847977865 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.846926002 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.839881885 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.271953723 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.025576722 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.455556954 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.018913706 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.178668476 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.287504163 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.849470307 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.839590525 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.917111437 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.010120614 seconds)
  done (took 206.134162435 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.845932918 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.789444233 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.833565235 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.853727083 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.331029721 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.025960631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.948611685 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.368178856 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.852548977 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.85333802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.940876506 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.846865979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.968955024 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.828494916 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.877251694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.850288193 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.004528781 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.992838926 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.882291798 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.010130338 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.864986441 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.761391506 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.729740687 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.945658301 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.890778144 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.932419411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.850687939 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.857942113 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.030670027 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.976773539 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.866752991 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.869067173 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.004491423 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.711993305 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.872088336 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.861780008 seconds)
  done (took 171.708739385 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.022376281 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.853089442 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.847954982 seconds)
    (3/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.966935871 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.901240358 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.847352222 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.492479429 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.852876793 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.002120474 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.851921415 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.843267427 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.847601858 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.848038229 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.842963044 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.860456889 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.92545022 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.844517671 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.862502909 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.848997534 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.872086272 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.851654875 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.846650529 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.846508301 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.84768993 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.848378265 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.847299411 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.847397629 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.986133548 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.089211703 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.851484348 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.849537777 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.72933633 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.86225975 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.017309598 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.848841418 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.940141929 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.899108897 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.955562754 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.848208404 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.067280124 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.91941171 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.849718128 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.849345213 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913873368 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.861279037 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.847834228 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.848731962 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.845407906 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.855416476 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.913491089 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.091351621 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.851399038 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.971427185 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.330871018 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.849672505 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.850065927 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.850120615 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418100375 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.850666207 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.850177466 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.854968706 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.855815143 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.851886989 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.846715939 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.231715857 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.9208848 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.953674252 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.017338713 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.851933954 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.51538012 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.10429663 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.851385 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.851418035 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851479405 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.853180787 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.850741758 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.853853943 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.973755759 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.861221513 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.964370981 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.931637903 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.973873588 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.855376536 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.853174278 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.857916859 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.673562372 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.923237329 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.884892033 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.668849935 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.853976397 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.225903962 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.637390202 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.852893729 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.851834978 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.86419814 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.854270881 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.85104969 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.852064038 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.93091441 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.852084213 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.972395151 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572322269 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.165588517 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.011885746 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.852241852 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.856684453 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.947133429 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.020623789 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.852296076 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.852298225 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.918002257 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.858276246 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.854296142 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.995052141 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.853996918 seconds)
  done (took 409.253239554 seconds)
done (took 790.949268026 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.467548576 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.438757066 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.554110541 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.456211371 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.432316937 seconds)
  done (took 14.130677982 seconds)
done (took 15.913337863 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.868847614 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.859129824 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.917692867 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.937744684 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.869937943 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.87424398 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.935185533 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.873877008 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.904116294 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.906893369 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.941984773 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.940097786 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.878693087 seconds)
  done (took 26.491480654 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.85751783 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.997972095 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.084510267 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.888714108 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.856987111 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.086971743 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.913139349 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.990227139 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.993243669 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.083220001 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.089583057 seconds)
  done (took 23.627292769 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.858098681 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.000078462 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.078935567 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.891613506 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.858227815 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.085545764 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.920679916 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.994256771 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.002478735 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.08337349 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.091057127 seconds)
  done (took 23.656278318 seconds)
done (took 75.560241152 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.853875016 seconds)
  done (took 3.637941775 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.869547069 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.026914041 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.851658715 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.854040193 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.853352905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.853729285 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.854906929 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.853429858 seconds)
  done (took 16.805005226 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.853449986 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.852679949 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.854033649 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.85398518 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.854188268 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.855326774 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.85391302 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.853692396 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.854565996 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.854503048 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.854376609 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.853966698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.85514272 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.855259379 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.853788817 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.853873178 seconds)
  done (took 31.452575215 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.85556744 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.854866825 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.853357084 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.854566224 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.854049532 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.854459633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.855629184 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.855266008 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.854274728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.85388612 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.854487324 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.854177258 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.854000194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.8539824 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.854056466 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.855139649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.855156048 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.854591943 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.859187456 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.854292446 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.854058509 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.855332143 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.855707896 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.856710613 seconds)
  done (took 46.308779802 seconds)
done (took 99.998348584 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.615633098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.474656645 seconds)
  done (took 9.877277124 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.859344455 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.855355183 seconds)
  done (took 5.576079848 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.855351607 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.855490705 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.856052638 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.855450508 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.85624567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.857238372 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.856567849 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.856098944 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.856377335 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.85609124 seconds)
  done (took 20.347801308 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.856732987 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.856482815 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.856912781 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.856970622 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.8568477 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.857360889 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.857044197 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.857127912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.856950268 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.857557399 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.857104791 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.858908964 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.857688543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.857681459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.857287266 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.857071328 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.857121509 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.857007229 seconds)
  done (took 35.218519221 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.858214801 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.857071664 seconds)
  done (took 5.503638773 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.857383803 seconds)
    (2/7) benchmarking "second"...
    done (took 1.857748321 seconds)
    (3/7) benchmarking "month"...
    done (took 1.856657665 seconds)
    (4/7) benchmarking "year"...
    done (took 1.857186139 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.857263729 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.857095425 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.857838235 seconds)
  done (took 14.789949801 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.859307383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.025936754 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.083288351 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.517866692 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.859769215 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.860456589 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.773667169 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.859789717 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.862325592 seconds)
  done (took 20.491336477 seconds)
done (took 113.594241181 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.63082671 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.86112979 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.141340897 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.917998419 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.904422759 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.151655474 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.893804529 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.160576749 seconds)
done (took 43.452937704 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.874919232 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.854877724 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.890169714 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.888144984 seconds)
  done (took 22.422436533 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.856303372 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.238621235 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.885059621 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.77228825 seconds)
  done (took 22.553550263 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223017405 seconds)
    (2/2) benchmarking "read"...
    done (took 2.2452186 seconds)
  done (took 6.262180776 seconds)
done (took 59.906667501 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.859595996 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.859294611 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.859615231 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.859706691 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.859576664 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.859984796 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.858145394 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.858465456 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.859359668 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.859487262 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.861613779 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.85952305 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859290699 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860613137 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86030708 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860369168 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.860393783 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85989409 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860902091 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.860202815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86090789 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.860202782 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.860571644 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.859645927 seconds)
  done (took 46.42941429 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.859790685 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.861967959 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.860555806 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.861445652 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.860567219 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.860097404 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.861879129 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.860413741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.860453167 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.860670168 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861529971 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.861302128 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.861107417 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.86115779 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861401515 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.860941416 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.861558471 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861269821 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86180252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.862978701 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.861376048 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860666058 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.861191938 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861851343 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.861827457 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.862565307 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.861895256 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.862394023 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861518676 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.861879524 seconds)
  done (took 57.633154455 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.862308107 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.863041079 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.862324663 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.86394914 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.863443244 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.86287842 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.862804095 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.863302269 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.863293917 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.862682557 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.863657463 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.862681171 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.862924924 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.863349874 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.863978148 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.863294213 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.86413349 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.862795632 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.862830265 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.863506409 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.863141011 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.863966307 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.863306062 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.864299056 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.865148919 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.86362953 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.865313848 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.865329502 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.865515477 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.864531281 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.865002963 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.864537792 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.865370967 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.86537153 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.865994665 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.865400228 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.864699988 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.865710637 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.865301307 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.864908911 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.865865375 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.865720627 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.865247014 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.864492142 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.866152637 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.865418665 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.865500721 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.866001544 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.865893295 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.865903187 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.866124484 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.866973609 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.866491825 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.867004491 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.866670816 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.86759782 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.865685225 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.867398935 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.86621957 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.866822629 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.866871203 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.86724664 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.866212267 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.866732565 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.866781567 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.866001772 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.866428598 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.868029108 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.866048522 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.867848625 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.866661942 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.867135307 seconds)
  done (took 136.081744592 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.867248483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.867613917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.86688045 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.866462195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86785176 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.867323586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8672931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867552975 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867096964 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.867423971 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869235391 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869351994 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867136647 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.867932703 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866958859 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.868609789 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.868425866 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86775994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.868324771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867778962 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868244544 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.867758484 seconds)
  done (took 42.889042634 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867925445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.867754178 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.868239729 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868675164 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.870502648 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.868213207 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.868007843 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869209746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86868529 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868702787 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868736225 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868644138 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.868232083 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869015014 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868361324 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.86932385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869880422 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.869114827 seconds)
  done (took 35.437751757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.870052636 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.873089185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.86994595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.870262917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.869261739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.870278127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869333058 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.870333702 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.86971115 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.870194879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.870350227 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869667893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.869479627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870356074 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869868742 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.870752697 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.870245874 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871691118 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.870091308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870626187 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.871297624 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.870126561 seconds)
  done (took 42.948339225 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870298474 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870040231 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.870111858 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870195668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.870384618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.871273551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.870614944 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.869597641 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.870076986 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.872124583 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873993405 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871155136 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.87073107 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.870898884 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.870463703 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870685109 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.87101887 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.871191356 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871232929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873930756 seconds)
  done (took 39.222344241 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870759894 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870752221 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.870031471 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871026451 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870735122 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.873091473 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871832498 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.870242199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.87155232 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.870570334 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.87146176 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871387674 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871918279 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871440985 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87135093 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871220602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871990446 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87094247 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87142568 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871840191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.871106137 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.874170428 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.872207231 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871467257 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.872106622 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.871732523 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871636056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.871264245 seconds)
  done (took 54.20393879 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.872313227 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.873286008 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.87294807 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.8732067 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.872666872 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.872845009 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.872816516 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.872910679 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.874280724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873171346 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.87441889 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.872921697 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.873832161 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.873659194 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.872909486 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.873160772 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873836598 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.873768137 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873442048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873239735 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.873497119 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874796101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.874328197 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.873802186 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875485615 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.874143224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873485616 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.872945327 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874423162 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.874446431 seconds)
  done (took 58.010897438 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.89490083 seconds)
    (2/2) benchmarking "in"...
    done (took 1.894714219 seconds)
  done (took 5.594205582 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.872966533 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874123293 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.874467182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.875467342 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.874928039 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.873627308 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.876116137 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.874361976 seconds)
  done (took 16.800918895 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.874208437 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.877263089 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.875182235 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.875397498 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.875839569 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.881809398 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.880937627 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.87466724 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.87522398 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.880370226 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.879211315 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.876935958 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.883599682 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.879094119 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.874883404 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.880279401 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875732833 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876966533 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.875256635 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.874725307 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878629465 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.876042912 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.875762072 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.875529173 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.87494436 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.876501684 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.883533789 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.877054244 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875423438 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.876312085 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.883204461 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.876499454 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.875260738 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.876597319 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.876092378 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.875821032 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.882443557 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.877529123 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.876583469 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.875534936 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.877338327 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.879851979 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.878687345 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.883831577 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.877723988 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.879145455 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.877483094 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.878301265 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.880496797 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.880805153 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.885307566 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.877003035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.87785195 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.876659662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.878123222 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.878069376 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.878211014 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.877685697 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.883262342 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.884060028 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.879712742 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.897367861 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.886613704 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.878960631 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.877667358 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.886444526 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.904496863 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.878587835 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.879009335 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.878203084 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.885718572 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.879000083 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.878187308 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.87783655 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.888058943 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.887307634 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.878870116 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.879978552 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.87850881 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.879730524 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.878897907 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.877745705 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879138928 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.878587259 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88769152 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.905014308 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.879970737 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.879414052 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.879824894 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.884824339 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.884091551 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.881901026 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.883867207 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.881983658 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.88079009 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.886858152 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.879388933 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.880493258 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.88488537 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.888747802 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.880983814 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.879561262 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.882983064 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.887818151 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.880162536 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.880854201 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879234661 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.880661473 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.887498517 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.882868458 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.880517042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.88132994 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.88693947 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.885115961 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.880000711 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.882958161 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.889214605 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.888566761 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.887905701 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.882924227 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.885090006 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.883263147 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.890888404 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.907780751 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.880457079 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.885523604 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.886727517 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.893280693 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.884769012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.881580517 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.884235279 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.881454442 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.882248083 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.882599297 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.880853938 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.88199581 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.880777183 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.881200615 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.881487792 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.883526534 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.887991808 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.882738984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.883346432 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.882059645 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.885655118 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.883941467 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.884645962 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.887978108 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.888693631 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.882995709 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.881961139 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.884469452 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.889614862 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.882373891 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.88321592 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.883168379 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.882646497 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.890591489 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.883759098 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.883212566 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.883591414 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.888993379 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.88651768 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.883772442 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.883112354 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.888124535 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882872937 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.883013995 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.88457439 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.883285063 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.885918559 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885082183 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.886508335 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.882680351 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.883837165 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.884008374 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.883297573 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.88783452 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.886894208 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.894441108 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.887228658 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.893234651 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.884380597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.891488914 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.885599502 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.885285506 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.883897121 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.884168714 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.884935338 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.886352204 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.884687821 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.88610603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.902736852 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.895118498 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.887208026 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.891555305 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.894765246 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.889636018 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.889992677 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.886120463 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885857376 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.887497978 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.885592305 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.885488445 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.886880253 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.888047688 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.890332638 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.885664392 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.889817469 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.886496363 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.885278678 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.886178299 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.884582991 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.88709285 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.885870993 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.890670848 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.890491466 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.885317436 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.892875556 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.888459799 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.886238671 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.887959782 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.888940281 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.887119077 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.887143025 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.887568843 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.889779782 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.891524562 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.887568354 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.895179661 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.892602839 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.892608641 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.892770862 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.887374474 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.888620306 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.887975024 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.889702798 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.896309383 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.89054218 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.887571641 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.892365468 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.888825751 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.889236137 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.888192365 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.888188991 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.887812329 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.889562074 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.888964872 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.888237121 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.895033315 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.888436254 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.888022256 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.887826271 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.896451342 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.894212036 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.890103505 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.887384022 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891833236 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.898110314 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.89417998 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.894884598 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.89715758 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.890629562 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.896089697 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.893868363 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.889654256 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.899945614 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.898338905 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.889773659 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.889490165 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.889949437 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.891558992 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.890474551 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.889288847 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.895556381 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.894884832 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.895322058 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.894182784 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.889293517 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.892958934 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.895140657 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.891258176 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.891928897 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.89193587 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.891557902 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.890125526 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.889653083 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.891830638 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.890154339 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.891480308 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.894829424 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.890974434 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.889230728 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.890702911 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.899126928 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.891521513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.891247214 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.898103381 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.892735134 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.895085109 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.893058804 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.890427878 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.891177418 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.89216701 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.897352809 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.897469036 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.892224156 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.894169763 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.901368077 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.894544703 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.900087887 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.892087501 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.901020196 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.892809235 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.891516998 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.893127054 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.895634979 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.900039987 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.892764044 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.897293284 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.899636278 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.898419925 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.897932314 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.896933104 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.892035891 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.892137071 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.892265117 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.89781426 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.897028652 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.895251435 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.89243162 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.892799051 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.894408101 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.896632658 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.895386566 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.893900033 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.892629457 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.898185865 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.891819096 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.893152386 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.893316187 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.892889095 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.893531668 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.892978157 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.893018234 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.900386038 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.895072218 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.898516251 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900730416 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.894070589 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.902069815 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.894315529 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.893383868 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.899328797 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.892918226 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.900303012 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.893877854 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.895229768 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.900751312 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.894815435 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.900078333 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.90687426 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.900226766 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.90163197 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.897218868 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.895431967 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.894316082 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.903151594 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.920925188 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.894510626 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.89629577 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.90011126 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.902373971 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.897437836 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.8991816 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.89721259 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.90244227 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.895326677 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.899927607 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.897971032 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.908954842 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.895317041 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.895300881 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.895723651 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.899741789 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.900684932 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.895455628 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.901491653 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.896678389 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.902718467 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.906341783 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.896531513 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.901977443 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.895814041 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.89553121 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.897721449 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.8971708 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.896554338 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.896901037 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.896413921 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.895794773 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.897308888 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.900389089 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.901268421 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900197905 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.905506349 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.897229465 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.89691828 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.903255419 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.896987765 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.898446529 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.898881174 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.901325372 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.904180101 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.896584091 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.903570277 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900037015 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.907158634 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.898291464 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.897850036 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.89776007 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.900869407 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.901387206 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.89854938 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.898868092 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.906251157 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.901093491 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.911941775 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.905658148 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.89721166 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.904719391 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905505617 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.907093751 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.898277609 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.902364655 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.898709115 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.900857509 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.898725623 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.898216117 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899154828 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.904499793 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.903018418 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.89924314 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.905205409 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.898799181 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.898209077 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.900869528 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.900253473 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.904858391 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.898958409 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.898896329 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.903602766 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.898955681 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.898988897 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.900572223 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.899546315 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.899194983 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.901093169 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.900196332 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.90559849 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.898412397 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.900029041 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.900895875 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.900710146 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.900441885 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.9057574 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.906632316 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.901240396 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.902544626 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.912888644 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.900071445 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.902297386 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.9069075 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.902255401 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.90179905 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.901361722 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.900500239 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.8999227 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.907771407 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.901456149 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.901635177 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.906500238 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.900428904 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.905198893 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.901781942 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.905815525 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.901109042 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.906358765 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.900001193 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90438238 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.917249769 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.905806407 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.904128711 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909234501 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.905619556 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.901528893 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.902438956 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.901923583 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.906611473 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.908252428 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.904885648 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.903809473 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.904417196 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.902247571 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.903887081 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.90335107 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.904856554 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.901388746 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.902545381 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.905970938 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.91106177 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.910388043 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.903524722 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.902782758 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.903257819 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.905819547 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.916643456 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.903267153 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.903373971 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.904115027 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.904458385 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.909201228 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.912610367 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.916701765 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.906703437 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.904099996 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.907660512 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.920791616 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.90589733 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912737351 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.938574736 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.910075577 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.904056585 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902755917 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.910241518 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.903822044 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.910808663 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.904709759 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.911424157 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.905578972 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.904250045 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.911915704 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.905091287 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.904910102 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.905793216 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.910440469 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.908144764 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.904139906 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.910593317 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.904390594 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.904818028 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.910244033 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.910743453 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.905237376 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.904032051 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.90546604 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.905684919 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.904921244 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.905612762 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.913922373 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.905434438 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.905993305 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.915546824 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.920518447 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.905865393 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.904962146 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.904701635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.909398294 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.908771681 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.907335948 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.909238112 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.914069411 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.909712916 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.913345266 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.907153595 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.907183446 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.905989205 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.906367159 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.90752418 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.917409052 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.917595165 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.911901158 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.911840972 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.912239928 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.906587737 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.915503025 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.913162179 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.907917664 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.907940075 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.907408592 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.906678654 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.907364074 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.906801462 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.909128656 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.915551428 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.907899877 seconds)
  done (took 1130.549406537 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.908206035 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.907030614 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.907126915 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.907975515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.90772615 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.907042643 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906703388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.908463341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.908436831 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.908268606 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.907706308 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908316193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.906804041 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.907557363 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906483484 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.907008344 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908775403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.908725132 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.908673703 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.908371749 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.909240193 seconds)
  done (took 41.901955391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.908644111 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.907535846 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.908479366 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.908994793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.910006168 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.908567569 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.908274053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.909614076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.910404854 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908523086 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.911828847 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.908503186 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.908912909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.909490366 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.909496554 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909714204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.90951266 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.90837907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.910189665 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.909235041 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.908650628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.909070395 seconds)
  done (took 43.839641119 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.910439083 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.909846084 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.909584812 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.909946195 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.909209399 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.909827869 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.911642193 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.915757159 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.915885431 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.916625013 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.916708106 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.919625749 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.911318247 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.916831324 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.910532238 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.910199301 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.055871005 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.910794696 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.910485068 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.911108465 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.910855987 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.91568305 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.91155293 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.911332106 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.916199772 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.910587064 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.910794692 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.910426387 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.91178999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.919241355 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.916328284 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.911611273 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.911959339 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.9139007 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.916697457 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.918084183 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.914871163 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.914712576 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.911518578 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.912655041 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.921408404 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.938322059 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.912090745 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.912833088 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.919153602 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.912203642 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.912438036 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.915581211 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.921380179 seconds)
  done (took 95.76913661 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.912850845 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.912390148 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.913209727 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.914291992 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.914226392 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.912438229 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.912819949 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.913101779 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.912467879 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.91271292 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.912955739 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.913071951 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.912330637 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.913613738 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.912713184 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.912554186 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.91303145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.913116671 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.912216926 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914413222 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.913498774 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.913268071 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.912914292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.913204834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.912418282 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.913012027 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.913787997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.914496203 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.914238812 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.913080836 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.914178528 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.914138732 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.914095465 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.91423537 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.914051865 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.915016312 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.914897258 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.914014148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.914763174 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.913294788 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.913709576 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.914114897 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.915338734 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.914533989 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.914529381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.914805548 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.914173293 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.914684255 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.914798591 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.913573404 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.915867794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.915132739 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.914668706 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.914735649 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.914484261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.915571507 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.914394589 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.915529557 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.914567643 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.91584732 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.915311001 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.915509202 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.915459122 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.914431232 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.915470841 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.916218361 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.91698358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.915135489 seconds)
  done (took 131.999258816 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.915977385 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.916981179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.915742924 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.916745886 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914821959 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.916591263 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.915971631 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.915846676 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.916635759 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.917444371 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.917094677 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.918094098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.917324375 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.917001544 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.917000355 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.916471071 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.919714433 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.917371248 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.918145314 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.919386677 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.91951045 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.918758899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.917792026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.920163014 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.9193293 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.917781192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.917610089 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.919741974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918879361 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.91807891 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.920486067 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.918170956 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.918784341 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.919181745 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.920789421 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.91884709 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.919465361 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.918977388 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.917630086 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.919001886 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.918939091 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.918915819 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.918479361 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.921127239 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.920011031 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.918577036 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.920318704 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.918859089 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.918329447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.920054182 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.919560151 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.921092104 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.920265774 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920989122 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.919637564 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.919376414 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.919437913 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.920846661 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919889432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.921352178 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.922601937 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.92143102 seconds)
  done (took 120.80583396 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.920318254 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.919712267 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.919304145 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.91928134 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.920131991 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.920800277 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.919051005 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.920390467 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.919179008 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.920596606 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920692472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.920997536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92524225 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923205378 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.920666232 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923291492 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922399544 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.921758713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.921164731 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.923688776 seconds)
  done (took 40.270949616 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.920570983 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.921465152 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.921010715 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.923463765 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.921400993 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.921661035 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.922366799 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.924478114 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.920683129 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.920621148 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.92343703 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.921030488 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921052533 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922129228 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.921898388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.922313127 seconds)
  done (took 32.600062146 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.922946601 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.923598367 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.92218788 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.921995775 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.92298426 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.921605351 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.925176344 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.923609883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.922973909 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.924773072 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.92262973 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.922390685 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.922954359 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.925087815 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.922496842 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.922255987 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.922024246 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.92303273 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.922446743 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.92265356 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.929570326 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.925372009 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.922957519 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.922739305 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.923234123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.923874021 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.922386686 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.923354793 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.924091908 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.923114035 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.92277882 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.923074392 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.924529255 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.923889859 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.925189262 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.922372774 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.923174021 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.927721632 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.922741459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.923176563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.924822756 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.923940677 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.922321257 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.923814156 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.922447373 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.924913249 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.919731505 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.918496976 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.918780588 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.919838779 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.919887661 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.920112036 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.920832024 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.922739316 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.919119098 seconds)
  done (took 107.613951087 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.918800549 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.920451558 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.919995498 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.91988416 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.920237631 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.920288422 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.92097591 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.919508019 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.919228865 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.919024424 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.920175358 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.91800917 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922126981 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.920167328 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.921439206 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.921193658 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.918063383 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.919557147 seconds)
  done (took 36.408575224 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.921555309 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.922361963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.921809578 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.922483385 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.921686866 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.92214975 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.920571448 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.920551298 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921285475 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.922233491 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921074311 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.921762858 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.913537561 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.919675198 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.918282272 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917294821 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.917828268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.916924437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.910528518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911828429 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.911371357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.909301792 seconds)
  done (took 44.053970066 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.917329296 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.917430355 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.935874683 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.942476416 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.942957671 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.960437482 seconds)
  done (took 13.453892417 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916781484 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913622376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.916381273 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908388191 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909252562 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909235628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909325543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90895992 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908583955 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908487478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910713339 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909092724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908861273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909012685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907171904 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908146085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908264201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908934658 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908143449 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906768046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90790915 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910718056 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908620214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909481027 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90918184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910298042 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909280084 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907907287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90795165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908668492 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908109807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908996155 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908717193 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909334464 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909201539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908649084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909061713 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908338787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909029754 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909399683 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.907362726 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908260161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91007485 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907846498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909161144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906852597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908841578 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909959237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908663046 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909004973 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907582858 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908843036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91136755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90972026 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909677549 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909272219 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909249943 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911667834 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91109169 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908626247 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90931246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909709697 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90991729 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909216684 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910744796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912270787 seconds)
  done (took 127.859011057 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909189138 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909147971 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909750179 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910091727 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909469752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910335106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912355606 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909907238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911110625 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909999022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909328152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911512864 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911241064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911140234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912388572 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909470429 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91090339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912387074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910216053 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912654861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911327417 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91116812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911216715 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909802953 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911923072 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910160976 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909442221 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909666927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910574384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910685398 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911949842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909533247 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912019559 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911568571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909764816 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910442029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907468703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906882307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908323305 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906927632 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908178647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901680688 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900811022 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902033479 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901985218 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901834584 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902414748 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900595252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901856193 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901392372 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900688799 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901006165 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900451503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900607917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901315646 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899252342 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901333395 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899308324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900577826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899724557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900218338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900597077 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900339177 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899253122 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899163509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900221668 seconds)
  done (took 127.6811871 seconds)
done (took 2631.856227622 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.970559359 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.90376986 seconds)
  done (took 15.702856821 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.059665441 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.016232584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.898249019 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.914174347 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.898738611 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.92459233 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.921027546 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.898943905 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.897606658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.898559826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.898071011 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.082348391 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.958499449 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.898200085 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.898788274 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.990005147 seconds)
  done (took 52.886915938 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.900323715 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.899459958 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.910395513 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.901451817 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.901249276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.914312717 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.930731312 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.904331197 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.93411989 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.912360567 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.970183061 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.912120327 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.899340564 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.950474597 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.913601521 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.916200551 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.989256256 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.977281057 seconds)
  done (took 36.463728729 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.976487338 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.92314398 seconds)
  done (took 10.732925506 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.903946865 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.907942745 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.986511416 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.904198293 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.895348192 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.919027971 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.897076342 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.925933274 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.924792645 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.920722291 seconds)
  done (took 71.012404529 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.900340081 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.897616504 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.89569091 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.892664503 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.891695555 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.896693483 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.894505649 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.895286199 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.558895472 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.930534118 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.90260249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.898759324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.894249934 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.896519844 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.893474142 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.91621982 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.005233545 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.893319032 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.893868612 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.897766685 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.894371846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.946938242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.90728908 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.89683188 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.926983564 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.558382626 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.902686022 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.899018639 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.00446294 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.891683224 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.893322878 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.079067834 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.897019998 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.369041254 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.208393144 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.900096088 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.906959957 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.900542012 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.892365252 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.013387201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.893596186 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.899933681 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.794688754 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.188759853 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.009862412 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.936461269 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.227157872 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.910385055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.894169808 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.921844883 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.894537272 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.89418775 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.909251845 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.398780615 seconds)
  done (took 134.234296446 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.891676073 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.255198744 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.058203234 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.895051336 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.177264247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098270314 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.893236317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938352072 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.896304733 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.134904806 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.059618538 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.998013834 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.893723916 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.891684921 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.893508256 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.889875474 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044277719 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.960799431 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.893903951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.889145421 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917456511 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131619934 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.02900145 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.895715719 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.911140714 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104738592 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.012735642 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.994993911 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.218322712 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.891023319 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.951907901 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.893106661 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.893751409 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.890622214 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.052644556 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.984078041 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972440963 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.892461439 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.889752011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.88940338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.555271338 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088597897 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.988211545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.022504095 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08894661 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.097727008 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.67010641 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.890681363 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.633227102 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052590153 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.118762564 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.136494169 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.011664732 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.893487208 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.236358319 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.890324314 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891177094 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.141244454 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035348225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.991206678 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893779591 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.891304184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.892452457 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13248888 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.894104289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.986325149 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894049114 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.893010466 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.991495202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992384928 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03428003 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104742362 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922521093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.859441532 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.438398029 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.136590691 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.956588193 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144716722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.894904134 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.892007739 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974109067 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.735809973 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052279765 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13672827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.148449175 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.342853861 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.62688729 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.891670421 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.119242421 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.112810826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.143244266 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.097930062 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.048415409 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.058079496 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.891877654 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.893019063 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.100029603 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01828814 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896132467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.235102394 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125933261 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.455514087 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.911197192 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.197941063 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025021229 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.898014307 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.526121426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.894854272 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.115713478 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.933254451 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.89484759 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894155636 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.113223802 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.8705706 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.89308795 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.541109753 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.954835728 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.899047355 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12835842 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.899687749 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.155822851 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.898828632 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126221333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.458800456 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924804618 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.066441606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.098193172 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.89943603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137559921 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138311547 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009989495 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113476018 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.540552002 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.894756464 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182401824 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.904248551 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.895185566 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.067249453 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.896947229 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042084926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.898171654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.179493665 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919282408 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054054458 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.899273749 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.16469297 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.928817123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.949128048 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.901396799 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.028786189 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.899535982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731113053 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053189042 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.898975298 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.898035194 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.462693439 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.899404994 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044603211 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.125398452 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922125584 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967854689 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.559312768 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896746614 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977706744 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.925652881 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.29272089 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.897188434 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.058020712 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.898717409 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.896178688 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.896711189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.132659675 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080267909 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89832764 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.896815559 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.793120246 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.897049782 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89824595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.076359768 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.799692007 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.897345206 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099692346 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.905673796 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027671022 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.900718559 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.973347024 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.229923782 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.897280097 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.89757643 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.898158214 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.898200909 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.899898155 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.103866629 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.931812802 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.425265618 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.035484345 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.165943631 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.209180549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.149841201 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.941442628 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.90088268 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.152316167 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.902782293 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.959856072 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.904102422 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917187765 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127942395 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.904626283 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107567508 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178191991 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.765057051 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94454752 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.904453271 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.899393708 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.898098725 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06404978 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987099705 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.901136157 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.899201482 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013227174 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038767927 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.108255654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.900439167 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.022256955 seconds)
  done (took 907.816276513 seconds)
done (took 1230.680529752 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.898530548 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.905077041 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.902074014 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.903917698 seconds)
  done (took 29.439577783 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.900052889 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.900548806 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.899310395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.90328336 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.903763125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.901400362 seconds)
  done (took 13.237637854 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.117774958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.90426725 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.904378432 seconds)
  done (took 21.757273142 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.97240132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.285256905 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.03631049 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.315046605 seconds)
  done (took 10.439902707 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.90174546 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.902721197 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.899957568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.90354043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.901723187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.90217676 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.904046835 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.904571914 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.901854362 seconds)
  done (took 18.954186815 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.957162683 seconds)
done (took 99.616500439 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.914258122 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.344227937 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.942906902 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.913037363 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.073169313 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.012608814 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.296470329 seconds)
    (8/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.057171327 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.272804174 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.934262742 seconds)
    (11/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.018384584 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.050444365 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.040374635 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.940217116 seconds)
    (15/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19225356 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.939052673 seconds)
    (17/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.086391279 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.322858167 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.9187069 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.175228619 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.086687346 seconds)
    (22/309) benchmarking ("sort", Float32, false)...
    done (took 5.639362557 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.053731759 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.46629816 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.942916877 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.799672554 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063450574 seconds)
    (28/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.945067694 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.917422883 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.402981613 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.012383788 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.209145185 seconds)
    (33/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.91989856 seconds)
    (34/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.767978253 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.157659313 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.919329194 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.368791433 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.072968847 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.087405513 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.916154611 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.024104013 seconds)
    (42/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.365885139 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.083238559 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.983623121 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.020532848 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.918142789 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.406489167 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.15754637 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.919222033 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.126838256 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.920655335 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.203742958 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.595437557 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.918363899 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.826732699 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.097004971 seconds)
    (57/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.936857413 seconds)
    (58/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.439582747 seconds)
    (59/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.095454472 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.011491006 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.994575567 seconds)
    (62/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.596618712 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.999972384 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.838414331 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.13664067 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.043012244 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.100209261 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.060733275 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.914516206 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.96944812 seconds)
    (71/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.281033858 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.92676531 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.104239343 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.92165896 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.259794452 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.280228738 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.129852228 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.231495214 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.239907963 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.253067681 seconds)
    (81/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.688018965 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.919017881 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.436961713 seconds)
    (84/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.324284885 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.2842177 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.373206761 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.920918675 seconds)
    (88/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.264946934 seconds)
    (89/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.301593118 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.921100129 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.251207811 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.936709005 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.312819531 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.022622608 seconds)
    (95/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.124614406 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.949932663 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.249461844 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.695729255 seconds)
    (99/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.668123701 seconds)
    (100/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.657366958 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.114892301 seconds)
    (102/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.373803657 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.928965847 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.369068589 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.945123599 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.350624258 seconds)
    (107/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.056970105 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.109180679 seconds)
    (109/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.711324803 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.319379544 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.23135175 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.266474413 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.925632814 seconds)
    (114/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.160298858 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.075045552 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.94596277 seconds)
    (117/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.943965182 seconds)
    (118/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.5435315 seconds)
    (119/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.007538591 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.172998892 seconds)
    (121/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.933954368 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.922113567 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.759934222 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.296203283 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.113183624 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.923979249 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.029188966 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.920627237 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.037989579 seconds)
    (130/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.809782779 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.06651423 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.061136606 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.924835648 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.70664929 seconds)
    (135/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.418120522 seconds)
    (136/309) benchmarking ("sort", BigInt, false)...
    done (took 6.928964032 seconds)
    (137/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.05882954 seconds)
    (138/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.032270532 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.279351112 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.950147623 seconds)
    (141/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.104337665 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.062481916 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.950435907 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.903768859 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.944708476 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.188404807 seconds)
    (147/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.924844922 seconds)
    (148/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.53089935 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.18419125 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.636839581 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.328992883 seconds)
    (152/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.446211891 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.229281416 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.172714235 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.920495915 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.926240721 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.953108722 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.367576091 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.164913385 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.951025688 seconds)
    (161/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.925285607 seconds)
    (162/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.21456311 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.924348561 seconds)
    (164/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.403718505 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.952368012 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.033462505 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.050866592 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.23877944 seconds)
    (169/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.025398969 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.022615663 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.349910084 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.928953194 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.668742972 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.930168363 seconds)
    (175/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.013042288 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.833245981 seconds)
    (177/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.062446894 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.923863862 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.427318385 seconds)
    (180/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.42410154 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.924199028 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.436909745 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.686205092 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.043422337 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.022129422 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.924930488 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.436031197 seconds)
    (188/309) benchmarking ("sort", Int8, false)...
    done (took 4.854036366 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.543825808 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.931544081 seconds)
    (191/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.059906739 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.927840793 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.147613393 seconds)
    (194/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.326476639 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.840970146 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.927675064 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.133331983 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.040463353 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.351494196 seconds)
    (200/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.608599228 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.063380186 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.244027534 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.990309445 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.037289414 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.927043424 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.078272093 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.927861292 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919224838 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.009654805 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.148513764 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.046823919 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.072204354 seconds)
    (213/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.113792803 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.168059777 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.932801542 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.130012493 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.958975879 seconds)
    (218/309) benchmarking ("sort", Float64, false)...
    done (took 5.71172124 seconds)
    (219/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.029557851 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.928523738 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.931964012 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.298794296 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.058361439 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.584823329 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.260215207 seconds)
    (226/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.813904697 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.932419318 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.935325248 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.931179019 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.87566776 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.961204462 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.932035014 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.035521208 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.931889056 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.838045528 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.059102574 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.829878572 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.057472353 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.266984638 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.420498987 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.053582523 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.255731195 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.935617945 seconds)
    (244/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.100153349 seconds)
    (245/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.955003472 seconds)
    (246/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.811492745 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.207702942 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.018248121 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.015093183 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.066875847 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.184422859 seconds)
    (252/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.049903068 seconds)
    (253/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.05692833 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.179826464 seconds)
    (255/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.323288828 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.399795188 seconds)
    (257/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.068385532 seconds)
    (258/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.176822186 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.369599979 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.499066856 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.940176743 seconds)
    (262/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.313062082 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.070388697 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.160881371 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.088068327 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.997650024 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.946552574 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.961151195 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.040534074 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.234773232 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.93090366 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.585754611 seconds)
    (273/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.477183736 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.020426009 seconds)
    (275/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.067634481 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.048674962 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.2603683 seconds)
    (278/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.325510053 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.280936803 seconds)
    (280/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.970943011 seconds)
    (281/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.930941829 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.077984438 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.702727902 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.937980137 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.875356653 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.275937572 seconds)
    (287/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.027407683 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.118030997 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.931337382 seconds)
    (290/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.944294877 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.891310595 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.84407245 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.93299705 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.667529763 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.93435954 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.699096001 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.973276013 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.934985543 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.146144581 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.9330463 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.22930107 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.359196833 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.254918465 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.150103447 seconds)
    (305/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.063162959 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.992405296 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.859078538 seconds)
    (308/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.948520522 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.494741432 seconds)
  done (took 1025.918795553 seconds)
done (took 1028.02999703 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.960381514 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950600424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.934223673 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.95634001 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.047137971 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.980069854 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.947680727 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.938384142 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.983611968 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.985790311 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.933777811 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.981700217 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.935461596 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.934965963 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.934998548 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.95210382 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.236506209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.966036346 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.953271642 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.947560245 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.953043189 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.933445501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.985266927 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.980161006 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.940621683 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.940549289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.943023978 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.955416595 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.048225382 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.939523832 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.940553473 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.948122178 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.236609906 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.965101225 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.935118158 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.956551244 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.948638744 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.947985878 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.940394996 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.969187255 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.327220957 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.978817636 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.93794601 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.936204391 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.936191927 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.943360167 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.93724468 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.944162845 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.95271629 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.953485145 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.321287172 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.993141356 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.940886357 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.937867088 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.95088587 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.937455016 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.942401709 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.954859925 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.955918299 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954277753 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.225016914 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.974225675 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.941144903 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.955560221 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.946799942 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.356707199 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.976480498 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.94405143 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328958961 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.985295947 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358184534 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.989396741 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.940243306 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.951859986 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.969666921 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.237778183 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.965631099 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.937892755 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.947550346 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.937524129 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.950824788 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.953768279 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.943709395 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.938472194 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.955467203 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.984227958 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.955469328 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.939481873 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.950246004 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.958574806 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.948653802 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.952384996 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.942795554 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.937286604 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.951623008 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.943245025 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.944131994 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.942728138 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.943565596 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.952649427 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.328154801 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.995872509 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.936922298 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.936723385 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.939497053 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.95494726 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327815866 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.978433175 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.962369751 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.990304313 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.941007137 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.230518814 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.972224419 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.956956926 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.951861766 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.943072227 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.939620546 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.229384412 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.354264487 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.992898817 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.94118358 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.940209635 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.958031874 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.943555348 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.938746819 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.242341426 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.97321966 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.957466829 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.065245636 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.95548012 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.973932527 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.942397583 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.947594086 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.988305707 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.95952763 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.973802629 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.944541361 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9595382 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.9593929 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.939473688 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.953516239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.955161138 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.94072977 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.94989407 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.938835714 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.988480705 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.957241911 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.958259178 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.963039229 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.064655485 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.939671126 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.230219208 seconds)
done (took 304.546287579 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.021318451 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.940709105 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.034600132 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.941551834 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.030603549 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.018100773 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.942157478 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.941864098 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.942191138 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.444951062 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.943349998 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.947441674 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.940877564 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.942351848 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.011687242 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.94225405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.942413941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.394079632 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.945071734 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.02262837 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.94260902 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.942456117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.942334193 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.450299015 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.943904753 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.943380811 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.023747575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.942999032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.397556758 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.944897819 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.943051844 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.398384862 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.022977615 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.971121419 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.951570412 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.952308401 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.03255685 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.952366664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.011950044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.011973373 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.036787343 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.976268589 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.943717659 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.942864016 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.948730268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.947516192 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.944564025 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.976867068 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.945068211 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.951936906 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.395311498 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.950233321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.953757034 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.945241855 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.945489109 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.973188213 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.944993159 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.947545572 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.025625984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.946182144 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.013670576 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.452038558 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.450369682 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.945558873 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.946101463 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.946100838 seconds)
  done (took 190.278881146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.010590579 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.022921267 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.011501428 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.95659526 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.993084637 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.012098689 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.953982996 seconds)
  done (took 15.83231995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.952512913 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.946269735 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.995732362 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.995313702 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.946569926 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.126430447 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.958044958 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.950296355 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.973644279 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.945967981 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.611780414 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.995741992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.954828547 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.94596293 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.959537427 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.003094306 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.948861879 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.948327418 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.061984318 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.095255095 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.950617838 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.954165226 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.976386519 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.960148206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.947485451 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.946690145 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.947115579 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.955921144 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.94708015 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.946288619 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.946177789 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.999719526 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.947999639 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.947073263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.947666375 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.94943543 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.946847368 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.947339823 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.947798215 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.947121101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.94736235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.94780431 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.948808606 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.946995302 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.947855046 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.972099735 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.947853637 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.950298408 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.948583505 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948810577 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.975252753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948681583 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.948886491 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.952979227 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.99117758 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.953659963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.948940612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.950680018 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.948012337 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.949243401 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.948647356 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.097860165 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.99887789 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.950078251 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.99908366 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.103250656 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.948683164 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.948506689 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.949666949 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.038825611 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.949382778 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.999844193 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.949661002 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.064494877 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.948613349 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.13025757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.972922388 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.953366927 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.956164906 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.949857373 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.958930538 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.949309481 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.952572042 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.956795987 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.95477088 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.949941333 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.950315658 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.951685798 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.957644195 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.949733287 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.001782452 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.949854046 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.950376813 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.089948678 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.949731588 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.067257079 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.977981936 seconds)
  done (took 213.701852517 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.956447124 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.957928281 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.952931628 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.966505936 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.951581558 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.951542902 seconds)
  done (took 13.612836262 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.953491684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.954723743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.951299131 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.950932914 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.950965584 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.950836483 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.951751272 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.953770411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.954697725 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.951139768 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.951327763 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.952376228 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.950595418 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.951494212 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.952257205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.95203864 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.952554378 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.954221352 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.951996624 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.952012247 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.163617289 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.952655355 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.950873438 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.953564716 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.955844632 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.951270631 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.966803995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.952208775 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.951293709 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.961876917 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.9562096 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.95318784 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.958135394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.959657794 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.95676985 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.95485893 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.957738886 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.952607212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.952734606 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.953374231 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.952386522 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.95300582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.952289065 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.952599922 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.955894557 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.959772733 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.956722819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.969307949 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.953239306 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.953393517 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.952830804 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.953721487 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.95380269 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.951937041 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.95658553 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.961570554 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.958575014 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.954380668 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.954402266 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.955777849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.957579576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.954569655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.957185794 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.959548158 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.961778853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.954043036 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.956373595 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.958500511 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.953992904 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.954031988 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.953485092 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.955114833 seconds)
  done (took 143.827539455 seconds)
done (took 579.139106593 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.245943093 seconds)
  done (took 9.127100431 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.989502519 seconds)
  done (took 8.931931548 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.35870304 seconds)
  done (took 10.242891729 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.973404777 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.999458556 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.967802691 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.96085637 seconds)
  done (took 29.799616665 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.309917592 seconds)
  done (took 9.189817641 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.977642702 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.950806019 seconds)
  done (took 15.873746712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.971537792 seconds)
  done (took 8.859406396 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.989108741 seconds)
  done (took 8.879579336 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.977427344 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.978594936 seconds)
  done (took 15.857506127 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.959223461 seconds)
  done (took 8.839800587 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.271020533 seconds)
  done (took 10.17554399 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.972589403 seconds)
  done (took 8.922610402 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.01452276 seconds)
  done (took 8.894448796 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.951570323 seconds)
  done (took 9.831836856 seconds)
done (took 165.309339469 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.972464221 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.959104033 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.960393426 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.96066911 seconds)
  done (took 29.733074945 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.9899946 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.989783916 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.000129 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.989300452 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.980951655 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.982052405 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.991166662 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.99147851 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.982289816 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.988655446 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.990771313 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.987115361 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.993182913 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.99973135 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.999125772 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.989109507 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.00672907 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.990375245 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.980970238 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.999729104 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.989025132 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.990072715 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.956350289 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.956549084 seconds)
  done (took 49.596120128 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.173286608 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.042223253 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.127554983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.030465888 seconds)
  done (took 10.255467164 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.956128812 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.033099726 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.023821951 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.011694048 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.016303351 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.072412254 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.024799184 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.097331881 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.085229791 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.102203037 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.965166402 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.979483797 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.980999638 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.013314041 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.072807965 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.957355698 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.957729361 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.076276979 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.033846631 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.188937726 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.958890983 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.0272017 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.017948616 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.026186323 seconds)
  done (took 50.562551669 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.958057134 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.966421666 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.966218575 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.95951429 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.958285842 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.959055283 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.965238672 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.9610004 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.980318479 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.960398189 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.959216852 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.959634744 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.965178931 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.959039526 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.958543953 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.972066804 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.973222177 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.960166431 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.962803662 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.965874715 seconds)
  done (took 41.153776332 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.958509348 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.228552041 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.302228977 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.209512867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.958150053 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.957809521 seconds)
  done (took 32.499321801 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.972443355 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.969300431 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.960982435 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.017764745 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.098515618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.966768454 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.960543212 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.97146562 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.006787637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.025162963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.981104641 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.988181804 seconds)
  done (took 25.803662324 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.960920415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.963877353 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.962864238 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.974899797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.971453972 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.970887145 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.967484681 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.95861166 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.975462078 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.982632601 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.971526399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.972169476 seconds)
  done (took 45.521884006 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.663217036 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035677795 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959452726 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.982760415 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392506774 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506442633 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.851521708 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.558969647 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49844885 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.886373503 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162428888 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.960506443 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044240717 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.961251946 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230767096 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285632224 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154858083 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203187137 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.549912694 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.04943486 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.163201583 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168707702 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.245699648 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961032509 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962323421 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.967016814 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400259287 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.658568677 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063293002 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.050034589 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266227022 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908997537 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010447511 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.962894185 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.971783603 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963518033 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965827662 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232786913 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.966534949 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165635461 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031034848 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210506809 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966779435 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373636836 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.664736514 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.220301615 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.072827995 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961733541 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964960044 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961974924 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888151358 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044497943 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.964364133 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966773447 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.662034659 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961945093 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037531888 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.963056244 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165506068 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.769409177 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644728564 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.964268217 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964288306 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523112375 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938402811 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.147023442 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562891954 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403604753 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377153049 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.060156522 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.964510976 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962667931 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.04152806 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.991851195 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.564501717 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069180282 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099078954 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.980370994 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603457832 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245246525 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.354132407 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524884162 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882864898 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22965523 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.658080322 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.019051474 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181148833 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.793915746 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.890309036 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169210271 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993313861 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972000556 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22816587 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562890507 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145049527 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.979905316 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395044294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982643616 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96992462 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965747424 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179284438 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295160496 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053616612 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085142874 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981731914 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.047177155 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890826805 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.976615995 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.966766074 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.84653261 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967672336 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.750718751 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.076645607 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.72179038 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069235358 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.903193995 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970620242 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954682281 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075189303 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914844119 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210871457 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.255015664 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.60847524 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769689267 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.162784216 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.293983853 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193719992 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970844047 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179614536 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507244315 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.330058626 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.014649483 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249282396 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.018950451 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247945763 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382669344 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031389457 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631120508 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.56379653 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.182055046 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981488682 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.964963443 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969445646 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971689811 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902140978 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.590102149 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.309233725 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.134035014 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181831026 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.295831336 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.014260414 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.756765297 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340465547 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103634674 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977815701 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.604428379 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.127844179 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.725093158 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.057073738 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044291744 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.143221417 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.997832601 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982644911 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058954183 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985229559 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.975224726 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.246503305 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334709766 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.970429529 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.970796788 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.924600447 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973605869 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.972279527 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.494094557 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937936031 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.976696588 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.980031415 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.842852944 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030971291 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973798811 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972149028 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.489999604 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.479565161 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.975024698 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.614760735 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.988815317 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126267592 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23139885 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.291543326 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099590654 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.670342316 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.335158947 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.079681535 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.670925662 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.897567044 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972615614 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.907802385 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972763493 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.968914295 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976376894 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.156461575 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237559404 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268058881 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.428963764 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.039046639 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174926647 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.572584067 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993948176 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.972042319 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97648457 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.97334311 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970160537 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.465218038 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.511387549 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946432146 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073360447 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976959132 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100449766 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.982308051 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.897509513 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.974020586 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973870143 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32634876 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.060296111 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.930101254 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.246381196 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.700611189 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166075591 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02013331 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.986565829 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978267099 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.617230188 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.080461116 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899317935 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345127837 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073621677 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.601499154 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.718274453 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53559714 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259023098 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280939282 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.287588489 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.038715008 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.186773755 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059314856 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029387612 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060638833 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907972785 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.901351113 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.609393982 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299458249 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241526824 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986586302 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191789135 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573485338 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273987481 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003992102 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.743791011 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337157982 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94797176 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989496762 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.313109461 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148240549 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059232864 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977558441 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92557755 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301812876 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011529179 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.676011725 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989773593 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325591988 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333126551 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.19357881 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.307836975 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189465079 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.975478351 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321666694 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.106543529 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080021136 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980050908 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.946035273 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.194574829 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556111613 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.804341328 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982322457 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.046077526 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327520236 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.874250947 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.978050203 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.054610843 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302240695 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976682325 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.279504998 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335983904 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.077124316 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028258512 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202711115 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.57668645 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337687973 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519659741 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451282742 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981913144 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.901674993 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.676521558 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.178317903 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.98055141 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941389755 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179464192 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207183095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656150967 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199474698 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22117032 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.989080522 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238534579 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048121599 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.075477748 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.244183859 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.418620328 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.225373207 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203919292 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534006291 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194578366 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412650465 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.122731597 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.981279118 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182765494 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195390631 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19271692 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.31378868 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14133203 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.688054248 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.98345182 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.184951606 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261876272 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038157868 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.319409446 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.15187243 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.063449485 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986040105 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053782057 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983562359 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988689137 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.314362862 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503792081 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.992294271 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054267662 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.960624035 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.544412694 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.986450106 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.984806907 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242245239 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317079604 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302562225 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96046335 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.980023179 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988181643 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107647956 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.905645995 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984217233 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250442035 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.983359283 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314216721 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198030964 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99688476 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.254333295 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.37067146 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573898612 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079861747 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985611229 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187592518 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270651808 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.090627336 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.161219385 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251928769 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309825063 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.010824376 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.316904429 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22717441 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983807942 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 3.005015404 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985147616 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101470021 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.178422731 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24619811 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.485388669 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626684215 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319873545 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.84073135 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984324123 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.582657837 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324122324 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243570929 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.030372935 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058002756 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988653003 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334910387 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.766486226 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115085723 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.827294958 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911022345 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.995285758 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.271661447 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.223989807 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.692695845 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985208874 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249188422 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283217786 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245759046 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.030180427 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.877842559 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197212282 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986756212 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.991537248 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20080746 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18944021 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223802426 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987887095 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.987130545 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.790176238 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912515093 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.984537616 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028429191 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210299294 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002157002 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.498299712 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.683623054 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25882667 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027521595 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98664957 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24658119 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.492707539 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.529391568 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993040704 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187566661 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.817555702 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353362253 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.986272339 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344561481 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.354015289 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.986815855 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.448995925 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.297556286 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252714036 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920169172 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995326711 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198226944 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.89359046 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.019976327 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.979118647 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384254927 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285597091 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.721694185 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541018988 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.987656184 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.987549062 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360571883 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08490374 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355254985 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.074280471 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002203482 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.506598475 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.676143093 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.269387565 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.230784937 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.443581451 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.684281474 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.987633775 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.986135835 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988656704 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906287855 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.173233089 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.17313058 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257230873 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015197715 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353557733 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08721981 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.325610002 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106810571 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.072424531 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091464078 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507997444 seconds)
  done (took 1710.436994881 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.008958926 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.056192982 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.066751901 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.042454873 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.018688176 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.035061001 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.104941257 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.162398935 seconds)
  done (took 58.408718861 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.987149823 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.086783407 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.992227866 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.988970514 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.032735251 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.988172292 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.141214317 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.99849377 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.475862556 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.995486648 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.990348992 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.988863753 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.339220603 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.01330638 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.990155023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.994131306 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.001716389 seconds)
  done (took 76.997373799 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.99220714 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.040800316 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.028842865 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.990025662 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.545392659 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.000654746 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.268292892 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.020014127 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.039300974 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.209419185 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.289116169 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.994173826 seconds)
  done (took 91.33636996 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004658568 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.994699049 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.995307551 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.994434447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.996550895 seconds)
  done (took 11.912183065 seconds)
done (took 2236.188989916 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.223683498 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.051416938 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099820031 seconds)
  done (took 6.069992345 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.141001787 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.190242616 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.298962381 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.06068772 seconds)
  done (took 10.617313064 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.305113676 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.362381663 seconds)
  done (took 6.587611819 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315531962 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.019290029 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.37135954 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.999332271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.000274116 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.999444023 seconds)
  done (took 22.92498897 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.995681064 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.995344033 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.000994393 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.997167625 seconds)
  done (took 9.908901377 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.991747069 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.72108176 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.997568018 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.00703101 seconds)
  done (took 21.637069984 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.142892872 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.111823406 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.139310291 seconds)
  done (took 8.314934984 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.232618283 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.211777228 seconds)
  done (took 7.36467964 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.140843939 seconds)
  done (took 4.061182625 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.025683079 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.266526038 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.487659322 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.512695399 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.572892583 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.826578891 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.31803197 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.222620761 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.434043638 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.454166919 seconds)
  done (took 26.041601233 seconds)
done (took 139.378624901 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.342336526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.0286461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.201538652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.356025653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.238750846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.201892929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.226693483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.355886929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.037279794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.02181092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.350463474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.24224369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.167245419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.020677869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.172799432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.00669263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.236040857 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.3669082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.067940197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.335218405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.238868231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.001879988 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.195890963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.024540748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.240309576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.153430582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.54897196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.01019695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.211487724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.563988022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.158835107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.473306027 seconds)
  done (took 172.72249896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.006467705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.003122906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.00580179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.006381611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.55926183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.009466529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.003758113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.003607953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.389972345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.377875034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003090809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.545452211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.004529639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.002682093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.007739412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.001547089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.552343704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.005873037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.002282071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.000515742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.008077214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.373159532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.004279863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.386341082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.538940222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.007730505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.004787562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.003702722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.00118433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.001508664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.003327251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.002103773 seconds)
  done (took 213.75632379 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.000833697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.002947135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.002671124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.005109026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.010354143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.00934127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.009394937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.007565552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.786819952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.762687922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.00719064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.007728449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.006893462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.006675919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.008590504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.006153323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.005197242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.011857684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.007278393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.007344123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.00883693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.565964053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.006613361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.571034509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.007591302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006774798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.005262864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.007016748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.006233471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.007032281 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.006359985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.00717945 seconds)
  done (took 224.807690366 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.245390252 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.004879852 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.005522369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.994413869 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.007163667 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.006032545 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.98055844 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.257105343 seconds)
  done (took 20.434202207 seconds)
done (took 633.65273061 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.433506252 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.255802522 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.167877317 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.032833835 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.277301371 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.075402697 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.024112094 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.087570289 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.852865689 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.099637571 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.687697456 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.050959876 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.775373157 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.053765226 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.126238652 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.087974513 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.580487467 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.680768072 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.148528892 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09501086 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.188064763 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.970451791 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.109692964 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.893205082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.716737207 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.01712682 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.051112795 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.58247617 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.037363826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.161013649 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.72790327 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.314342834 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.041461983 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.025233288 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.081580045 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.059528137 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.236427143 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.040116828 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.132462038 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.763934713 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.097998664 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.756989426 seconds)
  done (took 108.529608749 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.016658139 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.013427696 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.011504697 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.011595163 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.021845157 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.013966843 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.013566311 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.013373353 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.013879407 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.013364789 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.013705029 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.023108251 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.014187362 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.02259026 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.0128762 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.013631132 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.013381738 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.021283638 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.012245796 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.012762461 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.013939984 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.014045998 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.009967156 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.012882032 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.013216907 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.013606496 seconds)
  done (took 54.325956916 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.009004603 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.163832848 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.252821985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031637793 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.011731756 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.013612895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.029155866 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.014976732 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.013154516 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.012857326 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.116585503 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.021339617 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029115562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.252177986 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.028128246 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.010315651 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.010839988 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.011657366 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.173383569 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.028508157 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.030747874 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.015642368 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.030517569 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.029106496 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.013791229 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012216301 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.015185818 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.450562276 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.021353415 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.114847221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.06237005 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.034224673 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.414654878 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.266602838 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.066897401 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.022419531 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.011875324 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119819916 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.022773019 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.012202315 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.031040982 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.018516146 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.251498266 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.529091152 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.028595779 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.010751579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.460701851 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.130165205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.054797022 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022817414 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.256124568 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.029267338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.014210479 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.013791683 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.050798157 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020280174 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.0133198 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.333908316 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.030370196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.030549086 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.02127626 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.014098429 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.180143414 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.024323133 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.166003092 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.023919401 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.020693469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.015243851 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.256449627 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030693932 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.545315184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.029238882 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.013568756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.119350218 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.176502776 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.489305778 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.027739816 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.18178815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.426053603 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.041944855 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.025989482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.442175979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.04739922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.025969032 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.016959504 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.016040389 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.014722319 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.061219776 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.032734091 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.466982634 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.551441264 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.352885777 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.046843063 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.033884748 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.015844124 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.333659833 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.027243146 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.015130135 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249620863 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.551971726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.030395577 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.023262854 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.520258987 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.035028743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.03435443 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.024701194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.262723635 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.03289055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.063089642 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.014639207 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.023540067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.019140831 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.034919316 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.023909814 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.01441828 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.517538367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.140923012 seconds)
  done (took 249.218067056 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.019233857 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.019283158 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.015852904 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.021752532 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.018270769 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.016989219 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.016903998 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.014257906 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.017738597 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.01570024 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.017786411 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.017560704 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.017579116 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.026535808 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.024705331 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.019025276 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.619897927 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.01617858 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.016767139 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.016022179 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.663287824 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.022404392 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.016281874 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.016706916 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.018672576 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.01614111 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.022798259 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.02211254 seconds)
  done (took 171.708970374 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.015089236 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.129558224 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.036978219 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.048226043 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.0303862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.017895742 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.115153026 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.036121835 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.024977145 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.017736065 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.01867854 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.077975134 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.029388762 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.115146618 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.049395921 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.124167753 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.123343312 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.026062023 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.021301286 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.019520338 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.04798482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.028756892 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.081155651 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.142594575 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.037906891 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.130992702 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.036614189 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.019371183 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.018733466 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.131786088 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.037952411 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.079253657 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.050239965 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.041040261 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.136979484 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.135290147 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.120789157 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.122731753 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.026398222 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.019800114 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.01927824 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.019636992 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.132526044 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.037073347 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.022698146 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.133559709 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.038938565 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.021355583 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.022090287 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.020350143 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.034442921 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.040358726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.085281519 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.150025605 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.055240519 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.044485775 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.118929976 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.146448076 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.020786935 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.11779335 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.025294298 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.1344777 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.042483405 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.021392594 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.022695 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.025102822 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.050909662 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.12609507 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.126323887 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.02966358 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.119270211 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.057272897 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.030128661 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.02283348 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.022851363 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.134823668 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.138880126 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.055230768 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.059497082 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.052561198 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.030919632 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.024081176 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.022590829 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.039124683 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.02683047 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.134687711 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.138918815 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.028594572 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.022055663 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.021683167 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.023023416 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.049340557 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.142653851 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.058086239 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.126696645 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.089520627 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.097364898 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.03646507 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.036527846 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.027202781 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.084844861 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.038243457 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.035506582 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.318058145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.084257773 seconds)
  done (took 218.783940258 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432917473 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.070066175 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.080487944 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.347205145 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.381593911 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.188982902 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.069789218 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.068286719 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.094839894 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.252825897 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.142946432 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.086384763 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.059584104 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.047350463 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.066616643 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.090551014 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.079346939 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.407170105 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.286334449 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.250421529 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.062810837 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35174694 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.390232342 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.640168461 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.12209751 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.464669049 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.660724741 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.200345894 seconds)
  done (took 66.349105532 seconds)
done (took 870.846753836 seconds)
SAVING RESULT...
DONE!
