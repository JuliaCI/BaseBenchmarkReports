cset: moving following pidspec: 28742
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.162545747 seconds)
loading group "string"... done (took 0.562420389 seconds)
loading group "linalg"... done (took 9.628264947 seconds)
loading group "parallel"... done (took 0.164218366 seconds)
loading group "find"... done (took 2.48089595 seconds)
loading group "tuple"... done (took 2.265392131 seconds)
loading group "dates"... done (took 1.399640778 seconds)
loading group "micro"... done (took 0.556245917 seconds)
loading group "io"... done (took 0.556301598 seconds)
loading group "scalar"... done (took 53.650244844 seconds)
loading group "sparse"... done (took 13.191895204 seconds)
loading group "broadcast"... done (took 1.243691645 seconds)
loading group "union"... done (took 2.633403227 seconds)
loading group "simd"... done (took 3.548381013 seconds)
loading group "random"... done (took 13.372123059 seconds)
loading group "problem"... done (took 2.260964586 seconds)
loading group "array"... done (took 23.751554087 seconds)
loading group "misc"... done (took 1.08574018 seconds)
loading group "sort"... done (took 3.743266898 seconds)
loading group "collection"... done (took 20.661940171 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.768515346 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.167984004 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.242333652 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.306051607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.29891018 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.209094119 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.203717006 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.168888485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.677315392 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232591183 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.193820647 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409176098 seconds)
done (took 6.680671887 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.286828027 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.132660365 seconds)
    (2/2) benchmarking "String"...
    done (took 0.213902647 seconds)
  done (took 0.987504465 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.147436726 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16108486 seconds)
  done (took 0.95115314 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.125567816 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.16744746 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.144747016 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.131333476 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.146999444 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.130301927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.146168769 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.144763901 seconds)
  done (took 1.653646543 seconds)
done (took 4.650443586 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.537508823 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.907684057 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.56124297 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.206069146 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.356257874 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.314634944 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316106414 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.273956277 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134703563 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115661458 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.20961213 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.522960994 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.426116434 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.970008825 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105481614 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153327258 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.172034052 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.818261747 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.12604495 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.15697061 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.539487869 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.264352287 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.160381033 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138149167 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.304301939 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.171540845 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172157358 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.146476391 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.711582151 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178392798 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.241327448 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126565827 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172299827 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.198445196 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.281752341 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155335537 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.721775715 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.244282316 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127092544 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142596959 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.721666348 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.162728487 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.239717539 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.146700318 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.118585588 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179263814 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.14408581 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.118660273 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.161822448 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142830145 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211112609 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.491891109 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.14880409 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.22927482 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.151915682 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.730399261 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.145073629 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.331780747 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.179622692 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148752268 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120708211 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.148475745 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.20106633 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138631705 seconds)
  done (took 22.762312249 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.206439502 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.224450208 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138335435 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.184394479 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.187134658 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.138803564 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.130964094 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137562207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.158756369 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237777044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181822265 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.233605879 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.117814333 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.150952775 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.19720975 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.276090632 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.170197563 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.166894496 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.132842664 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.153648171 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.167941126 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157185518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.136013295 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.153011389 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214111275 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.246983239 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.153248104 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.16709124 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.1466735 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139873768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.18411762 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.205024043 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119111925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.146287467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.214878402 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166235749 seconds)
  done (took 6.912096297 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.266552033 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.145584332 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.273202931 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231472612 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.188631712 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.221768611 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.224710189 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317946759 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.243133839 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.148384703 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.539810881 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222415579 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155587464 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.2077673 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.156629416 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126134646 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.140541632 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.122212028 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.8888703 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.21730524 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202859918 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.217024102 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153691058 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.124727522 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.409623916 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128131317 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.142781169 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.135638964 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112233772 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.251623474 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136324512 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.524260227 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.143739865 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.138897528 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175928817 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.249802729 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.165566816 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180904017 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135703603 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.145581981 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252145023 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158915633 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.001228288 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.141977918 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120332493 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176106921 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.175622298 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.151606837 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147911949 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179477328 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.144751268 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150175757 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.90481225 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.239358328 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.181899454 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.144800159 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322837359 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.148118622 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.159400445 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.141593327 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.132975604 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.244138154 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166155895 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.141099896 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.122632445 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.138623514 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152939623 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.122862997 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162487437 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.363775425 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.12638898 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153977447 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.15913382 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.391343656 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129700837 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.14389449 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149459317 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.145317279 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122426863 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.144018901 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.12387459 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.147856778 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.125182828 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143956351 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.122292238 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205085322 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.142096244 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.16461041 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167398988 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.131368012 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.143950076 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171025783 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124968487 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.14629527 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.201833408 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156183331 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.139344338 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153969239 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.171347463 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.147049194 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.249667016 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.127589553 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.166187501 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142156088 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156224165 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154678875 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123337001 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.145547841 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.122125377 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14254199 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.19137075 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.144806413 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.124320299 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.146872333 seconds)
  done (took 27.299532459 seconds)
done (took 57.612916069 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.409210711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111611907 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110475052 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.130682678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110996488 seconds)
  done (took 1.595201482 seconds)
done (took 2.303069916 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16703633 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.261156222 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.193997674 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.170101714 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.142462596 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.161926016 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.164234917 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.143556825 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.160729277 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.164664792 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.146949994 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.185054258 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.158498556 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.17158028 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.153325356 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.200858095 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.147343994 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.164682052 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.197585942 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147731031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162325166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.147941507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165092087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.132123443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164246777 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150809885 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.163546859 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.146715531 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.158735709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.13240128 seconds)
  done (took 2.38551616 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.161697082 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147233019 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.165396698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.137677041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164006269 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.132090739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163892229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.145980537 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.168451724 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.147776987 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161189255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.133106718 seconds)
  done (took 2.379442327 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.14783656 seconds)
done (took 9.065309912 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.771278206 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.969475781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.199045161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.33406387 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.678079993 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.311966825 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.672516434 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.242950784 seconds)
  done (took 18.003725089 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.161494954 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.206826718 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.135333601 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.157437351 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.13516682 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.153824128 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.136098015 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.15542891 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.136274357 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.152859316 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.135393247 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.155587025 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.136087126 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151247625 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.138416839 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.153295041 seconds)
  done (took 3.172120248 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.163171335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.179013893 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141407096 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16187885 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138649524 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157839265 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.142722403 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.160501705 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.138632248 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156081677 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144821868 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159204376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.142228463 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154047524 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.14315798 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.161320412 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.154699962 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.142919774 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.159111103 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.144443179 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160411263 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141019938 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.159227278 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142184889 seconds)
  done (took 4.431806207 seconds)
done (took 26.3235899 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.194680672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145845242 seconds)
  done (took 1.065242064 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.19880424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.21752153 seconds)
  done (took 1.152176411 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.157886838 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151360165 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164710991 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.162920318 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135679743 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.152328065 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.159415675 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.154032339 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134963964 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.156681637 seconds)
  done (took 2.268887982 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.140339761 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.155766899 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.151775816 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.204355315 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.143864947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.155843611 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.139641435 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.155465686 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.140661579 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.152234422 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.140631403 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.167748355 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155744845 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155285434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.156326852 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14058984 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.159099211 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.1384711 seconds)
  done (took 3.490010116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.13461789 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.1362034 seconds)
  done (took 1.010727023 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.13817272 seconds)
    (2/7) benchmarking "second"...
    done (took 0.150854334 seconds)
    (3/7) benchmarking "month"...
    done (took 0.137868178 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153271502 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.135790013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.151106902 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.135739664 seconds)
  done (took 1.742575489 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.625163606 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.270858321 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.419292221 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123917326 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138109089 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366902484 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155787384 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10690402 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125534082 seconds)
  done (took 3.100298138 seconds)
done (took 14.562988245 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.136655375 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22372037 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.64904853 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158596806 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.15269489 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196512306 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.338569153 seconds)
done (took 2.603118542 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371159351 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.185796037 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121220085 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.142576922 seconds)
  done (took 1.561430721 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.12715517 seconds)
    (2/2) benchmarking "read"...
    done (took 0.14331647 seconds)
  done (took 1.020250343 seconds)
done (took 3.333127834 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15222711 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.152486913 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.138928757 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.154616794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139059847 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155274712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139613447 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153476881 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139349316 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.152417036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139478844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.15487437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137526297 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.156233081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13685125 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155377541 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.139297678 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154141525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136303089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156339074 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139516015 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152787509 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.138490344 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156899406 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.138880673 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156343934 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.136971046 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.153595641 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139870503 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.155776412 seconds)
  done (took 5.155141023 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.164520849 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.131311459 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152696316 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14364108 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150630952 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136445033 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149849795 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133757723 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.154208561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135418999 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155425533 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135802277 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.150959478 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.253687139 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.153349366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.159919141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.160709081 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.13277988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.149353439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.13775675 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155146967 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.132919798 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.152755219 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.136606924 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135038354 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.15096377 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135636171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.153213113 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136416178 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.151957998 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138148866 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.155554686 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136290301 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.161683856 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.138255847 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152504247 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.14271851 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.150241338 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.137192801 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.149210601 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.132446327 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.152388838 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.133267677 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.15763264 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.136867282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136437873 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.150802959 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136753356 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154140759 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.137483947 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150747443 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134076521 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.155311983 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137640096 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156104025 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.133904003 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.153543807 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.133015269 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.154402083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136622508 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.150844483 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.133602832 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.157377883 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.137591901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.168109698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.142188509 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.149398817 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.137816813 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.153294144 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.142509182 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.155066321 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.147382649 seconds)
  done (took 11.347980493 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137319296 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134985272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15379757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136304442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154085439 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136228917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154003042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137914108 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153201138 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137531232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154134922 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137273649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153992475 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137725166 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.152869993 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.136573398 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136206844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154192715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136114589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154167177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137862686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.153581101 seconds)
  done (took 3.946163574 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279916265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142647161 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.206062028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.166943973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.153691215 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.166325502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.140747288 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160223181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141359525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163631401 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.145988513 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160288002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154615026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16404556 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16267933 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.147954162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159294825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.147919883 seconds)
  done (took 3.733231237 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138984269 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136941631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155834523 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137325596 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155214934 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136768906 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155088631 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137330179 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.155030758 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.138434085 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.156193975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138324041 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.155147181 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137505771 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136907106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.155024277 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137636207 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155164259 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137877304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156632079 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138090824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156893905 seconds)
  done (took 3.980435128 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151995094 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1581395 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157351486 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.160764623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139550044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157298613 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145614335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.157056279 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.144826432 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.157332384 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140504365 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157637181 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.153558621 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157741102 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145973436 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.158519173 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139558329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158757459 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140770126 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.157602009 seconds)
  done (took 3.815275305 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.229435049 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174162879 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174219325 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161555853 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.174519187 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155812018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180839885 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155074981 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173898421 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.182104603 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156348706 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.173967754 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161962878 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.177658383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155937536 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18078377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161163347 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18066087 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.175133058 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156304669 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186025464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.157465473 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.181151346 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155194332 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174780811 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173967153 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15578636 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.178481293 seconds)
  done (took 5.579485883 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.150685162 seconds)
    (2/2) benchmarking "in"...
    done (took 0.165620957 seconds)
  done (took 1.096184644 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.141332806 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140099863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.15997298 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139735778 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158940809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140133183 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159234965 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140761205 seconds)
  done (took 1.958907213 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.203337527 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.226437935 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.164118985 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.152937153 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.22641686 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.215862377 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.220315832 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.146292241 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.161208441 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.133521613 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.220848703 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.13205858 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.159351161 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.136949853 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.16079295 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145706668 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158626975 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148185847 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.166221421 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.141594904 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.163558454 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144303207 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161979169 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.166906902 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.135899939 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.162355721 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.14548892 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.167725555 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137484874 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.160829122 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.139961999 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.158708437 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.145142734 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.162565154 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.140677382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.228211711 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147435713 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158407975 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.141569393 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1654388 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.189853383 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141240487 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.161491951 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.140003673 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164187055 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.14527691 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.164018233 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.14184948 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.152230604 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.13685641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140415995 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156727206 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140238143 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160818609 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.161375527 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148745184 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.160569942 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.138588558 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.155229713 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.138547401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.159231206 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.138767149 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.161449081 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.144358859 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.161460821 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.142982895 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.159460207 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.141228434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.159753973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.143240383 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.159678961 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.179224762 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.161891375 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.147322563 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.163988607 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.150221514 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1570934 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.146317857 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.15830094 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.143461362 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.16304484 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.168360687 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.162172078 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137400766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.157045548 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.147826966 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.161539952 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.144256514 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.152344905 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149821502 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.162163795 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.142518508 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.152887058 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.14049718 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.156271944 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.144216974 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.153398329 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14274023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.159548979 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.145531123 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.164907614 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140773725 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.163204355 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146897025 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.165700596 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.141206871 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.208462934 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138757653 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.157998216 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.145361427 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.16648495 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136965062 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.161761588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140399869 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.158784413 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138468409 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.164532718 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.142350058 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.162133361 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.146006046 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163844773 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.14340782 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.163025054 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.140770452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.157649192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.14511024 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168684571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.14411375 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.163555897 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.143685491 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.162343521 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.142467445 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.164619944 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.140604331 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165712345 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139533362 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.160842155 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143271341 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.16639384 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.14328253 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.158788505 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.141610572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.163422071 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.141505295 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.16457203 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.143616243 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.157031308 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.134250419 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.163563322 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.137912158 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.162210888 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.15179499 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.158311336 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.144180814 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.1580259 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149343809 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.158633065 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.14614872 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.164004524 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.147812853 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.165932786 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.134716345 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159631275 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.144465451 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.164183308 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.139037663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.161364838 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.142203938 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.17011732 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135981988 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.165496229 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134984513 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.158821436 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.147163203 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.163582115 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.146621836 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.16724816 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.178932538 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172930226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147171955 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.163420959 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.143156497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.165828654 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.142080665 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.165014355 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.147478492 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167066775 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.141662471 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.16084583 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148126716 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.159857401 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144070673 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.161465474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144745314 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.154298596 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.143989332 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.155630459 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.148497249 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.163841795 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.147427002 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.167550529 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14492033 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161257202 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152240671 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.159149827 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.146101556 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.155312803 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147782113 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.173590242 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.149808658 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166969069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.145765154 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159430194 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.143740828 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170553784 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145595356 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.163455631 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144049397 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.156623349 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.138530128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.168908797 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.14756997 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.16024919 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.14313918 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163036035 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1461959 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.159811939 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.136615004 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.165736274 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147440241 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.160008469 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143948726 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.158936791 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.14307846 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170754033 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.13650053 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.159091135 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.146038955 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.166760428 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.142722538 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.164332347 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.14665552 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.16893146 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.1468508 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.164896226 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141176228 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170820405 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.141796229 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.162145534 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.141528281 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.164966156 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.139055226 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.166127342 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.145499284 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.159479001 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.141452889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.166285945 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149426542 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.167678215 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14377422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.166580113 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.150001982 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.169315373 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142223795 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1683319 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.140007659 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.156428508 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.141523425 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.156443257 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.14603427 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.140307428 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.168918575 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.14242511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164736347 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.146352359 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.167451776 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.161848403 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.149041663 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.175035497 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.139820602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.157358456 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143606791 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.163626622 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.141697093 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.160597719 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.146105409 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.165502462 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.149646854 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.16737012 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.143381947 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.164846292 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.150564183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.164822479 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.150753178 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.168905334 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.150826947 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.160826026 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.148990651 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.162347749 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149018794 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.159559116 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.146207085 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164522638 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14454965 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.163117264 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.143929129 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.162477213 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.140742143 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.162307461 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.151844125 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.164906698 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.149025636 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.165411004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.143662559 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.162562431 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141693842 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.171352627 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.143854086 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.173055632 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.146278769 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.159570882 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.139926776 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.17024118 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147506111 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.170956869 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.141046226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.169299168 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.151599991 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.168921816 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.146520607 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.153249056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174936422 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.170624134 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152537604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.159690222 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.145276062 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.170534119 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.145960133 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.168476697 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.148928274 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.139985651 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169363519 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.172172826 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.149154623 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.165496771 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.141055458 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.146844152 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.172697435 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.14938801 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.169549654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.147303103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168030501 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.142160409 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170569744 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.152912978 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.16786361 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152188343 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167898149 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.150183897 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.16499272 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.151551117 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.168072455 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.141972988 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.161104593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.144247186 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.173330747 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.14059097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.171204764 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.151168324 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.164234819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.145432668 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.171541691 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.143319409 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170001412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151832812 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.165622832 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.155706863 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.169618429 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.14485214 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.172454052 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.151064814 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.160575117 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.146825139 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165984026 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153250556 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.167658985 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.151482887 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167926228 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151453131 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.170004044 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.151988767 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.17142546 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.152156145 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.162753408 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.154059077 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170213952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.148913219 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.165294972 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.146285602 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.16260826 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.147017259 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.174596868 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145159213 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176881096 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.15177378 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.166234367 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.1465786 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.174134312 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147044236 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173322988 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.145677383 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169235498 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.141519518 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.17046864 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.147269089 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.173762002 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.145478459 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.163027076 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152925938 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.174146946 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.152398931 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.17118435 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.15346698 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.161837545 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.141978884 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.169028744 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.144865266 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175321604 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150717539 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.16712421 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14681164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.170274791 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.149307015 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.17430744 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.142314809 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.165485765 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.149575996 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169885446 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.147129726 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.163641241 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.152967729 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.168158544 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150150373 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.167968081 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.144716107 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.167931453 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.154930385 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.166530583 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.144473134 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.165282436 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155879798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.167100266 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.145925972 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.162934605 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154483542 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1713971 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.154749601 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.166564296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.149405497 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.166245255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.150757954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.17433916 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.146939976 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.169612343 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.147619899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.172962843 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154570872 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.160643874 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.14666816 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.177340207 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153717475 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.171201073 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.152075132 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.168034999 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.155049343 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.174546865 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.15106821 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.164237538 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.145004728 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.167930428 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.144190728 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.170598029 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155126051 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.169728311 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.149326642 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173177562 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153429935 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169528913 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.151104106 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.163830536 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.155566748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.145251013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.17320833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.163223984 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.143048051 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.150703001 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175894268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147046061 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.170610753 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.149024253 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.172118534 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144056236 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.168371723 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.152065096 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174769293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.153430531 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169614593 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.147037871 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.172769617 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.157527372 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.170985796 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.149440573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177252183 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.154438037 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171122924 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.148082179 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174497262 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.154201295 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.171749229 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.154639883 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.168803563 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.148897319 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.1791811 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.156216111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.18201171 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.168615799 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.144308207 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.152762133 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.169578512 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.143024506 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.175061037 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155184675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.178391854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.149698871 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.168302405 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157162514 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.176548904 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169581748 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.148740893 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.167728576 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.155892391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167023042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.154521619 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.16625369 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.157792493 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.154133309 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.176964559 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.15602791 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.16631561 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176202745 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.155003671 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.176340586 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.151129991 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.142369325 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.166968435 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.151348613 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.177507867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.154323353 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.17496206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.153307696 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.17557303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.15160647 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171382759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.14672921 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.177944834 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.154828673 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.172368319 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.151736068 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.170415847 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150324933 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.172625119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.155604173 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.177345709 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.151238086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180813758 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.155119382 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.172600675 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.14805101 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172212671 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.152012594 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.172572668 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154229415 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.168411538 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.145319921 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.178056823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.158580369 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17012341 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.157333848 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.178179073 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.150493245 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.174264412 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.157580069 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.175240428 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.152374054 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.172599082 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.154448958 seconds)
  done (took 94.617776787 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.199183196 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181341654 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151938027 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173072214 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169244162 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176339964 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152862656 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175663743 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.15425063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184223599 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153554189 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172879898 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166181022 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196169337 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190168262 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162573236 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175948271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156064315 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172941952 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155648628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.188052117 seconds)
  done (took 4.487189323 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.152193688 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151609221 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.174530975 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152054237 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17347706 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.153482756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.173270103 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152538141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17234653 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154213087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.173568228 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153874301 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.172727278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153945826 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151341487 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.174164566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151967633 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.174915752 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.153378578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.174545347 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.15335069 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.173555808 seconds)
  done (took 4.449331301 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181817871 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.154622591 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172790434 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15218685 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177893813 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152390183 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179584903 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153648603 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.181746739 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.1472046 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.165990886 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148667149 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.172146553 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.153074091 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.169818714 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154160299 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181398539 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157540154 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178945475 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.155144303 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.165869256 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.1554526 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.153089244 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.168292841 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.157629423 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.179739501 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.157088294 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.178457493 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.144181964 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.178782127 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.153747658 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.168952289 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.145826785 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.16623991 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.145769071 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.177955435 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.158357628 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.176750467 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.156030776 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.165981696 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.155600605 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.179217832 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146803316 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.153384803 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.177725124 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.148262995 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.178741809 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.152926105 seconds)
  done (took 8.719891169 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.180908889 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212089119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.157840882 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206779327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.190281677 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.164219018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.178929024 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183476948 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180045359 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.156325466 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.191867052 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.165771643 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.183308632 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158874504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.181370459 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.179479064 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.159500959 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177659551 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.161542484 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.17817298 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.162842275 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.180098484 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.16626668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187603076 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.159583529 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178993093 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157425656 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.182437763 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.165775622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.185275844 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.161328708 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.184037057 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.188115958 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158447758 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.178795418 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159557141 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189442149 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.159627636 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.179084411 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.157565033 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.180464666 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160742944 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.18161838 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.16802961 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.18172804 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.159287724 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.179988217 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.155611666 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.188495245 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.158118377 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.186150592 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.18953192 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.160596433 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.180137827 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.162315883 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.189871062 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.159484897 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.179012013 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159908761 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188107699 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.156456563 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182589771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.167578498 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181411679 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.184927864 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.169684399 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.181664736 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.160905977 seconds)
  done (took 12.817316132 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188471719 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183409309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168669451 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191718341 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.162160041 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.184488879 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162192172 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.183565804 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161372705 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189284296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.184359509 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.292777528 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165514447 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188066636 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.162782975 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.185800486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.399696798 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183795318 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163380503 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184432664 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.162147361 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.19172077 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160432307 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191509832 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194110254 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.162358869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182946121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.162217468 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.190547884 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.161246023 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.194368268 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.161507667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.184681171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.190020343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.173504165 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.183368528 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156391686 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18321508 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.162494903 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.18377417 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.159066874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191157628 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160867076 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180601419 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.162688625 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.183369349 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189726302 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.173473001 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187065303 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.165512201 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.18433505 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167231188 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182808882 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.161376616 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190980431 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.196311509 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.169119468 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19145352 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161179085 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.191233081 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.191350794 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.175571306 seconds)
  done (took 12.238498256 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.158212176 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15691253 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.178963005 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156890349 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.17943935 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157690793 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180476604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157833111 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17832407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157970038 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178188101 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158131524 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179245934 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15809682 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.178579414 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158070602 seconds)
  done (took 3.583509552 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174672498 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.195977046 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.261220079 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.161136819 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.180276865 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.165211138 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.18072516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161547871 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.156897407 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.186124517 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.161770423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.183602138 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.19645608 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160473209 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180881988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.161971694 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.179244811 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.16353135 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.180801763 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.238436667 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186154699 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.15992145 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.183310723 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.161251786 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.184159492 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.162138619 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187557897 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.161300208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.183648351 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.158575781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.184683301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.164861468 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.180922342 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.162901022 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.183868139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.15991996 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.181543649 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.15950474 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.184299524 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.159025409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.185930073 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.16044509 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.183006594 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.160558426 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.181646162 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.159575675 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.180639297 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.164530918 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.183271607 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.160290841 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.182431775 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.166020106 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.186693678 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.166701979 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.191713339 seconds)
  done (took 10.609625896 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.170823383 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184270606 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.171792259 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.180660099 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160839079 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.182864416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.161701707 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.183518108 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162901302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157872788 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.184699373 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161400045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185677261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159557621 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.184741039 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160056469 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.182074612 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160806918 seconds)
  done (took 4.019216225 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159488959 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156930966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.181485512 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157367016 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.183803595 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.159939241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180310364 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.158645297 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180697163 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158238041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181001652 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159265893 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181268746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159027672 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.157771596 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182508961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.158111911 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.181714216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158617501 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181408418 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158082393 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.181971055 seconds)
  done (took 4.643060089 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.16999854 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.260206521 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188110237 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.243381169 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.181850277 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.153358336 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.190083464 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179159578 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.172712387 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.177597603 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.15575278 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.177704964 seconds)
  done (took 3.176175282 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187371567 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218015969 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159930269 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183229209 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168034696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187050034 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163935879 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18831931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170350668 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199402432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186193806 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172117136 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193841882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171732703 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19314368 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167454054 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188410648 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164507554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184035346 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200281106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165451236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193285394 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165402834 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186855204 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164673531 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195375244 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169958256 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1996276 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187582798 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171969222 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191503619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165811815 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195736464 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175278678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184659026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192983081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166695845 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200413168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168843 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19622896 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160530232 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191745237 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171574555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192979543 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195361128 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16640051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192263041 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166249032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187402872 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185027116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193301121 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195055391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169678795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194636916 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173386112 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209368293 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199006372 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172764672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193166285 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175915325 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19667888 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191885345 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173460403 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200361938 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169157624 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196207111 seconds)
  done (took 13.028198451 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198761728 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184945815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165873726 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201449429 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173776729 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190358279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164985397 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190282475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188702899 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163810061 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.230504764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16671867 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198458851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172201897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190426008 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165470205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19111422 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195294735 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164770633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.209458168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166185836 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197435735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172125441 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196812874 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199304628 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16958502 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189648628 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166389792 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191001787 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16599268 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194233457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166377598 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196998567 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185802269 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176289586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191137071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167089738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194526191 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166263461 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194180956 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172838585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204236297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189654317 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168016109 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20017108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16693071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189811776 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163747811 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189595155 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16339278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202446178 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200182398 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17803735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198267538 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166781209 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190575392 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166953738 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190093406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16595214 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195112072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196601383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167921325 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.210238452 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167341437 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190208735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173638516 seconds)
  done (took 13.064896942 seconds)
done (took 230.817101569 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.329690329 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.342914711 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153523802 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.242230655 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.152767328 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.941793696 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.70761365 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.224767724 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.179572458 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.152885393 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177520217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.171015609 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.482705695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.152817967 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.177390051 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.168451825 seconds)
  done (took 31.69575423 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.347988992 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.391257229 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.17056373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.185902654 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.15983889 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.183987029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.158377571 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.184335327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.157874623 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.187955424 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.158459726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.178623818 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.163626691 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.178806732 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.158808006 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183425382 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.165090377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.182815019 seconds)
  done (took 4.456448094 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.179250782 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.227882985 seconds)
  done (took 1.367224535 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.188798616 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280411613 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.385510489 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.231106189 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.180250891 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200371187 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.23084169 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.171806772 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.271805173 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.169704642 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.195008366 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.179592313 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185424709 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186085749 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.174755596 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.18019956 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186035505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198054196 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.172595574 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.185171029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.182898519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.188167203 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.163774014 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.198011317 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.264163285 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.170430908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.189813851 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.162575303 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.185597693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.172499002 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190981002 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.201159721 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.170359443 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.240302009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.186170863 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.236287918 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.167926416 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.18436506 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.174980888 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.182803235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.16284666 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.185004697 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.172586326 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.182029175 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.163321663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.192937356 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.163384652 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.189722111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.190514534 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.168871908 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.190730619 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.165980915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235560074 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.191903714 seconds)
  done (took 11.476143495 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.001826463 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.06951582 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.196038548 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.212790507 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.091316089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166048367 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.995481496 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.157655522 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.297574399 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.129560618 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175891575 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19032094 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.186743128 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.188721953 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.181275878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 1.151805117 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194507108 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.189660463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166814096 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.971820253 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186382076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.988829974 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.176137304 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.302267587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.185892101 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.164281986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.185250422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.161115923 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.24123134 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.187520925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.156392206 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.048498515 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.171252567 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170918576 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.186064531 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.155577194 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182877207 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.161533865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.35338038 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.275415008 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.214922543 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18198104 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.162255771 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.185979162 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.169255985 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180921197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164015913 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.206529789 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180305377 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.181008464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.176993588 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.193046878 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.161176643 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.19461465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.162026873 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329091989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302671025 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183982583 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17758006 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.190127262 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323034337 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.168886008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199505918 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.956960564 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.278395831 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184706099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.878294668 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168973294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.184150107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.161924876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.186419157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.160690987 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.190431175 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236216624 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.306595111 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171118437 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.180230699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16628189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.272852912 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237137169 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.162055949 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.237558334 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.186507092 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.177239731 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195648833 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164110058 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.216017363 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.15948831 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.192130959 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164645608 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.187793663 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177596627 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.186682783 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.299849896 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.166574802 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.196345513 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291360646 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16657568 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195107429 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159693405 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197183586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184112083 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.187048825 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172856773 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186022711 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168369568 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.194002527 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165212173 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.202344248 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167502668 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.193559915 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.171720727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186065104 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18085052 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326762298 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186012261 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158640232 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.207274573 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167333058 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242746963 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.193632442 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.32617219 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165921946 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188779032 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.161246473 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.185011629 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.179148645 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198878433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.158985173 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191396283 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163874519 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.187832053 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.165158524 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.27516662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.20550043 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220792373 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.228917252 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164812527 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.21415493 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190508401 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.221714383 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19383219 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.180024392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189216236 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870304653 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.191261536 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.168438909 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187657555 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.244617765 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164551576 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.166132395 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.214105992 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160120016 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.896184341 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.167082453 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.190961109 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.168534101 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.187358925 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166915771 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187756734 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.181630758 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207938255 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181479639 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193888793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163892742 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.238034177 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24543333 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.163175892 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.285753008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.208181069 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.089118146 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.162472236 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.190688243 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167391936 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245316223 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.193824672 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.177603519 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596763629 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.168765443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186730552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194912862 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185210314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.17119577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194199274 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.165881192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.257821343 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194100249 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309303064 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.24677329 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.241385764 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.171161471 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19846763 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159910148 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19048581 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183382911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.192088697 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163949876 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.198434837 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166838557 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195963008 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.171123479 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.194023482 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314411395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161762049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.209201147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.16430786 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186705809 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.173774601 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185750972 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17635165 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198064261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.160260138 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.20451353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873458041 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.174268428 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198595111 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.159603104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198761262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.247669135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1658229 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.208056377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170978842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.203305661 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.302535356 seconds)
  done (took 57.489540675 seconds)
done (took 107.436020751 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322477112 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230104868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.424177611 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23742938 seconds)
  done (took 2.267008262 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.349436645 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.204414802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.305925429 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18536385 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.285296182 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.188773807 seconds)
  done (took 2.528694141 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.232640168 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230620228 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228982214 seconds)
  done (took 1.705767949 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272501715 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274642607 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412832046 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325202564 seconds)
  done (took 2.357729979 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.33987797 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.179172056 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.218691061 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290381951 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.307394364 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271542231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.186178157 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237960259 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217213873 seconds)
  done (took 3.297495955 seconds)
done (took 13.16243692 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.206600084 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.221962892 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.184178795 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.200963231 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.197338798 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.225992001 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.190888416 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.220804819 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.189945128 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.202849577 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.18912984 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.198759964 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.284495956 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.194978393 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.199262189 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190466034 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.200445837 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200430621 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.221979752 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.173637216 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.224298684 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172464617 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.199145419 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.181676856 seconds)
  done (took 5.881198613 seconds)
done (took 6.899589093 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.26940414 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.183748673 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171132207 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.198374733 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.279097657 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180725214 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.214346789 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173418169 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.207764041 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172643258 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187971706 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186030893 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.196295368 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.272780794 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.176549822 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.188463854 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.163762882 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.208373456 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.18855911 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.21285232 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.253530559 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195793015 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.182040102 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.189990615 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.281788 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166286134 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.198715533 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173022126 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.21326201 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.172699063 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.198439533 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.163883482 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.214248785 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.187969299 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188976676 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173063535 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190269145 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137860857 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.198494949 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.17671317 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.210751016 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.175672538 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.198250206 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165023529 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199553533 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174044611 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18897394 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.176798163 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.18747471 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.17544683 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191459143 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.190671868 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.198130428 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164752155 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.187196482 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.165417762 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.209764848 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166630342 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.18637619 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.191584095 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.163362428 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19286917 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.174611973 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193233714 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.173103396 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191086866 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.173443317 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.204046528 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.172593758 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195920367 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164093918 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.201105476 seconds)
done (took 14.823520744 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.16927964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.235960459 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.275587288 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.255193975 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.223270771 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.205595187 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179670601 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.214324345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.177920774 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.208742591 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.199323512 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.224019125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.285791176 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.180270243 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.231917528 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.17634145 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.203766326 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.171811502 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.281871105 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.216247041 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187336188 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.208688394 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.187732212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.209766488 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.167289207 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.217590373 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.197150876 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178342944 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.192617149 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.187270546 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.213918531 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.168484483 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.196488622 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188315874 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.210663061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179492051 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.206074189 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.175890883 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.194167571 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.167146581 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.201549095 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.184087285 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.194318913 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.179170125 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.203770018 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.183076993 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203398439 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.179827937 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.196756771 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.174496708 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.196696953 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.216803319 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.181458216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.209951473 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.180521889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.20771247 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.18143881 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.205717596 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.172673818 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.207423112 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.17012532 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.194714037 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.169887902 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.216887973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.172520984 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.208093103 seconds)
  done (took 14.171140386 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.187500309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225745468 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.17897152 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.207710756 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.172318407 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191439018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.162400973 seconds)
  done (took 2.374719115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.16455111 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.290543293 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.287937302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287550789 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.283624197 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.294739535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189041438 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.189720478 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203208573 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.200888693 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.290908611 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.324819072 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177038268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.205122511 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263406668 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.194260637 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.292835472 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.271329771 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180650534 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.290631799 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210276003 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.198699371 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.206287396 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164816055 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.286732547 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.195001102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.340135202 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183200507 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.205132198 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.179808937 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208848975 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272869174 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.285616299 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.180082992 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.19939815 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.258056682 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.283704726 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209813372 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.298995528 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.169981434 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.283318426 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.207829935 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.182333976 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.207858195 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182338763 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.274827861 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213235822 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182413237 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.207843911 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.295268688 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.177109247 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.289966612 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.177144814 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211114675 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.175146106 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211410032 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188893152 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.209185347 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.297902898 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183396775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.285898611 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.289100413 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.286799698 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.291070526 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218260351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26180492 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.27786061 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.207221344 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.286553833 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.183285954 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.291142597 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.206361939 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.178671138 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.280068815 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183053509 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.292667992 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.292758387 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207154018 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.180119475 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.198186046 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.179069312 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.194977721 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.29309273 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.181218285 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.205657613 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186102958 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207496478 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.181443837 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.284367892 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217477732 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.181978725 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.207140028 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.187164053 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.21006254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182162417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.293374413 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.208086509 seconds)
  done (took 23.334090367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170987757 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167565806 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.200558943 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168103406 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196724276 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168234371 seconds)
  done (took 2.151602318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206671011 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209166566 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191851578 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.209162428 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233019299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.296127367 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.302670992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.205157585 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199447263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.219775175 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.300455263 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.30048666 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.30005792 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.187315691 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.30536904 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.183204953 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.301963997 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211794472 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190458333 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209442169 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181191771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.215247064 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.178958512 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.286249521 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213567239 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184182657 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.204291084 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.189208768 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.219682733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.202116429 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187911309 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.208982065 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175897656 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.204019186 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.304079309 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175944327 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20614915 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185472402 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.213550923 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.183678296 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.30273519 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207646682 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.189547008 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.213979099 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177909311 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.204245624 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.185324157 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203009206 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.306546133 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.186038308 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.215707888 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.184220436 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213956946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.185135673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.204904157 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.17681535 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.214068818 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.307288672 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186487238 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205678465 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.18200382 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.213700906 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.202206944 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.188999651 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.210706411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.186404807 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202069901 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185547476 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207705125 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184870218 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.212688604 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184018372 seconds)
  done (took 16.599248388 seconds)
done (took 59.667710277 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.646961099 seconds)
  done (took 2.728705804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.303509711 seconds)
  done (took 2.387641904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.04926261 seconds)
  done (took 19.170140627 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486655644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417918185 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.111303089 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241759806 seconds)
  done (took 3.343059487 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.157772538 seconds)
  done (took 2.257441045 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.487133696 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.353083912 seconds)
  done (took 1.932619647 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.823505381 seconds)
  done (took 1.930238887 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.809637586 seconds)
  done (took 2.903228208 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334263745 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.312954359 seconds)
  done (took 1.751932623 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.689255361 seconds)
  done (took 1.798472367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.213051249 seconds)
  done (took 14.323880004 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.31952303 seconds)
  done (took 1.435490908 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358908738 seconds)
  done (took 1.479342671 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.653608053 seconds)
  done (took 4.769777154 seconds)
done (took 63.309638947 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.183887375 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.211538348 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.187429351 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.209202428 seconds)
  done (took 1.892800966 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188734945 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.208443804 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189739047 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.207953819 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.189888708 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.2095394 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183768758 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212515078 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184100508 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.210975878 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184832629 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.208489624 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.188381634 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.207863307 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.183161461 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.211628383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.188571943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.210044813 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.185291957 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.208939519 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.18568789 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.210447207 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188800362 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.214203697 seconds)
  done (took 5.872964964 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181263034 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171993153 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.205511911 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.170763452 seconds)
  done (took 1.841063975 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196511827 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226024222 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197465579 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219287105 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199908642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226074665 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182985649 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209796539 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183662544 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223349846 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199991942 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227632855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197001404 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.21887465 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194884525 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.207175006 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186510844 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.228900267 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.191817703 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.225489884 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.187470033 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222386154 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182454704 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223117174 seconds)
  done (took 6.078202129 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.261854444 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225318665 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210825546 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.241493828 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.18085885 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241761087 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.257521262 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.190094592 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.219078888 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.188914475 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.213704367 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.184112711 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.261973207 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.188218774 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.216231968 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.18449762 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.223321114 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.223017966 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.228145383 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.216417891 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.189524158 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.22363396 seconds)
  done (took 5.892860062 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.274419236 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.208941187 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.172573977 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202401391 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.18512414 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.209775936 seconds)
  done (took 2.379902982 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175165049 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168742954 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198916997 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168627496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201913763 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168749335 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197812031 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169435556 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.197997269 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170062841 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197397206 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169357787 seconds)
  done (took 3.311510287 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307647817 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22051726 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349397983 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.462426695 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260479385 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256167483 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.351479675 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255687211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.279186441 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231808354 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249751322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257243757 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249140927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302092824 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20966544 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245568084 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236793668 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.332380615 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237521453 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332589944 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252045913 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244184333 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28909448 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245738093 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204773376 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26154811 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.21309056 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194724119 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267506427 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25874148 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264193797 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217931378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238860702 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283071666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304695904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238533298 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384359883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201132553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.260558212 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.294790071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327511274 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207741303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285995035 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248827462 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223513086 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280704124 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245272552 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284946625 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.199277318 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241881315 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276751728 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273715425 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.26514992 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203788759 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398835634 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22927034 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.208173452 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276735706 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285639687 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300725054 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27593207 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.190781012 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26820953 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288301419 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314173059 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.207026097 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.261762989 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22216943 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232779015 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30691018 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279068214 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259207775 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285168932 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196532803 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268750405 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263269135 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247998918 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272961085 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268660366 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.215419719 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215228995 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231291962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190845924 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.290383787 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215436165 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314434009 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199029865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275027834 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273480939 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21974357 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259032266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255238051 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229792395 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246110591 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157742117 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240004728 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.253675285 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223528532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22602402 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217908707 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238753945 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.218306435 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217815915 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219671119 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236044952 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.222745877 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255539022 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237408274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.229190006 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277360833 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214741097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.262478756 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264834965 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294969308 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197474391 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228227028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316587635 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236837733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.235466227 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268563021 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296112126 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.207976405 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231994411 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258310841 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260624513 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240622862 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300698732 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202707453 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232217515 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.225221887 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240295705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256011805 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.259920853 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193909308 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.265020205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286670585 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.192673499 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235256663 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281195492 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198000552 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221387827 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201180264 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235823216 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.237795612 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.219902126 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237085402 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217812889 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263556763 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266340778 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249959557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201111838 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268810254 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226118365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.237935126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247765869 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.184895059 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.270822878 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299777455 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225254586 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247733892 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.259002764 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278443621 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270553055 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19501127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.281885696 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225151264 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.18919646 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25898912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266731087 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22845872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288885753 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278776091 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.260807668 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263445967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214850882 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263840678 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.286872127 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253717661 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.207387595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273597441 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265646641 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.187045509 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.221778165 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.19406555 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235462892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196203567 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235899784 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275597651 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259737657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271598464 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237134602 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237744083 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293519023 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192774068 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259657931 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.274723699 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205299641 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.29186303 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289139803 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276848989 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207222861 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260509688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.21810268 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194439068 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23183069 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22960411 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238085318 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230141516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209738511 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.293696303 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267010502 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214875099 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289436986 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260184924 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.303731468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.218685562 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.23440358 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265203171 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266799472 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.255407509 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231295407 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.22696676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294598606 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240774215 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29177441 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235504456 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279350145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294391501 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.266130294 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198367545 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245417892 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25987192 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207274432 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261847334 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209350789 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230200531 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246183155 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.205752004 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239364097 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288137627 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209803859 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27322776 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.256847269 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263679444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193976353 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239692983 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271219927 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213331856 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.162742172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265445041 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290112015 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24926531 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218603843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268001694 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228402256 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.448905618 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249228243 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271326036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234900071 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205980323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273675514 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256344269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225365054 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.284820626 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241520426 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307471975 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238751605 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.241118827 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226659813 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217368781 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251596931 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.196731566 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252043161 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.261878074 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.211928851 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285184649 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239785796 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26754639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248282516 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.253158062 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.216309982 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239004122 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328928852 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26860701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271129085 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.235764056 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263391937 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283107586 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192286267 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224522295 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.200392529 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.289329613 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196320592 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279706878 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.267248498 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280134865 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275530286 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263903261 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208293964 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.228788292 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235727756 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24912698 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283426794 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232793505 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.204718375 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287496903 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186886917 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232099681 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263437344 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387334802 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215836829 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267016875 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.164859295 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.3863607 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228760265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200301228 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259689268 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267796142 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.19977801 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.287046212 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248422011 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238578397 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260650252 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202862698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277006665 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283945307 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268111089 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273347409 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.212480459 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261569979 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257109409 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238365935 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24738874 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.245994607 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22730449 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296389315 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.278022505 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.199708385 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270738972 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274524401 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269262276 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239924984 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243116749 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282854755 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196682468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269200711 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236384039 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195269972 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259731256 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262999663 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199978969 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273198191 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271345703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200315289 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228092889 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213676057 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269055403 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240580954 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.200420821 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286015118 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.230812554 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250774425 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311596912 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23449707 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235970902 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245818304 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229977394 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207614444 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245507607 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19961157 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.278670524 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276574027 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.199888567 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274158982 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264409269 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231318842 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253404622 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243663677 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.33712781 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231751466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29375756 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221417397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322099494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254451907 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276243748 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240554459 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252607986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262728825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214999504 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.330223256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265483984 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.236133881 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2343753 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24190951 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207912956 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.234951045 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220480256 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272266415 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240498824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.205798603 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.271157922 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213085535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.249687631 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242854403 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303627294 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221316958 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290009497 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.295387344 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206622113 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278932926 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27749454 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197179676 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.263951265 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275685206 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242771251 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221282508 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.23693711 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.206163871 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315307274 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.22850503 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228195252 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278678612 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275141088 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240978701 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.236817096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282948281 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209296852 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279035775 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228861388 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.219832856 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274948646 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234852262 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.196684971 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276814151 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258744727 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.237903428 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24473697 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.247411847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296237862 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.225241101 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203142911 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389232016 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262438762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297362319 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193826722 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240284647 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214308862 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261721875 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.265704165 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242542321 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.23290105 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198918986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.249706054 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.250565582 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.204358648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277201853 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285179379 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227218966 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292578319 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.207644781 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.361911272 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246056037 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270370063 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.179750096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.197698242 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244596137 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234027038 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212651381 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281993771 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320798279 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267887395 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.217483094 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237514236 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.196173017 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234719546 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262295284 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220207012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274213948 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248537882 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.165360117 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241814457 seconds)
  done (took 121.398999282 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257426433 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246997675 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.264470854 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.315453204 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282683486 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.37824557 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.325007235 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.338064294 seconds)
  done (took 3.656015059 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.194168516 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.260822497 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.242477066 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188557322 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215870736 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.547686215 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.235709927 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.189923303 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.265284849 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.225404987 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.183488929 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.638650195 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.22060566 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.218387518 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223358759 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.186755549 seconds)
  done (took 5.485654072 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.194549429 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.622767957 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.131232205 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.366671605 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.338757412 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.287530061 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.880190334 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.273293473 seconds)
  done (took 13.35293655 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.250306665 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278575527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.456470593 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.387635296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.292372498 seconds)
  done (took 2.931006129 seconds)
done (took 175.19796239 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.201391066 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.194581354 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.230713657 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.226779011 seconds)
  done (took 2.102532902 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.251629068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.16169078 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.194487248 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152628521 seconds)
  done (took 2.01674943 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.483958148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153443667 seconds)
  done (took 1.92552267 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222860361 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.23783956 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207358314 seconds)
  done (took 1.944568934 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21339363 seconds)
  done (took 1.486226859 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.198005655 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.189850631 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.315944122 seconds)
  done (took 1.977765725 seconds)
done (took 12.722617419 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.221469144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.048870371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.655023835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205402836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824414751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.469986342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.528284629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25171795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.278028745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.214282418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.246191068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.763898106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.509623633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.952673178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.49419957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.953385525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.795907272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184447055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221690393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184914628 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.505462606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182610981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216471472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184136864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.793457388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.49229959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215341422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.964709959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214047372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19187515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50361817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183555809 seconds)
  done (took 23.906922118 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19392805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.272586227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238706881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218026387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193393046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217912755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194358364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.228977208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318290319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183651058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238015064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183091585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.221193927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185290468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240084108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183293646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218230243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185257027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223125855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186415382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237644675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183626789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218751931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185336342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215807893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202159717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216073487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196105673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.726866127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193140091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221552451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18494181 seconds)
  done (took 8.589212675 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.233276859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.283328122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.23885338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257560986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27327386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188103343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306352785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253134018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299937143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217697129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206248283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.21829074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224136099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.218600274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.208642049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.220583718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.186495369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.219157798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222292417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188182305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237978632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185505932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218335574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187029288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215619475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.207847136 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216438791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197639374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216192876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1951571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222066128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185352004 seconds)
  done (took 8.43531574 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.205344446 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.198656697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.246236599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.239328574 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.198531365 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197632469 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.236604646 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.194084775 seconds)
  done (took 3.008023143 seconds)
done (took 45.218802888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.220165532 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.238314863 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.213495872 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.235699852 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.277611244 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.233725483 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.207125807 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.229669204 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.204525365 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.245619831 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183909688 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.229503289 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.209106924 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.233317137 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.314157541 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.207039708 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.323294984 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.318607973 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.196982961 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.240734445 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196822355 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.321395926 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.237816491 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.198685323 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.295681276 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.191522392 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.309430389 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.234474741 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.201603796 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.218281335 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.282388332 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.236056818 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.198454616 seconds)
  done (took 9.161459908 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.301920435 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231750244 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.194326169 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.228379215 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19478604 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227648474 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.333404951 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.193982677 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.226498749 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195044138 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.19249949 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.316302852 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.235609714 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189866132 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.229933792 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174890493 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.336588589 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.194047659 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221714731 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157673183 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22368683 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196065023 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.349428194 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.189169299 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.231576981 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.193719175 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230680051 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.199072019 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.227430234 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19655691 seconds)
  done (took 8.116280482 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.207035035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.20759467 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.251590322 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29597559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.22478107 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.239810454 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209302938 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.238976971 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216309305 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.222456585 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203209251 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.257059911 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.2049388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.232904058 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187609252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.237902837 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203437133 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222443074 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196201025 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239952094 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.205543913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.23624722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211604073 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.230592442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187958323 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.229632568 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198538523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.23238008 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.195954529 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.239099145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.188842114 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224935676 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.189647535 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256490251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.188846298 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.236532927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.208578601 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237336155 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.202212536 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257432119 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.224078704 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.191702568 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.246601891 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.244844111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.224488151 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200682337 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.222210076 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.205532669 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.219894189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.208670619 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.262532123 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.189792695 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.243598757 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.188630129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.218475379 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.198037953 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.222082201 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.193707115 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.236034998 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.191982828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.240432439 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197229203 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.232670887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.192461442 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.199806357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.225546804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.187890539 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.226856662 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.215838533 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232996821 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.261427471 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.1903552 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.200007645 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.239749465 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200531693 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.235309987 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.187314243 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236017577 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199997383 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.227193197 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.201482258 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227673721 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.19034916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.240255304 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.208608776 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.240073743 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.233555994 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.201969441 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.191055747 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.2270149 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206082071 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225642487 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191316229 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238032495 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189464885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.2275414 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199689955 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233832159 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.186994582 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250286249 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.192656299 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224472893 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216209421 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.227140207 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.19308336 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.232748679 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.230079802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.225600512 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.199707659 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.237215521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189760124 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.231597655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192039805 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222917189 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206546807 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.238676988 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.19785172 seconds)
  done (took 26.801185785 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.41830791 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.407778697 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.29734373 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.454509623 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.239052588 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.325364375 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.402959868 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.407115274 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.190522557 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.260023053 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.28306188 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.369410047 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191866037 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254690072 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.413433902 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.45130106 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.258067428 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.261396256 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.225027483 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.242766826 seconds)
  done (took 7.687565887 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204860409 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.254298187 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.212151763 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.24074877 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.200621476 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.234290335 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191864819 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.243432723 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.201715782 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.230583804 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.19508667 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.22978652 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204576045 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.204532565 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.238877153 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.248185698 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198419134 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.224162399 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.213611577 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.224701868 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.210021141 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250671004 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.198659321 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.242934606 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208086171 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.234211002 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191003 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.225912729 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.198648045 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232229251 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193857226 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.23218789 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.199524271 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167410757 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.238862747 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.205345404 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.230853085 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194376805 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230747935 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193320347 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.236554333 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203495598 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.232994589 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202802912 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.209460037 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.210386832 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202261813 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.239309639 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172308413 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.243914317 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.20438297 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.233272387 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199857756 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.242553994 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.199139905 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.240893463 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.200697334 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.23540741 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.194819832 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189553605 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.2263192 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193054829 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.233832138 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.201742242 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.23704778 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.199756418 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.233316467 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.191554197 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.226740143 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.195221932 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.225568889 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.205578242 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.247753158 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.200155939 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.231240286 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.202685045 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.233319481 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161673065 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.198947292 seconds)
  done (took 18.359943025 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.224001346 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.238469857 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210613336 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256006451 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.209068837 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.229867178 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.20721485 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.242467376 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.208220978 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.247007806 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.208578908 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.238252166 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216007797 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.236326999 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206520601 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.239504047 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.208172488 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.263336251 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.222865266 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250697734 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207595276 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232649477 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205178308 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237885317 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217017267 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239725419 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215290781 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.24405216 seconds)
  done (took 7.714371251 seconds)
done (took 79.135488471 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.537881607 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.686499812 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.448376479 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.454632767 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.450403188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.47130974 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.445316581 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.447643596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.966239014 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.418546879 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4487527 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.448875702 seconds)
done (took 31.618258306 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.517547224 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.124694716 seconds)
    (2/2) benchmarking "String"...
    done (took 2.130608473 seconds)
  done (took 5.600987138 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.119822664 seconds)
    (2/2) benchmarking "String"...
    done (took 2.125851144 seconds)
  done (took 5.578334691 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.434301589 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.437091012 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.829297413 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.441227208 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.438819908 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.439833797 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.438107966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.441667514 seconds)
  done (took 17.797143902 seconds)
done (took 35.267702406 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.483158058 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.724651357 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.710994776 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.41771648 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.439524759 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.447623448 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.439514713 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.502138281 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.440501315 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.423293117 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.885439801 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.734360954 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.441044106 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.872728395 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.418918021 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.451421133 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.453952173 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.797470885 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.445255477 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.485091772 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.425705096 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.422326465 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.454297079 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.448025265 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.452825726 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.452567764 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.469956604 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.446530048 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.737057245 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.481037482 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.487479507 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.442276363 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.466007991 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.45453277 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.440456354 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.445338543 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.75608978 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.456440378 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.423326309 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.448748057 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.79570384 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.469972757 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.439644576 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.444635392 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.426483061 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.504452882 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.423281463 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.560907046 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.468253994 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.44259577 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.515649483 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.870833195 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.439745112 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.460887925 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.450518752 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.818753147 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.469077752 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.563073643 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.474631154 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.445185932 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.441231314 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.448199456 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.522450028 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.467460798 seconds)
  done (took 160.324270897 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.443272412 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.44339717 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.439651917 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.502576333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.44675297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.442217156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.446245992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.444489908 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.44080013 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.469270183 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.445872078 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.442650442 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.446048935 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.407538262 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.454295135 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.460653379 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.447003487 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.440375029 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.464342076 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.446782006 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.475058024 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.447628903 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.444786881 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.442959927 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.453349196 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.524420135 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.489315308 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.462740353 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.452567984 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.446957116 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.45668803 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.494404339 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.111631455 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.314140355 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.455427415 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.487124593 seconds)
  done (took 89.269857325 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.448335105 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.44887292 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.447958492 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.482991987 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.445287259 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.072159828 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.068647146 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.509547276 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.846500704 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.443414546 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.669423694 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.009823767 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.767053076 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.447768793 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.448346735 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544307064 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.458219815 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.446958538 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.54575746 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.472657173 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.444805006 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.45138575 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.073582943 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.461286192 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.550946637 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.630760478 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.447079946 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.483147865 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.846769893 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.445766388 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.48292393 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.787246077 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.48291992 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.44826076 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.862933045 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.713329735 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560847321 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.448583319 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.486993944 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.449718467 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.738465627 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.449885033 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.836577638 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.452488742 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.452212065 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.166995395 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.453195542 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.075904551 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.448716705 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.465006113 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.448768521 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.451803061 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.833644337 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.29368633 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.447246345 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.44905702 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.454257312 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.45105787 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450372043 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.449097418 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.486682906 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.080259156 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.39370455 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.451928632 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.45057674 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.453411487 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.4863115 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.453368538 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.451719107 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.965792475 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.514379994 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.054814013 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.44936856 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.508741797 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.550331505 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.570058711 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.448272675 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.450957908 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453354754 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.454170595 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.567737707 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.451840135 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.892413221 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.633410296 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.452044233 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.036189194 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.553952992 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.450727571 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.841659969 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.454499451 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.4538917 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.212369185 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.550275028 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.452295954 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.455560722 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.455773171 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.893770226 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.078386931 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.789618061 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.455078795 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.188429637 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.458419338 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.909156463 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.047163417 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.155711979 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.454730222 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.567593857 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.63547875 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.453853 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.454677497 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.990031175 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.454288066 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.509627976 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.454564442 seconds)
  done (took 400.191156921 seconds)
done (took 651.123739463 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.435886391 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.434008652 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.442422233 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.433136408 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.455310181 seconds)
  done (took 13.545193838 seconds)
done (took 14.893028333 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.720700321 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.726394749 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.722982874 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.520164667 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.722171093 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.72369689 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.604596763 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.683483664 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.726035582 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.727833676 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.485449114 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.74566595 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.672954114 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.533203312 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.476317821 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.617020889 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.496322389 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.633707828 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.606177909 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.76773221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.792568015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.508964531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.733213809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.490684716 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.755337102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.801348188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.683410212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.621091445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.475656244 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.473742033 seconds)
  done (took 19.45300887 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.493132834 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.764718822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.798168827 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.510675076 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.751171549 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.493552874 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.750229791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792727255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.667658413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.637504008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.476559505 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.473890618 seconds)
  done (took 19.466006064 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.471453752 seconds)
done (took 74.379930096 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.495823709 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.557784517 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.487982345 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.47342077 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.473411548 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.474001485 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.476387729 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.472972397 seconds)
  done (took 13.258354322 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.473703302 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.47042016 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.474867402 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.471005037 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.470393318 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.471389405 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.471197709 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.474060179 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.471350129 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.47432907 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.472110339 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.471381242 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.47092505 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.47098502 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.469939362 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.472034785 seconds)
  done (took 24.899488563 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.478654464 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.471691535 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.470885541 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.473120405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.474914064 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.473933814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.472359326 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.47253785 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.474418002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.474562963 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.469813447 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.47269253 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.472774769 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.47344248 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.473823632 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.47510867 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.471791778 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.47473956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.47620431 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.472343705 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.473058466 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.472640544 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.471864079 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.473174038 seconds)
  done (took 36.712099026 seconds)
done (took 76.223176171 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.459397449 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.480156408 seconds)
  done (took 6.290232499 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.532084916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.533360837 seconds)
  done (took 4.416653232 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.472949741 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.474561182 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.473520148 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.473714315 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.47594317 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.472020569 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.475091734 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.473192759 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.473867062 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.474206399 seconds)
  done (took 16.089659011 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.47589364 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.47654799 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.47336331 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.473632157 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.473321435 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.475635954 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.477411364 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.474809982 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.47453668 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.478852896 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.475706117 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.475536569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.476866782 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.475694007 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.477023109 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.47518319 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.475534192 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.476250837 seconds)
  done (took 27.913967167 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.48991926 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.4921771 seconds)
  done (took 4.335237096 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.601662441 seconds)
    (2/7) benchmarking "second"...
    done (took 1.516964698 seconds)
    (3/7) benchmarking "month"...
    done (took 1.579698625 seconds)
    (4/7) benchmarking "year"...
    done (took 1.574522704 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.518890397 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.497186647 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.519501684 seconds)
  done (took 12.160283799 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.47119934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.765730678 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.953070609 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.638059428 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.459420119 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.482375266 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.463520341 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.48392469 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.483351617 seconds)
  done (took 16.556041185 seconds)
done (took 89.116059934 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.46386633 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.473147873 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.493309837 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.481417742 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.819434065 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.513614198 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.465209931 seconds)
done (took 18.071018038 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.451584049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.458936862 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.451739853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.474252391 seconds)
  done (took 11.191118552 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.476359572 seconds)
    (2/2) benchmarking "read"...
    done (took 1.790051827 seconds)
  done (took 5.622572002 seconds)
done (took 18.172966222 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.481492276 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.48055179 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.478825236 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.478317508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.480629974 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.481252969 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.480640214 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.480486345 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.478626895 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.48127489 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.481215357 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.479044323 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.480557803 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.483910645 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.479854982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.479152591 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.47950886 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.480382644 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.480538999 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.48081606 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.480017713 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.482469781 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.481121805 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.481610296 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.481330456 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.483063679 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.479561021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.482706964 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.480512175 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.479723216 seconds)
  done (took 45.776151189 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.490337885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.487638011 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.480467812 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.483597216 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.485356255 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.479312799 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.483073924 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.483123365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.483061229 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.480606006 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.480966592 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.482737724 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.480925893 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.482335377 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.481783552 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.481404132 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.481813592 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.482753635 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.480758402 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.482670813 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.484644074 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.481708558 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.482244268 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.481163656 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.480497218 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.483630977 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.481292685 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.481970754 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.482893362 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.482777115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.484925251 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.482705402 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.482808408 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.483301218 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.482764379 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.483160197 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.487070445 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.488231238 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.48236531 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.48178661 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.486780267 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.482097992 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.485724787 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.484291947 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.489293277 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.483308991 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.487070953 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.484198235 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.483101167 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.485284022 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.486082376 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.48594929 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.484926304 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.486185613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.484359647 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.484912515 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.486847884 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.485497051 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.48588106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.485134511 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.486844428 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.487209298 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.486501909 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.486965575 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.489435124 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.483049752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.485614454 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.486574823 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.486568866 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.487114971 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.48648404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.484884762 seconds)
  done (took 108.221049175 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.486297465 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.487267267 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.486972962 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.486241895 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.487360617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.485096354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.486007544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.489154014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.487068475 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.489798115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.487922987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.48609061 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.487879869 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.487481977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.48706204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.485437049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.485822969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.489018222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.487274057 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.488356597 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.486955305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.486313214 seconds)
  done (took 34.079486836 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.490364438 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.490502465 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.489403184 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.487722024 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.486447344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.488272493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.488389474 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.487934646 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.487950939 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.4863842 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.490266774 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.489880097 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.490592597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.486665511 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489831905 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.489541454 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.488408651 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.489170664 seconds)
  done (took 28.162198815 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.48763064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.490073722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.487955181 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.487069291 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.489224232 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.488257013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.488091753 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.490525342 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.491795662 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.490455052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.490936182 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.489474696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.492059891 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.491525391 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.491614951 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.492796047 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.491275628 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.489657079 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.490932392 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.490945987 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.489345047 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.490293835 seconds)
  done (took 34.146661238 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.491793373 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.491694831 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.489229483 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.490120673 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.489730865 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.491356337 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.488659932 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.48975748 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.49137732 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.491824299 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.490938259 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.490272508 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.492638474 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.491788442 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.491484268 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.488811826 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.492749752 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.493178124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.492610529 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.492239886 seconds)
  done (took 31.188804197 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.492036584 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.495693738 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.495039035 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.491916392 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.492633703 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.493802722 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.494702839 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.495580738 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.493229616 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.493693827 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.493507509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.493734785 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.495598447 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.493856379 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.493070887 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.494343839 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.4954789 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.493926927 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.494430431 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.495257145 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.492569648 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.493942659 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.494619152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.494951607 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.493001441 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.495765489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.494088656 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.495486053 seconds)
  done (took 43.201747711 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.514531238 seconds)
    (2/2) benchmarking "in"...
    done (took 1.513264236 seconds)
  done (took 4.39790038 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.493936425 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.494225701 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.493717777 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.49455836 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.496199799 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.497089617 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.49502473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.49849778 seconds)
  done (took 13.332361228 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.49523447 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.495801054 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.494264401 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.497484189 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.494765451 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.49125373 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.500576507 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.501461901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.494741503 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.494016661 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.497126434 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.498772709 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.497490632 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.494100368 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.494029311 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.499474163 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.49987525 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.498336522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.499165799 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.498579959 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.497651316 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.497012252 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.49562669 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.501847583 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.495760346 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.505324611 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.50365832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.501578986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.495509374 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.499073195 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.498129129 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.503435182 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.499283654 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.498683202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.497490433 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.499800242 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.505075822 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.502526239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.505688766 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.502709215 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.49998844 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.498185596 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.497777677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.500711264 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.501522588 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.504828817 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.500623212 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.498629742 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.497557661 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.500932464 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.508153495 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.494027161 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.503308964 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.50353059 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.500740331 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.511269372 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.507189539 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.500444773 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.504029756 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.508812818 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.518450859 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.514950091 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.506179037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.506517543 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.506236982 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.514520845 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.508339641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.507569468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.502655336 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.502773277 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.506417611 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.525686657 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.518370541 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.505407486 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.503735798 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.501885687 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.500766319 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.505462307 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.508509214 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.514923696 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.507250546 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.504161753 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.508438588 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.511048494 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.501840178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.508897283 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.505559214 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.503528881 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.499509335 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.514376926 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.511394766 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.504764867 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.503543053 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.502127846 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.509091144 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.505878135 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.500535269 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.506409451 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.508047745 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.504405454 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.502763662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.505023037 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.511884045 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.511384614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.505636758 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.51261397 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.511542986 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.501773831 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.516764092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.510744159 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.5055226 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.503817196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.512339958 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.512401528 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.506824863 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.512616807 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.510058686 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.505993453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.510737768 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.504931616 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.509466745 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.51935628 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.513416492 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.506033709 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.507984564 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.513499029 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.505031893 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.511953703 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.512962597 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.506496756 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.508017764 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.507655457 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.5130117 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.506993121 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.511855486 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.507996806 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.510940676 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.508989251 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.508879858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.507910887 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.510576249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.511457293 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.513207505 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.515059888 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.515059799 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.510101882 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.523230822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.514467526 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.509975758 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.514582651 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.513571138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.510641897 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.505304498 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.513196867 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.506656909 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.509976532 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.506585873 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.515129041 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.509014361 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.51169031 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.509180253 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.505335738 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.511427782 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.511792506 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.51470034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.515116341 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.5115664 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.508655285 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.511002582 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.5054588 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.512061873 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.505105229 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.511039144 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.518105524 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.510586331 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.510510449 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.512239512 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.515197577 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.511201914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.509425622 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.51084222 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.517408805 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.515230458 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.517899881 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.518125285 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.511246081 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.512659045 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.508603087 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.511765751 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.515880784 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.512782627 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.521848121 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.52894105 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.531007897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.510985973 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.517070629 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.50901356 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.515435732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.51604939 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.52009997 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.51355164 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.512062652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.511158677 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.515639051 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.511655754 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.515609649 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.508867565 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.516591087 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.512660669 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.513667859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.513852081 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.510684886 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.517189254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.519119245 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.513202279 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.51275038 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.509680717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.51717242 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.509492419 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.51229184 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.517498772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.513048883 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.518657789 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.522510098 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.515804339 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.518627858 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.518261673 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.514469949 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.516026611 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.51717004 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.518962251 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.522494358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.522507688 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.516688733 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.524300059 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.521494192 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.514635542 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.517716105 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.52281903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.516240037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.514112427 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.524156276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.517935141 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.514059462 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.515753363 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.513504378 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.521319744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.522680866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.527095116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.514785941 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.522534056 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.514898843 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.519721728 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.51904952 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.525998704 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.519254222 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.524091657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.523806828 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.518077568 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.515589061 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.518390671 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.516865422 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.519104527 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.516537385 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.525208971 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.521966102 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.522177522 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.521550003 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.52040275 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.522765658 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.513972109 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.521543265 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.517371059 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.538343977 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.538432259 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.528960228 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.5280144 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.523772719 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.523585517 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.522041258 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.517782006 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.517571728 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.520710695 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.519512937 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.519500232 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.522166241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.517848936 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.522532967 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.521693251 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.524761181 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.52237557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.520175124 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.517387217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.523798549 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.518794058 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.520452788 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.514359825 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.523091629 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.521714047 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.526438342 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.524383018 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.51894983 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.532311337 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.528009341 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.523384782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.521309049 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.518973534 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.518781632 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.520180107 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.527297947 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.519418937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.526415881 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.51877439 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.528913178 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.523246971 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.529733157 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.529868846 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.521884386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.527906274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.520795767 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.517005519 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.521643941 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.525256843 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.530250811 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.533623161 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.519415122 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.526629431 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.524010151 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.522947153 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.523270863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.522871056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.524760269 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.520094755 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.532244111 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.531399272 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.523545334 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.527472018 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.529416314 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.522916112 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.521990072 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.517252711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.531238469 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.531346695 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.522250546 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.526598734 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.524073424 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.527306739 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.522782166 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.523711461 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.524572906 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.522991416 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.532817312 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.533817767 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.529092023 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.525613785 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.534109436 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.535282548 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.53355004 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.536715963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.525894431 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.532775735 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.52700509 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.52382303 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.523540725 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.527514466 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.529723615 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.522896477 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.53121001 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.528487655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.527864636 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.533011718 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.53415561 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.522668728 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.530399155 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.542511689 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.523000711 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.534954596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.52787724 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.524320271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.530799508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.525854658 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.520882412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.526729023 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.53128267 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.534289388 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.52646556 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.533115185 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.524169973 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.532654629 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.527959416 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.525988016 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.528257335 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.528763937 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.526168314 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.530761423 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.534772795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.540344464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.530430346 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.534291598 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.528627658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.538662187 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.540791462 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.529934584 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.534234973 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.529323344 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.527566379 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.535733814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.533597814 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.528204899 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.536831249 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.527601656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.536091157 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.53262091 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.533945536 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.535550106 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.537102493 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.526879798 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.52863704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.533247581 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.531167904 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.526572032 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.534116508 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.533976072 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.527628205 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.52882235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.5306678 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.533416604 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.538797024 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.52847543 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.536301496 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.534294328 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.535381444 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.532554097 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.532255219 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.527794927 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.527637976 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.545725043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.538686618 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.537358435 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.535247309 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.533805309 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.533394637 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.537900204 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.537706742 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.532657191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.533931186 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.537379971 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.531946882 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.532193291 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.534435974 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.537652273 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.540464557 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.538836041 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.535138767 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.545064513 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.54442503 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.539862938 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.534276443 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.534915339 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.534866267 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.536402563 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.532867326 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.531740361 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.543805278 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.543081307 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.536928509 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.537641768 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.534665964 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.530623065 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.534619309 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.532133917 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.534570239 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.546692495 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.534713965 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.543417724 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.534421669 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.535329259 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.530415866 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.531988176 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.535859063 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.537823646 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.537887474 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.536783432 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.540339376 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.538615561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.539218978 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.534591873 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.534825349 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.533778963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.531724491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.535614071 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.532167557 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.541662034 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.537074956 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.532475649 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.539784189 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.535332096 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.533017012 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.541810018 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.543051328 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.536127629 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.533624888 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.540950532 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.545293491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.544171586 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.536658742 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.530504421 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.540856504 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.541187163 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.534905004 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.53855618 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.534822238 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.553608773 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.549725372 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.534555576 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.539912699 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.548904153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.544973484 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.537054679 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.537958398 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.53615487 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.542659455 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.544000288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.535748959 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.545631062 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.54407209 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.536267092 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.542722461 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.536411892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.540531361 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.54286805 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.545015068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.53912251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.538980358 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.554852612 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.548291447 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.539816579 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.560627124 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.545788797 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.544493721 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.544938505 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535500515 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.54004217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.538026769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.54452819 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.539417881 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.540024352 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.540585097 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.536361621 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.547735169 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.549929398 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.55085464 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.540243687 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.534256218 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.538286567 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.54092647 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.539694906 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.54132047 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.537992312 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.539498921 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.540770601 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.53695704 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.560068751 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.561040376 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.54572021 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.540914193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.541329295 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.542655057 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.547139718 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.544862868 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.546754698 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.541059113 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.542578707 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.543258327 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.547424143 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.543055963 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.541668867 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.541633371 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.541029797 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.544493196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.555242429 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.562049658 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.54610337 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.549068747 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.543088904 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.545283412 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.540562786 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.548834069 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.541996707 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.541651072 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.542556195 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.546425034 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.545117053 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.545663052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.542280178 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.548497 seconds)
  done (took 909.085207625 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.543675337 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.545406025 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.543625829 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.5452773 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.543878146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.543139604 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.544025856 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.543123345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.544031004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.54353409 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.544842207 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.543028257 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.545198582 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.544372047 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.545290286 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.54502206 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.545529715 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.544763742 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.545461026 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.541607866 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.544813173 seconds)
  done (took 33.839058183 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.546736992 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.544284317 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.546240629 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.542673829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.542680562 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.543714651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.547284958 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.547665869 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.545797501 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.544812715 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.545429952 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.546865605 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.546840236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.54528856 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.545790602 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.54525991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.54809768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.549070767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.548044178 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.546064886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.544912411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.548045207 seconds)
  done (took 35.421884572 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.546616489 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.546477809 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.544024072 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.5521847 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.546350131 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.547084819 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.546697087 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.54886867 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.545866828 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.543954303 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.54639007 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.547076025 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.550825494 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.556341746 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.549849362 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.554385601 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.546747857 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.550679621 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.550010272 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.54811712 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.556679345 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.555560115 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.548788829 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.543665413 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.549073348 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.547545483 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.548959366 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.549815637 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.543917489 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.553591639 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.548463055 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.547353687 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.554261197 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.554735371 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.549205748 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.554199839 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.549507673 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.548311764 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.548578814 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.552354834 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.5603781 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.549839545 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.560860968 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.559692285 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.548293047 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.550128314 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.560629634 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.550112475 seconds)
  done (took 75.82748952 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.549972967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.549960833 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.547695445 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.551030105 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.54855463 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.551025124 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.552796967 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.550301207 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.549324844 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.550246477 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.552198254 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.551142211 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.552255892 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.551849804 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.553674632 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.551045436 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.551667201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.554989218 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.553668695 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.552520104 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.552041453 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.551223381 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.554177598 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.55332808 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.552157279 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.551837467 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.549361057 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.552541851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.554040763 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.552765513 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.550126458 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.555178101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.555301905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.554013269 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.553378936 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.554324579 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.552126926 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.554494236 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.554105183 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.556021653 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.553778014 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.553962079 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.554249667 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.55360772 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.554112729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.554130935 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.554181319 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.555014797 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.554318886 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.554458648 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.553641663 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.552634627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.556349631 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.553638452 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.554826935 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.553424411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.557144124 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.553787922 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.555703177 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.555297923 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.554254589 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.555567182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.553054477 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.556910465 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.556444263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.556875008 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.557104297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.556861207 seconds)
  done (took 107.040514585 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.556164179 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.554459908 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.556716916 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.556068643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.555266644 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.55632979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.556607252 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.554868789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.556847537 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.556284192 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.557841265 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.557667063 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.556834174 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.557831502 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.55697564 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.555883965 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.559187985 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.55757403 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.559610956 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.559229958 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.557453898 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.559031021 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.558105921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.558966393 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.559290459 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.558443307 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.557461538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.556949911 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.559785063 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.556935959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.559405225 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.558700603 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.556477554 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.559178614 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.558760377 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.558219743 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.560191779 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.558177935 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.558012152 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.559277866 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.560029726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.557358263 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.5578578 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.559914101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.55895329 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.560302546 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.559632742 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.559403789 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.560160527 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.560802033 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.558409069 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.558576058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.560958364 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.561602982 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.561166458 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.562070616 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.561266843 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.558135755 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.560702003 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.560215267 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.559371358 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.560296875 seconds)
  done (took 98.048496433 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.562203763 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.563386028 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.561131678 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.564134146 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.563439144 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.562886131 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.561926664 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.563061343 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.563880066 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.56134296 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.563167612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.564412694 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.561070246 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.564102401 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.563250653 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.564469718 seconds)
  done (took 26.43247995 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.561778084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.562480237 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.563139518 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.563065971 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.563933198 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.565174874 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.563794884 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.563794973 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.562974663 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.563233922 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.564395906 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.565691624 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.563345652 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.566635152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.565268136 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.563249836 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.563170381 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.561015288 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.565114978 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.564874235 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.563355312 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.561359723 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.563825987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.564433699 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.565528614 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.566306947 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.564668884 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.566473258 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.567206549 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.565182859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.565201782 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.566799166 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.564999821 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.56713563 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.567908099 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.565257841 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.565442077 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.567022365 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.568126431 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.564373349 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.567295004 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.568293931 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.563106937 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.565207847 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.566249281 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.56702404 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.56804141 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.566840614 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.565624851 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.566088811 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.566933994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.570128816 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.565794898 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.568023889 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.565492972 seconds)
  done (took 87.513590843 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.56823291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.566772848 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.566542914 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.567284464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.564962796 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.566841909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.568078875 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.569907795 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.567444204 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.567366665 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.567799175 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.569374449 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.56593859 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.565775208 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.569770235 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.568044808 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.569051818 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.568458832 seconds)
  done (took 29.646774205 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.569391409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.571219249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.56856142 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.56905607 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.568867056 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.569011785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.568917429 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.566819939 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.567522959 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.568737449 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.569537473 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.569720802 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.569150987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.569092649 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.568538678 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.56835519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.570354957 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.570375111 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.569816612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.569610144 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.571683947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.571153405 seconds)
  done (took 35.956315067 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.56242575 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.566639589 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.562038328 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.578782795 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.575852269 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.561590343 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.564354117 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.563299395 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.582271098 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.591344006 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.589475287 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.574787527 seconds)
  done (took 20.30487211 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572833283 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571586699 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.569791793 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570421627 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570357845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570373457 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56906714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570948153 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571924359 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573144212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57065632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568987793 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571379639 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572924969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571338264 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568794416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570549184 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57220654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572135133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570596182 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572790087 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570627765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571112904 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571454295 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.571341718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574018375 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573145912 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571862987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572424972 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574457097 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573784226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572737642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574261564 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571593969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573377332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573819999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570080453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575854979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572639516 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575118705 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.574487177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575456542 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572497926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573092577 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574442377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.577014516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573571148 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573387267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574968735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575619963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573481203 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573843459 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576820432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574280969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575106872 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575642519 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575944885 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574438015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573955267 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.576491324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575484831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57538098 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575439226 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575800961 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575389594 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578799677 seconds)
  done (took 105.261813733 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573467669 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.574753146 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576757762 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575760921 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575469237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574701067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.577242858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572814899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574259462 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.576146102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574567742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57433946 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.57794434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.576547553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57676877 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.577596068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.577421792 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.578195444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578509608 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578186746 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578092154 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578641043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576717852 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57672621 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578893776 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57845085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576690398 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576661697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.577138864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.577495945 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580993573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578836805 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.577788487 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.578635287 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.578444724 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57717849 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578512183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.579487753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578858906 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.580067104 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578577981 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578954407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.578431947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.577050827 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580290063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.579484989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.580406892 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578535164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578095663 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.579933495 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58014399 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580609293 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578775275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.580288764 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580372595 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581315867 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578795626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581387976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.582153169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581491729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.58242812 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.579736325 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581151996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.579077968 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.582110048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578989602 seconds)
  done (took 105.602730138 seconds)
done (took 2013.84595322 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.573196505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.569443957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.575122157 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.7234697 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.572187731 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.247510774 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.09343959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.571524261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.575590094 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.577059974 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.576677766 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.569960607 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.869637467 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.571429556 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.577809808 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.570795772 seconds)
  done (took 58.254286273 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.607915025 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.590707686 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.716344036 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.581424111 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.609522092 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.79623507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.6453483 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.58326465 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.78304718 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.585514426 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.577388767 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.602591085 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.581392384 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.573834271 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.6013247 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.795718319 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.874948505 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.576043403 seconds)
  done (took 34.124487954 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.108128882 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.576882721 seconds)
  done (took 6.129253214 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.60679023 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.581161382 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.619666202 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.582943462 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.574763542 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.566519576 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.580946929 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.577017054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.585645316 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.72375672 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.582385382 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.598215511 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.584025095 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.58384466 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.586091484 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.634181085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.717888759 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.588728772 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.58620126 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.589181982 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.58252788 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.693395065 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.629550078 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.586284164 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.728761226 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.58487842 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.586659851 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.591363506 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.718882409 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.591040157 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.586257874 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.58487355 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.582827672 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.574528302 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.141644904 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.587537471 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.607026464 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.592332968 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.588962389 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.74674819 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.586491533 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.593096491 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.577523263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.140571705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.704435058 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.720970669 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.5796429 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.605798104 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.587022226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.659020152 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.587880492 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.586367743 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.650312249 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.450386962 seconds)
  done (took 99.418264133 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.59538463 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.57721201 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.573033432 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.579916462 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.591526412 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.574160494 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.572065604 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916999332 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.631787782 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576328027 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.911956187 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.592907932 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.584983816 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.578079972 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.579166461 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.645697073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.573350639 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.592386368 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.575789854 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.580410367 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.573270801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.574972594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.592635616 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.638416841 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.620249192 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.581195271 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.57601874 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.579537559 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.578759697 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.574756728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.576348132 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.578915395 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.581241378 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.577197529 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900623715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.598700303 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.575289748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.574791532 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.619779042 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.578660954 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.611261508 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196011264 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.596900105 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.575679046 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.594072545 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.214625669 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576065254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.583943993 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.588173647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.580284848 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.594883695 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.578972271 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.585813031 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.577635246 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.580822121 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.700898686 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.684691218 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.579348144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576508202 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.576889509 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.61472538 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.578915541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.584682582 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582224034 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.582744967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.576813043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.776092684 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.575237542 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.578158104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.577600355 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.593164338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.57763518 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.288293358 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.585474531 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.601161388 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.594892144 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.576971157 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576488818 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.582575318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.617356291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.58415128 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.582889844 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.908991115 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.598862897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.580429845 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.596432231 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.60287511 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.576683193 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.592870336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.579193464 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.607807129 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.581722768 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.900938291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.624917583 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.582223575 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.583262177 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.58676674 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.584114268 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.600882049 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.579924155 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.580172544 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.586170974 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.301377383 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.590055392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580439052 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.583161984 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.580735728 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.581947713 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.579969699 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.587045093 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.58489632 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.584300981 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.584248151 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.606498303 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.59886128 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.581109506 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.964649698 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.583243604 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580940346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.584556784 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.582529473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.598731898 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.592099253 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.580930464 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.582178659 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.902077628 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.617680866 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.583376693 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.594482944 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.58333249 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.58428293 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.589770997 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.586952325 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.586653468 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.582714062 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.595432552 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.610612139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.586777042 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.592085485 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.603165032 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.590546604 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.585165808 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.293024137 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.902414353 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.800609987 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.603892919 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.585105623 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.606293688 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.59172739 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.586193561 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.596092735 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.587964806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891368294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.80786585 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.584263289 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.583988739 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.607762525 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.58527915 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.591687685 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.295157418 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.593123389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.588129278 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.598691861 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.58679174 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.388773465 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.625946906 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.585529658 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.917565078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.632458805 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.589780053 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 3.37074548 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.588464219 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.588836276 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.593534222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.592625001 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.586690413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.585125842 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.779567616 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.58695459 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.587971682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.593170359 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.586590817 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.604537472 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.590831473 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.58826562 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.586134765 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584125064 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.670995301 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.589946775 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.590169695 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.593068354 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.586486329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.211439265 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.310359881 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.596408642 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.588438931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.601331184 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.589321459 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.589694464 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.588199529 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.590160721 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.585884135 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.640986197 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.949349698 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.596385455 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.634462698 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.591477886 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.592472033 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.588839481 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.590591435 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.608326701 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.598598877 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.590606311 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.806467033 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.59091038 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.589117203 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.605097324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.590565447 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.588930909 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.590465291 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.588676285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.609471884 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.59606452 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.610328167 seconds)
  done (took 571.470201162 seconds)
done (took 770.841267656 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.59417128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.594097255 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.593393883 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.59601286 seconds)
  done (took 11.835862221 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.607187749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.599492447 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.604467482 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.599891427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.608057113 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.600876628 seconds)
  done (took 11.08342372 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.594366436 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.595696911 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.597199852 seconds)
  done (took 9.247832419 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.832444324 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.598595067 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.001383181 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.603416089 seconds)
  done (took 10.498102743 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.608726871 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.60703809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.607478881 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.606428194 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.60837489 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.609142849 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.607939888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.609892327 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.610181523 seconds)
  done (took 15.93809545 seconds)
done (took 60.067722157 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.677319874 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.67656295 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.600887948 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.633139394 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.735345149 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.682697455 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.681155329 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.681591479 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.677303907 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.631706104 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.678325002 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.626125173 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.678364131 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.808966159 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.631210836 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.676844063 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.62247868 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.778536972 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.678440759 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.631843947 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.700447868 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.633468498 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.635880843 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.602828362 seconds)
  done (took 43.522880781 seconds)
done (took 44.991524263 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.629643543 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.69709059 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.601527262 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.599308355 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.605509987 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.595434634 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.623762515 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.604557307 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.616770201 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.619057444 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.592295733 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.607720609 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.618953965 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.616107457 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.636035697 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.605229365 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.603482509 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.61537478 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.620885922 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.621062841 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.606775824 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.605801432 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.635020527 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.60652559 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.611043107 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.614775429 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.609833926 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.602173947 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.610255217 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.620751261 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.608204516 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.606961002 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.623510391 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.618172314 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.607909687 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.616198472 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.606954012 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.699136062 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.628893054 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.61814426 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.615801915 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.624968506 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.611828823 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.609892094 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.616637913 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.633300357 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.612685028 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.621288958 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.610638027 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.593789564 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.641252321 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.617620588 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.616461024 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.59678477 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.620884144 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.619478041 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.61417456 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.62848536 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.612735591 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.610302119 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.63957085 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.628366546 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.618499022 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.618046575 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.616456801 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.624247279 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.615287189 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.624000906 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.616058319 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.610264092 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.611779883 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.616299944 seconds)
done (took 125.932171757 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.735746997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.604466688 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.762240605 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.613685284 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.781194268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.733392739 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.616564786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.617156516 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.616376852 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.408498004 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.617131645 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.619161887 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.608765553 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.616197845 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.731913969 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.619337744 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.617139595 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.311125553 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.617992916 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.749805229 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.608360718 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.618410315 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.618208305 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.416174133 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.60805993 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.60621621 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.748677662 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.617369042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.316503166 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.60946586 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.605283412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.316193169 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.750293734 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.638921584 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.626723385 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.626518091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.785198118 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.622890647 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.737522792 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.736692928 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.766310448 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.656594568 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.608604897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.615350814 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.621640076 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.620813004 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.618324181 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.647034298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.609748002 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.618221785 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.315706418 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.628112291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.618308097 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.619298325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.621850012 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.650720363 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.619356159 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.621022628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.752957558 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.620560743 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.739181392 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.423180862 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.411563097 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.621261684 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.607309366 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.624004334 seconds)
  done (took 127.158169785 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.686458302 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.691376665 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.73975153 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.612746611 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.665398888 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.739000212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.614343605 seconds)
  done (took 13.225047952 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.621283703 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.623110522 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.665861557 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.662472483 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.621315536 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.78864325 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.62317191 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.62943563 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.633036661 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.668607277 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.623369446 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.624049776 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.622865936 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.616911566 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.664285748 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.629148608 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.739582213 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.617676527 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.624470054 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.768549295 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.624113371 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.630216197 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.668265953 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.630502037 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.624126243 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.624366315 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.378028401 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.622111974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.621848137 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.624350017 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.623410592 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.684923865 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.625509966 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.618951432 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.621194679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.731485913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.622691619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.620892477 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.624428755 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.617778381 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.624735312 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.624637275 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.626301794 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.622448957 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.625696167 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.643686827 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.625756114 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.623701372 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.626613083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.625471384 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.670319402 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.62556994 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.627035886 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.624788531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.673152737 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.634176247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.624785872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.623866904 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.625833273 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.623977844 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.775342518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.667403509 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.626150623 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.665943036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.625895847 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.625705589 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.628325315 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.624750055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.709895553 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.625188157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.667043182 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.628670887 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.80215332 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.646296543 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.626682627 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.625241847 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.623973816 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.62682304 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.617493916 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.628012532 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.63000483 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.62627119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.628479302 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.628289214 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.628351461 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.780850476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.731774014 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.628191761 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.640525598 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.62894184 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.627570252 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.675546168 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.628075854 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.62754866 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.673597547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.742962957 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.67598724 seconds)
  done (took 165.876137128 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.63683288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.633662722 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.628154865 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.65003472 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.625010468 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.626361045 seconds)
  done (took 11.280791933 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.625946602 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.630400847 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.628680241 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.632897037 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.630076065 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.630136168 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.629538386 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.625761551 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.633770652 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.629624265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.632342882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.631451386 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.630468329 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.629833189 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.629485979 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.632352958 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.631471827 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.63238757 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.631194293 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.629801552 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.620056848 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.631662385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.631128565 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.628333964 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.635228255 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.63224418 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.648573137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.629790031 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.628511405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.635610319 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.635011071 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.630026113 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.626944156 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.631724948 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.633841152 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.631009082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.635033721 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.63691671 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.63339496 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.633169087 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.635268755 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.632065726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.633980633 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.633551918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.629184999 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.632291751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.638468041 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.652100774 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.632241511 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.635003363 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.633960401 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.634178506 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.636202251 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.632748725 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.630501914 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.635167768 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.638608629 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.63548721 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.633459761 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.628486714 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.636448367 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.63274391 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.631058471 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.63747287 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.636792071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.635211176 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.630460753 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.639107066 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.635533363 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.636380404 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.636938283 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.635972348 seconds)
  done (took 120.054429207 seconds)
done (took 439.068586046 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.079451455 seconds)
  done (took 4.565156177 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.732017597 seconds)
  done (took 4.219839801 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.155843621 seconds)
  done (took 25.649787049 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.643144709 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.623126206 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.654152845 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.619716916 seconds)
  done (took 12.027724512 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.21729518 seconds)
  done (took 4.705086204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.644235625 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.628207229 seconds)
  done (took 6.761341754 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.005877775 seconds)
  done (took 4.49244169 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.359255785 seconds)
  done (took 4.849422284 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.649890822 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.635868431 seconds)
  done (took 6.780735577 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.604012074 seconds)
  done (took 4.0892524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.852428203 seconds)
  done (took 16.341704316 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.647757822 seconds)
  done (took 4.137098775 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.66664063 seconds)
  done (took 4.156786169 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.657664271 seconds)
  done (took 7.144598123 seconds)
done (took 111.411604142 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.624974692 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.624839275 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.622587037 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.62178796 seconds)
  done (took 11.980658136 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.702216133 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.70158538 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.713183396 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.694096693 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.694702231 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.704113713 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.663452368 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.664495532 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.693018124 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.689605142 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.704474538 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.695453783 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.705806763 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.662263189 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.68888091 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.707358166 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.692844691 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.707293887 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.665757757 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.694526351 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.639345152 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.695793023 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.689336493 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.636858048 seconds)
  done (took 41.99439254 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.153835758 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.703744308 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.787747418 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.683619951 seconds)
  done (took 8.815699782 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.743140684 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.742221463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.763373456 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.801245684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.843459134 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.758786067 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.664723198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.662025139 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.645742158 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.742718893 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.818829193 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.743944556 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.96021765 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.640450703 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.956568017 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.639177616 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.63999672 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.747737521 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.794641557 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.832134943 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.640376193 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.743457271 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.749561005 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.743910842 seconds)
  done (took 43.507024485 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.64828598 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.656643093 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.641157284 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.643508768 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.641528012 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.641705934 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.655287956 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.644792998 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.648086899 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.640650416 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.643108085 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.643161772 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.654445472 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.641952282 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.638753957 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.648926675 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.643045618 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.647534296 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.650855435 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.647924586 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.641470867 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.648243727 seconds)
  done (took 37.700678168 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.629789298 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.630188838 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.983277835 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.88297433 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.633410178 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.632687446 seconds)
  done (took 15.884419651 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.717869818 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.875241909 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.633978973 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.071085741 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.14229009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.637214673 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.637103312 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.915917017 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.26795729 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.287149525 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.681607568 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.721205136 seconds)
  done (took 24.082317119 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719743577 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639130376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.635959775 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686065512 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636760029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635480427 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.687737354 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195833515 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.644216048 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914894803 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638191508 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720496794 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888450005 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651947058 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640612934 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.61204559 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869980314 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221581769 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634754669 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639742014 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671815695 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637968024 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647947584 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888109369 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641877385 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640232116 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.90411901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637485663 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971947014 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942335191 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942648334 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644540093 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915557266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146196549 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748079154 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885804921 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643520897 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.635798993 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.630203898 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.643500558 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661651272 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644727865 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942527583 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642299803 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.641487166 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638480931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208529389 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.653132695 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.641376564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.640581918 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946735559 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727490696 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.651041673 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.641829827 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722916365 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639171366 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.647645647 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767558155 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279291123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64295086 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646320082 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.640154249 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642437037 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639880805 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355878812 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.64859856 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.649108511 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646930771 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641611987 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.646539554 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664910866 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643170744 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.657086207 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643723122 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518665803 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.644491066 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646245677 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282694565 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639525576 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.63882688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874574828 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645041741 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643255841 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.644632578 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.644121504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565911233 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653243988 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.618303462 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682786825 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18814726 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890951458 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665852767 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674606219 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868550829 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.618919651 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645437211 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.646939553 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648474216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661646434 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211629165 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643539496 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.649407307 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896342097 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.853595269 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644656659 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.616569531 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179789941 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657141491 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.666208953 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.646711113 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888994067 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.356783874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955220358 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648822547 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684957218 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644636221 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.637902483 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648888779 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.650820174 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652928529 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962797064 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.636870215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649499338 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720704772 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64990587 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.645041354 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65611026 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650626082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647010271 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.879650605 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651418088 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.949804606 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.652394635 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650566608 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.64720708 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650554705 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.650004537 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87271412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66105351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920527437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650967752 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650311223 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644326992 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.865619362 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.663305813 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.650579378 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990323308 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65622096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659964995 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953156445 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684752799 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763618504 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683944875 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.653675627 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900653032 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.656753144 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.654482531 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658175615 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653676406 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656493677 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.656863335 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642991149 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35556421 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621287889 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.65090049 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649596732 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.664200298 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723056925 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655837787 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899530649 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.668334558 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661412932 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.652463982 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.648269673 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869439861 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953441586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.661321836 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825834279 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.193812243 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355286341 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667479329 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.648333152 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.648656211 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.653493657 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652216665 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653467042 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650425961 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90100772 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961886146 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.67483971 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364111676 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655957627 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668768773 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.659349969 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956359658 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.661875987 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654032649 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.650799884 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652372468 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671106978 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957495854 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873670766 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.669059188 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651999987 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.168186521 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658987506 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655165284 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654156524 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676443561 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66927612 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254513522 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991879324 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657015341 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954614622 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.669996411 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.674335805 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.653343602 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664370914 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671627327 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.6780157 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661738503 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.905305462 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.677259705 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658199936 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292129979 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522531479 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300167715 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672773853 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.665152135 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656676802 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19711229 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652228717 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653756713 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936629388 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209989408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651298578 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198249862 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.650224188 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.55145606 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960079983 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885278116 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671122656 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.666946904 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964056903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870566793 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683973645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.672016899 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655551893 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.627983496 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272724609 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653263192 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837451951 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199017175 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66047505 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660320172 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.67937542 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.677375234 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145187102 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658523341 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659587234 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653777711 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.665889859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275432524 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662332252 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659721475 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378954987 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654701521 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.20334267 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652181732 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911527678 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966799548 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.947848414 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.660970105 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.673477256 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.901619096 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96361726 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660704733 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658415026 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314760562 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.518703866 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.668123342 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660024332 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.656142844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668146818 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996088771 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.668033237 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.668197619 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663103757 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65964294 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661520362 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.658995159 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668482042 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629389377 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260998964 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.661657681 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68889542 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670689215 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66370799 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914921889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.674871368 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376656064 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894977635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665894496 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691275891 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.665517086 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67512301 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.636297568 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662718776 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66046301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743326777 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878689977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.672284546 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.637653202 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.725420045 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869537547 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661663573 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.671932294 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925401597 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.664067679 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.663764304 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535960263 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694106772 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674165623 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667502341 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654976535 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695572491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737552928 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916032863 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.969644879 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975166683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157293847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683008054 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667095946 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.678830628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745950184 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663361411 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.672663484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.657364627 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379478034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567002674 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390602235 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977795961 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668496487 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673291568 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666255403 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902489667 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663576608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939472653 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663815616 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.662381411 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683355778 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677384891 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681767047 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878964641 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937896984 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662603989 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669476836 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666934819 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.664977858 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978815935 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.881776302 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.273875613 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323273046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662185365 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.679988469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246265868 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942963475 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666872099 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667957121 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66675687 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.674721373 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6634807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.672494281 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680742007 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893495898 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973483129 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187711435 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975930029 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.689761661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.54430741 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667730955 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918767346 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496313339 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921733037 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394011355 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486206709 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919576464 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74583241 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92108888 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.670794026 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904086727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.685976799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667505444 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665273032 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667419004 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.669051278 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978730563 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386170217 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921766504 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.676193764 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.687866451 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700252033 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.924987515 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89469696 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603524371 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89353653 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983842657 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.677774206 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672395797 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37882535 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979318595 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671917277 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.671411961 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932678025 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.673348067 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704568671 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.550534867 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.671754449 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319488112 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.882903089 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693156912 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687193259 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49019716 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370475552 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.670355853 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279253749 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67578037 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690012227 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.949980999 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.677332709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.676063688 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963730308 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.676922597 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.685878997 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930223917 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.380232216 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.579175077 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.687571865 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685983653 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.676717374 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672096782 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716698162 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671690616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669933346 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.158526508 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673046496 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675480918 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684913814 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.672564331 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692503372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.674311033 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676602418 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.679598309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.674158054 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.664039307 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.693426063 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799836148 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28000651 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672452906 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.291140207 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.01441952 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922964273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.689063543 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.648078099 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.680489992 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672274118 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67728571 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672064922 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672091948 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321724125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.685642882 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.985541749 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683907195 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.886551016 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886392702 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.69260588 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935045401 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679817705 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696685495 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.650329043 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67643379 seconds)
  done (took 1122.686243413 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.727330921 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.720807463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.684531522 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.695220623 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.735683905 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.717213115 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.715358214 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.709839251 seconds)
  done (took 23.235609746 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.67403484 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.674972804 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.674704818 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.674230869 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.675880092 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.234226601 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.690686429 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.67697029 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.699955077 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.676347669 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.685272923 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.404949837 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.683401839 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.680741791 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.691382024 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.680795154 seconds)
  done (took 37.712172167 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.896444136 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.842681586 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.160825596 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.736547981 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.69067222 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.681966087 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.029275411 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.704542191 seconds)
  done (took 30.27377451 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.693094211 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.689816335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.691898254 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.68950224 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.690846526 seconds)
  done (took 9.987391598 seconds)
done (took 1409.354775607 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.686824721 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.684817965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.688150447 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.68427343 seconds)
  done (took 8.271918233 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.657897057 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.655714306 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.653285567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.668247516 seconds)
  done (took 11.166172895 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117012122 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.338795012 seconds)
  done (took 5.986071799 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.680444049 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.446454493 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.420937346 seconds)
  done (took 9.079273897 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.001051502 seconds)
  done (took 3.530879262 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.087668821 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.189974686 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.697931013 seconds)
  done (took 8.507080419 seconds)
done (took 48.077686471 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.677795087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.441654353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.833653882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.674073058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.836911373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.833718278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.951242753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.691255654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.67449529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.671952648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.67101639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.833238749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.941141243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.446273097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.940126199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.448240357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.839805818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.69210413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.684518183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.67512639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.95015115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.689466053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.672379763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.671586826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.835769076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.821750212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.674448201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.444311232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.678180632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.682688235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.820647274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.693299196 seconds)
  done (took 92.623759547 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.675466625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.67763342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.675760917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.692125774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.675613225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.675136417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.695500572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.674938274 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.676438455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.687405195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.693337791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.675276613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.677413631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.676778113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.70079103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.691806252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.6883076 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.674440352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.70521167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.678568284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.679553852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.676982316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.706366663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.675838053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.682759663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.675581765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.675273328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.678447643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677752924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.697527349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.677658357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.677696713 seconds)
  done (took 87.385055318 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.693103065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.676500502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.678567319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.678010019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.678062658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.677804259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.678072561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.678095173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.69559421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.694595879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.676006435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.692670442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.682004086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.675883385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.67724051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.677255636 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.691353743 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.678166715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.676890616 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.677861468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.683955574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.680670423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.67870798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.692087807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.684703792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.678758419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.698974816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.69719872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.685742521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.67868256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.68078913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679058246 seconds)
  done (took 87.394062455 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.916544456 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.694998424 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.698626144 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.688736814 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.698220942 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.696154794 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.68723514 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.926988647 seconds)
  done (took 17.548587147 seconds)
done (took 286.490865232 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.689290481 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.685247755 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.716894345 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.690718889 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.707122936 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.719766429 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.928317228 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.717171677 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.913971317 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.689800126 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.706139342 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.693366174 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.64664624 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.841863407 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.69088177 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.696795078 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.685751103 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.681758636 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.688976439 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.961177748 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.718367555 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69104835 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.692151805 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.697610183 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.675765722 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.767366424 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.771322481 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.859783261 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.825033762 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.769580938 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.688504016 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.707914292 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.686772959 seconds)
  done (took 76.840476106 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.693790857 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.699616625 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.697949141 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.699107303 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.699839047 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.697957989 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.693005981 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.701287382 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.700564066 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.701994643 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.696581853 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.699620446 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.698186556 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.701445006 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.699672544 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.679843727 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.695935712 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.701420724 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.694230938 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.681536185 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.699144005 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.699490306 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.700263362 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.700492234 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.695370356 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.70096526 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.701441534 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.700386954 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.697553698 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.697531485 seconds)
  done (took 52.469582004 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.700527214 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.69647935 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.70307315 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698952799 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.697497432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.702586936 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.056858542 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.703269903 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.701032873 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.703264053 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.707046655 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.701228415 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.755540451 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.694074 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.700730374 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.701523247 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.699859831 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.700331278 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.712414062 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.708414006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.064729195 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.703124232 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.056522296 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.713544176 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.702510971 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.703467268 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.705439395 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.694041749 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.697870376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.703392628 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.646650723 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.047994585 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.693605493 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.702191843 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.642370236 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.706583121 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.70383638 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.690410008 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.718592062 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.70091743 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.055440905 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.697586917 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.691272412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.68873743 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.700889669 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.702758809 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.706986496 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.707803785 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.990429723 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.703645505 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.69342847 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.702009702 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.710304808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.701617213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.998349464 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.702760503 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.702817583 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.694632006 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.706434285 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.045554551 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.704661092 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.704103741 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.711024102 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.699617426 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.700280093 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.704741666 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.719373647 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.704291136 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.694175822 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.701643896 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.696481176 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.697962079 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.707199487 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.707275434 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.70115521 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.709535523 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.702296912 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.714992762 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.693097258 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.042793506 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.707492859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.709075553 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.049641854 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.704217335 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.708778275 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.711244663 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.706986005 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.775952729 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.042753222 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.659610135 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.712793278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.69519455 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.045818196 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.710536427 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.704923501 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.699438807 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.70739622 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.709097437 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.694653492 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.697531085 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.70580227 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.719341153 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.699816609 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.708665928 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.048017416 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.707315275 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.698400156 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.703299481 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.783350948 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.708280407 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.719866703 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.710121774 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.059897449 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.706208379 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.710757605 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.699470055 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.698889955 seconds)
  done (took 243.651929231 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.71945849 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.700449447 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.700661232 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.716806151 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.699029058 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.712513544 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.698704006 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.702019552 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.703646248 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.705679119 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.70430333 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.712596402 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.706735585 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.698656841 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.704627463 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.70040283 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.702919359 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.705832323 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.700771805 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.703634239 seconds)
  done (took 51.653491493 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.711802334 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.369824926 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.338883254 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.711332445 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.71516516 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.707749748 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.77751212 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.717119488 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.714717453 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.086104469 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.924030511 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.718235922 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.7127541 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.713741106 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.363586144 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.717456903 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.085730306 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.412036318 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.716490487 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.388246645 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.712717665 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.714197555 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.706722187 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.41031776 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.090467736 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.063107158 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.782145461 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.407558936 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.719184317 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.709771495 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.407171082 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.716870618 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.711393689 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.39961175 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.717494161 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.731182261 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.714336182 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.782389869 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.783233569 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.08995118 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.419801039 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.069645173 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.729319554 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.899949474 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.720009457 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.694753308 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.417599406 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.716535579 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.693872261 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.717346558 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.721848712 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.370426347 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.713154355 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.37369836 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.714954696 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.718605007 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.414580415 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.379591999 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.371762317 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.922758096 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.713868884 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.069249642 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.717319736 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.423541237 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.718444485 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.717474941 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.719093521 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.923082229 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.41656619 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.070096454 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.09329128 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.090864262 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.716019652 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.791532636 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.720636213 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.092045113 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.790196769 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.1592009 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.091345073 seconds)
  done (took 155.338600116 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.019438622 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.816934558 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.171627557 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.362737642 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.274661909 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.862859293 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.836793542 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.98092604 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.715304706 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.816012298 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.479424522 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.816368641 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.521933691 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.791058659 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.82744642 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.850656781 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.193756978 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.706755017 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.453525957 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.453331935 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.71191348 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.825478766 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.518398318 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.125759178 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.72349013 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.503336325 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.706642865 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.295713232 seconds)
  done (took 63.919016468 seconds)
done (took 645.414898187 seconds)
SAVING RESULT...
DONE!
