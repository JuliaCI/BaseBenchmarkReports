cset: moving following pidspec: 8989
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348659394 seconds)
loading group "string"... done (took 0.595029102 seconds)
loading group "linalg"... done (took 7.37863317 seconds)
loading group "parallel"... done (took 0.170111106 seconds)
loading group "find"... done (took 1.184563337 seconds)
loading group "tuple"... done (took 2.073289004 seconds)
loading group "dates"... done (took 1.302082146 seconds)
loading group "micro"... done (took 0.242650251 seconds)
loading group "io"... done (took 0.98724422 seconds)
loading group "scalar"... done (took 40.967075915 seconds)
loading group "sparse"... done (took 13.352458607 seconds)
loading group "broadcast"... done (took 1.043043735 seconds)
loading group "union"... done (took 14.470129305 seconds)
loading group "simd"... done (took 4.700360023 seconds)
loading group "random"... done (took 9.533593506 seconds)
loading group "problem"... done (took 1.98203204 seconds)
loading group "array"... done (took 22.328906396 seconds)
loading group "misc"... done (took 2.062944504 seconds)
loading group "sort"... done (took 3.416952588 seconds)
loading group "collection"... done (took 19.163020465 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561621861 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14560183 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119533195 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14170514 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187101876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132766315 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143284288 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086091407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.911278656 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170443506 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141433112 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518858647 seconds)
done (took 5.005980518 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.196928572 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091856601 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099469485 seconds)
  done (took 0.880069012 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067866916 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13217207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083240317 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069341325 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068774002 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083722402 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068153667 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066396958 seconds)
  done (took 1.268673916 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076485971 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070913543 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087820958 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070945682 seconds)
  done (took 1.004597987 seconds)
done (took 4.119122477 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.943571256 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256925148 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193019713 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465220604 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.15425605 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189898597 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677731699 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.363467536 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215803164 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103291057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107157402 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39015843 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108100345 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673282518 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079154598 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108306283 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169017918 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417136775 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082241314 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083924993 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104322547 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145015467 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105274088 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078548772 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170424017 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072818053 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153313282 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096397369 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068684773 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249527088 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19064337 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.710220397 seconds)
  done (took 10.669675733 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101414473 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120518626 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069929406 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141573112 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120632357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072196483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073200636 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083786992 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093248283 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161903273 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11678812 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124224019 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067254904 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07078755 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102955228 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23039185 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09515633 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104654692 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073642299 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076156803 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12519586 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098934273 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081798323 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095610171 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152064021 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193013803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09840024 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11184448 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0700131 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098310459 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130192451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12954883 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068053525 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084601193 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158937021 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096748219 seconds)
  done (took 4.604192804 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101973376 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.180038454 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096030101 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159577289 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12769517 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085016826 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130533078 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066416643 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101931817 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252224892 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.088923191 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495249449 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130594338 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089004358 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067819013 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086897367 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067608109 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.629649183 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145352071 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105402506 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103014543 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075422549 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086777274 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.720643637 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069663104 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067684332 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085676386 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06031027 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065375687 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148373912 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086406716 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.261856714 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1130817 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067974009 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122617357 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197645404 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066670864 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094757913 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126145111 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082591425 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065639412 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066071243 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17221091 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092301048 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067299065 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106877014 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120186664 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10681153 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084530115 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069029602 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184552248 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06795136 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100354358 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.974739809 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16698953 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081381929 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070605584 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295818875 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102154395 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068201855 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064759141 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303950111 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162168305 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071572296 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084200035 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067205011 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084625565 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.724226338 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068824072 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.000984798 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070401672 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077012907 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086236136 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068085769 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090213674 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074223733 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103217691 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068142064 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068887431 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08464794 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066056936 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085706732 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087870659 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209649443 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084896498 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06877725 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081705449 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087641257 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112534361 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071813797 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06623643 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11755807 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070487393 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084355913 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10330222 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0859015 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102173351 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071153685 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129887369 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068401013 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174528901 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068698968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116897232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074051308 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115419312 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096956331 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073469434 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156659397 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064634927 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082286845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068322149 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082484267 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070108415 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069070259 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099661215 seconds)
  done (took 22.448064074 seconds)
done (took 39.521183959 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319529732 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096976371 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093602212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076324858 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094119977 seconds)
  done (took 1.460055736 seconds)
done (took 2.200773667 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151627506 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103729545 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080983917 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098598466 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080720456 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103018797 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116543715 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082154151 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117572513 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064613824 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11337418 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064551859 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080120536 seconds)
  done (took 2.036169318 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084844736 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086529168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086307243 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08220735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078837288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082548934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0798716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10553064 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080678405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088196124 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065018002 seconds)
  done (took 1.65371535 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083547285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085751108 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087832477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082362444 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080850441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083546279 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082074639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103851894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080584181 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089184088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065583395 seconds)
  done (took 1.665848934 seconds)
done (took 6.087974837 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081710943 seconds)
  done (took 0.817720524 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.749438943 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.875157847 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085048164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13679267 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.230128049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.163790721 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470284263 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.117243536 seconds)
  done (took 10.778249403 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.117271482 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092043031 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071390617 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088850882 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072820378 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089577129 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070950227 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073149584 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087893183 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073536793 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084522027 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070219008 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085387629 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07133815 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084862738 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070955341 seconds)
  done (took 2.114245098 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.107185974 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104191028 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091892462 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077207027 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090913784 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074337856 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093708516 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076560926 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087699843 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073845783 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092137417 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076148893 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089379991 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067539957 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091738851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078870849 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08776116 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077206694 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092213821 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077512697 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092108912 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066743716 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088845628 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076025039 seconds)
  done (took 2.88447792 seconds)
done (took 17.332145612 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135477749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077417427 seconds)
  done (took 0.956318249 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085252589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100394343 seconds)
  done (took 0.933667279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086315509 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081869301 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090960195 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094283113 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082686661 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067403819 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104380145 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06833657 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08201637 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0683265 seconds)
  done (took 1.574375796 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072601644 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09559155 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072955257 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098639187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075580588 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080847573 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07549914 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085193606 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080498293 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080004839 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072138455 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100181218 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072992108 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10052603 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090325654 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070403476 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088166141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069541757 seconds)
  done (took 2.23273566 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070151402 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070499488 seconds)
  done (took 0.892762817 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070262715 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066514271 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084086313 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068301323 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080168472 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064174998 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080158366 seconds)
  done (took 1.266972617 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.415995757 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110456487 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272177318 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074189345 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10865827 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301993236 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068574903 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072920689 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090008631 seconds)
  done (took 2.311269869 seconds)
done (took 10.911810603 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082528289 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088091567 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115108252 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437218112 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107468072 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067125201 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143989938 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.216682678 seconds)
done (took 2.0059767 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.132609991 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630438357 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415590134 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216485663 seconds)
  done (took 2.019017778 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.391438449 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094701375 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076623986 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07017854 seconds)
  done (took 1.390780087 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069414622 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072607971 seconds)
  done (took 0.899988106 seconds)
done (took 5.195032892 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070170616 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.116599293 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068798572 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066844288 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087305384 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066818695 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065680635 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085597581 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068105887 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.084411814 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067582816 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067035798 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089283127 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065412183 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065685649 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083478702 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067585477 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08063359 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065775461 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065345454 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080352191 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068009898 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06497062 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080689332 seconds)
  done (took 2.589838256 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089666523 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084375289 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073859905 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089279881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073222545 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08966635 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076165118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068274273 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089344593 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069717785 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087345844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071908528 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085067452 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07229668 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085841283 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072618618 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088848323 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068485328 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070395811 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087805739 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073893208 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083318698 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072377331 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089048051 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072551858 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087334485 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070762991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084467229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073177597 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088153249 seconds)
  done (took 3.145880769 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074608255 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066547907 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082581687 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072799492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064907573 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082656814 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065385639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081713295 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066063864 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064546007 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082539571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065472973 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065695326 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083469413 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065886171 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084012974 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081755638 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065918857 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080666128 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066642683 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084459504 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065111583 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065198361 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081039109 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064776931 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064743061 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081167449 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065847582 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081435476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06508179 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068478214 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084685291 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064764455 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071922896 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085021342 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064802846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068688039 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080689569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065825953 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080448449 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066117725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064934397 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08089234 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071588448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065611133 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083402716 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065936723 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082938762 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066150994 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068531341 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081374682 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065323768 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082980596 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066959846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069675246 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080956804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06559431 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064507771 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082809527 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065161339 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080294177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06508144 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067791263 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081738422 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080260581 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08754665 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065339298 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067335482 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082015318 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06848515 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067192833 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094648235 seconds)
  done (took 6.027528219 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121053808 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094201748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083753725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06694274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080642292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066711933 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069740245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082118276 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067180727 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08764832 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0656544 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082374723 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067467187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081403704 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081576209 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06788709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087305479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063806757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065379642 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08491214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066511333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084691592 seconds)
  done (took 2.485692209 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190631838 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088850136 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113237955 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09216364 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085599588 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075829916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087850127 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072297448 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072079055 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086834396 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069467147 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087634325 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069349785 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085334191 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070026341 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086298769 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071259896 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086034065 seconds)
  done (took 2.354847662 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080990941 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067845407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106916504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067294916 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084489949 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070396203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089400032 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075803963 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085897155 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067835002 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09256126 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070596447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.196628442 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068097898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070705221 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084579184 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070319404 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083973448 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076387191 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08904612 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074151248 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093391897 seconds)
  done (took 2.634457364 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083839766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069550054 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102446729 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08650213 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064827332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066670499 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090071144 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068069423 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09062881 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070175643 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084640172 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067767043 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073263328 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084693895 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073498553 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084363009 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070305903 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083728205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070298595 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064155485 seconds)
  done (took 2.317706918 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091772633 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08704567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070012616 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093693389 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069242348 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085233692 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078354988 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085145242 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069040797 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110599332 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069403737 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085053406 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077490089 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090934269 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069634365 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0936753 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077845295 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094019257 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085864897 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069615606 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11044389 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06947579 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09318189 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069032983 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085278053 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069733171 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085709961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074065369 seconds)
  done (took 3.082825506 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069809641 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068756073 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081567029 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06531039 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065470884 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082442384 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065615542 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065540575 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08463382 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065630002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083171513 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067944746 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067789681 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084209982 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068532009 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06798847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084404336 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065205778 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065505577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081772477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067896943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083819704 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068315552 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06596485 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081995107 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068133753 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065336163 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081552271 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068000524 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064952378 seconds)
  done (took 2.941334212 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080441978 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093184404 seconds)
  done (took 0.949976489 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067691814 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084084307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082415568 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071905096 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089790315 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06932056 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092824503 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072674473 seconds)
  done (took 1.404789295 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085939705 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079919806 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086382378 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096719207 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079746408 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085077642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159076137 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087594961 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075762914 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08333476 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08311006 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067123553 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092010659 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068650782 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091866976 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07438395 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083119604 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073799868 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070697481 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082996693 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069839208 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096456548 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070963072 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081865214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069388292 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077222327 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097563838 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070023329 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088352174 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076049248 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09091334 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063228674 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068719579 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086072977 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066683135 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095145919 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084368407 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088545452 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078377005 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086412906 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079649941 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08018484 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073278438 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074862902 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09567773 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069874146 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086027514 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063891089 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082853014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071795351 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063746632 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085463383 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063900285 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092950093 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071885764 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079156667 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084200487 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070255799 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088121546 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072840407 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091995217 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070765661 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071463414 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084791143 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077003536 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089102434 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079017437 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079696695 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063395427 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066521918 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09516991 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091821801 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091483824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069619723 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086566499 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067428106 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07229429 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086222959 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074563456 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091650146 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069102995 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091301173 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076864104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085401295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071060801 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077185862 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083550407 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070351197 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083037952 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085387015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084242795 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067397357 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066205748 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096285336 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071580344 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0859823 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066136944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092210636 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063542032 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069574944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086682544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069662534 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096027783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073817743 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090684706 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078178272 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092891276 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06925501 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071987689 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082332198 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070076697 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08450555 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07679544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062736343 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088085039 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069550145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086043472 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077811606 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082917047 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06924571 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07606669 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091015652 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067008359 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082311433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072213192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068362527 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088548792 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076425552 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083776355 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06386078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080218097 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072206036 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068404778 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088752439 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073163628 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088219066 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062938014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082647102 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073001571 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09498703 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069146359 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069065944 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09157581 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069740482 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084627454 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075344477 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070603764 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084189114 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074594353 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085908486 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064349621 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088070938 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071565504 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066951619 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089086398 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072202144 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087794147 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069687883 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066861109 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091317092 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06962357 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085075713 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068763555 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084137311 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079742643 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071171094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08044362 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06607123 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092468938 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066105705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068293404 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085544833 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070822998 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086039585 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066712869 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067269815 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086961161 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079390791 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090036156 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069270347 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091422114 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079731199 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08490731 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071020751 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084320827 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069270619 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069263643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095155241 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07425453 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089845493 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071466121 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081865735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073531486 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075427783 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084653033 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06623781 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08406186 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072748052 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091406051 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072641061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068688932 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083620313 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068979606 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088473482 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071808617 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067686931 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084890315 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073103479 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084044451 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07625405 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086686369 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079216533 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088233417 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063615539 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071733739 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084158164 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074760882 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080521426 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066274307 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067964408 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086938178 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068354412 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088720066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063229895 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076484703 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093407694 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068990819 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084595727 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069248563 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092508075 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069869411 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072708359 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089032228 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07553774 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096351853 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068155981 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088703784 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079088639 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069257903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079771584 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074703776 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084820378 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068489239 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067441746 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083076186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071859173 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093905977 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076323485 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080028354 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071613321 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067278137 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084880851 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065065487 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090219123 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071543215 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068900781 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091998898 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069194985 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085976756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072557872 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085074139 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06954032 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06963283 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088666037 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069683053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087895101 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068426187 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088466048 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068000893 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067394429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08752769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069513487 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068322057 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090811853 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068014797 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085199541 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071712206 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086423604 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069648412 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068577674 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085301861 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071619598 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086010675 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069442651 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071391862 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082519101 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076682898 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086692694 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077323204 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068805715 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08400972 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073822592 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08832069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074099458 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086277842 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069541295 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069543435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08565486 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071716256 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092229543 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066569297 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09730739 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076844037 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086542313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072193392 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068654693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087715201 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068930885 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086485067 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070039244 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06929617 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085825125 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073253961 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088431975 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068925756 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070154091 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086971484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069406469 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086639286 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063591257 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067770291 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08519036 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069384766 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096901587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069874897 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085043812 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068190634 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069885559 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084908403 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065957766 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093787627 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077757562 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086912235 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076023496 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067794739 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088020383 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079349825 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083259278 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067477785 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082966492 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067214721 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075414509 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087115977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078443218 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085298948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068901474 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065635757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08656757 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067441676 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079788927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066555863 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072989076 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084816512 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068382286 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086239228 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071463107 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069989051 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096266611 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067576439 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086371266 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069501376 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083242516 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06855416 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067312441 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088733936 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07039689 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066667328 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083558529 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069380231 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086708496 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070151013 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068147996 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087340432 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076237577 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085744773 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071426818 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089709596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064316038 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07129065 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086301001 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068318835 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08475536 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072664197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071930534 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086917635 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077066313 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086262694 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069767959 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085598159 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067270775 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067525049 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08589266 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068985669 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085026503 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069711497 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076650402 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08390664 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072663154 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086017265 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06968115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093029112 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07004633 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07180441 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092911869 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069344059 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087891775 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077169832 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090170054 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071902437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086250677 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070658402 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074934254 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085994972 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074963725 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086612441 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069993147 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070083373 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08398665 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068694661 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085876531 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067966502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073888927 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087166523 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067772544 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084464322 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066836753 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068676129 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090150136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076401665 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088125788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07258691 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081179121 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065661274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069934381 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083917177 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071156868 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089126087 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074613162 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070662662 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086795287 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067888795 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095003774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074768836 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089669677 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067069022 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072141669 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087131389 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070760765 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086544483 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069185271 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069309635 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091024384 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070984186 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08560508 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076467363 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089027666 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069536358 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070011211 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087025945 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069454514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079880098 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06978122 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070852032 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091762898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071718467 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085849551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079532312 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06643626 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086563467 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072309637 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085657025 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073816401 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081723945 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070782632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069361978 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08731279 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064013235 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085615972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06679721 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071142374 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085415418 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064298198 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097314073 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078724177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089257907 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068770966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067217749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081691505 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064255702 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084449581 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069444449 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069790633 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096853801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067754788 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08544152 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064835121 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068275877 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089389192 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072058093 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08319305 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064440732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06695295 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090114466 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075528551 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085129093 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069385807 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072227662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089034385 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067626884 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089891858 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065727327 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08943955 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082716254 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068979923 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087386115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074949041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094144625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069702767 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081774171 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069916155 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071766252 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087388173 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070590905 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087209156 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085049699 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089740211 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068097306 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084667183 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071192114 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068216309 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095057987 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069726694 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087751726 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074305286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070038886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095501332 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071816363 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094567279 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072041204 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089597088 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067694299 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086437573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067027733 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0679643 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087577387 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069666572 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090732211 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077210312 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085680183 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079479426 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095773923 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071011407 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065460116 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085446636 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068864791 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063764336 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08771343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067080581 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085444342 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067447199 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067683302 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0873318 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074443192 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087379008 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06999333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085276302 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06325869 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071080078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088644703 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070704796 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065298651 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086917763 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069839935 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090453234 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07259388 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084096202 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070531078 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070328561 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087200412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064510261 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093028416 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068095236 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071172664 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086136724 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069429785 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087967905 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072857059 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074320501 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088521449 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071257296 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096436749 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071484802 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084088628 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066922846 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074157293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084673366 seconds)
  done (took 47.310559063 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112420211 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086129652 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064834543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083656238 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077698755 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084311914 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064877802 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065019616 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083040378 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067893779 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081767019 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064227608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091386585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089293454 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09465845 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086351554 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06463111 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064368074 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081618201 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065451596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091519882 seconds)
  done (took 2.478331075 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090505926 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10493714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079557377 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101803457 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091767001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080900502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097415336 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080389808 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100585845 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093506481 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082682478 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097532034 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076204348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09413983 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075047958 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095595904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10077336 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074407269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098740068 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079373609 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094664053 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078813951 seconds)
  done (took 2.782251988 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070137683 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067377849 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087379779 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063936093 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067639436 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082079724 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071786624 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084229842 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072092131 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066629907 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085522216 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067325396 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087781958 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075039654 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06864667 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084460859 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133544085 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07195805 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086698725 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069381811 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063259203 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089139934 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065004422 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082182354 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067800874 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072580274 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087897732 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066955857 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086487012 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067574769 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068473983 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083920118 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069664203 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068079919 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08530429 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06724667 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085997978 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068810301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063683463 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084651681 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06915476 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082257283 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069146252 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069016343 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084949662 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066212892 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068926729 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086746967 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064394132 seconds)
  done (took 4.537489346 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088695248 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142444604 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089743792 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124943727 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083543557 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095437494 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072230329 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123075911 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084666246 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067663402 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103912309 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083434656 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088094351 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072989972 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090102791 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068527376 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087155724 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067740498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090270864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068383495 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090817698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075158162 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10160894 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082568044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090403698 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067678338 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0865516 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072707453 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099496201 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090888808 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074107718 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091623648 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084100557 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092111066 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069129778 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089047647 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08592567 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086655284 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070949437 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0841874 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071229041 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089911692 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075756998 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103251795 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068780541 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091729674 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06906182 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083440958 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08201036 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088937995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077238113 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10253907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072202363 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087188854 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072791232 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101395203 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08637253 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06709012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072310966 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099797562 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065489656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091268515 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100801763 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071191807 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093964834 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083195064 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091789876 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0721617 seconds)
  done (took 6.756472105 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079655118 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092763434 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083295302 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102412533 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093585416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075602253 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093227894 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074937878 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093666151 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079554169 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093076817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116999314 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070372971 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096199045 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075020632 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094321427 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074001561 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093728223 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092471182 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076104105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092854394 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082815729 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093377332 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10124282 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105246517 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088533916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074663377 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093019015 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101131016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075379897 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105428879 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074895469 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093877184 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101830173 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087487847 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09274428 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068160459 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092858729 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075534586 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093912732 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070444675 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101322857 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093662757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070584048 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093222356 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075812303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102312164 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.10533082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078623232 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098018051 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075841107 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102639488 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093601619 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076187533 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10128071 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127776635 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084138509 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102722021 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093642503 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083929827 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10194072 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109906863 seconds)
  done (took 6.415654843 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092192736 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097011245 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09930016 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06461443 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067433312 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091952304 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067605953 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085280114 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077966531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096671811 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080080316 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091818623 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075124571 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099254093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09056825 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077254446 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091917745 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073181877 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096289232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072819718 seconds)
  done (took 2.511731001 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079153501 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104950526 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070123244 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093815988 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072712017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074119293 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090601342 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071097401 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088435581 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071597024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097356035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079569585 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088244322 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075445275 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097509136 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075629129 seconds)
  done (took 2.158661826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082536795 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098329409 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084775145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088308719 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067394579 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084453559 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068719398 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064491156 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084750138 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083786049 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088312994 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071655668 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088084711 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067766985 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065123663 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091374553 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065916899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086068898 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06896166 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10268622 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080574594 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086419765 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070694057 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089742863 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069263588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093316359 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069640253 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066546039 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086463052 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069477602 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088307311 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077510735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084347558 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068229036 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085659951 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066580604 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068767823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088151028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072969061 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087782703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068120825 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087172501 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069395326 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070051961 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08471673 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069648237 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084083197 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076664212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066160811 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088124187 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06866271 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090737717 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070743488 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098658459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072721952 seconds)
  done (took 5.167860149 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085293782 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071619026 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084120009 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066934221 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090476304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071775549 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07213684 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090811329 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07085404 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08534614 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071370825 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089805809 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071399261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071747806 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090105917 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072698785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083837619 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071897244 seconds)
  done (took 2.245461731 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077272424 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069279211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095034279 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069392966 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087929712 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072210568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065041584 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08683516 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068316362 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087290808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069501766 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070883922 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086371127 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072129888 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087668279 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070100041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071239405 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086837743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069704775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083150738 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071827726 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066788866 seconds)
  done (took 2.518805734 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076226318 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.097360151 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168078094 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110317974 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08528033 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101959704 seconds)
  done (took 1.475566014 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095020215 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102342714 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070332341 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11051867 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077693274 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089627176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070722189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089550352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080574877 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1033003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070034944 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099365929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097847104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082832114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095769699 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077248121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090162353 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071013261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089101228 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108212378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072569663 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098064819 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071194954 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089604945 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071653206 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098547526 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09924367 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084804571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089008371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079734375 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096414205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070173758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099914113 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103201142 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072279355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098837335 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071359324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108899934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094958537 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079948073 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091281466 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077548502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098691919 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075894721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099131817 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090057119 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077192728 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08919921 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071774264 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116238403 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095561318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079885502 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09567448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079787725 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099435686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115939591 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103462035 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080126838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095893647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105024323 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079190256 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095772812 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080000523 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103899019 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096080609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079863049 seconds)
  done (took 6.727737925 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084887076 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107632596 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071816011 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104813072 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099371524 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071974186 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090216297 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072158037 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090314654 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071391826 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132864305 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072095656 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098907234 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098002087 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072124719 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08966176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071142395 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099004128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070912976 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115257297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089567388 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079492212 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098311526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09894395 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084766272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096211479 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070643659 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090318111 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069757528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09065846 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095053836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071248259 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09866906 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070906025 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098831543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071550752 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089521169 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076347609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089944964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076653162 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099051535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108048364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070698942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090911786 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104043499 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071983578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090009158 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071237743 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090242035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071422407 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104590328 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086228697 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103996342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098443873 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071815583 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09119668 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071586451 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089722466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071240066 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096382966 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098472291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071609592 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116052919 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070993653 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09088576 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098020184 seconds)
  done (took 6.633093363 seconds)
done (took 130.410002483 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215194118 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198504775 seconds)
  done (took 1.247433169 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071660633 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118178745 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080676766 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131066038 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089190931 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103317012 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121174175 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081837338 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068737624 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089258898 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069130315 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089762553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134148085 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069745062 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088652338 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070998975 seconds)
  done (took 2.320817341 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105565415 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201063432 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111987249 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067405059 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102687074 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08076536 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087548654 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080223895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093966168 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068811105 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09925242 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078977649 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066856055 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098341275 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093799487 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080801011 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067949095 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100799042 seconds)
  done (took 2.530043866 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111641591 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156444022 seconds)
  done (took 1.111496724 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208615564 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124633794 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208070384 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.434922639 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.214143656 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294516033 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178337403 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177809147 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161493594 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171702459 seconds)
  done (took 3.019527084 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104135196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174825725 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321173967 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14160713 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090463697 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119113931 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141033645 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11168421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085100831 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104503137 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102678479 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080025635 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120677657 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077902228 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097806686 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080465915 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124596642 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075790603 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099001039 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078164971 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121156502 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068524773 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097231217 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076782655 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10131956 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080619594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088252584 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068831944 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097658599 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078537237 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100692701 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116756574 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081560659 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134684745 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104410029 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136093335 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079910058 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09562831 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077312571 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094469998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079898608 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100238136 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106224089 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081178206 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068151386 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100156865 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068794604 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088083918 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083770652 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099517913 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082572743 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10133583 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135010466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099495723 seconds)
  done (took 6.372453689 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.772013598 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137044102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074108055 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.835963196 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118180663 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086835066 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.757713284 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097406916 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23587259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768038747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115902548 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080234979 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209401311 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219807096 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933455599 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294263293 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.654435658 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108792721 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113255111 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137019499 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166497232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161788414 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153618401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.40839307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098542526 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07460069 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141165124 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101778004 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145200355 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107200927 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077363128 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160142063 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232198499 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184173715 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078041696 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094565808 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073351371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152332075 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249708435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195125269 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162544421 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071729206 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072638232 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165757355 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135040008 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071044512 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146205788 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157662922 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174565793 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077734286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100232128 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147930277 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144560947 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.149079449 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104826532 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279129987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291698517 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093880224 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125468512 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088479929 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243960556 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085409388 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207357187 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143063812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194822894 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073678348 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758131007 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154414849 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072428699 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099321024 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124421875 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077630035 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142146686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149715688 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373921185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147368052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09837847 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072224965 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207949971 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087463415 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093786286 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147213056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077938665 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127799865 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.149332258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.172562339 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153494151 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218256113 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147207514 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164809528 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077785664 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12918902 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098405156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19671133 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.178768265 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166427287 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192543841 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146422674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148690579 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151520499 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102241688 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155423438 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124671272 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104772 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144963081 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.177658107 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127956994 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10763851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075850077 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165367202 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130464052 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090506236 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144145082 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17537612 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437449922 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153283253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069602738 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111387569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143745545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14479973 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10116194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217371928 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127741593 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17425372 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126339 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071375043 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125360735 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147099888 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103291354 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127635343 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145719564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080535219 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219407188 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199009223 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103302623 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20223042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167406959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078648688 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176861524 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125645793 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151573159 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08149196 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142485484 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099881073 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775543524 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148410514 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127025491 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0768425 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171312998 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071895736 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10777508 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106849824 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071562501 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754662179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089454952 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105234795 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085319434 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100107801 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126787666 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142497609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076457826 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167495483 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188037143 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102000816 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124245293 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08521661 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165691972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079183072 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107321972 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086315962 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108939416 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127935737 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076045341 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108580698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152515802 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146379253 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.20208882 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548816481 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094785347 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085491993 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209088569 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094027303 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.248175841 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140365646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206861246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146307768 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105215678 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288528234 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150054591 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170021354 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089808906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156949799 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092415146 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141987771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147488507 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094398821 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079349347 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146086513 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172441695 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150490191 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944042084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074143575 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209007706 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069723866 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176612263 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078917158 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101747569 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254123849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094431599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153239164 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147543215 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097765787 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086709563 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.693974934 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086932749 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164977819 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080261015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203273061 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.148339392 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142627201 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142378511 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101849201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146587798 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191064224 seconds)
  done (took 41.57740377 seconds)
done (took 59.014167039 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289019018 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197979539 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258989937 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151633923 seconds)
  done (took 1.851194451 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149644412 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109374484 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126943634 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088624948 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108658107 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088953333 seconds)
  done (took 1.544502285 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.436734304 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282144237 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243941829 seconds)
  done (took 1.836339067 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.309580052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237501441 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465189071 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309237024 seconds)
  done (took 2.301053841 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200726638 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118776242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091979538 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088011357 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164933162 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269183792 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132716387 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197553167 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081570423 seconds)
  done (took 2.268535216 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.205835443 seconds)
done (took 10.874230351 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.21127768 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.140073812 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.127798971 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.138478172 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.3313483 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074361124 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100581066 seconds)
    (8/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.241624846 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107529743 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096938891 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10074377 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0826239 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.308552857 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101584777 seconds)
    (15/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.177330606 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.271275792 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.161611742 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.323464553 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07769907 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076846006 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.269004488 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.162946219 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.185716509 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074631927 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.132600484 seconds)
    (26/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075403735 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.330512942 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09668792 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.189280446 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101049952 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074740879 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.241859078 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104543474 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.255166195 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.28017768 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081018531 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207019425 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.256436897 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054751196 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.256571182 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056823849 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096577339 seconds)
    (43/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.231500665 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.115442481 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.164390957 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145467805 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.240769143 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09715034 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076593224 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093233258 seconds)
    (51/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103208698 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099112558 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054491071 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07803774 seconds)
    (55/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096924793 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090443903 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097378298 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065222189 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138528308 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101892777 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072523066 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198886381 seconds)
    (63/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096724116 seconds)
    (64/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.184560337 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09988741 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097130454 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100379995 seconds)
    (68/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076992551 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.070341799 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077468217 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078720454 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.149799127 seconds)
    (73/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100372819 seconds)
    (74/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.265189072 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097471609 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.221562832 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.173220411 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107544038 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.183003042 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167480099 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138615927 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121106595 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101791855 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079735923 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.164132227 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093304978 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090102075 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077195961 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065036126 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100761857 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054615424 seconds)
    (92/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064906497 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09646162 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055536061 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069128608 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097537554 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069274611 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102992297 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095161445 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.244477664 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093229092 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172437049 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096550238 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.223946185 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136483924 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071209533 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076628353 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067823914 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.199128486 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 0.162381351 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077720075 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.257446565 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11999517 seconds)
    (114/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102567631 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094279015 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119710828 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077892245 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09689368 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05753955 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176901646 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068276215 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095800382 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09708373 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117885407 seconds)
    (125/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.24615415 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14661744 seconds)
    (127/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054083339 seconds)
    (128/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097848737 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076459125 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105703481 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127998778 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.124448381 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068128218 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098594484 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089099198 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074702962 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055665249 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.258399314 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055670656 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124496961 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073366726 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077430445 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091455374 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0944728 seconds)
    (145/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077168428 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.371375124 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077021246 seconds)
    (148/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055034691 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055569315 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053009359 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092890779 seconds)
    (152/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080102437 seconds)
    (153/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103407259 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.078917612 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073313131 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075651855 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068462421 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134035006 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068249524 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053799083 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089869911 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 0.168008996 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072216336 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.265849291 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053922904 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074630317 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091011456 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069178893 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053907203 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115873583 seconds)
    (171/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054635002 seconds)
    (172/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098856393 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056722918 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073865757 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100524563 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069653139 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110974169 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078327494 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.253486385 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07531639 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.263294751 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101142808 seconds)
    (183/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121797079 seconds)
    (184/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067139395 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089940585 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057031333 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089728046 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055241816 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194593358 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092464634 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092422893 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103344512 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053436925 seconds)
    (194/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.124236282 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149745122 seconds)
    (196/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0994736 seconds)
    (197/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076505687 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090053544 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054349867 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085686855 seconds)
    (201/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077062413 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077052932 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118941174 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103896566 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.250008734 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053644965 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105642022 seconds)
    (208/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063225166 seconds)
    (209/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073342635 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091469958 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05508563 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163289141 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102213829 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077290266 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.147878893 seconds)
    (216/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08976009 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100415282 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054323188 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090898217 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165239567 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095834246 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072269343 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076141639 seconds)
    (224/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055207041 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247479005 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071474536 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.126536181 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054201076 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095567001 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098764966 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055572346 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193889404 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07830726 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099855442 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071314822 seconds)
    (236/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.124112936 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069357453 seconds)
    (238/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064695003 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114837784 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076329303 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.078137324 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.241095895 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202865656 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068681194 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091783971 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06801677 seconds)
    (247/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062403877 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.140657182 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129428775 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07652954 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07039025 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097405885 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070781983 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137994176 seconds)
    (255/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062921844 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104161392 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055837938 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 0.153145356 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076947604 seconds)
    (260/309) benchmarking ("sort", Float64, false)...
    done (took 0.151940816 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054879256 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054231911 seconds)
    (263/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068382872 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076731972 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07087863 seconds)
    (266/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105015481 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074603118 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089262218 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160930376 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05435751 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097572926 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071698524 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068670325 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0776952 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054209361 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054909482 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075837958 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084199402 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157126047 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055332053 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064119801 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099965251 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06770388 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08940934 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05377145 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067186092 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088345131 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05439426 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06881654 seconds)
    (290/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06308126 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098169699 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071734862 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063555497 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10645792 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068107745 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171841885 seconds)
    (297/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213796108 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053968905 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097367077 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054224381 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069018877 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14782878 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092358848 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074294534 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069440388 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094059811 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068409169 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056738045 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.202276045 seconds)
  done (took 35.935245671 seconds)
done (took 36.810920198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085441763 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117737954 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078016298 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11890285 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084500862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103590042 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075983878 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104835199 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084319461 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107725722 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082331555 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05715873 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100562137 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077866724 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100706447 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095265213 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10381516 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075472909 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099314565 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068358351 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076308035 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09063104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070993185 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057410303 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102875032 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076420081 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098522129 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078416034 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068323887 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090985917 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072044139 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09847515 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068784109 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082489688 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097499124 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076524365 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101655636 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08067405 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070406691 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091190447 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077163715 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089768364 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076100975 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076693664 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097860986 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074379001 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098854063 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083303012 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118882048 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071015128 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076660953 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102181141 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079825194 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097759147 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072793744 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098281691 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073905309 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097311726 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09973718 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071288543 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098733137 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077572326 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073772872 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098575082 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076982095 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101424561 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080336209 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096307277 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079045311 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074228019 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090542207 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076394229 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093734578 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069539136 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079512021 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102180381 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067984418 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074087467 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098425164 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075624317 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090159676 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071701938 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070919812 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097221471 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070785052 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057073594 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094706609 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074935574 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068234892 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099430928 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0751907 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097705738 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070811198 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079946113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090498045 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074027555 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091137257 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069520999 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070399887 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09480157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068626418 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070227017 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099389175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070023748 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096013278 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084775562 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068848761 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097324095 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068548895 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0673439 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107468513 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078027023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090668298 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070878523 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090519606 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076074674 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067995431 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090102023 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068062989 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068392265 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096565336 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068230917 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070071935 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097497519 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08213265 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092873695 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071742471 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07018511 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090744191 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074718339 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068323335 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091128568 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071063946 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08809592 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070853113 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068176493 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098782872 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070774922 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076781537 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092844627 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07790095 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09489044 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.0742736 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074229025 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090183871 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061666928 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07086499 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093430345 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070900959 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090570046 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071158228 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068604235 seconds)
done (took 13.578500238 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07154593 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176169547 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130864649 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10026203 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115308022 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068732631 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103031245 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134160759 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070719112 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132841323 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091322812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112486245 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143367874 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068137719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06859761 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096819251 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071060475 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116309709 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107069088 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113036673 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146633796 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068306901 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126422752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094708364 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11544168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120845893 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070065329 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071902271 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095459393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128817171 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08982583 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072368735 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092097419 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104738325 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120895384 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11227225 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068534844 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112207242 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069942757 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068751021 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11995928 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128213067 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08478859 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108225972 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072407984 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094557611 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070404838 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112571694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094984999 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107838551 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11614894 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139687359 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072721386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109464354 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068543677 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114667355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086871005 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094204464 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069452564 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071999406 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090630087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072232929 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116594551 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097184677 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09643629 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085934436 seconds)
  done (took 7.465720351 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088840987 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119079174 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087222668 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11176294 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068516766 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069322091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093034425 seconds)
  done (took 1.57628269 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072113354 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092517716 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116814485 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094040549 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112823796 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091092206 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102968657 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070228454 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110518186 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071032032 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115169784 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108787908 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094632482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077586847 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11804591 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070076246 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094638734 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093469995 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07311195 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116848981 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073617608 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114700063 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072037323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070123902 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10980001 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069798992 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143045449 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075589271 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09484989 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073334949 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068311159 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145153365 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107812342 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081262152 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092455289 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085277532 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109070361 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068258464 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087866492 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098431646 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084963205 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093685191 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070864886 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068533031 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097775338 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080822614 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094284124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071501901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072706494 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11426776 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070477032 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107722509 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070319073 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074361267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094696199 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076329239 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102996839 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070989617 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090179225 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095616605 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08815848 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110754307 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085275753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11138075 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07280131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107807679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085290826 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072934662 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095245198 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07364061 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110897383 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068008735 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071411515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105791355 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072509438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117220012 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095015624 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09460713 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080606491 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069854038 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094908136 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07059436 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117233123 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073683182 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069930271 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097868228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072928345 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091180085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069934955 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073867199 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09202529 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072672709 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073316677 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09414877 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07338977 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111362417 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070641648 seconds)
  done (took 9.588908333 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073428613 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070703377 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095450541 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070866999 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070747688 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094554146 seconds)
  done (took 1.428005124 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104417644 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096511725 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085858662 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099352995 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111858912 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109402562 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086241305 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109943585 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088764024 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107056685 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08654928 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111252644 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091939296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101199356 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085743737 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099764689 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085726327 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103537227 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082240174 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100403625 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092570231 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100645397 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077133215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110688085 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074684551 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099510345 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080666652 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10694637 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083281359 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110066043 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076855243 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073529979 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098835801 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108967311 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085864388 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098365665 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076343425 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074749912 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104877935 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073717521 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110588409 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076835594 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105866061 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075434775 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110618767 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07478809 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098514329 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08078184 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108861669 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074773458 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098253697 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076115076 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097795347 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074836962 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07555353 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110302624 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074305561 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109466548 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076330328 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099579134 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073863435 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097286183 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08577332 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097016444 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084428841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098656662 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075520879 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100977359 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077645261 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099472142 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074994915 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072783254 seconds)
  done (took 7.556592393 seconds)
done (took 28.545581419 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65818972 seconds)
  done (took 1.603436776 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.822378672 seconds)
  done (took 1.769887477 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.409860403 seconds)
  done (took 17.360369085 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.663101883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.815360374 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.826506109 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158694865 seconds)
  done (took 3.410476405 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892695321 seconds)
  done (took 1.860081548 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248175752 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256811179 seconds)
  done (took 1.458033448 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.746858575 seconds)
  done (took 1.703978514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.31320511 seconds)
  done (took 2.267796924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34664317 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190954026 seconds)
  done (took 1.501897658 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535947313 seconds)
  done (took 1.49470188 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.97060594 seconds)
  done (took 7.932712543 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23747385 seconds)
  done (took 1.213174132 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277939542 seconds)
  done (took 1.240939847 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.330026041 seconds)
  done (took 4.290960517 seconds)
done (took 50.060486606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082262298 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084546199 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108651637 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082446034 seconds)
  done (took 1.303866312 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083418493 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076011897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104650514 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075513265 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105256209 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077055811 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102595807 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081114947 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099426567 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077050784 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076433105 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099260661 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079084572 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101997367 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073963145 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078801454 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103916199 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076304679 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102893776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076406999 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097904994 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078907656 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079259961 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099435124 seconds)
  done (took 3.072059688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081854022 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076338258 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101629587 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075367336 seconds)
  done (took 1.303247578 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083107447 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120538164 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094039837 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104408367 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096956519 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115532716 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073485822 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073028924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09894914 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079733088 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095533353 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103328158 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116200675 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080346905 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106362223 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069376605 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071787667 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115820455 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080501727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104502328 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074258477 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104145177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072124204 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118632166 seconds)
  done (took 3.220211817 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081600339 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130415414 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082510945 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117678733 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095402186 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068607271 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104409639 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094321195 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15602494 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068556272 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098440394 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068997853 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099935435 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069019964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079808412 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13798981 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141180498 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072321005 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125406938 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069111163 seconds)
  done (took 2.930007707 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0804954 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07263255 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092495791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071449758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078725482 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100108403 seconds)
  done (took 1.470555593 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072495137 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069776655 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093946088 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070196517 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074607041 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094028989 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069078538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06964511 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095052016 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070213763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094309238 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069233807 seconds)
  done (took 1.914831468 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.470484777 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072566545 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095744824 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069418207 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074273461 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094271955 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084228887 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071084572 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11986785 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069208107 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094850169 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072140435 seconds)
  done (took 2.36299344 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273100006 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080910058 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339043126 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17328878 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144716733 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162304034 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107850097 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145874584 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205228935 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143743491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237163028 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207380473 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139135127 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172795439 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117751886 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138009444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192381683 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228902532 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134888752 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234563292 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190534528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162792996 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213779983 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108366615 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139256874 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17596692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075843334 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08423134 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265098158 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167997255 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182948958 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14199817 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125410314 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243468412 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229254423 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178188176 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168591749 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114795308 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161480744 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174191397 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27164958 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118018014 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203679779 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138743698 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110225392 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18055119 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153372088 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152933025 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142266772 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11964851 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18206503 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247339932 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172375205 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116763654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142422466 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14511809 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148614471 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132634602 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256239142 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20258284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190526011 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075038053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126792988 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196006882 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166495964 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147633863 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185177346 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099119721 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203307598 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196854071 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149810878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207497657 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.167018242 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11931293 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153539281 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179071797 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162095071 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23966757 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161090932 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102406191 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158168574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132238985 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086133229 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175324404 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079108974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243076861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129753464 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145330294 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143782998 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116148832 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141433762 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229809584 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211251272 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109638478 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09493604 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134110725 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155603975 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182320547 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118273958 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14061249 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152503504 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082415742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1982109 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080258608 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158992775 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107565425 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159083606 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168673464 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079201791 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182888081 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107718577 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.13332158 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171163121 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228203253 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120483834 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08658743 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236724593 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161415847 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137011174 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182555329 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223798856 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131528811 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132183671 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18657228 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252493983 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120353567 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20626264 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135410186 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114341216 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092691363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185517965 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145801424 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154057659 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087603331 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159223399 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236768023 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103381479 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101391777 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172333404 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11132881 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110002275 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146149461 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105206268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124880724 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131644992 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1376525 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176504192 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159796217 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138640708 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159331134 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130668102 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228824147 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119225542 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11019334 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134399452 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098356334 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172389943 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225924027 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084245911 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235966933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160672294 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135490097 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153512201 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087239805 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203420078 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083677726 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073875444 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206516266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143304708 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143156503 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192714786 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134562919 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160914167 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158135271 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194133265 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167716308 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168637274 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138770727 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091750179 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145380722 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186962368 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077890614 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125029917 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086578388 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134653108 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12551131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112641175 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179714424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162803251 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128888957 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145169851 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129206755 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189273246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105440563 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166017506 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153761855 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125359572 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195487841 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224927103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172936997 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132675728 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182901165 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100585856 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077785608 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119046167 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163196234 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113317544 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088824098 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149782073 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21405154 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164879561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173235017 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142796854 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155995103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223723049 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075597402 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148306486 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188759305 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159637794 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161868045 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119419771 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104367613 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211221021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110419806 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285292916 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152582454 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161159404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191370621 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135400121 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115427049 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109484778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201292631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136642026 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190145949 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132447615 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11960437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142842935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084897915 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135295597 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161958423 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178506835 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173603052 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15041659 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167884936 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107492263 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151138743 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158775646 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156767142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067402356 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154354331 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23049664 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127568949 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152339436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221950869 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083464759 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157538316 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250440974 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209049759 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089629367 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140976732 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156395173 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164695579 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153705041 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204644086 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142526552 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172182651 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143280202 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090189083 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118365034 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129930164 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113717951 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127497972 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145573985 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150284665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126140502 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167137759 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144816783 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14315008 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152703516 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12919831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095993041 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128899425 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245719962 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15582142 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245190509 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131697784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189045921 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23712181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104818805 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085130332 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109879773 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179769748 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088126503 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196645275 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101474606 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136741071 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161023214 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208396373 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100144538 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098053054 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143278609 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170979914 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143288344 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104297911 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138077968 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231459916 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135384792 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082635609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16013707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136453424 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134332303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246896218 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065043873 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128782708 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079291692 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11101991 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16651699 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223712736 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088032144 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159910165 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154094433 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157241996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165367274 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13241193 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128090655 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118079244 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212824218 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163897961 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121405552 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147103879 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166909837 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225208028 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13896065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100855388 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239995595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223248951 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234457278 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093264473 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14978468 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14896109 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145330397 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206198418 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08774145 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235757903 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113649664 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17442968 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135761434 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124723645 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164532556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127371931 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09387743 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215729815 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15373743 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112517062 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084701869 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164937749 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155801263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135723143 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103679936 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17782113 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075995402 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200877487 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210179259 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112543615 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138524444 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102288619 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113359023 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139672049 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136609982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118306267 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125237445 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243392653 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123013067 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191326643 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206586799 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148242238 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175354986 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132557361 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669230688 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108822016 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195985529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153037107 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247836234 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13045424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152826108 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144216408 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156955846 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205887099 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13882634 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182737194 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195461635 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156996178 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083452588 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136586149 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144316228 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121113497 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140431985 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14945305 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148552719 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132428386 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155419993 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165103626 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11178999 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100750676 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227651142 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153403558 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180682047 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205970735 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090176271 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154007109 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208214258 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084797971 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183728218 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197381916 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141644048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132743352 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.111029004 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11214747 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241329591 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103301957 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203415041 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185982145 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116833262 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147865564 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180866052 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169834927 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139963321 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161193474 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127331441 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14720585 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150695605 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115406907 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082303934 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139033798 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146573236 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130373018 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134965494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.12505598 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218997589 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076477624 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127101234 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134595511 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182450647 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250584151 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120998629 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088589912 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152369319 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147616838 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149725871 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160483602 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113120605 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112845911 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087574835 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140888475 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118842382 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148605022 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134603151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145136321 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23864489 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114392906 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230781911 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12742809 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142106537 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074209741 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110533636 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10122657 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127906816 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137013397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129366575 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238797381 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104527259 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121545029 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124246202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077673144 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113145718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16789881 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145586051 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156774591 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128693464 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067335733 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14119654 seconds)
  done (took 74.284893057 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148211998 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.121552347 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.134729868 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193460741 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167187615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26012305 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201364389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244474823 seconds)
  done (took 2.520153862 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074122412 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122506903 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106388233 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120018539 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093386849 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071578314 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.307614279 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113971782 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06975908 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118746748 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123938543 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095590838 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.487637637 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068780794 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097985938 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088487066 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071192782 seconds)
  done (took 3.27392292 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.452657497 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.65295843 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.454189599 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101489197 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.925272637 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113156118 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.420050357 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167741156 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094553091 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433753853 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731281059 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156714621 seconds)
  done (took 17.752439308 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079988909 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072070838 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114680363 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087844767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102446847 seconds)
  done (took 1.504689772 seconds)
done (took 117.867750508 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08474476 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.387429997 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055995509 seconds)
  done (took 1.52645158 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089904935 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088745852 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117146077 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087283504 seconds)
  done (took 1.441269169 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079682356 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079690388 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115312465 seconds)
  done (took 1.330666126 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.30027215 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172482944 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093289393 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088215819 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080899057 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109093612 seconds)
  done (took 1.335626844 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077733814 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078891896 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103680996 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080037952 seconds)
  done (took 1.389641005 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080978953 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055285868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05818308 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085859364 seconds)
  done (took 1.336342748 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095463959 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109800893 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084664428 seconds)
  done (took 1.34353028 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11378657 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117373025 seconds)
  done (took 1.287051422 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086852279 seconds)
  done (took 1.137419967 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098324661 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14738132 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165434068 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143828831 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174471159 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143552208 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.119077154 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091441297 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108722151 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121170916 seconds)
  done (took 2.371282981 seconds)
done (took 16.188101588 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082751946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397570808 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365163631 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122103725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675006181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386388201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984456509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123335424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111722448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099034983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088230159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680150736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973565921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325969507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987618527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324070949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680274069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071739265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097314123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071534812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968924422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09833906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071452108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098548809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653207589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375233816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099018873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3235543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098025575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073766727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358299419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09799199 seconds)
  done (took 16.000983864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075024679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14898098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077861038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087166272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101790389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072472301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102368187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072822413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1530571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070852972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116496954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071470581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102308934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073300415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090790809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0988052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073072632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099094406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0729159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071549496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117842253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071287304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098488972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072096087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071346815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111609051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072316685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098023628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07249695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073110778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101864665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071854936 seconds)
  done (took 3.920505932 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119016056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159686199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077576171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134448365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143975047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074168328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17619581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097738124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156732156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071738749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115675869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071079035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132564079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071937681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118342726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072314061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099200297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072473139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071261059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099145045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090817825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097949291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072173868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071743942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098908483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085071807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098708583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075237708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071800602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10065581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074275828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099081325 seconds)
  done (took 4.234336113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076428784 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077799403 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113728493 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087149979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100054625 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07595288 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075682061 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100527364 seconds)
  done (took 1.768207155 seconds)
done (took 26.968171303 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082980217 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072948782 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103726916 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084782078 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103035677 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08270755 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070687004 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10509496 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078767017 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103165899 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080307419 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070415449 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102014764 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071115784 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078079663 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098573125 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083281685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102323774 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083218747 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110449028 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073587227 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078572024 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104857833 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083056574 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109983903 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08368789 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110764588 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077755935 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072216726 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101130586 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079846519 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116765428 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072368052 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082758346 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098973987 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070674841 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097375163 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071977219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083188609 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106054568 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074337841 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105859515 seconds)
  done (took 4.773855275 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094820189 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096127911 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117903147 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065327314 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099513876 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064985604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.12090448 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063644787 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065052507 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120770593 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059018737 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060557948 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090455978 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057260411 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060736132 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059752341 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091584822 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060040829 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060350583 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088574348 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06453298 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057074799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090856942 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062892855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05908517 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064658636 seconds)
  done (took 3.062275838 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079644985 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085599852 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119398226 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132543002 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136881007 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07851324 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109817045 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088908006 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116893187 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070353806 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101676107 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100727133 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089668989 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105772543 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070781625 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113990197 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08564042 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072416615 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105287788 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091989091 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115947565 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081712278 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120221251 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083185348 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070312951 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101199809 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075328915 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112712479 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076564649 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080160309 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103612166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074167587 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100220343 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083192458 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102445984 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073948282 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090722357 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108440305 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07926593 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099551537 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075015847 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071569754 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120613718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115957592 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09869272 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07860672 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106350529 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081844193 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070948995 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117263412 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080442619 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099027985 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074590774 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069844073 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099565125 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085120349 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100144617 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074289239 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08064427 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102200568 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084317685 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075076391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11530446 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070566337 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107602047 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070308061 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099599716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070400983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093607189 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100015426 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112922004 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100788283 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072979963 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107418187 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079283598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076602185 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099574783 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087246339 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108660062 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075424569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079652892 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102504864 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074553221 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116885046 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074856051 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07249001 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099951044 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077836621 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073366459 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.10048801 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084895234 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099441816 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075350151 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116583145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07092736 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072134943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.114445905 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075826844 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098009924 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084526346 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.1038583 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072572824 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080285178 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098620334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073958944 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108375504 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076329891 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069182122 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103311115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077475281 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072175514 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100584745 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073944352 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100408174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077458591 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103914354 seconds)
  done (took 11.715613456 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198886795 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193155412 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074338097 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185836896 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0799446 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112891977 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185758499 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101060655 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100521286 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072222956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071951929 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.139863623 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132878978 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113690598 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110776182 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070909717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11857878 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112938384 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188794613 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.181254253 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120909107 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079980292 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101885815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072619371 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072717746 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110223695 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088507674 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107353911 seconds)
  done (took 4.372355761 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08677101 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128537629 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077023051 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090003939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123835969 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071426519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104819302 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073210904 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111917192 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084084827 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099569634 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077766698 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078901676 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108263068 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071682448 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109409224 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080862156 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072990505 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104429461 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075431801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106436298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084242986 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103876289 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071001456 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078408074 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099450254 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068319354 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.119008404 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07129634 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118576535 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070619568 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106242204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081323851 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071999932 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099973952 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074116289 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074124927 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102338664 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073625766 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098378325 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070586198 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060929183 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.099138049 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084495827 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106544793 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06371156 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077157724 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106453582 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076652247 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069411798 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10279822 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073535148 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103788132 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079741448 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076292276 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10544951 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075590398 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069803867 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106848276 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073954323 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067723471 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098565142 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076644198 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099316559 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079497461 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.104013626 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070863718 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073873934 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10504311 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077905658 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072964396 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10260788 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069446954 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073652418 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.104885228 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075753402 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103110082 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070710324 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070797029 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100951279 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059133416 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070592971 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085614049 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074799927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069727188 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.098557331 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07392781 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109039163 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085188371 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101690504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078388878 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071919821 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.099318232 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075530499 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066651234 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102782777 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08597128 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117276748 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070933474 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098656259 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085892724 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10565697 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071307115 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059657156 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107954462 seconds)
  done (took 10.194694249 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096573263 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124595834 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073536445 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085214286 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127124671 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096945404 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108095606 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078195199 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073443881 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118370922 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071443659 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108800116 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076649041 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081351132 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125081016 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079005895 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.10355957 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081117135 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079454959 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136783477 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085237384 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114822412 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081918352 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101607123 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07679222 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084265987 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128607765 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081680238 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109993795 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085533059 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11074537 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099880127 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086886379 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104854242 seconds)
  done (took 4.36766528 seconds)
done (took 39.541978522 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.14720117 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.352876108 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.133434978 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.014505516 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.182792942 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.15130609 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140209545 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.14140235 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.522913402 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.136337099 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.390206285 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.749692334 seconds)
done (took 59.13404092 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.181853334 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.267016343 seconds)
    (2/2) benchmarking "String"...
    done (took 1.404872667 seconds)
  done (took 3.755522001 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.48001684 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.113542926 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.414827816 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.131205634 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.143922585 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.580675527 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.702679386 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.992078229 seconds)
  done (took 27.145400294 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.147301227 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.491515648 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.529658842 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.524409666 seconds)
  done (took 17.761600966 seconds)
done (took 58.399290619 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.138415628 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.182729902 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.169036381 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.118243982 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.236317508 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.168808447 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.157404859 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.218019125 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.132997888 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.118452362 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.149830707 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.132826482 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.144688184 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.152876424 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.140378055 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.133292705 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.184068014 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.745401601 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.520281848 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.134121257 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.168306626 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.18658113 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.132421879 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.14479001 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.154298252 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.133766826 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.143504759 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.133940079 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.466373029 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.134900338 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.229831715 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.435109144 seconds)
  done (took 187.618175441 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.136276078 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.044994 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.141987112 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.190311912 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.439721934 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.333325717 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.270660873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.572624621 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.145719447 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.158561138 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.321916915 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.133913948 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.378061238 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.113290938 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.143171895 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.240549589 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.399246302 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.394261088 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.155768718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.404637691 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.157708223 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.419070666 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.336032864 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.292030076 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.182344598 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.181100787 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.157808196 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.142958459 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.32681608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.35061252 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.140791968 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.147656937 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.717940698 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.991690608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.140476767 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.144434696 seconds)
  done (took 147.02294134 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.414860589 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.133389103 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.133863431 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.132637636 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.131539116 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.169506878 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.133991121 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.659124104 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.67578845 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.675504773 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.477069028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193390453 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.351590644 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.133271796 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226610749 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.144198298 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.136639216 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.151787688 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.160480391 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.133142144 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.134862127 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.678968104 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.143664234 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.196432052 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.141329227 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.137401345 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.162450203 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.527917831 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.135497236 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136367947 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.167251387 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.449578817 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.177686778 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134737236 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.440389229 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.698025058 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.131223531 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240302192 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.138735398 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.16894779 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.134023357 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.136022251 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.401886472 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.133667126 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.135402172 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.138646629 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.725229701 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.134258682 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.66077559 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.134445527 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.022841034 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.135581229 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.133731138 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.664895783 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.651148064 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.136093998 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.137651706 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.134656926 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.131500827 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.132877549 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.164160328 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.767681982 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.234852811 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.135882627 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.142525308 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.166733358 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.137241922 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.532826523 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.134335469 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.46372414 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.192019932 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.245307239 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.681979859 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138293381 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228523684 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253553383 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.137390399 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.140024361 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.138269784 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.137239867 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.243917934 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.136985864 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.543582517 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.14152996 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.138854405 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194940557 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.230314669 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.134876776 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457420765 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.136813439 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.13714901 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.831684569 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231423351 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.137189887 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.139256379 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140493143 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.547070944 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.685302713 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.317307888 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.137298882 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.620225107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.136514479 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.558775665 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.660918045 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.747993594 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.143098993 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248959238 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.143760011 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.137789228 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.136795736 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.168322546 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.138117808 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.196771785 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.136275224 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.538599739 seconds)
  done (took 338.746761922 seconds)
done (took 675.874234445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.783686762 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.769213203 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.875467644 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.763775432 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.741974725 seconds)
  done (took 10.004235628 seconds)
done (took 11.085383768 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.322745755 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.323991053 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.19618122 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.322535895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167147424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.3388213 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.303203028 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.158083034 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.237870389 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.208472033 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.239782902 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.187877061 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163946644 seconds)
  done (took 17.244912397 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47108274 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.441473987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.205517762 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450495481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.181541889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457382011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.342091897 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.343209736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.356474114 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.153079176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153650308 seconds)
  done (took 15.635624578 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452340942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450391121 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210385458 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453210299 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.178840611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448943633 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.339297012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347103048 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334270639 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.154328639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155604189 seconds)
  done (took 15.602046485 seconds)
done (took 49.560188369 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.146069425 seconds)
  done (took 2.221032942 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.181257804 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.350129675 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.160796759 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.158403641 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.150158006 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.152145858 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.155585074 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.149236076 seconds)
  done (took 10.538343649 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.149555395 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.14785971 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.147369379 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.147847148 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.148271389 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.148113758 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.149455807 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.146562058 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.147108523 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.147134109 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.14703731 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.149981755 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.144878421 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.146261809 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.14357123 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.146139351 seconds)
  done (took 19.438057921 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.148481551 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.147435143 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.146457437 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.146620695 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.147376507 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.147773035 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.147248386 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.150903518 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.149579798 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.146179224 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.147539644 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.148954871 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.146615256 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.145800279 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.149221224 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.147314963 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.147175821 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.150858288 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.15135545 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.145700911 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.148255762 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.147512199 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.148030869 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.14414138 seconds)
  done (took 28.631895384 seconds)
done (took 61.91128677 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.24682857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.825516627 seconds)
  done (took 9.15248001 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.148741249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.149128809 seconds)
  done (took 3.377965993 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.153566987 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.153927247 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.152549363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.149949255 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.150902013 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.15132797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.151688555 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.149603559 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.149696191 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.151760581 seconds)
  done (took 12.594095859 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.148540826 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.155618083 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.149712251 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.153514828 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.154449154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.151502339 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.150369989 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.150929651 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.154881555 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.147918471 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.152617932 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.152992544 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.150764049 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.148791899 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.149295634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.148149316 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.149585259 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.148305479 seconds)
  done (took 21.800358425 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.15221824 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.15093073 seconds)
  done (took 3.384976812 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.14885879 seconds)
    (2/7) benchmarking "second"...
    done (took 1.146773126 seconds)
    (3/7) benchmarking "month"...
    done (took 1.147506153 seconds)
    (4/7) benchmarking "year"...
    done (took 1.149261499 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.148432194 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.14830159 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.151876242 seconds)
  done (took 9.123700479 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.153054196 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.339235581 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.419487323 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.746821704 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.15371662 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.157064825 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055662786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.156485696 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.159882996 seconds)
  done (took 13.424942909 seconds)
done (took 73.937137735 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.154764822 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.148952648 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.093721852 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.163873459 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.163835531 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.494208635 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.156859877 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.268546085 seconds)
done (took 36.728589598 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.164874823 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.851676995 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.891878964 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.147592914 seconds)
  done (took 10.973509946 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.135669719 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.096860082 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.149508729 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.156756668 seconds)
  done (took 17.630361047 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.77549861 seconds)
    (2/2) benchmarking "read"...
    done (took 1.479032632 seconds)
  done (took 4.339507685 seconds)
done (took 40.191167556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154735233 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.154746793 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.158034888 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.150663257 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.15457245 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.150777204 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.150875648 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.156800608 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.157412501 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.155495685 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.156178187 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154337179 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.155835665 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152014385 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157769734 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156059959 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.153380451 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.151551205 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.152559183 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150618671 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151849759 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15418665 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.152315295 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.152335872 seconds)
  done (took 28.776186482 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.161244679 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.155127425 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.155915361 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.154576331 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.151072071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.155037661 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.155393428 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.150504362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.154997193 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.157754788 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153570298 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.153509838 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.155067442 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.155326448 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159216477 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.154728891 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.156073003 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152604479 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157737771 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.154846167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.156579427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155559355 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.154699261 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157808006 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.153756 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154672361 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.159376572 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.156302037 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157198139 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.15738716 seconds)
  done (took 35.753226165 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.162746125 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.164121288 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.160663177 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.15943348 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.155923198 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.161641211 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.156474757 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.153256638 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.156304544 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.155452366 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.155096369 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.16060755 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.155861046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.156575364 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.159598848 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.159219541 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.15901174 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.157234195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.156828637 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.154088968 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.160629255 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.156189199 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.159764867 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.159048468 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.158954953 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.154880438 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.15675849 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.155398109 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.157994422 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.156837326 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.158242249 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.160957671 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.160977558 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.160693166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.1593568 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.159009547 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.162269186 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.164615185 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.160700131 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.160179413 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.157873937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.156936024 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.157603897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.157911497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.156970178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.158007696 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.16279571 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.162099929 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.158353012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.160907464 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.156789897 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.159896782 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.158168597 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.157286976 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.156927166 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160511267 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.158776799 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.158870231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.163069412 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.160246662 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.162240776 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.159330398 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.161402218 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.159781276 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.162184579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.159410207 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.161361046 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.158153833 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.15793806 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.159429064 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.159822716 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.161998133 seconds)
  done (took 84.535546373 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.159453748 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.160485419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.155468725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.159850881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153391808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.160577665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.159204976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15984815 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159468028 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.161314375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161026723 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.158391854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158849669 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.165118495 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162624467 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.161537852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.162630982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161343423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.159580266 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160303126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164298335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.157372951 seconds)
  done (took 26.614772303 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160910468 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.161778621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.159519762 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.163107332 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.155090803 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.161644978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.160604563 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.163949369 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163688136 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15758276 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158042063 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161767735 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.157085761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158838789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16103671 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.158951594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.160664203 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.157126322 seconds)
  done (took 21.97772828 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.158746893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.16099339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.16156577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.157377125 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.159947312 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.162498112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161590634 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.163219067 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.161847665 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.158240973 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.161544569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163202594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.164367301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161248414 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165361373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.159791867 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.161658602 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160289779 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160693161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158613002 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.159708981 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.16156046 seconds)
  done (took 26.635585417 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163963713 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.163342937 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.161313507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.161750835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.162639829 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.164602005 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.164657727 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.162330507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.166136921 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.163577808 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161839258 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.163702936 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.162898094 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.157292629 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.158595992 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160731837 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.162125847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.159793208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163356901 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.164194158 seconds)
  done (took 24.346703777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166447054 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.163072158 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.167532123 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.167104275 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.163603287 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.166887673 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.163914053 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165671937 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.167882979 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.163698898 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.165210991 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.166405304 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165918293 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165392694 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.167199004 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167393751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16659529 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.168102537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166370555 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.169376775 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.166099292 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164563349 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168457628 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.163625366 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.164228865 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.16491695 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165974606 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.167863598 seconds)
  done (took 33.749196554 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.166171091 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166891606 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.163189308 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.161960744 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.167124866 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.16473157 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.16537694 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.163261697 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.168281356 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.165307639 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.165251446 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.167111488 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.168700175 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.168225656 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.169559416 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.164505679 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163355587 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.167242891 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.165264652 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165345806 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.166201963 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167292854 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.167777673 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.162456351 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165609672 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.166647569 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.163858113 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167219517 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.165486917 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165376953 seconds)
  done (took 36.076261969 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.188763553 seconds)
    (2/2) benchmarking "in"...
    done (took 1.187290126 seconds)
  done (took 3.468637355 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.164371681 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16774027 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.169756793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.162732639 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.165739369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.166723999 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.167799859 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167359249 seconds)
  done (took 10.432038916 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.165274563 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.169373165 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.168730351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.167779168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.166313055 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.168980421 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172882116 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.186740678 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.169767869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.167098487 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.176446286 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.176063403 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.168221254 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.16670869 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.169287093 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170042277 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.168224507 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.168350185 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.170974211 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.171158722 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168762034 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171941318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171337417 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.168426554 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.173102499 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.182671834 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.171119353 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.168683772 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.167125625 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.174562224 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.169042518 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.16786926 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.171672338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.171135406 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.172527789 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.170541404 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177694845 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185790846 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.17797423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169528215 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171250257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.167914402 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.168839721 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.168161664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.171224603 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.171919317 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.168760849 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.169023897 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.168449732 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.169919707 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.177155095 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.171778846 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.167046978 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.173836544 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.172360179 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.179690245 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.186480958 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.174774808 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.182335096 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.182278405 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.186119896 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.179268435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.173669779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.169541881 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180780051 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.196200327 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178480151 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.188493133 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.168453674 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.169546115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.178318502 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18662537 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.181921635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.17351171 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17317138 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.17534002 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173685093 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.170937704 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18145713 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.193937818 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.174581894 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171862325 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181625425 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19386099 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.170288475 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.173004223 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.172933044 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.175205547 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.17413791 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183917317 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.191364738 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.176297861 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.175790481 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.174677022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.174235094 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.174795335 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.171343279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171197085 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.169454577 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.175774069 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174517762 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177233603 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.184697656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.170541869 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173396561 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.180024963 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.176409927 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17292536 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.17876029 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.176515665 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175005016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.176033334 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.179425999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.173182377 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.174938702 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.18481427 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.175622568 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.177165799 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.178547354 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.177373103 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187250799 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.199583314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.176204285 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.176130004 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.179538803 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.187731127 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175475285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.178775849 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.177675904 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.176459035 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.174820706 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.175627734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.17612953 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.177595985 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176406006 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175621158 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.175314298 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.177187977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.176542747 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.176229855 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.176722626 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.179526594 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.177836227 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.177939395 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.176205233 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.177500804 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.181995895 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.176687505 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.17805205 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.176121135 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.174676214 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177987782 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.178970645 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.177784855 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.17735728 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179125279 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.17677042 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.17919659 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175826383 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.178961713 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179666681 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.17841611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182406672 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.178045107 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.18242285 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.178426665 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.173772668 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.179697892 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.17953307 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.176834695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.178267812 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.177411362 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.183258289 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.18776154 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.18163631 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.178951926 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.181595454 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182133836 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180100385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179821988 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.181720271 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.185061557 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.178307775 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.186264983 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.180677211 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179934501 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.18195315 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.179563046 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.179693516 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18086999 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.183698479 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.189224306 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193706827 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188229829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.178233066 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.183303219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.181069795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.181228771 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.18538328 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.179751384 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.182724088 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183213468 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180349076 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179593825 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.182208374 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.18197156 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.180727072 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.181551464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.182999984 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.183161048 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181872086 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.182695892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18162215 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.178387221 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181243538 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181960089 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.182311113 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.179719936 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.181171009 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.181818692 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.178541768 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.182875694 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.18851436 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.180082894 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181667863 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183866814 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.181731968 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.179722542 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.183200481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182306922 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.179847109 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189336167 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.198140334 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.185678174 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187652527 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.195893436 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.183962962 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.184876515 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.18060162 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.180958263 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.186878697 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.190546647 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.182123541 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.181387058 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.182567928 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182107941 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182429226 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.187207927 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.177586583 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.182045769 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.183552821 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.183541576 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.182213795 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.18241593 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.184542924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.183003165 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183313151 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183820534 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.185064581 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185316177 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.179375922 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.184390427 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.181584476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18446967 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.189561268 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.188930664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.184621453 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.185805383 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.186941412 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.191114787 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.184928305 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.184381005 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.183665345 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195579826 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.19031052 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189815978 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.18513279 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.180625827 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.190196475 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.183646503 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.187932501 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185550373 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182739083 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.181857349 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.183872564 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.183698289 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185405265 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.185462485 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.186001339 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.188405596 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.185632334 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.185921925 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.185945059 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.186961374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.186409 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.185692097 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.182690926 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.187345975 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.188983325 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.185998302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.185161163 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.184574454 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189444208 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202395789 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.186299752 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.184391181 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.184309018 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.184955749 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185037329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.184679498 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.190356717 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.190322884 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.189051792 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.192527133 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.187471349 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.194226715 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.186398615 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.190925554 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.191129783 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.183886793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.185089962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.185728991 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.183299616 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.192551572 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204523994 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.186084603 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.19203949 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.18848073 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.186064789 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.186924024 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.188002967 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187091596 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.188754725 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194262411 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.205290719 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.189561711 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188052373 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.185179473 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.188662274 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.186779723 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.186696645 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190252647 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.186187115 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.188746255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.185657459 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.188055366 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.188888658 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.186167612 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.185446008 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.185962375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.188252095 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.194998676 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.205987345 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191446944 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.18876266 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.196238059 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189773329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193668528 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.207198632 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.190046684 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.188853077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.187966556 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.191062332 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.186037765 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.19173223 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.188530406 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.192065424 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.195771375 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.189224182 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.193945086 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.190617818 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.1856844 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.189547981 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199632938 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217503107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.191885857 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189790291 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.188161392 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.190582809 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.194784213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.189909005 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.18890608 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.192365747 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199925451 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.199127524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.190465084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.19126938 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187197456 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190646054 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.191356612 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.191655511 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.19126428 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.189703751 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.188478251 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.18910722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193958795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.18954808 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.191034874 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.191116806 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.191103226 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.20040155 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.189787915 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.188991337 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190512099 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.191300463 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.188717892 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.18770853 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.18760452 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190130577 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.19075429 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.19031799 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196754201 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.197179864 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.19309765 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.190228008 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.190673656 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.18789712 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.191282139 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192887339 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.190083375 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.188645556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.191635527 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.191736929 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.188991021 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.189307129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.191033136 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.190788252 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192115793 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192508725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.197885279 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190220796 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189441597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.191779677 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191209581 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.190935857 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.193523753 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.199943557 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196501372 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.202013079 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.195894305 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.196296194 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.190232971 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194656458 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.196934476 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.188183964 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.189169349 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.192968811 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.193109415 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.192244571 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.193441286 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190212161 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.196097163 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.190096281 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.192644636 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.200361178 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.209835173 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191659501 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.190493983 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.193302989 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.193236883 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.189749231 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.196374652 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.192723842 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.199298503 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.211902987 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192553638 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.195450716 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.18884796 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.195695558 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.197774574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193249994 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.194971825 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.191575046 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.192185939 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192569017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195414033 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.191215215 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.19395324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.191773955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.194308168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.199207046 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.189844962 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196624995 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.191371449 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.192988389 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192256647 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196661945 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.19071893 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.190868128 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.193161427 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192832641 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.196020871 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.19789143 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.192052974 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.193891206 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.198339286 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194543387 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198128072 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.203960144 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.202839019 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.19382066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.190555516 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.192919478 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.194530968 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196201052 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.194468544 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193479483 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.1968364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.193863615 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.197388159 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.193742174 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.197063496 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209255323 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.212900434 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.194687792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.193423924 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198540223 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.196685694 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.192644731 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.196439144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.194708216 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.197779135 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.20499289 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.196514833 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199719575 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20992439 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.197374756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.200002409 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.199698496 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.204253995 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.196704551 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196323242 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.198615547 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.199828171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.214129604 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199522117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204272764 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228012366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.211932404 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.195595196 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.194087358 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.196100523 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.196347647 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.19547738 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.194393396 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.194245469 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196047617 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.199016121 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.196879672 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.202269032 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.198756501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.1985878 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.199294922 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.196686373 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.195792313 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.195142508 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.196978292 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.199125001 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.199232415 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.195739798 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.200738465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.195131085 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.208926858 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.208383143 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.197131062 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.197445839 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.193472624 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.200223639 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.199141277 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.207142207 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.205579182 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.200810416 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.200739006 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.196639436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.197839802 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.196160657 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.195109994 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.199383472 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199034432 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.194792681 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.21031729 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20788838 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.202265261 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.19840376 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197062756 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197802272 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198683798 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19866526 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200552008 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.200063076 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.199653945 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199972417 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.197467713 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.199061856 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.200191037 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.205308979 seconds)
  done (took 708.438426657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198664238 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194576431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196343868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.198071986 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192738778 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196245369 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196362919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199353268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194114826 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.197805653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197512031 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197909169 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197147501 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200712864 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197294087 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200018232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197174964 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.194524819 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200137243 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197707433 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.195835604 seconds)
  done (took 26.273023434 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.201210089 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.198698617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199729562 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203349699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199977331 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200434893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200095607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201082266 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19919325 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2003843 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.201560689 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202112207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.199127788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.195986857 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197572642 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199501705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203816932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197516543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.200922054 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197559645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203149665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.199557195 seconds)
  done (took 27.535616822 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.204684078 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.199618791 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.200562767 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.198312083 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.20065136 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.19942248 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.200526889 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.203842235 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.199481445 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.202252951 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.200923932 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.204108888 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.209431567 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.207705788 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.202152687 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.201400535 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.344598916 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.20124101 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202442038 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.201866749 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.198691541 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.205362425 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.197851997 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.200799707 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.200723161 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.199990815 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.203553078 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.20281761 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202664767 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.200915441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.207186627 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.199892223 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.201892099 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.203926595 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.20034168 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.206055665 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.210941091 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.204805045 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.198676168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.20520768 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.212720238 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.223266813 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.203450801 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.207678292 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.203180525 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.199247555 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.20903771 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.208992218 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.203026188 seconds)
  done (took 60.240420638 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.206781149 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.206122875 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.199981587 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20367404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.206551528 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.204433912 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.203410403 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.205673334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.20178007 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.200946181 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.202028799 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.203605014 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.200935667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.202838795 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.202232234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200147461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199579791 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.199738637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.199781244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200909137 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.203928864 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.207398165 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.206812019 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.200854282 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.202640751 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202119782 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.201991138 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.205605774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.205271319 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.203935886 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.203814791 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.206366768 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.205308232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.201523052 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.202652394 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.207614535 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.205817302 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.201688345 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.206492708 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.204420253 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.205039502 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208406598 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.202995889 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.206572609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.204226451 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.202901153 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.201206417 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.205696017 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.205136942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.206169851 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.207567243 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.204579077 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.206455951 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.203813951 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.208090813 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.209845635 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.205777464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.205438728 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.205394078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.206183089 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.206624312 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.205755375 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.202341823 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.206226761 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.2100054 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.206043147 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.202563311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.208921613 seconds)
  done (took 83.033546397 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205759138 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.204911326 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209336333 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206972652 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207015724 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.209292655 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208175209 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.210880536 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206545539 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205836517 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209231743 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.209621052 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.208794692 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.207056296 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.205470394 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209303573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.208853889 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208713528 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210064873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207827094 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.210807417 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.209343264 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206793391 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.20989593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.209163454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.207736386 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.206388985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.204924429 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207183436 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.210421616 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.208341423 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.210227343 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207394432 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208107015 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.206194673 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.20633398 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.210587432 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209314361 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.209608782 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209177389 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.209128006 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207782349 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211085295 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.20820987 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210350927 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206904195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.211657651 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.20905459 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.207959242 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208599123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.208235216 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208515557 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210008146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208296992 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.208853853 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.207879565 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21062406 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211310168 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210555895 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.210381883 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208353469 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.209776237 seconds)
  done (took 76.073479379 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212676821 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211860556 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.208644699 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.209415354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209924277 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205320729 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209391321 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.211893518 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212263805 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.208637199 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208942157 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209256221 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207707481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211475292 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209513837 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208066838 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211189496 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209981897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214001322 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208483195 seconds)
  done (took 25.343193853 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.210182363 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212129709 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.206827717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210353461 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.212746633 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207652304 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.212050248 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211642777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209475322 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213114096 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212806102 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210670538 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207472016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211479714 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.211790451 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209385655 seconds)
  done (took 20.511570118 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.212454636 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.213178824 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.209864122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.21008089 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.211241112 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.209348973 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.214232992 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.211723922 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.208875884 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.21067444 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.208705762 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.212307269 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.214778787 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.211959248 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.213165785 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.215856855 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.210426019 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.212925586 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.215341243 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.213581374 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.210567187 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.210289606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.214839257 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.215064494 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.212464036 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2144193 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.209594644 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.211192449 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.208979906 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.214948487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.212486721 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.210076823 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21043527 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.211052596 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.213931524 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.212123893 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.212366235 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.214995415 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.21315457 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.213495388 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.21636407 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.214200035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.214779164 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.215168205 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.214182547 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.212074385 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.213588966 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.213235957 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.212947491 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.212740668 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.214097412 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.214811686 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.217550248 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.215676235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.21653341 seconds)
  done (took 67.852579816 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214418653 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.214846123 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212117993 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.215846755 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215810769 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.211995076 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.213738919 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.210663225 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210848528 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214744908 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214688287 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216944383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215845474 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218445584 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213426403 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215631516 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.212371774 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.216333525 seconds)
  done (took 23.005290544 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216598638 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213824029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.218435245 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215093338 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.213627486 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217122274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213554405 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.214916703 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216457593 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213440505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213351966 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.217488283 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218097548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.214303124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214292414 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215437809 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.218281027 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218683243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216182518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214363172 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21645716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214324505 seconds)
  done (took 27.888695013 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.216489997 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.213791905 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.232003025 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.261603367 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.244912393 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.21657219 seconds)
  done (took 8.534393997 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218173952 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217425674 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214635269 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216851508 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217814513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21565962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216087614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215100027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219273129 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218298541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213573622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218099952 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215128802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216812408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219631332 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217018181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215706668 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217391998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217108979 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219594863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213918653 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217800132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216769042 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216672305 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21618257 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217701837 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214683961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216548223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217121349 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218837608 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220432549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216409597 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219774424 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21721774 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218763015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217850711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217368006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219336438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220163291 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214656943 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.21869017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215461588 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218575457 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216039628 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222498502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216400054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216116088 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21871455 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218577495 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222252816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218311712 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215850185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220308816 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221749505 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21828024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219960126 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217185423 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216211339 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221823854 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216126118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216361024 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220524873 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217065842 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219171674 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217347182 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220059624 seconds)
  done (took 81.522319287 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222410883 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218600114 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220606553 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220280348 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218605349 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221043062 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218242422 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217044202 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220543867 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220185244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224940113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21962935 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218962902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21530283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219568911 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220266405 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218254608 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218028732 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216768328 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22068095 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216254583 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219747275 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218779821 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222011044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223698458 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218077159 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218741725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220276841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220610148 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220695598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216949145 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216896568 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.220564017 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220677484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218540309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221185534 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218226753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219956951 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221350989 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220784724 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221116256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220475778 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219989462 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219097607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221988357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221417852 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218243813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222078862 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218742656 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219567172 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218863262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218030076 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218465101 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219567424 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221063757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221759554 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219847787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223871423 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22234218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221712434 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222993835 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222136243 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224398997 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219829952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219993818 seconds)
  done (took 81.681539562 seconds)
done (took 1651.383113457 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.288999573 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.304474605 seconds)
  done (took 13.74926886 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.386878162 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.338190152 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.222669337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.252920197 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.222216315 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.226511638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.223805849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.221946117 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.222800846 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.223709343 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.219952604 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.411152406 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.221718961 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.222121152 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.223357394 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.311567278 seconds)
  done (took 41.317962303 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.254948982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.227463311 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.342952999 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.244021985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.254013324 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.415133378 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.282903095 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.228299379 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.4058047 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.270949199 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.904851268 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.254779252 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.227806548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.42478925 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.249145899 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.414672686 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.486534031 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.916793151 seconds)
  done (took 28.962065056 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.690563019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.246251401 seconds)
  done (took 9.096195804 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.262862882 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.247969817 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.25282788 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.218955444 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.271962388 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.321579621 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.222860711 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.249371594 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.237003074 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.250414389 seconds)
  done (took 63.707178074 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.249110119 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.228972889 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.228093092 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.223048657 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.232187856 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.21466666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.225882342 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.231728333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.969200241 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.359008016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.246648531 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.236980158 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.225694832 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.229990312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.226668983 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.262614242 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.374729298 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.228810659 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.222071581 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.23291973 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.228995945 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.323897078 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.269033505 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.224961831 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358879739 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.988712008 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.233513125 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.235830127 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.350403873 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.227884599 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.225868755 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.22814777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.227779759 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.806531313 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.739652733 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.242583206 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.253779868 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.23826824 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.22739398 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.356282779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.2306374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.234836382 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.235257375 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.722815449 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.392387158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.351447337 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.586103239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.230396707 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.230951813 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.296248352 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.232535947 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.228185402 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.262073163 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.008129456 seconds)
  done (took 106.041147285 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.237309032 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710567632 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.395652976 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.251785002 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100043686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885574946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.221030503 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.517303015 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.239000034 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.223656932 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.50669495 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.735409899 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2267876 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.225749797 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.656152943 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.235053269 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.224467003 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.129760833 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.222295393 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.227921072 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656527611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241237407 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.237348594 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.3255349 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.261293469 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698410937 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.787174122 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.638578991 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.221471176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.22031088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699789658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.225394868 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.26223697 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.224418479 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.51287645 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.586726774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.568381625 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.22546588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.230038101 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.225469228 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.243892412 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.712443155 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.578551364 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.22998023 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.226514059 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698975289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.220936216 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.23179737 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.232747179 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437153244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.139603229 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.222788847 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.747048968 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.223687703 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.497366468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307750792 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.312688723 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723294442 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225985712 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.312522618 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.224031382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.224458702 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231244268 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.224553369 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.226833874 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577710047 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605079284 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.221377208 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.582798366 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.691217339 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.225843937 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.760853277 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.162533327 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.242060407 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.266218373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.224813701 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.941907323 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724241623 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.25784706 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.224011661 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566451269 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.226171281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.514470604 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.236436531 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243299361 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.662135291 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.251048929 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.262496512 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.22571192 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.226565401 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.004259244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227912621 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.502571884 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.288648182 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227143662 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.227926841 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.247245078 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239161482 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.228049554 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.230037957 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.760300868 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.228232486 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.373537591 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251316164 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.22801024 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.228184007 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.227306579 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.228066905 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.45282152 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.850919771 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.232867192 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.229938494 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.224438427 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.232194662 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338793094 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.233535148 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.54413026 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.229398933 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231893752 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.226403572 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939524486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.261782658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226705435 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.244440435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.065699871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.44057059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.250991713 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.242428935 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227383496 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.24408812 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.606195273 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227045685 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.239153163 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.233258076 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949187488 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.244917305 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.266601889 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.806049616 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.240864994 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.230564379 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.232327593 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229704808 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.539517747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.515325695 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.536490753 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.229180777 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.229249876 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922589554 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.255940643 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.372654845 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.250604761 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264051303 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428619714 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.354738025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.228095707 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.781042938 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.231357651 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447712334 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.236470283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55203655 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.733428267 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.231199189 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.229085285 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94679949 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891964458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.890955772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.233148194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.512238164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245550676 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.687232197 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.23075152 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.228993373 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.794676826 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.229993857 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.232875192 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.231688587 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.234749927 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.299398079 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.406758319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.048568583 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.237419324 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703907908 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296009415 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239155138 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.234470245 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235873232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584646204 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.314110339 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.233712906 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.237874174 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.232417849 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.236382849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710671971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.181598222 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.231360388 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.387623686 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877817457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.229626764 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.241306708 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.008435115 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.471300736 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787872108 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.256862621 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.5486768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.234209452 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.273338908 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.036786537 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305970248 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752345805 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229816362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.229339532 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84446929 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.231222558 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.283323912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.233257358 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.23208246 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771997287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.229181788 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.237472258 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.634963645 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230844593 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506886395 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.229867683 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.252987968 seconds)
  done (took 1089.410848476 seconds)
done (took 1353.441558954 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.235138617 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.230170574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.222390966 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.236857684 seconds)
  done (took 26.097956845 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.244967109 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.238294351 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245388684 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.237513112 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.242177846 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.238553422 seconds)
  done (took 8.620454218 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.801903219 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237762803 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.236511363 seconds)
  done (took 19.450499769 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.472076578 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.517538136 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.632907146 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.476220122 seconds)
  done (took 10.273827955 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.239442172 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.239329577 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.240445734 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.243319057 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.244258067 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.249415188 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.246016715 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.242422144 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.247103052 seconds)
  done (took 12.365998517 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.338415187 seconds)
done (took 83.319181475 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.233061864 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.248804916 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.318646152 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.553337449 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.66191675 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.319434506 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.370730065 seconds)
    (8/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.602336854 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.494954444 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.280286097 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.261625274 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.276522581 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.582061641 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.259431566 seconds)
    (15/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.013375184 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.222418212 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.880624973 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.223867763 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.264385018 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.132761989 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.601532623 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.101525769 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.609558019 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.698316542 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.09637202 seconds)
    (26/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.35806684 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.521025309 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.256082764 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.337529704 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.262795481 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.022126858 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.233951751 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.322338914 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.735663112 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.220024189 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.287294123 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.236979921 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.448410952 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.140805381 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.752428388 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.677130498 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.35042823 seconds)
    (43/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.650284202 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.252143563 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.518804748 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.508150211 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.618564811 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.739074982 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.340242545 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.295908191 seconds)
    (51/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.875871486 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.288039101 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.879097753 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.658448112 seconds)
    (55/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.279329519 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.646560454 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.165249601 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.646515844 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.308209156 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.512076667 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.302751984 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.238594376 seconds)
    (63/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339820916 seconds)
    (64/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332819705 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.231973937 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.258293943 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.833983085 seconds)
    (68/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.278558821 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.525478837 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.267974118 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.238860931 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.55651935 seconds)
    (73/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.239420363 seconds)
    (74/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.586637164 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.669616822 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.1628625 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.908729623 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.474109187 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.987016637 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.60479763 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.279364846 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.245944527 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.245922249 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.273010519 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.240969115 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.398796193 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.615724932 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.338121836 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.792809621 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.33825988 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.045558985 seconds)
    (92/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.430800913 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.127828438 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.230564285 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.863722358 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.436484928 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.239386534 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.629930406 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.240635637 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.866853784 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.405815935 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.247244421 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.69336392 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.644047685 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.238780728 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.363346112 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.561158362 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.363022505 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.248646293 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 1.768966719 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.266257957 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.107745614 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.225020413 seconds)
    (114/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.366699769 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.274866112 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.504090825 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.35026735 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.350261604 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.382760426 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.806696923 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.753249661 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055758992 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.802911209 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.519514611 seconds)
    (125/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.55955549 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.263533183 seconds)
    (127/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.671919132 seconds)
    (128/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.266653835 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.342250727 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.964305399 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.318557658 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.956766086 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.081434186 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.269524004 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.792526536 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.85873189 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.782523334 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.677044583 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.168814827 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.242081948 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.355033872 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.265049873 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.031683687 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.256796748 seconds)
    (145/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.78068134 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.164053483 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.23887749 seconds)
    (148/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.433063493 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.231843005 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.935100943 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.347531479 seconds)
    (152/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.26701506 seconds)
    (153/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.354275168 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.603944407 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50987537 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.874724729 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.023113805 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.072653871 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197413746 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.497005102 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.133387947 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 4.263852461 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.243043565 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.181068726 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.661311668 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.268008802 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.901766942 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.292212693 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.354910215 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.259286352 seconds)
    (171/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.638402527 seconds)
    (172/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.287448412 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.257120111 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.275038257 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.252098176 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.246314549 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.805073198 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.328559225 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.441511957 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289871228 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.112950343 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.251612592 seconds)
    (183/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.244124584 seconds)
    (184/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.302427405 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.705633165 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.229151974 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.259669189 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.229409582 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.37525995 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.325166788 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.292699864 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.294000537 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.57259258 seconds)
    (194/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.114853283 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.246813968 seconds)
    (196/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.890652883 seconds)
    (197/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.479819818 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.661136967 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.687543093 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.74076929 seconds)
    (201/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.882624712 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.267342105 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.292980725 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.247096408 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.235781788 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.555235566 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.395499551 seconds)
    (208/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.730479922 seconds)
    (209/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.287069536 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.281829556 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.236076011 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.360816237 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.891933888 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.171712452 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.357923961 seconds)
    (216/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.285903858 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.436500041 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.157732886 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.660782868 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.260138402 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.2965534 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.266450715 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.037649591 seconds)
    (224/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.847503253 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.230674149 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.360489582 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.101307943 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.94323524 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.818079749 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.274146664 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.90463373 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.248594441 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.396302055 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.302537015 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.314373035 seconds)
    (236/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.464271472 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.262271584 seconds)
    (238/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.106019011 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.906525651 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.259589133 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.203757191 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.472868129 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.26409961 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.246875716 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.032357907 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.464311135 seconds)
    (247/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.65948277 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.317826679 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.31903333 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.257628512 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.288256781 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.274924039 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.307413142 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.234157006 seconds)
    (255/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.620909755 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.991289127 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.871301519 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 5.27381609 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.633255364 seconds)
    (260/309) benchmarking ("sort", Float64, false)...
    done (took 5.563703556 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.242247733 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.863683589 seconds)
    (263/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.483870906 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.758459828 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.913860738 seconds)
    (266/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.414113341 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.331883477 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.679551247 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.268597792 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.478662231 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.278448577 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.376502532 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.269939742 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.835388076 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.944102628 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.570155705 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.873135524 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.748071701 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.357705737 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.318145329 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.659391526 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.341146429 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.333235173 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.20179605 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.415764507 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.369378979 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.334613596 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.132789361 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.972483085 seconds)
    (290/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.796260362 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.061927946 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.333600709 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.593934947 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.705336592 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.665259692 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.266350606 seconds)
    (297/309) benchmarking ("sort", BigInt, false)...
    done (took 6.248246124 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.643364772 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.291683547 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.679984612 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.372417349 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.272824066 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.152330103 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.273903962 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.267420479 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.252017594 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.909667841 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.237663203 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.29507143 seconds)
  done (took 902.846923796 seconds)
done (took 904.021626661 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288002672 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279101495 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.264457517 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.283019083 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.372132274 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.291298492 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.276868177 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.267581409 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.312405893 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.313977011 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.261958774 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.293185368 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.266148926 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.264142143 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.262673296 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.279561947 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349289003 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.26355866 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27967866 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.273925327 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.280481915 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.262035672 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.31467065 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.292689521 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.26750971 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.266971094 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.265145935 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.28105128 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.376022093 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.267511459 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.267064766 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.276552823 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.349264473 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.263402391 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259696764 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.284324154 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.275006758 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.274980178 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.268229223 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.295476264 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.76686266 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.263946121 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.266421453 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.26813563 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.267475444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.270033481 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.267060052 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.272864181 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275508927 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284116843 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.752312465 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.280792773 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.269369854 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.265519674 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.277009387 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.267491114 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.270486209 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284634998 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.285829073 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283688983 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.341766089 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.273813851 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.270130066 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.285171158 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.273767669 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.791729795 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.261002955 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.270994842 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.768965894 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.272718378 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.793864489 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.273925158 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.268746359 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.281402541 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.299048601 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.356551103 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.264110368 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.264890362 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.273179411 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.262828838 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.278110495 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277202944 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.274641308 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.268952112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277854462 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.297241773 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.27871499 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.268696557 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.276649368 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.286205756 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.274633745 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.276953884 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.272110411 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.263438561 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.28035355 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.27245397 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270433119 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.270079336 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.274409152 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.279141313 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.767233908 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284790973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.266798155 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.266545399 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.270200397 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.282193961 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.772114211 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.269532917 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.291256303 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.31780298 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.270496849 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.344704844 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.272779249 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285481618 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.278767803 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.272018826 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.265063717 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345874583 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.765126326 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.282914563 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.269499059 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.267921314 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285011119 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.272043193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.266061521 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.362433777 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.269580758 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280301542 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.38899905 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.28125937 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.299870487 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.268342358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.273352849 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.304625916 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284284845 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.302144437 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.273433497 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283144856 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285652641 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.267669593 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.28121695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.281227053 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.273199901 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.276465609 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.266118647 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.299568502 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28361731 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282737683 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.292047384 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.391800887 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.268527106 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.350067205 seconds)
done (took 216.239994556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.327715818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.25828665 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.35201763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.266829681 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.365619537 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.365468856 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.262903492 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263949038 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264654962 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.641705573 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.264396647 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264750121 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.261075154 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.267334222 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.346284989 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.266955307 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.263307194 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.606578444 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.267402496 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.334043405 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.268596412 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.265522885 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268725862 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.647662251 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.266397582 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.264759147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.339359615 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.269522162 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.612159344 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.260921824 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.268317264 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.612586715 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.353888451 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.287658262 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.277935852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.272017717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.3671881 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.288021994 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350315299 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.346754349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.350390873 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.305053406 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.260882267 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.268084463 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.267183303 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.269106864 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.264217307 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.295934253 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.261625519 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.268344888 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.61216144 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.278240165 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.267800689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.267676079 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.268351274 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.297850162 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.266040283 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.270544605 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.357237486 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.268927582 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.330512581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.648068763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.647760608 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.270043086 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.262984996 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.266307463 seconds)
  done (took 143.986304822 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.337397807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.340783436 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.382374021 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.268580036 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.318771535 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.386951817 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.266970356 seconds)
  done (took 10.502837538 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.274197592 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.269390848 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319208468 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318662843 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.270189439 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.418307313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.269864473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.281017482 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.265453554 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.320281377 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.274289989 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.269712551 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.278878695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.262350375 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316719346 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.280773884 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383131825 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.26962036 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.268900803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.419597715 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264807882 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.278562213 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.322484686 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.284040038 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.271384264 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.277131889 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838986771 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.270735624 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.267960732 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.272495887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269948375 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.309942564 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.27161654 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.26687134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268672214 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384935474 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.269806806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270949651 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.271357652 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.270120922 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.272457565 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.272676228 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.269288797 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.267980214 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.272849425 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.293275906 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.271151287 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.271694788 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.271645865 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.271498608 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.322207341 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.273142447 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.270862157 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.26739569 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.327400802 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280359094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.271294977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.268708019 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.271275896 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271355786 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.423952224 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.321471177 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.272322604 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316659981 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272821916 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.273154759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.272271405 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.273446321 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324878996 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.271482525 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.319941559 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.269574091 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.426541491 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.293782892 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274093474 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.273207397 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.274462773 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272181106 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.275543045 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.280545876 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.272529765 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.273992903 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.278385007 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.271563669 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270919637 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374659497 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382672968 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.273225484 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.28599835 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.280823555 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.271852461 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.325925955 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.273600604 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.274571665 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327302157 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389394261 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.32682908 seconds)
  done (took 147.130726658 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.28072646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.283104426 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.274330743 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.291127021 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.275868872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.275389972 seconds)
  done (took 8.886905705 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.277749428 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.278328004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.27678476 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.274099667 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.275507378 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.277335135 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.275382122 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277677587 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279337756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.276094579 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.275110277 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.27943639 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.279349032 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.275515239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.27662405 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.275543961 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.276964088 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273061641 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.276072621 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275746824 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.37287592 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.276643479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277748167 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.276707446 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.281734471 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.277485466 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.283601024 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.275670979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.277644358 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.282613518 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.279772755 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.278098699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.27737675 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.284291994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.281030269 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.27811061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282847369 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.280083123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.272571493 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.280472483 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.281692861 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.27890903 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.278568487 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.281974778 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.278439694 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.283839926 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.284795048 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286806719 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.278422318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.281539249 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.281384948 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.276202432 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.279242491 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.280568936 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.278612319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280010148 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.285873203 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.278692534 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.278588837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.281055931 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.282711676 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.27961324 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278704106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.284216288 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.285876866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.280120094 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.27748933 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284733875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279658471 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.28208693 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.283571199 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.278306297 seconds)
  done (took 94.409559354 seconds)
done (took 406.111660102 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.748555237 seconds)
  done (took 7.956771895 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.586479418 seconds)
  done (took 7.799156494 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.910522966 seconds)
  done (took 23.129289719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.34477949 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.316322091 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.289117767 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.275498642 seconds)
  done (took 26.432017743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.869699434 seconds)
  done (took 8.080452006 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.288320593 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.272320623 seconds)
  done (took 13.773615807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.335737942 seconds)
  done (took 7.542203263 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.344037582 seconds)
  done (took 7.562087344 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.275610368 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.292183208 seconds)
  done (took 13.798454383 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.258152712 seconds)
  done (took 7.468243254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.881995962 seconds)
  done (took 9.096349184 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.281051659 seconds)
  done (took 7.494842288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.334276927 seconds)
  done (took 7.543416815 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.699681858 seconds)
  done (took 9.911005937 seconds)
done (took 158.796404017 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.275165864 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.277845873 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.281383888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.277138316 seconds)
  done (took 26.32315221 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.316930802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.31832638 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.319271056 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.328367514 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.321582648 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.317611788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.312733058 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.311493101 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.329186278 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.325480167 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.3203445 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.32097401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.320477879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.310123828 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.320197362 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.321141263 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.331469148 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.321296869 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.309498064 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.322101262 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.285939251 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.331020642 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.322165569 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.287345688 seconds)
  done (took 32.839499104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.484486331 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.354490586 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.439352741 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.337004144 seconds)
  done (took 6.827030344 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.337049278 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.337726053 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.350971231 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.390869016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.428570068 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.348595925 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.311370581 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.306979376 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.295303467 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.34013513 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.414679372 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.354662621 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.443307971 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.284840187 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.481410702 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.284792278 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.285942723 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.338932871 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.388832474 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.404764913 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.286993696 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.33742742 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.342479068 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.355207014 seconds)
  done (took 33.66554789 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.284879674 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.294548189 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.292596829 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.285711195 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.282901879 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.284184223 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.29244317 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.287280902 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.307302661 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.286749996 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.286257934 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.28717774 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.285606961 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.285638222 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.284906079 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.29842817 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.299961685 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.286298897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.288456803 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.292507175 seconds)
  done (took 27.008914664 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.2804429 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.139786067 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.632229376 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.53681792 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.279523733 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.278675128 seconds)
  done (took 27.363064525 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.358487758 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.507194715 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.285579759 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.685726454 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.766018458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.288653038 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.287328706 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.547347404 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88652902 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.87316124 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.345732571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.358724629 seconds)
  done (took 19.407421135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.285754981 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.280060931 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.2854649 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.297167176 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.346520233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.290874585 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.293046359 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.281951371 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.347765759 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.35167929 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.290840492 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.348739209 seconds)
  done (took 36.918514621 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370703305 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333633188 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.407042341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119312493 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009728388 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494603257 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.180041355 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281326284 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.289016513 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558991515 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300440428 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372750032 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543707124 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280893097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299303221 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382695848 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513350955 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79538895 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285444589 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.499363047 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3091324 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296662352 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.6158954 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.312514087 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496909967 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26814355 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.543692387 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.061234694 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588052859 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295016589 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295294868 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283351688 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562925438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994224338 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381535766 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295436338 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153312026 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918265103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.274861469 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.50700882 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291474684 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288934205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296332078 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287523245 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.219175328 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292992886 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738369809 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.294106194 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.997414033 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285975567 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297826378 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379640825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.293085788 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278482081 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382389562 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.292699779 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.284059689 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293527252 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85957395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.087231561 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289653733 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.222690403 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.755831402 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60304657 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933852182 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.388719138 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.290092506 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291645483 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223459022 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.563871476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303323719 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431973421 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.310753402 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949753688 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034904896 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.296186295 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.219260261 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859255422 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291542984 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.223180595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518439758 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062837855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228452357 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.233030256 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.223601964 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042679165 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295716296 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.73956507 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292011202 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.735897001 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.301140012 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30537356 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313475651 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.513872628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.172944882 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288757862 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.293837574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407724011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308103171 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733609163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226304795 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.28940578 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546303322 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.497607223 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305144681 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.389423357 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502248583 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291229488 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.303251485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.289254324 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.299667154 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.909322637 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301742587 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091995404 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304057327 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.068760651 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088368857 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290479914 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390511693 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291213179 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557562278 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.112206979 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.188633933 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357021121 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293629483 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290146831 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.61845021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142749807 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.192153608 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.292744781 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295337284 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.301730065 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.290810407 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253028969 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.286935263 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297812606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.070324364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516438988 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289694818 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566116198 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22538917 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428423045 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305042323 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.512043269 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549664082 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.288201014 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554750629 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301467416 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30303127 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301894534 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309456028 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387947991 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314035902 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.291752264 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.552983604 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.295563247 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.296329962 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.614777191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072866373 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296068562 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.297472291 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.182582679 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904557259 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262795967 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295805898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187069164 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.304807997 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3594 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297116218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.301268553 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.274865153 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277803622 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.298010893 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.302157498 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51538895 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30420489 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.598683002 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37380306 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.500496711 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921960219 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307467505 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.227320477 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.00464157 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.986975258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293990346 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.484718229 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291309984 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302213301 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304231951 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.942298939 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9129089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297091013 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.534593206 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.298362343 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303783391 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.299900962 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295186187 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.220934267 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126193003 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296399329 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.306348129 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438012312 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.3070718 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.228203322 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81133848 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.300157871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293799973 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.070946475 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329030812 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.530155432 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791470695 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556863659 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.123733025 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307897235 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.654505047 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.326302688 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.296864802 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292683824 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320876585 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.313687301 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316239273 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.30606032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.557505354 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.746116546 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863618746 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090406646 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863232015 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334298853 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.300916702 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203414296 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.748001793 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232888561 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954970917 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503355143 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751594521 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25616919 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505925588 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.568639427 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126797994 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305270666 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526040164 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327432481 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.299057323 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310788493 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507768926 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329850411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.301373687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225761298 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.595566547 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536425179 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297082058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37846868 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748916249 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311213834 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.073829445 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.296031543 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.763319885 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482833062 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.929320524 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.69259899 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308358004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312948762 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794641479 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300123049 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826074776 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9770786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311631296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.508499527 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239085684 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.30824896 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.308700333 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.297354491 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.718698059 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.301869528 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.556435437 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306492958 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231312097 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304229184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863797051 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.153922938 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.303281403 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29678975 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124066625 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314373961 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604681519 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.298674742 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.27728166 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300147156 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233758332 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231286594 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.990214919 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300896378 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268824666 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815305933 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.713524449 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354644139 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318172562 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150559148 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554603141 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.310849246 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926759454 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525745257 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.22868706 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3221172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397852728 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310762474 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.285517184 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.194566604 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535358538 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188540249 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523653451 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.438137266 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.206713786 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297025332 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514537078 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.199182658 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312286284 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565437378 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.010348525 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.324295191 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083562442 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324714947 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30785085 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.320384855 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.767710283 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306086356 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371170382 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311999434 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.310325154 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.310337321 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484329813 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301748021 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303139318 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.314519882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393883941 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161427289 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.271071395 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.073405316 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936443221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079665406 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928504946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31318845 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303927139 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310907224 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236197946 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446480201 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.83107066 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573351812 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425098086 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.856518691 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323393672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302365859 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311721802 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513747929 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57485047 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.176848905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314168355 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966064825 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.197315462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31489083 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.515086665 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826791419 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883176232 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417198118 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310423745 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752776298 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576040385 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395377891 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302181914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89838171 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.313876444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.78927229 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.308207001 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311754905 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450102805 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314154607 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021397023 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.314954803 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.46383314 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.077432657 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.648483776 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562144844 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.876188478 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.312706902 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938462548 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067606204 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56978391 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369934881 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316208208 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.424203292 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448056876 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.313316619 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204917115 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303270329 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154184142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.014165175 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.315035275 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939959238 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5703727 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.300497445 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.314269893 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326886211 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.313066445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529042553 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100901182 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526117102 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31283245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305225333 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295940632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936465706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317434395 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239123991 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.305262536 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57136745 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.540584912 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329993346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.757949736 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.016681958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889454647 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.277142258 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327941192 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313036057 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068212672 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936947497 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.281831872 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831784325 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.96672284 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318932745 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579445574 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.310495111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31090656 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582554025 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.309523464 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.305694013 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318866229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.942045675 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150758045 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.316526062 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.581691826 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.244494374 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.536579093 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999716356 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242890106 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314253443 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.509888387 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307304539 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426842912 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314901187 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.308600927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320573191 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.04015025 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600006684 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.308836405 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.295606317 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.313945591 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321984221 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313174447 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553866092 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31193908 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.981872918 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.657326323 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568262725 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306909842 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.291189781 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.312275127 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308226852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03497061 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290256577 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.967828206 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895985473 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.307346824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.320706465 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313587989 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.524443276 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521442966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324194852 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321646063 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315375415 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322408631 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.212615831 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.08268393 seconds)
  done (took 1579.166747931 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.350740763 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.321164547 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.320084236 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.386842136 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.319017932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.34281097 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.415868263 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346392032 seconds)
  done (took 52.045057104 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.325740884 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.467991881 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.341868195 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.317057408 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.318615047 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.309563939 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.803561698 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.320695189 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.315333903 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.317901809 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.316192362 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.318198431 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.013979782 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.315492064 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.320885022 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.292621702 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.314042592 seconds)
  done (took 64.98092853 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.318915417 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.637533378 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.339875284 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.309644992 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.563820827 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.316573429 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.572269996 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.336441463 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.316298958 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.499861956 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.983247945 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.311619752 seconds)
  done (took 79.748685037 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.318577937 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.316812348 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.318453684 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.317080955 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.317159637 seconds)
  done (took 7.830704135 seconds)
done (took 1995.338513528 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.557600984 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.082171493 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036161676 seconds)
  done (took 5.360650641 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.457216945 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.506055331 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.678400487 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.662632911 seconds)
  done (took 7.545581731 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.587808357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.679727838 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.506974047 seconds)
  done (took 6.016755052 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.847322102 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.307891426 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.451307605 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.30617379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.309933527 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.308659707 seconds)
  done (took 20.171598024 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.315058697 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.316685408 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.313246471 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.31799436 seconds)
  done (took 6.507557035 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.295213702 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.027182387 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.297180698 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.314749693 seconds)
  done (took 18.176893102 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.062592913 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.07481501 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.059357946 seconds)
  done (took 7.440382449 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.323786834 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.157743612 seconds)
  done (took 9.725010787 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.616593289 seconds)
  done (took 2.858094888 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.445128215 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.6441266 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.479271046 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.334861383 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.49725297 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.505247674 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.152886794 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.643144636 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.319230828 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.756533444 seconds)
  done (took 29.022177874 seconds)
done (took 126.23038691 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.37885567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.332326301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.519270823 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.351457934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.539376727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.520607231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.596131341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.32016589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.860191776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.847678922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.357713708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.540721998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.543392563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.333739411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.545055154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.341873553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.541105971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.431436028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.040024525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.240189141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.59377538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.993393953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.177677343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.022707192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.536673986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.469660958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.572275979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.326163528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.21329666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.620771967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.496900365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.316796786 seconds)
  done (took 192.765678296 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.312094303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.310988561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.310477276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.312371098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.31047417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.30930003 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.311902412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.329514464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.325208107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.323751843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.308756068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.310194114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.33052982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.324994403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.31091996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.310124941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.31620898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.308646132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.308443235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.319568641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.312018281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.3238721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323974401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.318820222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.312415355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316664268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.31046172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.310397722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.313399355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.32418543 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.310392745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.328584283 seconds)
  done (took 203.356649991 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.317769085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.311588532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.31239606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.310842269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.324978758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.313288704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.330562689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.32252419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.312094013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.334932837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.311178509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.311280676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.313122599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.310860418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.312164589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.313238844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.313276982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.314396094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.31185284 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.326250119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.313641649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.331718593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.313676953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.313379052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.313162407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.31420903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.311243531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.312742422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322833933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.3122665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.327556953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.311946811 seconds)
  done (took 203.375131593 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.522374721 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.323272888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.324501591 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.277029308 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.325760427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.323080936 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.31867747 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.51690333 seconds)
  done (took 14.180455997 seconds)
done (took 614.922625588 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.712386271 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.413873363 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.526795356 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.344657656 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.153389427 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.340623234 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.346151948 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.535062947 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.286089193 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.533762904 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.659158449 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.338531996 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.79915301 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.34123096 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.615238394 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.449345353 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254871904 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.362414904 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68099778 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.904386876 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.604755111 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.852141418 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.532586204 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.277655012 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.806838481 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.846469006 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.096360364 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.257753396 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.340729092 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.675389632 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.073904122 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.361455747 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.407511864 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.389119714 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.446322103 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.430825036 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.329930376 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.384550307 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.534573008 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.593591129 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.91478772 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.082446667 seconds)
  done (took 92.08664473 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.31243949 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.311485715 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.312899828 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.313810734 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.312613233 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.311414948 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.311434 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.312191195 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.312661468 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.311158786 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.312339519 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.31334359 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.311635448 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.313586421 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.314629497 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.312292068 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.314079162 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.314595781 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.311833558 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.311913506 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.313809871 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.312279569 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.312348566 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.31317108 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.313959198 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.312698231 seconds)
  done (took 35.383407638 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.329863876 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.585870571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.761254055 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.329620008 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.32569927 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.329854846 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.413366784 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.327405802 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.328524421 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.32951163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.491383776 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.327915766 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366477192 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.795712 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.327538804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.32939844 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.329321011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.327283739 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.59794004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334183901 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.433046286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.328009269 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.415546691 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.339636386 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.347886708 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.326797414 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.331491455 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.858919086 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.327953803 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.493393144 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.181236109 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.410079873 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.810064869 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.775284268 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.177231036 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.330026125 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.327140852 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.497800746 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.3264044 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.327441923 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.414728539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.328190824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.794282526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.980349075 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.342441191 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.330672595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.884922003 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.495411777 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.60605714 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.335959009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.800157687 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.330379121 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.330247156 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.330061804 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.607069608 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.336540002 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.328942689 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.896898594 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.349694156 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.413272903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.330661628 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.329262589 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.604117081 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.329570821 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.591061653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.329067657 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.340035347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.329931711 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.795644265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.333615663 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.996050373 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.344331383 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.330602695 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.490697132 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.588471017 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.918282243 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.331574137 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.605967672 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.823706475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.41138273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.333267185 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.853246567 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.417635423 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.333504111 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.333385865 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.333770463 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.332686872 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.376821025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.414842921 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.925195558 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.984017671 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.925252941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.433805124 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.344155126 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.331320156 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.908212967 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.35652156 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.331044123 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.78304312 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99275986 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.34451832 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.338780167 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.978890499 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.346489499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.419272584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.336108878 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.783101791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.329369204 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.377926772 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.330454513 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.339612242 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.337267549 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.418818357 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.335272436 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.333634252 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.96998453 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.51741538 seconds)
  done (took 176.182252596 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.327806817 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.338059668 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.33436725 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.322784977 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.325195548 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.330977026 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.325475039 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.326448195 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.332477485 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.325302117 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.325779618 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.328726217 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.32614923 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.337560441 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.334533219 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.333250266 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.940760506 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.326507313 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.326497838 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.322537463 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.146344134 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.32828105 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.327709317 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.322245336 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.327376662 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.326104084 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.35260519 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.327774229 seconds)
  done (took 151.909950929 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.334224459 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.947002168 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.332029133 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.480247113 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.356545675 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.331124081 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.477414508 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.395480417 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.333559031 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.332316826 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.333569203 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.673779384 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.333328629 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.89325124 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.537273332 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.482022277 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.887941056 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.335334911 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.332937921 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.332770348 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.481780628 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.340877877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.664065542 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.945173474 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.335726261 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.950630027 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.320653915 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.337783153 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.334105651 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954708098 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.332754035 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.667326708 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.418532009 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.40078033 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.957904573 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.89459904 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.909781996 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.491621752 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.331735584 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.331783494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.334673794 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.32540373 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.991645322 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.336983721 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.337296434 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.98257259 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.35114395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.337611333 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.344908548 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.334037825 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.402413673 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.400923567 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.687655201 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.995418238 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.424435607 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.357096831 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.481031055 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.736579712 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.335212762 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.93033322 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.323762704 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.960295363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.339634956 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.323863767 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.338123877 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.342569496 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.504460712 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.484576171 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.932053393 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.338619557 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.933358466 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.503897598 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.337950914 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.338351526 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.338707159 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950003253 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.933580346 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.504371638 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.487097768 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.550434794 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.329422903 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.336284651 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.326733311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.423808694 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.336404125 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953705388 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.931875565 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.340899194 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.339317584 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.340372412 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.338338008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.532793745 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955514519 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.420688351 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925866186 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.682178183 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665271053 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.336491609 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.402774218 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.338502776 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.667851707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.338129357 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.403772573 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.808239338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.671088141 seconds)
  done (took 161.468924462 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.608925965 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.660653204 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.438124482 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.463270476 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.951155808 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.93222886 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.664636288 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.467457381 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.451610478 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.602837631 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.632550992 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.431994796 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.530793946 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.421604503 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.12376176 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.410631407 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.435746265 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.472591332 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.442994879 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.433037993 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.994257819 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.641688435 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.531166963 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.431916389 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.4423579 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.214638458 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.924995608 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.888700186 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.527468194 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.758728638 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.88822383 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.508736343 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.348193276 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.035001167 seconds)
  done (took 65.9775889 seconds)
done (took 684.258022105 seconds)
SAVING RESULT...
DONE!
