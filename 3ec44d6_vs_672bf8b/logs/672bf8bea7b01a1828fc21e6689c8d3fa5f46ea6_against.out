cset: moving following pidspec: 10649
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347187541 seconds)
loading group "string"... done (took 0.589574537 seconds)
loading group "linalg"... done (took 7.35843276 seconds)
loading group "parallel"... done (took 0.170530723 seconds)
loading group "find"... done (took 1.183833347 seconds)
loading group "tuple"... done (took 2.077085426 seconds)
loading group "dates"... done (took 1.303151689 seconds)
loading group "micro"... done (took 0.241761213 seconds)
loading group "io"... done (took 0.993770094 seconds)
loading group "scalar"... done (took 40.825375172 seconds)
loading group "sparse"... done (took 12.958657752 seconds)
loading group "broadcast"... done (took 0.999325135 seconds)
loading group "union"... done (took 13.994273341 seconds)
loading group "simd"... done (took 4.656330476 seconds)
loading group "random"... done (took 9.383121955 seconds)
loading group "problem"... done (took 1.991556475 seconds)
loading group "array"... done (took 22.283261907 seconds)
loading group "misc"... done (took 2.001396904 seconds)
loading group "sort"... done (took 3.400563415 seconds)
loading group "collection"... done (took 19.115842839 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557107928 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144255438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119184561 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141345348 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187214699 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13310872 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143667442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086198901 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.904059377 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171555643 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142747526 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517811369 seconds)
done (took 4.995271472 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.197209669 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091715454 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097997882 seconds)
  done (took 0.879536698 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066117955 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13154858 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080909522 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068168849 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067445854 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081537149 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067092768 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066094907 seconds)
  done (took 1.25848702 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077012126 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070101668 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084937228 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068581902 seconds)
  done (took 0.99640313 seconds)
done (took 4.101436933 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.936977207 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.251892262 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192717991 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484711796 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132625331 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189700124 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665881905 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335548177 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216492936 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102516545 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106075354 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390403696 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107719161 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670102599 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075987579 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108176348 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163928402 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424339253 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082191351 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083098966 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104049883 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140793133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102115641 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078409381 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169386128 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069959149 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.151868668 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095033153 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069367942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.247385105 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18933018 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680189757 seconds)
  done (took 10.558958133 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102910753 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12020848 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070247622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141181018 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120628765 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071529663 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072327153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083362404 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093176955 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161808994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116206823 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124268733 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068475888 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070248995 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102405358 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23084674 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094833377 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102252523 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072776229 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074956775 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12442446 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097681969 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082095095 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094339041 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151754613 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192443447 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099745213 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115099281 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070582442 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098776949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129336686 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130185321 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068978887 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084357468 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158684747 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09690471 seconds)
  done (took 4.597453921 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107078991 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178979086 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093366333 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156207836 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086269499 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129941125 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067412341 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102008342 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252858417 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.09330846 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492405494 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129653497 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089428388 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069027273 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087397037 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068714801 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.607518292 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14557091 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104831806 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103637939 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074936105 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086817617 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097597105 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086972214 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067064169 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08715188 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.104420896 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.316586574 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148404864 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069849582 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.273797492 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110994077 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07235985 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122100768 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18479521 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0968515 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124761691 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082281189 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068030149 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173334501 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074165902 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084228081 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090252819 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121327042 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122197298 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083902912 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069136545 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183222224 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06707495 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100825222 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064872367 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.948529151 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166739861 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080599007 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068303909 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303558609 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105408131 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068297862 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064662938 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254426713 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.161524912 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069886243 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.090256388 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067306753 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085485728 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368870719 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069270326 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.784870111 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070760681 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078091294 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086245564 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068603685 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090764733 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073483751 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102320594 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067712004 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068356333 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08420404 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067149596 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085136683 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088186935 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208343318 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08504323 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071300219 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083034678 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090395514 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114097876 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073905846 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068450739 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120457746 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070585436 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084784805 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104673592 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087833911 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094647854 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107817428 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085500375 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129295254 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068985683 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064459865 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.132376991 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069044953 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116826323 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073690054 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116000964 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096632446 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074107561 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156371238 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065554962 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082594437 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068318773 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083005438 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069377046 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068678152 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100120317 seconds)
  done (took 21.405988965 seconds)
done (took 38.365309947 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321248072 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096603181 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096488059 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078118678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093841445 seconds)
  done (took 1.460760775 seconds)
done (took 2.203719625 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153144228 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102567957 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080874116 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098697717 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081210849 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10359888 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116746382 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082359322 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118040459 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064665691 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113426687 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064494111 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079373459 seconds)
  done (took 2.033766647 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084918037 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0872535 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088156119 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0843091 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081375137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084207228 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081534304 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105368059 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08036678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087638998 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065626659 seconds)
  done (took 1.66634228 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084134851 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086299489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087667434 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082891641 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080746017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083808525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082319768 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104887843 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082054966 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090434517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066947731 seconds)
  done (took 1.672020453 seconds)
done (took 6.105631957 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081372086 seconds)
  done (took 0.816696777 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.745524356 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.825110108 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085463123 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136999195 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22213845 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158301476 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.451884081 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112398614 seconds)
  done (took 10.684754402 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.118702029 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09088118 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072642219 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087183681 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0702613 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089306465 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072772286 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072240765 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085055422 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072593691 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084394702 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072616234 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088856508 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071264967 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084087326 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070539773 seconds)
  done (took 2.11061429 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.107521591 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104615591 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092368374 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077400293 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090389292 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073570105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092887648 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076584586 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087741123 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0744813 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093020077 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075224824 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089049728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067153845 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092138569 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078696918 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088202503 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075484009 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092413945 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076684106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091433227 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06713494 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088917798 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076184938 seconds)
  done (took 2.885867564 seconds)
done (took 17.239204215 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137089882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079569872 seconds)
  done (took 0.958321156 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085717526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102537277 seconds)
  done (took 0.93687468 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088054219 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08429647 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09211833 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094804833 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083528511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067211397 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103429498 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068095845 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082689182 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068570261 seconds)
  done (took 1.581860645 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072545434 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096925672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072063283 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098903988 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074628284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081376849 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074585412 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0846142 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08036199 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079545327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072380415 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100002601 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073445138 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101013105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090427765 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070486181 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087453086 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070051465 seconds)
  done (took 2.231535207 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069267893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070013236 seconds)
  done (took 0.89005003 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07035802 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066227155 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084925904 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069612919 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082383764 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064987308 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079977788 seconds)
  done (took 1.26897147 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414750735 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110976608 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266605414 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072698356 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106848056 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295861169 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067015577 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071990492 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088961593 seconds)
  done (took 2.286935973 seconds)
done (took 10.900463906 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082234257 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089278185 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112538828 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.43536181 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10675497 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067498617 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144234047 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21487132 seconds)
done (took 2.005885827 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129420251 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631002867 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410357337 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216882246 seconds)
  done (took 2.012560328 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.389705739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091701924 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074162321 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068027091 seconds)
  done (took 1.381989168 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069056626 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072030053 seconds)
  done (took 0.896635013 seconds)
done (took 5.177680076 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069421951 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.116233205 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0668926 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065900061 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082377458 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067490272 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064341018 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082524382 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067257458 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084254989 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067845052 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067603751 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08303901 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065031819 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065205156 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082840608 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067235788 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064821893 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081133076 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065581854 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080088197 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067473028 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065269177 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080153044 seconds)
  done (took 2.565273781 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088792616 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086161493 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074880386 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090887428 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071558735 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088914557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075220771 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0679667 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088463017 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070349615 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086668054 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071750089 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084973823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07200472 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085676777 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072139006 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087905122 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06869725 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069973831 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087309953 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073089273 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083928391 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072408762 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088735134 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071894182 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086283728 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069958917 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083833656 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072336937 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087285388 seconds)
  done (took 3.13759649 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074258303 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066200997 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083342148 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073808206 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065383503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082160717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065411565 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081393516 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065784827 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065451367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082705774 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065066312 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064474724 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084032479 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06556429 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084705592 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082717557 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065342703 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080876553 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06615945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08395972 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064842647 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064924159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081006983 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064970292 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064537401 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080775003 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065394974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081592282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06522815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068348977 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084621221 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064888562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07202949 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085226695 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065144506 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069102014 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081077482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065886454 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080473009 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065803447 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06556852 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080591696 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072098793 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066097567 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083303644 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065623313 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083127798 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066364163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068289866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081511362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065261033 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082585021 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066382438 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069453814 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080945894 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066722505 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065380007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08271692 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065078721 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080452426 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065487146 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067827312 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081744446 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081128931 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088287239 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065689379 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066611989 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082710025 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068166073 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067219392 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095207237 seconds)
  done (took 6.033616687 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122556362 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094792706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083719121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067048296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080098959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065697992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069011277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081306152 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067546659 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08722654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066092777 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083197305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067102075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0817916 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081679948 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0676468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086748219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063722717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066173131 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084923798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065814156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084712288 seconds)
  done (took 2.483665104 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192550788 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090427151 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111208394 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090739559 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086111534 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075538538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088208398 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071166771 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071702396 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086032408 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070667314 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08746328 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070219309 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085989028 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069716327 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085873778 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07262927 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086867183 seconds)
  done (took 2.356323376 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080843771 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069163016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108376985 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067937542 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084984026 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070973701 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089575031 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076047047 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086302665 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068048837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092682896 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070378177 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.195504678 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068330116 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070022634 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083774795 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070825813 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083816647 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076325004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088852993 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073229423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092255715 seconds)
  done (took 2.632748347 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083650898 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069438673 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102640173 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08641586 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064212825 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066066081 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090111332 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068476885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090610432 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069145343 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0840628 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068059423 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073535129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084264666 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072486425 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083819534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069560925 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083295322 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070338753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06386867 seconds)
  done (took 2.309367781 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091522323 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087883102 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069907911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093707256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069324506 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085663845 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079131012 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085104277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069991637 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110068198 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069374257 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085671901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078615797 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090352608 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070293895 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093259904 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078111282 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09382027 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085511476 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069644956 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110911574 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06989403 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093895966 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07000604 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085434688 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069812643 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085532314 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075472472 seconds)
  done (took 3.088371481 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070193489 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069980194 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083888093 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066202073 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06516506 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082107097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065893205 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065543696 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08515307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065534601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08370072 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067736596 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06821438 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083226811 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068069381 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067484466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083920721 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066540033 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065398741 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081148039 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068002356 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083118071 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068141509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065210734 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08169067 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067390263 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065605832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081090082 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067922884 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065201143 seconds)
  done (took 2.940416525 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079748508 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091937418 seconds)
  done (took 0.943471459 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067851152 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083109904 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08142966 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071455948 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088684567 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068593196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092846028 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072421876 seconds)
  done (took 1.396043269 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085852627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081189379 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087537056 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096914883 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078247267 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085455225 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159213697 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085210449 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075062809 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0825377 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081896154 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067206466 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092357186 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068186119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090933357 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074831253 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082062865 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074227355 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070120232 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083481801 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069632117 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096365947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070685919 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082039289 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069469327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077785881 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097091836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069437009 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08824046 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07665736 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089974104 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063082898 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067875801 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08583678 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066836273 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094752511 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084585697 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087713973 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077564256 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085581155 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07893068 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079958356 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07305523 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074346833 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094980897 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068597638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085363568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063392705 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082538054 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070955479 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063684349 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084899647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062875742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092012918 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070956648 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078713985 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082883992 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070221639 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087813594 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071729257 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090899375 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070384177 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070495571 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083927948 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075798316 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089332431 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077839593 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079645201 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062185035 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066718095 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094619611 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090857063 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090355799 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068770189 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085289967 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065976629 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071606363 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085293048 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074939534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090870213 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06865606 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090833073 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075206283 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084081369 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070956243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075644161 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083053615 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069842877 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082879767 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084832708 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083777852 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066092267 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066105249 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095218164 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071364017 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084134584 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066619696 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091754383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063107487 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069104463 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085565572 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069291203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095789221 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073750084 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090378028 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077010511 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092372564 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068350624 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071220216 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082059689 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068826891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084055146 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075589985 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062216707 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087241758 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068872935 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085485445 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077082886 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083167546 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068136027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076252807 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090365401 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067653696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081544473 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071022008 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067300607 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087835367 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076396482 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083077875 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063733158 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07963528 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071920577 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0680869 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088027597 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072699652 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087533 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063036358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082734569 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073522408 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094525575 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068871979 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068757129 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091023614 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06990491 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084237257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074627376 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070842149 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083897754 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074181288 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086587363 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063497098 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087511321 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070847687 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067486438 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088553728 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071770281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087714137 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069214404 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067175959 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090943549 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069563956 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084231223 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068309693 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083980906 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079460465 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070919465 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08067833 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065749475 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092984966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066740218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068018195 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084905122 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071041769 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086026139 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066373882 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08415813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069824658 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079012248 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090020644 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06968797 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090659442 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080647543 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08520627 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07136025 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084440887 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069294167 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069212307 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094404193 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073154598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089369263 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070973009 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081811128 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073918647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076054486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084464459 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066247115 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08371602 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072519681 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090569187 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072785201 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068715437 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083494546 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068895418 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089330002 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071278622 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068623377 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086231012 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074102925 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084572965 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075342287 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086257592 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078963262 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089652661 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065340957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072661665 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086544406 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075445316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082471181 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068088811 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068614804 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089007821 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069051316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089929182 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063944467 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076849802 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093504833 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068316422 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086942867 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069327864 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093155092 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070548412 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072864635 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089815335 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075108359 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096013151 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067461521 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088587593 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07909565 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068293543 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080147755 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073516686 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08404325 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068187659 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066668276 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082589284 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071695799 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09350752 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075372778 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080002302 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070949151 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066799835 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084020588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063859377 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089863422 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071337785 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068449446 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091864506 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069471766 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085531926 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072688715 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084511365 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069191188 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069434623 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088507723 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069113697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087876054 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068243331 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088032297 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066880544 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065768596 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087655907 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069190307 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067607567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090810766 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068723894 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085164171 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070959381 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085689965 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070061595 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068445004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086163709 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072439166 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087930305 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070571886 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072514169 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082825771 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077371795 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087183339 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078781472 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069522696 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085789058 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075744526 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089960506 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076445138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088613421 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071534277 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070879334 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08799952 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072860402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095250604 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068177777 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099129265 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078746701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087958352 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073266833 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070627104 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089733894 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06939673 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087857064 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071205842 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070149356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08798065 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075093475 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089703736 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070165373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071915616 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088928784 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07031708 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088731255 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064258423 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069222097 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087091089 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070118806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098712872 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071107897 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087250957 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068695257 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071530302 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087157739 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066919169 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095416408 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080049398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088121291 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078258682 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068599909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090003803 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081499303 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085168328 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068169357 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085612167 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067976358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077802104 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088733474 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079586328 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087589908 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070288304 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06703613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088452246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067844929 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080788095 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066826943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071883555 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086965303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06949781 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088257047 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073534256 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06993121 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096189853 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067523233 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086521663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069667036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082473975 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067227124 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067517104 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088195411 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069564522 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065506874 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082846084 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069124742 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086262439 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069720683 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067995203 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087932359 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075874599 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085991203 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072513179 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088581166 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064385319 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070827916 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086022291 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069164741 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084714821 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072330952 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071805336 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08792242 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077576011 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086023019 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069459843 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085904549 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067093887 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068463902 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08548459 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068831332 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08433898 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070287827 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076301375 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084467116 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071427892 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085219463 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069875007 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092367808 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069296908 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071697129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092690367 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069272975 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087951552 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076782264 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089909403 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072366437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086318309 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070563236 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074050391 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085426713 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075110486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085599591 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069827672 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070687916 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083686534 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068981734 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085542626 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067974924 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075750507 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087319436 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067835903 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084582397 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066992037 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069226036 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089625734 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07684734 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0878619 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071562194 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08075966 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065874648 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069718697 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083904262 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070427724 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089641747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074855126 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071107399 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086806192 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067731164 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094803091 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07450173 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088846941 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066099352 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072679075 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086842678 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070875308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086342737 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068534276 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069778271 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090365545 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070452213 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08573421 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075733061 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088469549 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069767708 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069519578 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086736957 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069045591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081636063 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069210269 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070942359 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090990337 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071197633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085640569 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079486592 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065553506 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08613108 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071948444 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085749648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07307795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080743225 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070711935 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069519625 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086948576 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063938515 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085242935 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066373534 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070838975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085545689 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064645459 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097103741 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078242042 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088968151 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067732913 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067614356 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081063302 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064406917 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084189604 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069253157 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069715422 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096443456 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068413827 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084560464 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063875901 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069186432 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089490483 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07228655 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083553175 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06433593 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066905542 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088718873 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074964883 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084102136 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068245139 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071134974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08813445 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066842674 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088967156 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065426969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089395623 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08295095 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068840199 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086298038 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07530534 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094484888 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069572099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080996525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069947632 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071891293 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086453811 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070114659 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087282108 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084272339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089457086 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068263756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084588257 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071237645 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068243819 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09445721 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069840597 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087232991 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072950017 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069098015 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095307471 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071079177 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094216327 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070980079 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088912447 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06771725 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085733313 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066882802 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067293569 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087584227 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069299453 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090377725 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076812698 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08553541 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079815516 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095784599 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070671234 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065294286 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085687603 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068392582 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063263269 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087751492 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066934027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085103727 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067217986 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066945368 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087251248 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074916437 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086630533 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070784793 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085429061 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062638883 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070928038 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088404563 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07141302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064584402 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086130826 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069402467 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090320084 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072314334 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083987558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070115772 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070174318 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087121515 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06482877 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09352008 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067849192 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071757227 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087120083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069687276 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088590752 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074780247 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073962487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08798622 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071350186 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09485786 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071506362 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083816649 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067338199 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074196039 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084584911 seconds)
  done (took 47.299668167 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113060003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085761736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065066303 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083106245 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07709128 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083328123 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064816483 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064274581 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08407298 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069294323 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084481328 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065676164 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093716137 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090635807 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097514329 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088583565 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065523423 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06650445 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084336233 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066840511 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093482676 seconds)
  done (took 2.50012919 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09091259 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104794995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081306757 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102774652 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092408232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079872483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096441526 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079699923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100907722 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093750736 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082399715 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097935481 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076072156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093532273 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076110442 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094948274 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100257597 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0745689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097004172 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079449585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094576199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079132104 seconds)
  done (took 2.780422128 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070810783 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068898967 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089932157 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064617426 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067739917 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082809874 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071708382 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083882736 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07148609 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06655063 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085892045 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066990005 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087324114 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074478601 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067601165 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083662095 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133071542 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070916079 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086323565 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069646784 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063728396 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088282116 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064054683 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081652624 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067003841 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072301995 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08681025 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067315701 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087018828 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06798171 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069364222 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085863164 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069871359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068824097 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084827659 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068400576 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085104128 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06785739 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063985062 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084682495 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068409349 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082185634 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06903522 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069518352 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084224881 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066448275 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068735176 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086091073 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063930907 seconds)
  done (took 4.536110683 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088778965 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.141980596 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08916274 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124118776 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083445475 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095118881 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07219705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124368789 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085618035 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067160203 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104001253 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08289812 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087043325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072948238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093788189 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068606701 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086603334 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067319044 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090659663 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068158091 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090716997 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075149096 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101175302 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081305794 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090411798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067286975 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086140652 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073286783 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099498887 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091744336 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073906959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091375084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084594198 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092757089 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069184772 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088989389 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084877131 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086849776 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071278804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083631733 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070801539 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090747558 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075873322 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103651229 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06964504 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09191141 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069135068 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083550688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081466307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089692961 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075925755 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102746581 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071996483 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086812351 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072479295 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101922657 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086683356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066995419 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070921441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100072724 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084055595 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072812875 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100910246 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069809857 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093766692 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083105237 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091875438 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071932377 seconds)
  done (took 6.759231925 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080159749 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092686056 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083390632 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102331186 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092698238 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075947138 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092835159 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076305086 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092220409 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079958578 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093611784 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116110278 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070160252 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096297344 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074955515 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093620636 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074909367 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093461734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092888751 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07511773 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093081398 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083429369 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092658163 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100757998 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104873244 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087837072 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074401782 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092359727 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101169417 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074895443 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104210471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074864286 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093231336 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100374058 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086900465 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093524403 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06730049 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092901507 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075257311 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092710034 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069470368 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101425632 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092666732 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071093313 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092883872 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074681183 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101520872 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.10527021 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07788885 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098077557 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075002146 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102202698 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091978706 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074958351 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101764263 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127610996 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083387849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10150958 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092241898 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083816802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101061431 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108206582 seconds)
  done (took 6.392487975 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091574772 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098945264 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099078579 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063818023 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066987473 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091577643 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066651912 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084108099 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078118724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094991088 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079921366 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090460028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074961558 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098376342 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089874964 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075716555 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090441711 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072764992 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09509973 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072120811 seconds)
  done (took 2.500007851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078684772 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104947878 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069964941 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092894167 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070993312 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073786563 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090163651 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07081831 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087534479 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072772282 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096605627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079439764 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087653906 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075412194 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097906761 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074839777 seconds)
  done (took 2.154072082 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082678941 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098886375 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083364512 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088935652 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066764713 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083881069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068562832 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06375004 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084031684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083357375 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087593977 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071332304 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087053778 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066925952 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064876895 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090895061 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06482174 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084650105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069603351 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101995295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080015331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086501929 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069741043 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089566836 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069218977 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092803153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069608434 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065832443 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086709567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068602904 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088284767 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076312288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084391324 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068659898 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085548451 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066699253 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068195804 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087469506 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072002289 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086636092 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068164867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085926605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06914524 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069732951 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084118837 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070618133 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083467329 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075627506 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065818084 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088579307 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068663217 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089438056 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07059164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097427753 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071993733 seconds)
  done (took 5.148741602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085195497 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072697788 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083709004 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067245669 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0903365 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071272572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071251279 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089746234 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070043131 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085493166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071149965 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089710381 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071909927 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072487899 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08918968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072899882 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083370549 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071283601 seconds)
  done (took 2.243932295 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07628076 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068919488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094733393 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069634899 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087415424 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07158213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064937137 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086346836 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067802622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08717331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069666371 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070718627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086550833 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071727501 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087265595 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069684055 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070344505 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086082354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069497222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083720968 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071594785 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06731936 seconds)
  done (took 2.51415659 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075845812 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.097358191 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16777565 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.1106935 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084765445 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10211155 seconds)
  done (took 1.474279859 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095895899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101789375 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070229869 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108649316 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07685584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089229277 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071445196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089403268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080520613 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103970643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071075798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099560027 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097264791 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082590281 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095150229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076933637 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089959629 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07003341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08864912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10769978 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0712329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098688663 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070966252 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08878351 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071231987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097890887 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098166436 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084450294 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089431925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079755686 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094619126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069851234 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098180884 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102946013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072210868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098044714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070959641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108712005 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095228975 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079689812 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089992989 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077894383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097223366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075969875 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099266315 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089490934 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076169477 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089138854 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0715616 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114755932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095424971 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079740466 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095841596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080211339 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098654427 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114344241 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102902887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079333293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095668362 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103762348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080318044 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095951631 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079193437 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10498595 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095657562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07895707 seconds)
  done (took 6.705975015 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087549334 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108202601 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071576299 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104054214 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097769292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071388113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089648034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071866568 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089719423 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070842257 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132588354 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071362157 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099075735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097846642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071686064 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089419254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070937461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098770152 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069906378 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114732394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090322062 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080126915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098070003 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097319803 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084441578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096562567 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070787203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090602893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071116482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090113557 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09576545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071808988 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098220661 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070640321 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097475759 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070952927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08985763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075492494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090137442 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075570893 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098970785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109025954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070794843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090895935 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103428304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071383905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08954102 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071164841 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08940436 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071361683 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104160461 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084101207 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103977278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098634823 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071374439 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090573586 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071435197 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089617897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071700151 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095753333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098626928 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07146304 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11460162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070335687 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090173526 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098003538 seconds)
  done (took 6.618813492 seconds)
done (took 130.270844881 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209205441 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18620662 seconds)
  done (took 1.232002289 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072111697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119642538 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081551482 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130113704 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088499367 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103233047 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120284472 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082432517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067791883 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089251596 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069926882 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089535148 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133256405 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068678985 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08884684 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070984057 seconds)
  done (took 2.317967868 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.109149197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202999193 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112094018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068235433 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101910151 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080839103 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087682335 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080657992 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094264866 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068157955 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099139033 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078829303 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067347538 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098081815 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093318889 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082287969 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0675258 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099896826 seconds)
  done (took 2.539472855 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110832801 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145812092 seconds)
  done (took 1.099460929 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206712182 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124992796 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206601897 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.435188756 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.212743652 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294370045 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176155679 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176885816 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160176664 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171786856 seconds)
  done (took 3.006683113 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103636642 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176397841 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320469065 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141289231 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089488611 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118678917 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140533689 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11208004 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084739091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103700985 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102945084 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080473016 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120255743 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077776432 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096519417 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080440193 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123326291 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075524682 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098275521 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077386504 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119931219 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068624318 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096981553 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076112666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100138945 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081355864 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087460352 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068953445 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096070866 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078193201 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099916588 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115499719 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08163968 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132711277 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104322977 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136505315 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079429353 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094210107 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07641813 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094095036 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079608415 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098582337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105455256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079974909 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068610566 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099332547 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068315756 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087516591 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081906443 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099270955 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082227307 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100884384 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134999586 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098708023 seconds)
  done (took 6.340757466 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.774234481 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136727973 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073772602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.834530635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117617581 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08639791 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.759944112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096292299 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235731635 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765115726 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115576341 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079806395 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21044877 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218929408 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968060264 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293049576 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648191876 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107408281 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111915839 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136933708 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165976937 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160787801 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151776448 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.406496664 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098551179 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074357565 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139761866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101393751 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144265516 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086484925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098143255 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160409453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231591905 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185612526 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077348002 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093451352 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072964071 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152999591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248718773 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195494824 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161116996 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070575649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072466082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165823438 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134287738 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070671945 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145858955 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157260156 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173365762 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076809604 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079226853 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.167816244 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144889295 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147888229 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103308588 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.276847682 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290195101 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09336281 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124193771 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087790876 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243613501 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085038376 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205936008 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142229805 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192682824 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072630366 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755924071 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153058851 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072224521 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099316292 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123474858 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078048648 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142328605 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148289919 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372595565 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147156793 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098096298 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072806772 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21836124 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087303821 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093565923 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145317035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077803186 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126500419 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.149370595 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.170319034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152345817 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.217978003 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146297981 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164467883 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076896924 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12827359 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097449177 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194946592 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176878945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166489462 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193357597 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146213537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147643894 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151608028 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101410416 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155118289 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124282157 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104273045 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144750816 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176185959 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127790467 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106074477 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075901374 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165937749 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12969746 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089459141 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143329545 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174256386 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436805125 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1508291 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069009326 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110801374 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143021264 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144433504 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099832265 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217261363 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126900824 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172422676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125810279 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070572058 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124651642 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1460921 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102452546 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125560111 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143859217 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078861378 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217321203 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195752883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102418558 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20114312 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166796237 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077707696 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176028733 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123414948 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151311535 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080908975 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14262814 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09880267 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771935023 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149096374 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125243073 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076112598 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170566206 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071608748 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106150565 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105061276 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070030994 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755277404 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088571646 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104098646 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084922102 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099481515 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125401614 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140892121 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077162511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165996973 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187233081 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100839741 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12345682 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085127694 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164795481 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078220966 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106332108 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085909543 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10838777 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128204749 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075788058 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107461555 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152568742 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144224332 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.199394053 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.546497986 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093892251 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084786867 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207585132 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093051038 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.248060484 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140443171 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205983334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146338232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103635915 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28734291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148242421 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.167804972 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088583892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15518964 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091939547 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141959702 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147211173 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094016626 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079568038 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144442719 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171522167 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149846108 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.998094254 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073686496 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207498691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069459104 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175674711 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078938352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101908373 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.250295339 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09407486 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152678687 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146236419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09712638 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085152995 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70243543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086303608 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163335241 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079103843 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201859812 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147795113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141536742 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141453931 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101229651 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145183154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.1936525 seconds)
  done (took 41.501135544 seconds)
done (took 58.878305262 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292395291 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199320736 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258221816 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151054203 seconds)
  done (took 1.847318318 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.153931886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108330553 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121433798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088270785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108076724 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088725738 seconds)
  done (took 1.536169637 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.436954314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282554074 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24277129 seconds)
  done (took 1.835592479 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.309943156 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237045289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461885767 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.307090479 seconds)
  done (took 2.296537988 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200235287 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1175533 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091389281 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086674881 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164341186 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266867805 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129295772 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192625499 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081380259 seconds)
  done (took 2.250458228 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.204471252 seconds)
done (took 10.84083344 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.172861407 seconds)
    (2/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.139266266 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164237367 seconds)
    (4/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.24325282 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.181968203 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07461092 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.150068179 seconds)
    (8/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113331828 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086468336 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078098867 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.252292744 seconds)
    (12/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.219128947 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108547779 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080544711 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105226355 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07929651 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1767704 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138108281 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07600724 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075794192 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152835688 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.200928174 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114492244 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089871843 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.142576331 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.160326874 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079860712 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074930463 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097359656 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.227786527 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.188864295 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120772901 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067914765 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079342144 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.282468354 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204900664 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097113109 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079267273 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095684227 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.263800044 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.246989094 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.252521372 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.086267897 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074912484 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141247618 seconds)
    (46/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093240854 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091317536 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.109324521 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101046039 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071872392 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090670756 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075711762 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075930529 seconds)
    (54/309) benchmarking ("sort", Float64, false)...
    done (took 0.151157272 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117567971 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103745606 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098120182 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079747895 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.271242757 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106928228 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085735827 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.182524043 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.270189346 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07131363 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.156857821 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069284732 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.263773873 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096175486 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17236483 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123883838 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065250569 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.260443913 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09186311 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.143805476 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105790367 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079562039 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119176779 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128031997 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117523004 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.249551188 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074525822 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.242495995 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103798704 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097259384 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093660836 seconds)
    (86/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094427132 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070185784 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.090042393 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079263388 seconds)
    (90/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054400267 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.252315908 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07889444 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113822889 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092405984 seconds)
    (95/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.125223644 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.179010211 seconds)
    (97/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082519575 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176265692 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070379779 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054133389 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198040828 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247640861 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073678143 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076840507 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07937996 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118040122 seconds)
    (107/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110368853 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091084155 seconds)
    (109/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055132591 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.24644877 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.225224389 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077359636 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145565744 seconds)
    (114/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078248951 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086770733 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097336742 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083111843 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075621695 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096382387 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068967142 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067993319 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095725936 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.247563194 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.148303036 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.161416284 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098404533 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.202415912 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093332846 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.120826377 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07139736 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097272715 seconds)
    (132/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075748338 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098762603 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096500749 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069418806 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094574175 seconds)
    (137/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.235120736 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097894061 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206313668 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117508742 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054914374 seconds)
    (142/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.126503527 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070881639 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090318975 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077005229 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069507313 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091019385 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078161689 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099853279 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091951353 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121279369 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069304945 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.312163695 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075612964 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054233741 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054994293 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116354945 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155996247 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079659847 seconds)
    (160/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077292421 seconds)
    (161/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.086480067 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05475007 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076882144 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111018891 seconds)
    (165/309) benchmarking ("sort", Int8, false)...
    done (took 0.168458327 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111170733 seconds)
    (167/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085788494 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084998596 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.261226003 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117037006 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182253962 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.176643349 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.27003538 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075850582 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088098447 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113003386 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.241851551 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167029621 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074991163 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067412924 seconds)
    (181/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.100421104 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091080272 seconds)
    (183/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100953006 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054300763 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053819181 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119372971 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054574597 seconds)
    (188/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073526554 seconds)
    (189/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076879566 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054611017 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070821635 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0757572 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109237632 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096333726 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.22181663 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090518161 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090883375 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09974146 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068286573 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07512114 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089081583 seconds)
    (202/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055269231 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05342477 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077882868 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068935619 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.191224022 seconds)
    (207/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074897045 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089030113 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076845228 seconds)
    (210/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137073593 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.221395664 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091103372 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067853792 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104720895 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07708169 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07462019 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118813505 seconds)
    (218/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080475511 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171305828 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053236348 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075877293 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136741718 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095610003 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070560386 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.077896315 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07576158 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053987839 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053380375 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077258077 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066763702 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076202561 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167009312 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071656246 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097947178 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091786639 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089816322 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14209168 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090791329 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054189513 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068819451 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080121599 seconds)
    (242/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.254015614 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174196891 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094982776 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054261077 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054404594 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075074378 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079361282 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067844913 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080678193 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.216904523 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077744823 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.238519421 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090909265 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094590681 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089952093 seconds)
    (257/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055009831 seconds)
    (258/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100814776 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076422375 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06893331 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053883133 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077200115 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054311507 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053672093 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096268507 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067896831 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053887534 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122263297 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076688969 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053311057 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111140653 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067729037 seconds)
    (273/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212193795 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123995536 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135923927 seconds)
    (276/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063362429 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071474395 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095051921 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136571035 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076701915 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054174992 seconds)
    (282/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054935163 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090150909 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068401736 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092197225 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079256488 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055381631 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066745671 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098540555 seconds)
    (290/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063360305 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.0884104 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064344407 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067016788 seconds)
    (294/309) benchmarking ("sort", Float32, false)...
    done (took 0.152785378 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055665757 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075558362 seconds)
    (297/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078200515 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054028486 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054886493 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114205618 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172950997 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118808642 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098820462 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070105043 seconds)
    (305/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063713456 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.077811284 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083578759 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073723494 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199219995 seconds)
  done (took 35.800143768 seconds)
done (took 36.675167446 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085174533 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117486013 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078205105 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117959765 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083947291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102983471 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076251301 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10389077 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084093191 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107483648 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082200831 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056426066 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100396113 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078241222 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099699481 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095027825 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103215286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075537164 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097990406 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067540726 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076369154 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090856315 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069742567 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057182528 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103491735 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075277319 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097156057 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078134145 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067848752 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090724729 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072688249 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097584403 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068226361 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082263698 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097747707 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076781023 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101104983 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07877515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070051097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090447255 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076426716 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089700103 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075397238 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076283166 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097012632 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074410563 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09846086 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083080916 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11778868 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071192295 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077267979 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102635756 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079954218 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097511858 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072357134 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099035919 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07345789 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0956069 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100053402 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070930599 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097986018 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077021124 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072913828 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09934589 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076797678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099987815 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079596849 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09627169 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077930116 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074328021 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090438486 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077315392 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093742322 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069006883 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078975857 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101428153 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068540267 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073653937 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097909459 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075092055 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089565335 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070406697 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070215462 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097362135 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070547423 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057532661 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094330434 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074924781 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067418181 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098621142 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074595407 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097286807 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07110756 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079117362 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089970517 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073774544 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089763008 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069002623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070453001 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094590073 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068271144 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069921446 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099607951 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070094306 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096254939 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083317306 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068037426 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096313069 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068257219 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067052529 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107746393 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078728621 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090418876 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071176323 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089563559 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076028468 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067814664 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089591521 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068392731 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068132345 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09685436 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068688124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070229625 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098204934 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08221113 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092698613 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072377679 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070469902 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090732703 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074139552 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068727643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090246167 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070635483 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088347425 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070443848 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0684096 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098386371 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070751318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076427216 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092592052 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077705611 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094614259 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074365853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073103222 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08972939 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060995246 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070540572 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092750426 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070423612 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090227467 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070323343 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068950103 seconds)
done (took 13.53402176 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070157738 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176504456 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130891705 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100598363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114225896 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068738943 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103251795 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133277053 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070904571 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132437748 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0913376 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111314618 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142286767 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068238233 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069148816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095323604 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070496338 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11631767 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106972257 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112508084 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147266207 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067338483 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124773841 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093918412 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115788764 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12138114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069874835 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072157535 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094826227 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12940287 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090088343 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072449841 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.09210871 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10431124 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121760926 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111069159 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069154788 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110010172 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068992948 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06869588 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119618106 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127033249 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084817185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108609394 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072568088 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093771127 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070049007 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.111872361 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094472389 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106551569 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115278535 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139320875 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072986864 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108727108 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068475633 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113674503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08655866 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093741621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069276112 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07074456 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090368253 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07247844 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115405955 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097355599 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096159513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086003092 seconds)
  done (took 7.435859033 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089272447 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119009178 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087523652 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110639715 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069516878 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069191709 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091725531 seconds)
  done (took 1.572020497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070689102 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092184253 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116264782 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093411539 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112184005 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090764316 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10173465 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069590218 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109636902 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070729099 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114368468 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108490032 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093835922 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076620448 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117905484 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070023257 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094238868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092653785 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073078991 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11642018 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072666388 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113388122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071986509 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06929824 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108284305 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06989744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142498341 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074063197 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094356041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073488123 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067405379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143884804 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107251014 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081702711 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092218316 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08547417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107820789 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068507291 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087389047 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098283278 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084905539 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092759114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071191332 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068362561 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097692876 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081707463 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09399429 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071478909 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072608427 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113844686 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07061124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107468366 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070453642 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073881803 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094080087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076263767 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102376128 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071429906 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090535956 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094436189 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088415151 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110479101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085096822 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110204165 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073267003 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107349243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085286662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072792486 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094701613 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07326098 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110224487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068636192 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071462368 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104926034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071632963 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116329133 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09403935 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094010236 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080695299 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069767 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093713405 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070178214 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117063983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073431322 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06964556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097482421 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073462282 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090572496 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068844779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073058014 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091275788 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071848173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072925105 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0936942 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072613755 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110572725 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07124578 seconds)
  done (took 9.544333615 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07277186 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071054441 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095255861 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070673336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071144766 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093524379 seconds)
  done (took 1.420898913 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103371752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095970378 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08504804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098950387 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111544296 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108490548 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086343884 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110099431 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089129852 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106643724 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085606433 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109951373 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091742417 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099682623 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084926694 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098823204 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085753293 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103072044 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082509196 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100639036 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091335636 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100214923 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076548277 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11023075 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07404679 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099085392 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080848173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106313711 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082381712 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110249324 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077474619 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073822565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098172799 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109119077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086108789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098129696 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076599144 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074587643 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104428959 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07327736 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109543964 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076541614 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10513409 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074527005 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110343693 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074943693 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09780423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080143114 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108472357 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074385109 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098039065 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076172402 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096449844 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075815915 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075177322 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10971574 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074258516 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108942326 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07630277 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09831156 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073404996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096826435 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086169996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096939163 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08387481 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097403452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075147892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100196976 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076706927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099097293 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074338814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073199679 seconds)
  done (took 7.521530852 seconds)
done (took 28.425608593 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.661843068 seconds)
  done (took 1.599493948 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.819603225 seconds)
  done (took 1.761375262 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.157283195 seconds)
  done (took 17.105368699 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.660380899 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.814572313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.826063296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159303119 seconds)
  done (took 3.400281064 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.891181148 seconds)
  done (took 1.853313308 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247801446 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257558868 seconds)
  done (took 1.451592773 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.741161895 seconds)
  done (took 1.69179447 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.302570398 seconds)
  done (took 2.249589839 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.344987024 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189025577 seconds)
  done (took 1.492383636 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.534463193 seconds)
  done (took 1.485724453 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.586484839 seconds)
  done (took 7.5443008 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238167747 seconds)
  done (took 1.2048384 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276971913 seconds)
  done (took 1.233501367 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.29661892 seconds)
  done (took 4.253480123 seconds)
done (took 49.277242671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082531211 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08409865 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10754439 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081508047 seconds)
  done (took 1.306231779 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082873327 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076696578 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105091792 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075591559 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105174716 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076379129 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101610677 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.0818722 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099919696 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077172082 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076474567 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099142046 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07957297 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100903244 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073668464 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079004105 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103162397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075542781 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102766975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076821211 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098152911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079301149 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078741075 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098849156 seconds)
  done (took 3.068738353 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08178876 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076532131 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101508125 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074863995 seconds)
  done (took 1.299905449 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081772452 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120081646 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09401171 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104614213 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09679976 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115292185 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073569229 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072925918 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098330054 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080306424 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0943488 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103281414 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115687442 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080293134 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106290465 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069015065 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071743192 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115560397 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080249834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10463312 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073548776 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10294459 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072148615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118367728 seconds)
  done (took 3.21401832 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081797959 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130354518 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082322905 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117181615 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095717398 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068436116 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104024942 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094854504 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.155222074 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067703446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09726106 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068475304 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099026032 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068199693 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079704026 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137038674 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.139401271 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071524858 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12484955 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068943913 seconds)
  done (took 2.914379458 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078942584 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072220772 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091571201 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071655192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078724069 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099366762 seconds)
  done (took 1.464578734 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071996151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070183912 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093316292 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069646756 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074219255 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094171801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06896809 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069721698 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093888231 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06983882 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093195629 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068546293 seconds)
  done (took 1.905840392 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.473719785 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07231243 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095377293 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068785695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073810672 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093351153 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083742888 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071367873 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119059579 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069981373 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094119943 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071849968 seconds)
  done (took 2.360124231 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276932414 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080953809 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337154377 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172680336 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143690472 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161398506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107440536 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145900896 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204382281 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14358502 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237130214 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206206474 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138927342 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172726045 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117771396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137012393 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192113083 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227162249 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134561821 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232934358 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189624738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160260803 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212826968 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132322294 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115115937 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174235556 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074557521 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083132239 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262949367 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16818317 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18373791 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142410164 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124011482 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241972297 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227891153 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177050867 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166817525 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114148424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161104502 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171762541 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270471963 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118299402 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203602211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138160904 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109421379 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180055525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152951489 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152565123 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142133177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118308368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182738186 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248582692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172971941 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116775879 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141404889 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14507032 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148130539 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132106733 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255448751 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202711855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189136845 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075619471 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126687994 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194927598 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166269116 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146548024 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184365705 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097854315 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201522262 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195680504 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149947859 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20647527 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.16750321 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118489916 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153453204 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177973954 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160239376 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238349481 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160273892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101096406 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157886559 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132064794 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086347752 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174530416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079025973 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242485946 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128788028 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145177902 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142274981 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115621954 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140697647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226409428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210710555 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109887037 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094341657 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134596058 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155394765 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181931646 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117543099 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14033333 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153082824 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082440279 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197103918 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079904392 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15699593 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107032573 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158071878 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16899302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078807362 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183726683 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107738661 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132920376 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171236482 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22688756 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120127069 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086710712 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23605917 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160937098 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137988001 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182679627 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223573896 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131535756 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132179968 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185995295 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253166653 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119073812 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206279807 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134935922 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113002263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09216947 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184448043 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14527551 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154359641 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086857014 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159193169 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235768563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10330171 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10070772 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1711774 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110285107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110237685 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14581024 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104571749 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124379643 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131888289 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138015309 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176769935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159519546 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13847651 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158414736 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129561326 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230461559 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119167871 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.111263877 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134857508 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098135418 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170871395 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225780493 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084232686 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234922087 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161908356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135259415 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153312204 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086805258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202782347 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083159518 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075027205 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205568707 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14310372 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142679861 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192216585 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135452538 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162080655 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156892093 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19357857 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167671296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168175844 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138618562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091775323 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144740569 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18651365 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077581955 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125053762 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087037039 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13575802 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125676687 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111867099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180135432 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16194663 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128929351 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145754621 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128521295 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188650466 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105889245 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168233154 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153945689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124913003 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195310416 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224878727 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173200432 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131505016 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182969301 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100265217 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078080458 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119132206 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163406797 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113056146 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088614356 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149305875 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213212814 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164908942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172375039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143096585 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156839482 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222877916 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075127276 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147556818 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189206277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160258935 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16032581 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118474392 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104463098 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208511862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110966017 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284569604 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148851036 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15914385 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190764489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134763227 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114778082 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109516057 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200315796 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137102515 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190479483 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130955969 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11935687 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141999937 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085100185 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13591041 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186882474 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152534745 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173389411 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150061072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168444947 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106455224 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149558566 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158167485 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155664317 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067822406 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15326557 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228811318 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126933298 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15309316 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220802142 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083731616 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156229448 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248839348 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208495226 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089450609 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141396643 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154802848 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164568705 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152205387 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204123607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142739117 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171147143 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143070526 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089629351 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118387788 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12984966 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113131395 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127936474 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145120066 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150278116 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125420767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167591832 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144303417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143807398 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151444575 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129807102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096357365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129224101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245303251 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156100801 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244152789 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132213097 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188926476 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23672431 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104292396 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083894085 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109636415 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178890952 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088043901 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195408594 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100940361 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137093806 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161330217 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20647356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100495184 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098587196 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142344349 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169022445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143366102 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104794204 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136739657 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232558192 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134915486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082847444 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161473509 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137945489 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134100086 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245949458 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065473822 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12815562 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079628588 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110938901 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166139879 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22268953 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086934439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158813062 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153096416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156212359 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16438893 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13082745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12697005 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144613631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186011593 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162571955 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121821352 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146300145 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164498063 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224467047 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13909156 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10023576 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236808692 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220436762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23227035 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092944004 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148849852 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147374747 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14548883 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205452749 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087789776 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234001874 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113291376 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174992812 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136662198 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124397979 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164908846 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126792851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093184018 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214413752 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154072899 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112708672 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084408986 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164524109 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1550503 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135262502 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104053283 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177221281 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076294349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200557538 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208550693 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111920589 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13863328 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126971184 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086733071 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139579299 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135925946 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116848608 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123882498 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241516604 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122937165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18968551 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203324189 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148450372 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176085077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132193012 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668812385 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108753086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19389518 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152747367 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248260053 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129747285 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152194265 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144147136 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156699029 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205363373 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138936905 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183805941 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194236789 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15616258 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084015445 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135564121 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144456988 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120164039 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140244846 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148766534 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149075981 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131877663 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155186449 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164874804 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111697635 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101270636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227422743 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15312776 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179301895 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204307833 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090173686 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152908447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207294419 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08453913 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183385142 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197363739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140929846 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13166409 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110287905 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137801241 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213761245 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102971418 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202803046 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184334049 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117902749 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146851998 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180647645 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169146984 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139542989 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159650555 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126957954 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147508443 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149662043 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115396022 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082965035 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139478136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146219689 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130616882 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134778686 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125137295 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219163302 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074928849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126194066 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133524879 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182758318 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248179758 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119888008 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087971389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152395176 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147123112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150014405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159847138 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112260202 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112895111 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087786733 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140726766 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142292002 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123046391 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134149108 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144322176 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237455577 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114439349 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229334209 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127565846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140636301 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073857561 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108979311 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101113089 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127563489 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136949955 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128874492 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241293694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102446081 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121593446 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123931911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077234726 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113510744 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166544685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14558152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156175454 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12863683 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066615118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140768039 seconds)
  done (took 74.06850107 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14723394 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.120996777 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.13515852 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.194577331 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165053756 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259628513 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200580079 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243598565 seconds)
  done (took 2.507726455 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074018779 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122472177 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105893899 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119771976 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092816636 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071575723 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308314101 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112532118 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069331547 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119729711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123663498 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094634502 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485260536 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068661082 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096646879 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090275994 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070943861 seconds)
  done (took 3.260907705 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.453282472 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.644901265 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453774676 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101154884 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.906267516 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113437583 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.376134971 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165855089 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094468082 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.42978712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.730035451 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151783669 seconds)
  done (took 17.664233381 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079309527 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072822252 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114296605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087310949 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102566818 seconds)
  done (took 1.500657661 seconds)
done (took 117.48860448 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085920327 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.387499259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056725671 seconds)
  done (took 1.523473594 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089864468 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088436781 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11528713 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087433343 seconds)
  done (took 1.432444357 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079728896 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079518432 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115284582 seconds)
  done (took 1.323789142 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299885976 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172116215 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092817235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087872071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081060159 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108508489 seconds)
  done (took 1.326077638 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078064122 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078686469 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103394392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080136837 seconds)
  done (took 1.382073959 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081893484 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055795056 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057740472 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085219572 seconds)
  done (took 1.32895214 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095172079 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110076097 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084163497 seconds)
  done (took 1.33534426 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114306021 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116633136 seconds)
  done (took 1.281147928 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086196997 seconds)
  done (took 1.130091926 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09814002 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146843123 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164392513 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142432676 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176156258 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142368041 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117870974 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092120413 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108408307 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120688595 seconds)
  done (took 2.357849757 seconds)
done (took 16.111166644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083840561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396613337 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364782889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122186429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671510637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386230386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980796576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123214563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111895427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098359784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088087929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678453767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008153205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326243054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020249014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318809028 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679375907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071897584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096363415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071492322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966207012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097362174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071148288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097915823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651685168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375376431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097671589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319739156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097799439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073437134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358763224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098077875 seconds)
  done (took 16.042311037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075591062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148761875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077993195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087092693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100736402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072421418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101879748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0727738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152475694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071281398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115454928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071636027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10219232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072767791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090694152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097701241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071923238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098106222 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071183448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072122657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117099293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070844656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097908091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072340168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071077263 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110418162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071382566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097786894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071680065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073328097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100564709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07202759 seconds)
  done (took 3.900812077 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121110829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157877831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077826951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133037464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144923798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073380616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17506725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096497851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156723248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071728945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114878908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071045639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131889458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071337247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118734692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071575593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098857571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072338741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071593142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098888503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090722653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097664555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071984283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071790065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098854833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084615742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098241379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075541899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071985866 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09938166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074333261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098997253 seconds)
  done (took 4.220965988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077670514 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078488509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113562639 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086830136 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099382016 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075081609 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076578515 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099823662 seconds)
  done (took 1.76109341 seconds)
done (took 26.970385805 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084268922 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07318799 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103350274 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084659809 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102548057 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082950792 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070612951 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105447844 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078196832 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10291987 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079208658 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070548413 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102121237 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070641109 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07711812 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097587446 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083175248 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102268703 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082636338 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110075884 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073163441 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078698155 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10458046 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082757298 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109548489 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083252912 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109901324 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077537511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0721979 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101112139 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080521535 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11592884 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072103748 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08302059 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099091316 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071139686 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097837496 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071768778 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08269423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105595623 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073803204 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105529007 seconds)
  done (took 4.761539108 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095354789 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095842282 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117588488 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064996986 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09908061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065612131 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120974342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063538948 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064914068 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120239394 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059015245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061283157 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090371724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057290479 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060232368 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05899891 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091543921 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059493552 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060569898 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088412279 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063799042 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056322928 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090261423 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062725389 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059010945 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064575511 seconds)
  done (took 3.049858618 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079958929 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085098399 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117860095 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132314637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137039076 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078085869 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108871741 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08893414 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115345427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070390159 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10126958 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099397442 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089609131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105606735 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070876935 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113789435 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086061361 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071888922 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105769269 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091978915 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114817828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081397684 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119948191 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083062217 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070272543 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101210133 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074992496 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112261992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076207654 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080387097 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103184083 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074410764 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099996814 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082475093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102678926 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072500584 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090341471 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10860419 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079641522 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09950322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074167508 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072741514 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120726573 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115769423 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098082728 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078575119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106493583 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080663467 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070818773 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116821282 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079887521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097783111 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074322552 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069869351 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098889675 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085259525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09995581 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073750112 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080550671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102320016 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084611314 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07413721 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114990171 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07078617 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106193838 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070578707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099577841 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070817891 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093520403 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100038992 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111969128 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099778506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072202459 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10849907 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078797387 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076320701 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100129924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086384536 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108579455 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075047393 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079543029 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103227836 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074746859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116783376 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074074751 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072140596 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100064801 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077400822 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073684511 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09992382 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084392697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099337533 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075193169 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116642222 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070813933 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07174781 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105219289 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076381961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097665484 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084778817 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077049306 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099921321 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080108184 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098909176 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07547948 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080912331 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104554933 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070076419 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103876751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077634833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070931776 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099761257 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074194134 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100549149 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081060527 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077279664 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104093643 seconds)
  done (took 11.67948238 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201997373 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192849428 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.0742029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185583444 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079760811 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112309833 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186746519 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100814642 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100549031 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072118187 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07256497 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.138835162 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132956158 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114636025 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110488464 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071009411 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119410339 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113055988 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189000876 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.18223202 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121051539 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079850932 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102013885 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072353661 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07328688 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110325888 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08897033 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106510458 seconds)
  done (took 4.375341398 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087594263 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12865714 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076859922 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088989226 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123886622 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071900886 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103832539 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073013902 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112156023 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083602703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099711005 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077148687 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078356904 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107763505 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071902006 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109021173 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080453131 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072472761 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102464896 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075093114 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106202538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084779768 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104135583 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070509104 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079250494 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098956746 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067964892 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118109267 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07084115 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118902305 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069517878 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105815557 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082011606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071583809 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100203813 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073992968 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073026222 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102130155 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073344248 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09815754 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069757758 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061399904 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098258899 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084184751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105607993 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063119054 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077102881 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106322127 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076734159 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068926166 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10259781 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073938196 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102823778 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079487239 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076002814 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105082505 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074973174 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069563242 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105526648 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073991241 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067699734 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097964562 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076240107 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099071045 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079304281 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076244939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097845236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073659325 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104913949 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078030772 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07345469 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103051697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069104442 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074169358 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.104432115 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074795789 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.10300958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070966915 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07079168 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100028096 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059936643 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071552659 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085973757 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075120897 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070129351 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097913899 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073633567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108544587 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085299795 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100791085 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078315224 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072120179 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098506162 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0750214 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065586629 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102395341 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085772528 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117659547 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07135788 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097862421 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085193168 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104169709 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071365506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060059218 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107720545 seconds)
  done (took 10.160554903 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098058434 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124285258 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073734613 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085859383 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126855365 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096691004 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108012039 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077697002 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073118304 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116926329 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071362525 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108545095 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076074045 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07986551 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124722922 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079808747 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102336894 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080604049 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080303387 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136684157 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085262576 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114715617 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081306745 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100747247 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076885148 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083911572 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128623743 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081529142 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109811695 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086252673 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110523679 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09890241 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087002476 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104392063 seconds)
  done (took 4.350596429 seconds)
done (took 39.430967048 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.168684949 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.351586371 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.130797909 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.039634584 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.140896468 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.163820762 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.144637557 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.135132735 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.460671242 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.137411479 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.365532993 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.759918846 seconds)
done (took 59.074174117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.14564245 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.27082278 seconds)
    (2/2) benchmarking "String"...
    done (took 1.403253475 seconds)
  done (took 3.759713979 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.486435468 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.111244129 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.418173449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.134283411 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.142986735 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.576754031 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.70797862 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.982387701 seconds)
  done (took 27.149307752 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.137179555 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.49044962 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.460411972 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.463545943 seconds)
  done (took 17.629594702 seconds)
done (took 58.246939 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.138322722 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.148538253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.14875584 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.116737181 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.236474057 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.161993156 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.226654982 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.244493088 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.133950068 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.117220929 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.150449584 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.13990394 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.138911631 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.22346161 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.132495727 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.140490055 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.161213941 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.818148289 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.528200937 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.134146504 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.17857453 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.184309642 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.141225046 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.136542498 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.175643473 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.142755499 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.134008493 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.143256443 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.398726296 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.139512896 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.226860654 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.39004853 seconds)
  done (took 187.709753271 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.13457117 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.247598971 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.322038651 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.159697501 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.780330671 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.331766254 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.28327319 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.837681002 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.147151942 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.144801989 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.431695325 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.133849898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494152305 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.157780575 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.143914697 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.240211834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.348560019 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.453313458 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.148747609 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.415013062 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.159574999 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.512373151 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.437816331 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.358587163 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.181592291 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.167023306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.161536186 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.15408334 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.328400068 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.293397113 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.143519565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.15231967 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.703455955 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.993953423 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.150236158 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.160318776 seconds)
  done (took 148.496007396 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.414838002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.137505731 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.134660961 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.138361283 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.166994919 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.136120548 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.671490406 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.669737098 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679367356 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.294113007 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19548485 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.391166392 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.137129258 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22965346 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.148246575 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.136187731 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.152469182 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.162771122 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137299223 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.138569381 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.672028901 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.151835448 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.134623955 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.142335023 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.137715913 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.169024709 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.532024292 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.654506285 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.138423582 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168105259 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.45735098 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.179940723 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.136371922 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.445924618 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.900296295 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244394684 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.13654062 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168751335 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.139090383 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.407718183 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.13779609 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.139098895 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.143243773 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.720534559 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.139594841 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.669919618 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.138082616 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.025576285 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.137034498 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.13876497 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.139265874 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.670152979 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.619015653 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.13840508 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.136734765 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.140473002 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.141170591 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138837056 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.169975003 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.572151382 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.235360682 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.13944189 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.143780959 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.169571167 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.138234875 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.450598589 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.139075333 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.963826539 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196254759 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.246280614 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.673217557 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140155748 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232494982 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260310765 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.138407849 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.140696949 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.139281017 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.140812914 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.246177992 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.137740753 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.546764305 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145481903 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.1417364 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2003577 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.233327171 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.138249592 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.44511785 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.141227623 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.139995047 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.830334497 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231398108 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.138709225 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.140373842 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140110453 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.140592763 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.547432605 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.67377751 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.316891267 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.143267011 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.142053408 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.602100646 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.142305975 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.558902669 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.652661828 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.728471609 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.14145696 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248121215 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142717373 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.143759498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.13984065 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.170481477 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.141462994 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.199556649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.139940929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.536971585 seconds)
  done (took 338.653459951 seconds)
done (took 677.350783927 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.775662673 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.76067717 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.870290092 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.758024833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.739617021 seconds)
  done (took 9.986821572 seconds)
done (took 11.069752563 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.320798978 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.319891478 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.199537242 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.321503058 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168969288 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.340546146 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.300160657 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.160086608 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.242198947 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.213683025 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.238527959 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.18786001 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.168650571 seconds)
  done (took 17.265722011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463009212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450355566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.208579625 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452495415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184889736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.461165848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344389093 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.351373576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341892988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.159804483 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.157399024 seconds)
  done (took 15.660322981 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458413839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.460329961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.21067437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.456918927 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.183334525 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456307898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.343956625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.353630283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339317995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.159293148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160460502 seconds)
  done (took 15.669062846 seconds)
done (took 49.679839705 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.152200816 seconds)
  done (took 2.237928408 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.186406516 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.350773572 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.168085361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.159509177 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.154626354 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.15570815 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.159061028 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.155443508 seconds)
  done (took 10.577644717 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.153588329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.151959815 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.148794945 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.14941292 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.149417691 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.151820497 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.151936312 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.152526615 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.149965474 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.153131673 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.149639893 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.153255066 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.151450316 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.150693322 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.150632294 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.150839783 seconds)
  done (took 19.506077998 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.153793025 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.151351856 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.149414358 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.150895512 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.150294644 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.151365135 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.152403753 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.150761032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.15000728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.150645286 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.152833805 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.151360601 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.150852668 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.153422157 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.151167883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.152705161 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.150246392 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.152128272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.155944258 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.151480027 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.151660078 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.151676312 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.151076847 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.153215531 seconds)
  done (took 28.729564136 seconds)
done (took 62.136960628 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.190284975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.777686092 seconds)
  done (took 9.056761974 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.154466324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.156324246 seconds)
  done (took 3.402253196 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.155497253 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.155026735 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.155353305 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.155518259 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.155169931 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.152670964 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.153894924 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.154150744 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.154508948 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.1537809 seconds)
  done (took 12.633647504 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.156892815 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.155808144 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.152161012 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.154458125 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.154743948 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.152812253 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.156133506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.155248925 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.155278641 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.153471217 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.155773785 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.154336541 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.153565253 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.152325341 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.154173221 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.153754805 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.154512567 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.154771995 seconds)
  done (took 21.869522647 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.15558916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.15762314 seconds)
  done (took 3.402402259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.15372317 seconds)
    (2/7) benchmarking "second"...
    done (took 1.1524282 seconds)
    (3/7) benchmarking "month"...
    done (took 1.154809699 seconds)
    (4/7) benchmarking "year"...
    done (took 1.153966515 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.155715038 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.15350398 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.153997892 seconds)
  done (took 9.168136757 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.156558091 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.339052289 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.423300548 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.751682463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.158566464 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.15853123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.060444764 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.159928511 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.162727924 seconds)
  done (took 13.460799997 seconds)
done (took 74.080445194 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.160971454 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.14903585 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.079870522 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.15786169 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.180378175 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.495867886 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.187249114 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.274734775 seconds)
done (took 36.777853481 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.150889758 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.890735911 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.898703546 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.147369554 seconds)
  done (took 11.026790725 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.141049219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.065183849 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.148851721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.158755275 seconds)
  done (took 17.608764612 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.768861393 seconds)
    (2/2) benchmarking "read"...
    done (took 1.481885196 seconds)
  done (took 4.340521054 seconds)
done (took 40.216595415 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159214412 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.158646348 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.158911625 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.157232236 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.156860549 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.15882105 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.156504767 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.157260859 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.1586741 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.158798472 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.158442426 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.158276065 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159684029 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156879279 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156606925 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.159597476 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159135298 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.156383685 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156479957 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.155627249 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157082081 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.158595091 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.156853466 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.156278465 seconds)
  done (took 28.877778143 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.160695181 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.157452713 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.159339532 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.160132722 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.1575927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.159739389 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.16099404 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.157666446 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.159699162 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.158910603 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157648991 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.155530466 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.161032251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.159064198 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159786796 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.1564707 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.161358111 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156972893 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161587861 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.158735219 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.160383203 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159178807 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.157158748 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162246052 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.15654697 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.157830568 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.160011343 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.158621685 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15976709 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.158506832 seconds)
  done (took 35.863858387 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.166658722 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.169956417 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.16037895 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.161924797 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.161927037 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.161155371 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.161375995 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.161519142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.162329145 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.161252553 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.161703733 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.16093927 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.161374618 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.162790823 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.161916431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.161636866 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.16185465 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.161244051 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.162003413 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.16178569 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.161772516 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.162605637 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.162220951 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.164015959 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.161788936 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.162663462 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.162573303 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.161541928 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.160981731 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.161915541 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.161401117 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.163698563 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.164009901 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.161513632 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.162989476 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.161594673 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.167888225 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.171811533 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.163282059 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.163656126 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.161243496 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.163210914 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.162423267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.162856528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.162279451 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.162100848 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.1636948 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.165013301 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.162965431 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.164424743 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.16249031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.163998852 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.163160384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.163859719 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.164249471 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.162809275 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.164153709 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.161498336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.164159731 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.162762862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.164988532 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.162921153 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.164211345 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.162357205 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.164249889 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.164703615 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.164637613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.164197658 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.163108951 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.163122075 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.162676772 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.163553815 seconds)
  done (took 84.833258539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.163782689 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.16242222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.161042853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.160654903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160743569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.163554271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.161365333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165053806 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163488707 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.16483611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163196741 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.163147884 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163364386 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.165718843 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.164570512 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.161403166 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.164383322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160711866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.164414797 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.165451342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164954526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.16248726 seconds)
  done (took 26.688982793 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164985388 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166736311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.162677119 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.166840319 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.160385583 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.164966475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.1657109 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.165869381 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165215512 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163575355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164653153 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165515249 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.163290371 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162287602 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.162985344 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.162434786 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164877432 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.162887458 seconds)
  done (took 22.053943547 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.164289704 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.165505733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.165794334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.163111254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.162989326 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.166649127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.162624404 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.165389828 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.166738495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.165320599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.16703688 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164441628 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.167241734 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164503731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166640777 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.164956484 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.167394144 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166019873 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16722222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.165850516 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.166463412 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165576225 seconds)
  done (took 26.740983688 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167112395 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.167472226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.16378592 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.165931105 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.165224862 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.166931774 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.167710802 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.164618851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.167166302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.16766593 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.165995175 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.168464909 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.164355068 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.16569866 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.16462691 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164253676 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.168646192 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.165767452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167112525 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.165544706 seconds)
  done (took 24.424753581 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.168551082 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168640997 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.169037592 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.169848126 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.16951575 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.168673349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.167670193 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.168284662 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.169353832 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.170414666 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.169241073 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.170058867 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.169904614 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.16730617 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.168982141 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.170721388 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.169544684 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.168056244 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.169429158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170453104 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.169949578 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.170582831 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.169807585 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.170544015 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.171328478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170039759 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.170175226 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.170480234 seconds)
  done (took 33.85033078 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17118399 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.16989254 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.167109781 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.168875565 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.167435518 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.167983739 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.168359221 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.16841143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.171015541 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.167106766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.169236158 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.169069054 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.171819901 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.169841036 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170345159 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.170873414 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170264174 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.16836927 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168532281 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169552008 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.170893653 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171218784 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.169460697 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.168032897 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166156669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.17115332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168831536 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167864468 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170478635 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166646985 seconds)
  done (took 36.180275286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.191287342 seconds)
    (2/2) benchmarking "in"...
    done (took 1.190152814 seconds)
  done (took 3.485989847 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.167507344 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171342048 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.172204114 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.168453511 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.16831101 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.172392096 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.171621678 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16861829 seconds)
  done (took 10.46609155 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.171008603 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.171214469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.172085507 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.1716765 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.171840379 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.170185551 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177774311 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.186631435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.171880151 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.172714447 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.179243226 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.179055588 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.176181482 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171153228 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.170752189 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172928845 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.172908944 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.171683661 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.172895815 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.172725771 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172665333 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175273415 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.17343686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.170653607 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.172722249 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.182747464 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.177605605 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.173253365 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172306273 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.177499695 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.174053966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.170430502 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.172679812 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.173235693 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.173928179 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.172205159 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.180981165 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188223642 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.17913517 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173433056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17486788 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.170328615 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.174771231 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.173364979 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173976802 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.173438371 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.175442401 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.171430355 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.173220202 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.17728962 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.180496999 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.171034911 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.173752742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177558617 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.176742257 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.180044289 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.190393936 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.176460584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.185099388 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.18428739 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.188117853 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.186144449 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174769708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.175419176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18483283 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.202193761 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181975853 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.189566536 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.171424083 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.176383113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.181053596 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187559284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.184703879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.175927026 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177072722 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.175472086 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175314282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176321557 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181693345 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.197355904 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.175923369 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17764969 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186853038 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199813969 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.175062022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.176233572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.176591136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.176686829 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.176353419 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187800079 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.190768998 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.176440916 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.174952544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.176972473 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.17744758 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.176935751 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.176295709 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177396506 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.174948974 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.178242286 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176361565 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181350106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.185668136 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176620981 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17871611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.183313957 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.179612737 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178101024 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.182176543 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.176555591 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.177375954 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.17842883 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.184113195 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.174496729 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181990827 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.187596014 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.177493775 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.177352872 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.177478149 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.179357067 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186216167 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.207341177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.176928326 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.178776819 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.183873048 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.19276176 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179782789 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.180431587 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.178204843 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.176342023 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.176366949 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.180216905 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.179007652 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.179754227 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179780201 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.179665647 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.177877697 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.179223628 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.179844611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.179307312 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.179688771 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.178599632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.179707234 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.180934999 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.180326666 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.179833802 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.184833486 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.180443406 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.181170228 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.180347446 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.178699042 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.180754047 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.180130618 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.181238489 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.179034736 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179837105 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.179356396 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181744017 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180603515 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.181030662 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180405774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.180167086 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183205356 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.180728183 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.183730702 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.179526011 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.176265441 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.181128312 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.180475805 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.17740043 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.18197247 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.179289705 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.183831958 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.191400635 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.179847384 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.181183163 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.183691361 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182152448 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181601848 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181205651 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.183369063 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.190336365 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.179421447 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.186543637 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.182114346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181752285 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.183292002 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.18089616 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.181481199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181755376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.185287364 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.191506955 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192825088 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.192884589 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.180752356 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.186794153 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.181886177 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18760285 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.183313991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.181749821 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.181834578 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.182132734 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180605375 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182522327 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.184240366 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.1820452 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.180832247 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.182483377 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.18464628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.182415577 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18357354 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.184498484 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183385627 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.181288852 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183978923 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18254425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.181776182 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.180782161 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.182062585 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.183021196 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.183002681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.184883728 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.188655509 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.181731769 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183301271 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.184015052 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.184168172 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.18240583 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.183479695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184682347 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.181970165 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189506916 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.195926293 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.185154379 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189487928 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.196505687 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.182386768 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.185517595 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.184743125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.180847241 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.185430073 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.193645503 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.184863625 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.185353986 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.187072202 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182601411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185707068 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.189808034 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.182461319 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.185260853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.18522152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.185535615 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.182746316 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.187239041 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.18464094 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.18428751 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187736475 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185309318 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.185962828 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186795864 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.185910525 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.185075145 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.185296635 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187806456 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.193789509 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.190041677 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.183511365 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18743088 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.187342095 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.190925098 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.185489963 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.186000278 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.183529144 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.196769887 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.19603273 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189426703 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.18603008 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.186016758 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191405959 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.187315476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.188785759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185590679 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186418959 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.185888307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.185471751 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.184619359 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183798578 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.187656327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.186852956 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.18641674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.190804494 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.184927399 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.186579574 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.184923758 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.187986281 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.187025129 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186821583 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.187531531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.188250083 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188577461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.184733449 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.184065258 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195254514 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203873076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.187339441 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.18461561 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.185615674 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.186238682 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.188220062 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.188082916 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.189721418 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.196989172 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.19074103 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.197629266 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.189350094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197594039 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.186428327 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.190895855 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.199038474 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186135582 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187739763 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.187613118 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.187125214 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193318316 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.203758946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.189856495 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.192619179 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187882997 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.187657204 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.189568021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.188588728 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189102301 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.188625127 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195735814 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.203516137 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.191556931 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190624359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.185933203 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.188604258 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.189977008 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.187835445 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.194028171 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.190199813 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.188867414 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.187415989 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.188045142 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.189062998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.19036216 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.188516861 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188012852 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.190442227 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195580135 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.205238025 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194206529 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.191352811 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.197265843 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189993341 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.197440691 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.206666134 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.188912758 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.18917579 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.189179575 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.190765432 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.18959118 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.190140559 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.191828572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.190466325 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.195095951 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.191899971 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.191652997 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.190790951 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.191228018 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.189014003 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201032518 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216845211 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.191313973 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.197166923 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.188324745 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.190635273 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.195203983 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.190705959 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.191038973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.19457612 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202215918 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200755166 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.191662403 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.192764403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191772885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192386189 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.190909543 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.192152948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.192184375 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.191997698 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.191703703 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.19085236 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197122034 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.191352275 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.193425227 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193094833 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.194280001 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.202567561 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.19303657 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.192487237 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191991069 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.193163405 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.192193916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.192348821 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.194052167 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192475368 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.19235955 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.192635668 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200681176 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199808967 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.19590058 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.192098066 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.194451132 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.192928578 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.19151747 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19312413 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.193983419 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194165676 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.194920637 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.192566362 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.194389733 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.190451707 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.193904016 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.193402983 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194326715 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.195196392 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.202811546 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191427581 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.192975239 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.193327028 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193425064 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.192035518 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.193321308 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.201661041 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196985725 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.205343115 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.203807998 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.199154696 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.192223859 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196226221 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.202709892 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.192823597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.193656923 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.196885309 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.19439673 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.193977474 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.198056269 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196112407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.200983179 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.194367136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.193949619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202072086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.211878593 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195275224 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.197327308 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.200772049 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.194526151 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.195235768 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.195870186 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.195329092 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203361318 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.21286167 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.194516014 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196126387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.196098059 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.198908805 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200759138 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19728351 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.197661611 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.194551012 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.197397637 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196532037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.196084829 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.194769695 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.195435254 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.19631539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.198630193 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.203356582 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.195133956 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197136957 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.195955215 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.195795433 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.198061186 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197561559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.194177771 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.195556907 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.195623829 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196703919 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.19708403 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.198065539 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.196233825 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.198366777 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.199524571 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199005053 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200021641 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.210514562 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.207776182 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.195933019 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.196102546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.197036681 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201222002 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196799827 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.198251075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198231199 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.198565406 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.199055676 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19729601 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198092123 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2003292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.216104704 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.21361404 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.198538911 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.199869273 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201288402 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.19834682 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.196218169 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.200015821 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.201349092 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.201540178 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.207335721 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.199397947 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202253805 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214699305 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.199645089 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.202647847 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.202985545 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.207953572 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.202395367 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198726575 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.198506127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.203372162 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21717443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199546658 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208674812 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230182428 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.214030352 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.201591111 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.200572748 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199620105 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.19928627 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.200454068 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.200237104 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.200310533 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198854438 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.201127601 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.199607599 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206749864 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.200758677 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.200948052 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.200853438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.198309746 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.200613362 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.199455621 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.201338516 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.200036707 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.201821558 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.200902352 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.201019295 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.201140865 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.213566918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.214252627 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.20221923 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202131397 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199007514 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.202783706 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.203441909 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215411612 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.210975407 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.200795559 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.201108161 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.20073995 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.201002996 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.199026239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.201846504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.199988687 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200898352 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.200022785 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.21429225 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212802943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.204770352 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.201956631 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203115759 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.200907654 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20114101 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202791313 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.202250822 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.203101228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.202782673 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207137873 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.203978457 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.201987118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.20641908 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.213054403 seconds)
  done (took 709.972176167 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20076652 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200127303 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202046404 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.199697334 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200249763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201734233 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200388261 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201464421 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20045565 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200424373 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201498921 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201327837 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201063935 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200839773 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200619437 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200773796 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203101864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.200197221 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200599048 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200748063 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201769293 seconds)
  done (took 26.353771037 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.2041649 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.202481801 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20318178 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204406208 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200888782 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204852079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202376276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203347028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20370898 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200885633 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205758301 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205030286 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.202996563 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.202597744 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202813437 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204666065 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205368204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200891863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.205362489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.202494555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20476742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.202586126 seconds)
  done (took 27.61177535 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.204825978 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.206297918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.206208124 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.201917536 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207019047 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.203161248 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.204374777 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.204440801 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.204989022 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.204695959 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.202713112 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.205097279 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.2117791 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.210955456 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.205109489 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.205227773 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.351103321 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.206733271 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.205090173 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.206380066 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.204083926 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.208809779 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.20250373 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.201477917 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.203213148 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.204163167 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.205258905 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.205974448 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.20504292 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.204613752 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211902534 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.204547731 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.205033667 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.206662263 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.204840374 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.207153387 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.212502988 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.204956455 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.203326853 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.209102277 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.216310139 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.231027776 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.207728506 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.211279579 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.208033296 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.208160426 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.210937779 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.217313345 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.206184955 seconds)
  done (took 60.429198003 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.208085395 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.208989983 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.205865755 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.206814632 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.207438264 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.207065123 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.208122176 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.207823995 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.204540254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.20379115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.206207049 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.205237225 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.204972527 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.20665378 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.20763466 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.205292546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207187877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.204982838 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.204900605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.205349134 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.20564816 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.20716826 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.207623527 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.206917167 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.208651295 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.205251254 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205459333 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.209251535 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.205632501 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.20652819 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.209683314 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.209620714 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.208080791 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.206961428 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.206038704 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.207287854 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.21012083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.208109522 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.208292587 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.207334217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.209465915 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208682827 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.209732857 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.211290818 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.207480705 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.208565818 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207682165 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.207314028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.206977154 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.210485996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.209607454 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.208861606 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.210608038 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.206831384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.209976856 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.20970511 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.207277115 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.207930491 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.211528608 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.207975469 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.209156544 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.211015415 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.208062129 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.209667022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.208889487 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.208202799 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.206617324 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.210232562 seconds)
  done (took 83.26554483 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.20886788 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.209052393 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210721193 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209940431 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210768435 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.21146053 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.209843134 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.2099671 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.210438242 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210224887 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209593582 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.209971424 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.209573829 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.210002839 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.210395082 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210809025 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.20957167 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210088561 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210115697 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21062955 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.212172627 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212904778 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210895192 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.212059231 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21175407 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.210802474 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211235353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.211259285 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211928502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.211783931 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211730822 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.211753235 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.210377571 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.212358405 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.213171862 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.212826205 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211295841 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213115716 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.212517581 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.212538312 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212607632 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213153624 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213146174 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.212136335 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211938784 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212375675 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214370589 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.212845385 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.212982193 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214838483 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.212722988 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212635447 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212688583 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212244746 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213270806 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.21384469 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212389792 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213384903 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212506209 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213365964 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214402222 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.215403826 seconds)
  done (took 76.274438802 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213031932 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213268847 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.211373562 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.211101167 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213721686 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212403046 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214813693 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.213226382 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214158883 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.215823474 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215215349 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210503652 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211960598 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21518903 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211290527 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211005082 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212397086 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213339259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213812687 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211912069 seconds)
  done (took 25.404319082 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.211741531 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215440617 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.210856828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211811723 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.214435018 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21255549 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.213947964 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2156913 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211473248 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214781705 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215586249 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215959501 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212192571 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213138003 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216376634 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.211784743 seconds)
  done (took 20.563321054 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.210569967 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.215284612 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.214447313 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.214869833 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.213846189 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.211496404 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.215789247 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.214012831 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.211703623 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.216599776 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.215143761 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.21659524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.214957169 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.214244978 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.214062374 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.215496634 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.214856445 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.212878123 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.216054369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.215721404 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.215265976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.214262946 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.218791785 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.21706965 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.21612625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.214753737 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.214638009 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.214197284 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.214034474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.217059985 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.215544183 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.214947898 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21614995 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.214529769 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.216657383 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.213437986 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.216762778 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.215700471 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.216247701 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.217380206 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.218692675 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.215876415 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.217790092 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.217418535 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.213552351 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.217142909 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.21371532 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.216872464 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.216330983 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.213624165 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.217248655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.216618784 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.217806585 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.219027368 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.21782705 seconds)
  done (took 67.999314409 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218030596 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218085016 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21337826 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218499607 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.217437034 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.214910014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216066105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.215477981 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215203935 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216815817 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218510284 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218657749 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216653711 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219057469 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215963382 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220738401 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215156383 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.216462621 seconds)
  done (took 23.055517692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217138485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216779497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.218984697 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216586519 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.215560913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220321414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214721204 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.219870687 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218965885 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218624877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216311757 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.222374868 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220355408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.219196485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217529497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216410241 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.221866497 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220434966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217596099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217895546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220566508 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220561109 seconds)
  done (took 27.956697925 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.217762124 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.215269145 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.234586287 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.264026488 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.256146278 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.217693413 seconds)
  done (took 8.555416414 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217788843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220256111 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218033137 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221463355 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220827319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217140993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215689195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218493692 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219180063 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215941815 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218976056 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221051563 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220865236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21781245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221583945 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221684582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220754254 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218678574 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219142271 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222395406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21926052 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222456349 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219811379 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217885547 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219039364 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218478053 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222122037 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220416838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21919469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222414828 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220004736 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218711193 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221410981 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222123137 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222494163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219321703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219536296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221389818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221329191 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220510422 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222112129 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221396687 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222163846 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218688034 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222311111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220119077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218058048 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22046778 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219642855 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222876244 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221775981 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22087458 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223851668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223277532 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222724699 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223868407 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219810505 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221887597 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222458173 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221855861 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219446498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222500043 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220547183 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221035927 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223216253 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221859859 seconds)
  done (took 81.708439581 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220508356 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220975703 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219235731 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221624441 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221532614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221304836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220797608 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221451347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222761669 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220205031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224055497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221672399 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221700387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221722836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220580196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221548283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22371287 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222680664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222417086 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224706306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222898118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22136521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223154398 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221778949 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223136042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223696055 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22290377 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223422856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222500166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222749028 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222836876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222259521 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221219566 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.223800708 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222500742 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224397103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221480914 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222698131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222416314 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225495224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221632878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223462038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223160941 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222370967 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222771698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222488199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22479556 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224691431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224453908 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223224107 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226674604 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225712841 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223929264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224880978 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224060448 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225651809 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224555694 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225110266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225672682 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225809242 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224097675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223383486 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227095258 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223830325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225172218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224869832 seconds)
  done (took 81.881094987 seconds)
done (took 1655.58875823 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.302584143 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.274599117 seconds)
  done (took 13.731906629 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.38757206 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.340818638 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.224057511 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.261763185 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.222172114 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.223367722 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.242443549 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.220799339 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.223197236 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.224971221 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.225605038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.413940875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.220229086 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.223284606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.2236837 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.318009118 seconds)
  done (took 41.362489421 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.254406675 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.233676914 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.343232212 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.245495962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.252130141 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.412078156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.281365078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.23005521 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.404730592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.268345389 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.799530051 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.251953313 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.230026981 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349526116 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.243443943 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.412503009 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.481261629 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.802988491 seconds)
  done (took 28.654830224 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.685489109 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.22438978 seconds)
  done (took 9.068285824 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.24816941 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.260609993 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.229128644 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.266056096 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.262771028 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.229145778 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.279371458 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.288420729 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.272486118 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.236896368 seconds)
  done (took 63.737264736 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.24708073 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.230125077 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.229382453 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.226329202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.221910657 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.219957121 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.229074575 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.227170429 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.902636128 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.357995122 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.244224127 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.236901898 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.23203339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.231313836 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.22849301 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.26666567 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.371136018 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.227956902 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.227567598 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.237032355 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.230059819 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.318683958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.270529794 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.228719516 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.357459573 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.923958068 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.233914922 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.238437251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.361789533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.230321953 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.229754274 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.231058526 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.231684399 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.799990824 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.78159191 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.235990201 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.26950063 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.241891541 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.229706263 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.357256901 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.233214894 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.240585089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.223764997 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.761051856 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.393156555 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.35073958 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.504404769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.230824771 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.232985798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.295650227 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.232170007 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.231969111 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.261297285 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.983324139 seconds)
  done (took 105.93372354 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.250073288 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.714707806 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.397000869 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.244479573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.096709206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.862854714 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.222112109 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.520525156 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.253150427 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225341432 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.51075107 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.741650677 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227412345 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.242339085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.773655803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.260180716 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.224826587 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.163383721 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.222529214 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.230612346 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657103788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241729629 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.224903063 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.323751951 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.264849151 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.691492227 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.681479957 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.629419826 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.226291574 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.225173324 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.698455211 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.224917637 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.269065217 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.227230997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.509979686 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.58346225 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559104414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.230289189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236401223 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.226513619 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.257900116 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69054323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.572068486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.225210649 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.224278749 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.709907248 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.225784324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.229741317 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.233138563 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436529296 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.133365904 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.230055681 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.689349603 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.224099975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.513233004 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326415343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.299297148 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721094184 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226012087 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.315147319 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236954562 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226489868 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.226054884 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.234427698 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229664894 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577866782 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.638942863 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.232845531 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586918134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.69571619 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.226808451 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.770452223 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.149872568 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.233425613 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.280322793 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.237416456 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.976479235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72164501 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27502574 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227905998 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565975089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.228777039 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.518420925 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.241316437 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239149054 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.669934513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.245078194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.264926754 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.228408536 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.237896233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.98159115 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229535673 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.500910826 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.290129516 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.228233284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.228471788 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.230213732 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231208074 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.229951434 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.2335638 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.768717787 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.236628977 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.372684341 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249432215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.22990279 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.24059067 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.228805929 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.227347889 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.456455932 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.828214971 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.234110295 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.230821491 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.227616845 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.248302716 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341520938 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.232217551 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.540265071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.228167989 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227592073 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.234443555 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933871176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25821545 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230515587 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.2501639 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.067627556 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.440738067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.251102737 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.241426125 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.231692275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.248414497 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.603787129 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2297278 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.250780533 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.234108058 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943002475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.252315076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.238003625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.807309835 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.237964151 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236750038 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.234546641 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.234593995 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.545567272 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.516037838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.541327121 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.231777046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.230541012 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938671941 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.247440519 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.37411042 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25087157 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264885741 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44050586 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.350178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232766646 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.79398031 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.232298665 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452481002 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.233799808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556202039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741966592 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.232055969 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.234502307 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958951593 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896620218 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.890663878 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.234158106 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.512511154 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.244143485 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.692649047 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.231919375 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.234168843 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.804314957 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.235552741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.237228344 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.233712127 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.234865848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.300214536 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.408250662 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.131214137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239389935 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.701898715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298315042 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235465594 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.237525239 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235700817 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.588320069 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.255453137 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.237013456 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.27625422 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.231040454 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.239668221 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.72182407 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.174067783 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.235584214 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.38847336 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880366233 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.235492354 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.235739242 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.049237708 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.530058239 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803370629 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.26210249 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.555305315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.232648826 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.274533283 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.047812223 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309486031 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763943668 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23301399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.234754586 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859782452 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.235167774 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.292117899 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.23129127 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.236532365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792288712 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.236164274 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.239115407 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.614359076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.235824134 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488236499 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.23600334 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275886804 seconds)
  done (took 1090.058271364 seconds)
done (took 1353.703092282 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.237216847 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.235404176 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.225077505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.236937219 seconds)
  done (took 26.107249914 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.248485905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.242336642 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.243393154 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.242471935 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.245350615 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.241859504 seconds)
  done (took 8.636460074 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.414615242 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.233032531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.238814022 seconds)
  done (took 19.058457654 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.468137476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.505489659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.612464403 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.439163839 seconds)
  done (took 10.201063607 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.244941863 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.244326817 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.244280739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.246486791 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.248611997 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.249567045 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.24463003 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.248419543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.251016305 seconds)
  done (took 12.392819222 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.279033658 seconds)
done (took 82.845907184 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.311027459 seconds)
    (2/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.345625189 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.236000594 seconds)
    (4/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.592935701 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.625552171 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304541052 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.31936467 seconds)
    (8/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.348181863 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.494977875 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.335989356 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.170819628 seconds)
    (12/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.430652476 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.126363054 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.282332829 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.247267955 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.321461954 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.35279702 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.614479054 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.266035418 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.266011295 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.22230645 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.178047625 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.23594099 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.161354984 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.7432609 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.963566974 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.244668179 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.264929204 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.028650081 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.330662914 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.443730708 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.659881524 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.613772488 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.256410371 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.420050587 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353064052 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.2668766 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.264577877 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.345634547 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.791130585 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.247136121 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.908390246 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.090559061 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.303435375 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.229565622 seconds)
    (46/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.23852648 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.357734998 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.479706184 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.236098204 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.303315042 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.239374901 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.386641216 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.321316391 seconds)
    (54/309) benchmarking ("sort", Float64, false)...
    done (took 5.562846316 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.502980509 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.239502043 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.267008772 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.366473156 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.559040502 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.62532834 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.957864282 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.918953024 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.22921599 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.296368727 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.343851403 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.240103 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.774970519 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.673274063 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.239203612 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.945271246 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.233761504 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.224524231 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.270514466 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.210535321 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.52723082 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.264562985 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.750292527 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.269446183 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.102230182 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.226228726 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50438638 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.601209083 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.868438105 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.270392762 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.090219347 seconds)
    (86/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.378797771 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.246222077 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.451350559 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.25000024 seconds)
    (90/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.865993697 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064726537 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.66182129 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.40935722 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.290697167 seconds)
    (95/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.864738264 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.772262322 seconds)
    (97/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.951546491 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.807716704 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.244019551 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.444997484 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.254840402 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.239834508 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.355068801 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.722684868 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.302706065 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467843087 seconds)
    (107/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.633486346 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.32567295 seconds)
    (109/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.775724882 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.844731362 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.643797003 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.235319609 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.246395566 seconds)
    (114/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.918898549 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.671490887 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.243234336 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.433943393 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.269714933 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.33018391 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.669098559 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.199601014 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.348404467 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.123488781 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.356595557 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.762473593 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.270624511 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.232418398 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.774698905 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.651315855 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.366295191 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.502758893 seconds)
    (132/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.270438226 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.287860863 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.333343713 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.876457124 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.045006326 seconds)
    (137/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138293809 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.503298008 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.244061152 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.317625243 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.229358064 seconds)
    (142/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.663273043 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.243092144 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.658360321 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.386863863 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.341241526 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.30530529 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.246554983 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.400153098 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.64138524 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.476807629 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04082498 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.270225897 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.578655116 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.145398187 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.238340017 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.783875293 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.338739592 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.863753572 seconds)
    (160/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.300697196 seconds)
    (161/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.036384049 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.435455702 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.268851783 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.753153562 seconds)
    (165/309) benchmarking ("sort", Int8, false)...
    done (took 4.267657868 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.74815292 seconds)
    (167/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.593048218 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.687492765 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.645493761 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.271855905 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.259437851 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.877254385 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.681199138 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.443041513 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.086160229 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.592769487 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.580898433 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.243814868 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.712478368 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.683304237 seconds)
    (181/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.346401676 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.263810918 seconds)
    (183/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.25638916 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.412609267 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.655618997 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.294996735 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.236675344 seconds)
    (188/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.282410274 seconds)
    (189/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.544569963 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.46489044 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312040128 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.094234717 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.317941771 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.273785895 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.566257864 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.248344092 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.772049264 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.288297952 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.606983976 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.267422635 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.097877764 seconds)
    (202/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.334706861 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.754670832 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.232014378 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.275894171 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.31108728 seconds)
    (207/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.287299058 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.305098781 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.368326665 seconds)
    (210/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.298605992 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.568491806 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.021849342 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.740002137 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.553671861 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.89645691 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.028802957 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.464023316 seconds)
    (218/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.981222633 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.262837797 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.480585792 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.685948209 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.250060727 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.283456297 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.332866104 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.184626719 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.661006911 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88198578 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.85415393 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.233132384 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.291382214 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.258422908 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.278065998 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.334567086 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.274500727 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.265434001 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.468079822 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.260627906 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.247618909 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.687156001 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.269859772 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.234865392 seconds)
    (242/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.606845734 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.251666808 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.268631871 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030260623 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.530843918 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.856654471 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.25334292 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.913891327 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.166157364 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.395241604 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.553153862 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.122152644 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.950573914 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.734060657 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.469472698 seconds)
    (257/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.856550405 seconds)
    (258/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.091946911 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.238563166 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.250730231 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.151985392 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.781321064 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.931676544 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.949773076 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.276495028 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.030404657 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.684546352 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.298591503 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.639476191 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.557494454 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.683994262 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.389433978 seconds)
    (273/309) benchmarking ("sort", BigInt, false)...
    done (took 6.249478234 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.235769976 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.288835459 seconds)
    (276/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.72317469 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.335622819 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.914778881 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.24912582 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.889035253 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.510535278 seconds)
    (282/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.901641705 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138194904 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.199604259 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.278007506 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.238196594 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.904884318 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.334101519 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.342898596 seconds)
    (290/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.622943739 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.334811733 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.585655957 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.368384649 seconds)
    (294/309) benchmarking ("sort", Float32, false)...
    done (took 5.307046962 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.152748958 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.993519094 seconds)
    (297/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.249631055 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.662888743 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.881976601 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.407497743 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.252121329 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.270603244 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.296920374 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.30285869 seconds)
    (305/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.079501804 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.44782802 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.401367516 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.275656636 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.258229652 seconds)
  done (took 901.201649248 seconds)
done (took 902.373302339 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288087232 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280064611 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.264238003 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.288342671 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.377761297 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.298271591 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.275824823 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.265948117 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.314333732 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.314048176 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.265169563 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.296076173 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.268266077 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.266929085 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.26386979 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.279721213 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.352695336 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.267046206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.281861339 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.276034046 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.283681167 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.265917965 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.315899621 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.295051061 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.269237044 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.268390865 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.268577851 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.287194386 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.380824527 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.271523385 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.270198714 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.279092952 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.338342835 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.263012321 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.262637357 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.286103677 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.280708038 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.276572178 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.270406893 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.298348095 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.745742911 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.267582263 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.270095576 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.267009171 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.265551395 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.270722221 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.268648885 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.273663531 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28164937 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281940307 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.737782359 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.280497772 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.272259343 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.267188276 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.279202217 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.267294312 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.2720158 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284329823 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.286756563 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285491382 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.32939993 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.272354351 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.267909677 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.284810235 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.276222182 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.778005198 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.259880642 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.273993632 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.751725434 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.26956747 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.778824071 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.278849897 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.269781833 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.284404612 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.302609565 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.345153226 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.259978415 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.268925713 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.276361009 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.268564446 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.27957625 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283413997 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.27498607 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.269258094 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283566059 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.301447393 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.278918519 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.27105894 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.27921994 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.289552953 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.278672863 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.281789811 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.271646975 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.263207727 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277000131 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.270892322 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.272893548 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.273525983 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.274978225 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.28017366 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.755135545 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285635788 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.266295129 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.265766017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.268348331 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.284054126 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.757905867 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.269754939 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.293838096 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.315463361 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.271972586 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336765889 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.27205068 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285634797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.279585572 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.272772824 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.265250855 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.339219515 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.748646607 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.286084163 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.272689212 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.269214941 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287519892 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.272415442 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.265504539 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.350839167 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.271678073 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285440421 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.394450506 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.281595207 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.302820459 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.27168089 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.276282614 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.302685583 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288692868 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.304230058 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.274497222 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289029827 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.289092398 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.267856371 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.284642332 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.283591879 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272113834 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.27679095 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.266510025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.304378073 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28660386 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285844558 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.292815238 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.395230941 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.269757617 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.337765991 seconds)
done (took 216.284048203 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.330842868 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.264428789 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.350479064 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269618625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.369162923 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.364193633 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.266910773 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.26693196 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.266407735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.647790583 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.266652366 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264151179 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.261304828 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.266708301 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351122949 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.268911641 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.268127044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.608460003 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.26892887 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.338544681 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.268439345 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.266119366 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268926165 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.646739852 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.265057151 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262463193 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.341051572 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.27097823 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.614852532 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.261346151 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.261402364 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.620303049 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.356922145 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.28673899 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.278339646 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.274307971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.370480712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.284068208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.348801497 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.350880035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.353782891 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.307405583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.262980958 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.263062175 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.268503019 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.269648231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.268462696 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.296377164 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.266516163 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.268279477 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.610726868 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.280169001 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.267446623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.268318952 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.267842156 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.299713627 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.26954884 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.270535959 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.358417095 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.270068287 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.332751477 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.650974031 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.647198592 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.271895756 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.271634573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.269059638 seconds)
  done (took 144.08762383 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338482164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.343548982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386833242 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.271196218 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.320078937 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.393363108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.270287864 seconds)
  done (took 10.523152391 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.275757353 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.272963323 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319565143 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322056002 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.272403357 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.420597279 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272710999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.281566109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.268695782 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.324383152 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.273085306 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.275052489 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.27815566 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.271164542 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.319717473 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.282408414 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385939386 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.271642223 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.273544449 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430769607 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270449035 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.279672995 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.322568767 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.284000353 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.275329625 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278446241 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.837633593 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273936174 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271241032 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.27414858 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27153987 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.31087056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.273921952 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.26927251 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271733096 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385947637 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272917158 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27036216 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.274655708 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.268963201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.273672384 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.272912171 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27370839 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.270399871 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.2741401 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.294298568 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.274901315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.272983901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.27431345 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.276398613 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.322884394 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.274204021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.272409613 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.271336802 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.329445896 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28114601 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.273294179 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.270926801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.273755207 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271790394 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.431142319 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322878249 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.275317491 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319536052 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274498806 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.272380079 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.275429191 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.275552325 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329170768 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.273623908 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32246524 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.273727226 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.428899033 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.297562989 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274153094 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.275578287 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.27673505 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.274155394 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.269737624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.281751376 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273143893 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275014758 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280084834 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.274429745 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274957683 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377186001 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3841557 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.272522943 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.286999763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.283343542 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.272258947 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.32742475 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.276879985 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.275112187 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327876838 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389266205 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.331436019 seconds)
  done (took 147.338730669 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.280236136 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.28525448 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.276734802 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.291586052 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.27786026 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.275723539 seconds)
  done (took 8.889648393 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.277159995 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.280148053 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.27736375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.27978271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.276491329 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.279010303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.277318206 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.278672316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.280591581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.278153602 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.278935736 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.281003526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.282574064 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.276512606 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.277685073 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.277120694 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.279048284 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.275052591 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.27818288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278534584 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.379895013 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.279046553 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.276875666 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.278849554 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.284912525 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.277440885 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284386469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.27811405 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.277667224 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.284601683 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.279916468 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.280207584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.280528527 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.284165595 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.282266257 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.278098559 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283967583 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.280451838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.275307305 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.280911749 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.280698396 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279490007 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.278601019 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.281739423 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.280648466 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.283975976 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.287268138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286015413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.280449444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.280807123 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.282814068 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.279876018 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.281300072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.282034598 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.281362584 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284059599 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.286737046 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.280851462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.279820061 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.280294687 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.281916294 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.281827785 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.279760286 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.284926415 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.27663912 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.282780179 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.281687624 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284087241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28199975 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.279576483 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.282701887 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.279312673 seconds)
  done (took 94.499916093 seconds)
done (took 406.534871861 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.733772623 seconds)
  done (took 7.939464541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.678235233 seconds)
  done (took 7.887871036 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.564191306 seconds)
  done (took 23.782000541 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.345536656 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.37535763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.288166639 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.275479388 seconds)
  done (took 26.493740116 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.748407252 seconds)
  done (took 7.957838194 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.287009448 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.271453166 seconds)
  done (took 13.769606801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.342965389 seconds)
  done (took 7.55399319 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.991731447 seconds)
  done (took 8.211962398 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.299516756 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.300894023 seconds)
  done (took 14.063812293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.257645697 seconds)
  done (took 7.467378673 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.336338866 seconds)
  done (took 8.546009228 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.271067356 seconds)
  done (took 7.483654168 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.333555403 seconds)
  done (took 7.544224744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.809376349 seconds)
  done (took 10.020101527 seconds)
done (took 159.929541308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.273754547 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.275866585 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.271278974 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.269771283 seconds)
  done (took 26.29715073 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.315111726 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.312780934 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.315752219 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.326402469 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.316246919 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.315955495 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.30870624 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.307153926 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.325904297 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.323378749 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.316190504 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.317228272 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.316228691 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.307094717 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.316787901 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.317292221 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.324673565 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.318064251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.309930904 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.317711293 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.282652395 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.327140092 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.321404504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.28320591 seconds)
  done (took 32.753754298 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.480275528 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.353865397 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.435987724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.338106248 seconds)
  done (took 6.820616527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.333083368 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.335448309 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.346445323 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.386282805 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.411429202 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.345373739 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.308997353 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.30443705 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.289913633 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.336329135 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.410828954 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.352930478 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.419341851 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.280355855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.468227121 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.282102092 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.281668092 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.336301581 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.387137813 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.423343741 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.283599983 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.334645695 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.339487828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.347412528 seconds)
  done (took 33.555626221 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.283084656 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.288781222 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.286967704 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.281373055 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.282255186 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.282081644 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.287162094 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.284088804 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.303397446 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.283110059 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.28165746 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.283399592 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.28121922 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.282458291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.282200137 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.295839757 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.296974721 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.281099518 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.285297914 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.289173152 seconds)
  done (took 26.932820432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.277225062 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.130560723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.628389205 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.531557403 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.276723309 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.274326567 seconds)
  done (took 27.332923977 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.355964726 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.506557862 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.284204662 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.673898615 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.752554493 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.286618879 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.283959881 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.54623425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.872279873 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.860019054 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.340063182 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.352514142 seconds)
  done (took 19.331112618 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.278369998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.279629395 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.290930839 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.293558743 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.342347287 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.289322075 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.291125429 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.27759187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.344060201 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.349098493 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.288575041 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344705714 seconds)
  done (took 36.884291448 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36828806 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328585237 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.37327861 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108174772 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008140356 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491414848 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.168088689 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.192349103 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.287380403 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555304052 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296110332 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371845405 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.537932189 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27900667 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282538761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367120978 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510422303 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784282153 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283556447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.430630582 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308893029 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296444224 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.612244791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.308979467 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.492857048 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263742156 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.542348549 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.057476418 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585028683 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294557696 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291454692 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2815978 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556105119 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981189703 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38066245 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293115613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.14482949 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.83102028 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.283835175 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.512698605 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297294515 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284358719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293827723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281753983 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.218034818 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295221456 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76775629 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.291301079 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.994167479 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282282413 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295228813 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374528906 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.286753838 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.856098751 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332544249 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28725165 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.279927743 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28870118 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858610191 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.996354199 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285474212 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.221095066 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.755140129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.446861475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944535306 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.387496981 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.286574329 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.28710854 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218622317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.502198966 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301265257 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421056255 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.311276381 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947885285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01815246 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.299699041 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.217676134 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85431211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286221079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.221127169 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.514466817 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060116045 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223308558 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.230261029 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.220940121 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0540946 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296832489 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.756189083 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.294890777 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72862382 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.297236725 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301770438 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306848716 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.510281776 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.169378914 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283319847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.28626111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404112545 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304522089 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729168919 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222388197 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.285422273 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543360885 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.49618549 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286834103 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.36818942 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495838104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301340715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.301967059 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293530442 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.298696473 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.892529169 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300399782 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005373255 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30716729 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061517147 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093846112 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304502783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.388774461 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301703666 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550803569 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.124805421 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185560619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355743476 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288758665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285871344 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.553039746 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139818826 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.192429744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.289210687 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286721485 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.299294634 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.287940971 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246033918 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.284193501 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30234554 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.066597967 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.511396921 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285672251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576896797 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223045266 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424031676 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301811746 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.511023647 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.548736238 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.284954495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551419512 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286596915 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302184678 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300932906 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304010722 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382789498 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309647331 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.290168989 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.548750767 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.290648345 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.289883187 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.552104115 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069237868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290358347 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.293077484 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.182109607 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898088603 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259198969 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295362895 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181856476 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.29970122 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354006491 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293918447 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.299025763 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.231173792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265640157 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.294812661 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.300565831 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51004508 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.297884898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.547740512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370658106 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.492245531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904989741 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304565213 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.223255324 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.000321998 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.98057847 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28902848 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.480797684 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290002326 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299072849 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300923196 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.928168154 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901021915 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294226274 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.467583824 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.294297275 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301013569 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.292985458 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290894433 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.200001386 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027753871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291683322 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.302956952 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431176939 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.304756958 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224267303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.808775255 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294734507 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290496947 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.064444867 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3232334 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.477339381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790400054 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552289497 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.110572033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303553939 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.593865901 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.319656225 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.294383704 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292919735 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301826317 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.298416468 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29701362 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.301976889 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.495470153 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.742592752 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8591403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048158382 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84598756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314012675 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.297656099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197463451 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.739923162 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228634919 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950526781 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491928856 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.734860255 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251735817 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497879632 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.597044406 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096473818 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2997334 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520872275 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309255186 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.300850962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306541108 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504841432 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326562915 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297789078 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225382966 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.592702102 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530380593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304797962 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374078832 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742527919 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298737308 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.072247113 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.290370145 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.734863848 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478008336 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925833049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.701426647 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291159117 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321782823 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782723343 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300866182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.824095866 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93682533 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294069456 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.50345743 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237697282 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.305885416 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.304997994 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.292070024 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.737091564 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.293333433 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.568085117 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.303212309 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228531772 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293759261 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843040093 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.152839127 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.299243348 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293252644 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089483435 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301041728 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598181661 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.305502552 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.217577852 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300058051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229792818 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229401599 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.985678303 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297659723 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265728998 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802078539 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.704591374 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336781844 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330767728 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144607304 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.55391546 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.308212708 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.904323976 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521051118 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.226109396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317034615 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395853197 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294949995 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.282661543 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208529267 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.530835171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182019168 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.521938103 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.360362736 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.198374772 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.2939869 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510598892 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198026369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302977575 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560796097 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.010128042 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.295883007 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05227527 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322816122 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311319029 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315286151 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.767956695 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306100797 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367273695 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308422255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.306586697 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.307515859 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476763624 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308102449 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299195477 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.310076099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389491475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069984448 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.233828635 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.071953068 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913946281 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059526043 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912298207 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310130969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296016189 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29929595 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233532524 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444360292 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826973733 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572058963 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416792572 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.845630805 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322082137 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298235892 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312840511 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51268939 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571916372 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.174687505 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306581098 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962460572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.192818406 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308741447 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.510360147 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810744471 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875066457 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415031497 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312841216 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745833763 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574081316 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390057296 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298216542 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89427237 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.315181807 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.755310707 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.306530702 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30090304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448470083 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307942379 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005883578 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.31106503 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.463494452 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.074282199 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.577625703 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.561005002 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859445625 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.312547606 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921573757 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045916779 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569365377 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369110413 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309171704 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.416980104 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444603384 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.304987279 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19984435 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299216681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161400993 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.008360244 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.308441627 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916202969 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565234185 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.296813002 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.304999228 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321123781 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.311161528 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524232808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07970299 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528331509 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309868403 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303020761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293789859 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917371136 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312690512 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235549216 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.302872943 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561755232 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539602855 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326079844 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.753238955 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.013878813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87571166 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.277452766 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322452617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313561591 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054606302 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915462047 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.195891775 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812426026 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961720614 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318478767 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57567246 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.305920155 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301141032 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579354385 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.306162745 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.315618816 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313424186 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.91384197 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110408968 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.308680652 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.527571935 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.239071916 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.530755459 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992699861 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243784588 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31092244 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.498731053 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.305254041 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423442808 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313531936 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.31165228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303973052 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.037973491 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594830374 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.306617621 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.304233343 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.306295074 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319797144 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309685854 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546546485 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30760028 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.978755395 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.655587522 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561290705 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312878941 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.28940711 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.306737811 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302639556 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027871362 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281306505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.958082238 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883550104 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.315935413 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.315221183 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306281309 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.521202722 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514969298 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30283534 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318408028 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314415014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319492828 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.209021507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075499607 seconds)
  done (took 1574.718943705 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353431051 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.331212281 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.315384571 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.381694917 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327883597 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43448347 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.393566803 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.326712215 seconds)
  done (took 52.103518646 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.316605267 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.461693426 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.334018205 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.309044957 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.311085882 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.303835062 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.786917907 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.308330016 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.313681055 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.315434852 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.316126794 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.307939425 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.015115869 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.314630162 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.316909996 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.292511793 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.310945409 seconds)
  done (took 64.885036096 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.304700228 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.575547855 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.328954704 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.306378086 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.713182915 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.310846181 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.638218459 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.361793152 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.30802868 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.444735012 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.980660935 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.310815152 seconds)
  done (took 79.824520654 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.313554206 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.313794312 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.312652903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.313998182 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.31253975 seconds)
  done (took 7.806906499 seconds)
done (took 1990.456356383 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.704620038 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061799929 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.011317296 seconds)
  done (took 5.312641698 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.453648141 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.502109392 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.657726534 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.736145892 seconds)
  done (took 7.589811406 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.585837953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.67508592 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.503160435 seconds)
  done (took 6.003152096 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.817294051 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.339244369 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.432088981 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.306307413 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.30727198 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.306738512 seconds)
  done (took 20.161510685 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.309648947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.312197089 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.309683751 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.315401688 seconds)
  done (took 6.487954713 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.290683402 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.013979766 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.291907052 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.306005766 seconds)
  done (took 18.142945439 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.061631414 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.071217402 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.054153396 seconds)
  done (took 7.42888215 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.322393242 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.153840088 seconds)
  done (took 9.716889155 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.60902303 seconds)
  done (took 2.849098156 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.442103999 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.639011943 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.434849457 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.318746951 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.448596569 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.412796729 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.111403861 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.64528738 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.34437557 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.688172079 seconds)
  done (took 28.725706337 seconds)
done (took 125.953071914 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.331721415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326571926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.515914887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.305484277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.536033866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.519638981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.568474624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.264572525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.037934094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.801190684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.307805043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.537606822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.739616291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.332358849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.73821707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.334364348 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.536440314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.383169139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.989159313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.229025128 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.565428898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.937796246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.133145827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.965160019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.534601556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.460056923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.520489837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.330631857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.162884665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.539944482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.465374348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.308872571 seconds)
  done (took 192.500125653 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.320750363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.306501936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.30583943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.323905076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.308143623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.30644572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.308648507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.309717723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.307365325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.307065071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.333241327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.312227709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.312128277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.320108602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.327314754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.308366124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.309249942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.309205019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30851092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.322544549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.306645655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.309406736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.308133191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.322116725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.307641932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.308059352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330426091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.319480988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309466639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.308146353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.309546091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322294547 seconds)
  done (took 203.27358114 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.309919577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.30576497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.309506017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.306234748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.310587634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.310646234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.310677024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.317958888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.312791757 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.308582591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.310761811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.309761333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.308336652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.310600392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.30870459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.307840538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.309190983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.307138868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.308159675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.308288354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.325690963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.327798191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.310208678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.315628145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.31186162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.312643291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.323547091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.319832363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309935833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.32378285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.311889151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.313803712 seconds)
  done (took 203.244061045 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.515127178 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.319226623 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.320470908 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.274911358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.320740234 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.319880508 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.318299565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.512020699 seconds)
  done (took 14.14840461 seconds)
done (took 614.407341168 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.686945143 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.441472069 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.521826539 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.338216473 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.151274901 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.33917101 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.340772583 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.516936588 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.258639321 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.519683577 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.698042 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.337964662 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.85343156 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.339056072 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.598013965 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.438261658 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.270634358 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.392926989 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.680706614 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.961625923 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.610567646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844203372 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.519077263 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.256426631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.854213137 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.895885597 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.143458294 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273926317 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.340493122 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.68001308 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.128249886 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.416611449 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.403219552 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.383761227 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.437540094 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.420614343 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.38479608 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.381817632 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.523931827 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.597466261 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.937210134 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.068539929 seconds)
  done (took 92.434918937 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.308179491 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.309325946 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.308294176 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.309867583 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.320068708 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.307054762 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.309105234 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.307606232 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.307964875 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.306728924 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.309632095 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.312753411 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.307423199 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.309899939 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.307776282 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.307396436 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.31085144 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.311810288 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.310603797 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.309496207 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.309018805 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.308448108 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.309903195 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.308839387 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.310097841 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.308571492 seconds)
  done (took 35.296804778 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.323555657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.583711326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.750258554 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.324951248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.322173526 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.325748899 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.406783874 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.323316062 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.324612426 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.325935303 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.485138984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.326120788 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.362313157 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.781274672 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.324112896 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.324671714 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.324405085 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.323918873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.591342329 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.330349491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.426678271 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.323728713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.406811041 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.33174036 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.342840771 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.325949274 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.327950621 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.846169084 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.324834244 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.483613696 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.155323607 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.40334286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.79671535 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.764875446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.155774386 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.328853841 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.326383784 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.489718514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.323633766 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.325909133 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.404677963 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.323960417 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.764183402 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.965933334 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.337917477 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.327828553 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.865270237 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.485476605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.593196088 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.33480082 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.787110968 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.326301597 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.326255377 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.325502696 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.587480063 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.329375836 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.323962302 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.876100068 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.345298315 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.411539969 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.327821863 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.326692036 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.605296708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.329788229 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.592829886 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.327773246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.334848512 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.327414924 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.784300412 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.328268543 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.012688281 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.341332445 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.328770297 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.483479638 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.588368875 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.90298781 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.330482008 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.610170822 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813954385 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.403804899 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.327183793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.835462781 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.411328315 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.32942142 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.334516113 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.328758992 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.328100066 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.375720311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.405451951 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.910356365 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988492008 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.892346656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.4231927 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.336759221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.328863126 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.87496719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.343205593 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.328258315 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.763431331 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98742695 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.343319919 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.33537587 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.974697776 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.345537334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.410799808 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.332327831 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.776125422 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.325032059 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.386521567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.329547156 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.334529275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.334313238 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.41139136 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.330960187 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.330099251 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.969725489 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.509769222 seconds)
  done (took 175.428252679 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.32241676 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.319162945 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.322536772 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.321021014 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.322934074 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.325093997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.322233789 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.321135358 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.329816111 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.323263691 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.322525079 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.324034073 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.326381656 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.329164024 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.345211805 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.330402279 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.937020693 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.322538488 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.328161248 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.321377206 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.132212221 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.326739214 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.329242364 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.323150177 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.325348566 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.323345113 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.330576609 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.342050734 seconds)
  done (took 151.805300515 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.331333939 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.960757759 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.33157005 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.473639254 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.349992625 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.328610888 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.472304397 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.391107063 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.332338084 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.329060914 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.328730083 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.668745503 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.331299934 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.898256799 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.529872154 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.473649117 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.882906161 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.330179199 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.330801891 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.330119374 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.471684749 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.33748669 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.652625685 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.931279691 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.33407773 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.932889421 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.319150196 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.33410955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.329875495 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934357999 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.327624776 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.654271146 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.414641593 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.394619156 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.935246991 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.884138346 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.884468148 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.487601414 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.329730066 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.330180953 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.329880798 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.322141384 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.970491782 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.332968695 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.331480074 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96176656 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.349303247 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.332482014 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.34110777 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.330464401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.398967419 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.397785921 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.675958662 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.97821797 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.418767029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.353388398 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.475083286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.745675719 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.334800825 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.881445092 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.316817219 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.97412684 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.336970874 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.322632368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.332736527 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.338221038 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.492219902 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.475903041 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.880790243 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.334869075 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.884080456 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.491706664 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.331586439 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.333042056 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.335275511 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.972978952 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.885935367 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.491310327 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.473548667 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.537810181 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.321037516 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.331688976 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.322310067 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.41737716 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.332239596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975621121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.885493588 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.333667227 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.335002559 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.335200652 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.334259942 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.523512458 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.974144879 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.417738042 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.872632648 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690365976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.678730508 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.3372214 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.394647937 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.333725863 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.678422183 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.336273623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.394836711 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.811179012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.678457148 seconds)
  done (took 160.738660824 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.594866353 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.644164327 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.429936908 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.452025001 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.972109386 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.927025708 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.677500041 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.463719049 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.442983509 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.590022655 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.606820821 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.428084932 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.516728168 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.415587415 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.088579255 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.40941018 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.425420709 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.467928713 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.432114355 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.427207733 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.005965311 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.638864292 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.513290038 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.457287236 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.431706163 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.162537739 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.907441361 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.87775001 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.517839431 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.743657675 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.869211465 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.495848791 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.370382069 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.058682186 seconds)
  done (took 65.726654549 seconds)
done (took 682.675582802 seconds)
SAVING RESULT...
DONE!
